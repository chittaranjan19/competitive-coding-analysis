/*
The snow glows white on the mountain tonight
Not a footprint to be seen
A kingdom of isolation,
And it looks like I'm the queen.

The wind is howling like this swirling storm inside
Couldn't keep it in, heaven knows I tried!

Don't let them in, don't let them see
Be the good girl you always have to be
Conceal, don't feel, don't let them know
Well, now they know!

Let it go, let it go
Can't hold it back anymore
Let it go, let it go
Turn away and slam the door!

I don't care
What they're going to say
Let the storm rage on,
The cold never bothered me anyway!

It's funny how some distance
Makes everything seem small
And the fears that once controlled me
Can't get to me at all!

It's time to see what I can do
To test the limits and break through
No right, no wrong, no rules for me I'm free!

Let it go, let it go
I am one with the wind and sky
Let it go, let it go
You'll never see me cry!

Here I stand
And here I'll stay
Let the storm rage on!

My power flurries through the air into the ground
My soul is spiraling in frozen fractals all around
And one thought crystallizes like an icy blast
I'm never going back,
The past is in the past!

Let it go, let it go
And I'll rise like the break of dawn
Let it go, let it go
That perfect girl is gone!

Here I stand
In the light of day
Let the storm rage on,
The cold never bothered me anyway!
*/

#include <bits/stdc++.h>

using namespace std;

#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define rep(it, v) for (auto it = (v).begin(); it != (v).end(); it++)
#define rwfile(f) freopen(f".in", "r", stdin); freopen(f".out", "w", stdout)
#define fi first
#define se second

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
const int MAXN = 1e5 + 10;

int N, K, S[MAXN];

int main() {
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	ios::sync_with_stdio(false);
	cin >> N >> K;
	for (int i = 0; i < N; i++) {
		cin >> S[i];
	}
	if (N <= K) {
		cout << *max_element(S, S + N) << endl;
		return 0;
	}
	int num1 = 2 * K - N;
	int ans = 0;
	for (int i = N - 1; N - i <= num1; i--) {
		ans = max(ans, S[i]);
	}
	int num2 = N - num1;
	for (int i = 0, j = num2 - 1; i < j; i++, j--) {
		ans = max(ans, S[i] + S[j]);
	}
	cout << ans << endl;
}