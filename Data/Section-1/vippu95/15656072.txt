#include<bits/stdc++.h>
using namespace std;

#define lli long long
#define pb push_back
#define mp make_pair
#define gc getchar_unlocked
#define lld "%I64d"
#define DEBUG(x) cout<<">value ("<<#x<<") : "<<x<<endl;
#define mod 1000000007

const int lmt=55;
struct point{
    int x,y,idx;
    point(int _x,int _y,int _idx){
        x = _x;
        y = _y;
        idx = _idx;
    }
    bool operator<(point a)const{
        if(x<a.x) return true;
        if(x>a.x) return false;
        if(y<a.y) return true;
        return false;
    }
};

vector<point> v;
vector<point> ans;

bool coll(){
    if(ans.size()<3) return false;
    int x1 = ans[0].x;
    int x2 = ans[1].x;
    int x3 = ans[2].x;
    int y1 = ans[0].y;
    int y2 = ans[1].y;
    int y3 = ans[2].y;
    double area=abs(((double)x1*(y2-y3) + (double)x2*(y3-y1)+ (double)x3*(y1-y2))/2);
    if(area==0) return true;
    return false;
}

int main(){
    int n,x,y;
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%d %d",&x,&y);
        v.pb(point(x,y,i+1));
    }
    sort(v.begin(),v.end());
    int cnt = 0;
    for(int i=0;i<n;i++){
        ans.pb(v[i]);
        if(coll()){
            ans.pop_back();
        }else if(ans.size()>=3)
            break;
    }
    printf("%d %d %d\n",ans[0].idx,ans[1].idx,ans[2].idx);
    return 0;
}
