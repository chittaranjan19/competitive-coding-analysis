#include<stdio.h>
#include<string.h>
#include<map>
#include<algorithm>
#include<queue>
#include<vector>
using namespace std;
long long int n,a[50]={0},k,S,limit,ans=0,fact[50]={0};
#define pp pair<long long int,long long int>
int main()
{
    long long int i,p,j,ans=0;
    scanf("%I64d%I64d%I64d",&n,&k,&S);
    fact[1]=1;
    for(i=2;i<=19;i++)
    {
        fact[i]=i*fact[i-1];
    }
    for(i=0;i<n;i++)
    {
        scanf("%I64d",&a[i]);
    }
    i=1;
    p=1;
    while(p*(i+1)<=S)
    {
        p=p*(i+1);
        i++;
    }
    limit=i;
    //printf("%I64d",limit);
    vector<pp> G;
    for(i=0;i<n;i++)
    {
        long long int si=G.size();
        for(j=0;j<si;j++)
        {
            long long int X=G[j].first,Y=G[j].second;
            if(X+a[i]<=S)
            {
                G.push_back(pp(X+a[i],Y));
            }
            if(a[i]<=limit && X+fact[a[i]]<=S && Y+1<=k)
            {
                G.push_back(pp(X+fact[a[i]],Y+1));
            }
        }
        if(a[i]<=S)
            G.push_back(pp(a[i],0));
        if(fact[a[i]]<=S && k>0)
            G.push_back(pp(fact[a[i]],1));
    }
    long long int si=G.size();
    for(i=0;i<si;i++)
    {
        if(G[i].first==S)
            ans++;
    }
    printf("%I64d\n",ans);
    return 0;
}
