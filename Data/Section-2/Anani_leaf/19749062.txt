#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<string>
#include<queue>
#include<vector>
#include<map>
#include<cmath>
#define lowbit(x) ((x)&(-x))
#define Max(a,b) (a>b?a:b)
#define Min(a,b) (a>b?b:a)
#define lron(x)  ((x) << 1)
#define rson(x) ((x)<<1|1)
#define dad(x) ((x)>>1)
#define INF 0x3f3f3f3f
#define rep(i,a,b) for(int i=a;i<(b);++i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define pb push_back
#define de(x) cout << #x << "=" << x << endl
using namespace std;
typedef __int64 ll;
int const Max_N = 100005;
bool vis1[Max_N] = {false};
bool vis2[Max_N] = {false};
map<int,map<int,int> >mp;
ll cost[Max_N] = {0};
ll ans = 0;
int main()
{
	int n,k;
	scanf("%d %d",&n,&k);
	for (int i = 1; i < n+1; i++)
	{
		scanf("%I64d",cost+i);
		ans += cost[i]*cost[i-1];
		mp[i][i-1] = mp[i-1][i] = 1;
	}
	
	ans += cost[1]*cost[n];
	mp[1][n] = mp[n][1] = true;
	for (int i = 1; i < k+1; i++)
	{
		int u;
		scanf("%d",&u);
		for(int v = 1; v < n+1; v++)
		{
			if(!mp[u][v]&&u!=v)
			{
				ans += cost[u]*cost[v];
				mp[u][v] = mp[v][u] = 1;
			}
		}
	}
	printf("%I64d\n",ans);
	return 0;
}

