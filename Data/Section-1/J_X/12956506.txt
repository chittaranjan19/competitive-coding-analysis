#include <iostream>
#include <cstring>
#include <cstdio>

using namespace std;

const int maxn = 3000 + 5;

int num[maxn];
bool dp[3][maxn];

int main()
{
    int n, m;
    while(~scanf("%d%d", &n, &m))
    {
        memset(num, 0, sizeof(num));
        bool flag = false;
        for(int i = 0; i < n; ++i)
        {
            int x;
            scanf("%d", &x);
            ++num[x % m];
            if(x % m == 0)
            {
                flag = true;
            }
        }
        if(!flag)
        {
            memset(dp, 0, sizeof(dp));
            dp[0][0] = true;
            bool *now = dp[0], *nxt = dp[1];
            for(int i = 1; i < m; ++i)
            {
                for(int j = 1; j <= num[i]; num[i] -= j, j <<= 1)
                {
                    for(int k = 0; k < m; ++k)
                    {
                        if(!now[k]) continue;
                        nxt[k] = true;
                        int temp = (k + i * j) % m;
                        nxt[temp] = true;
                        if(!temp)
                        {
                            flag = true;
                        }
                        now[k] = false;
                    }
                    swap(now, nxt);
                }
                if(num[i])
                {
                    for(int k = 0; k < m; ++k)
                    {
                        if(!now[k]) continue;
                        nxt[k] = true;
                        int temp = (k + num[i] * i) % m;
                        nxt[temp] = true;
                        if(!temp)
                        {
                            flag = true;
                        }
                    }
                    swap(now, nxt);
                }
            }
        }
        puts(flag ? "YES" : "NO");
    }
    return 0;
}
