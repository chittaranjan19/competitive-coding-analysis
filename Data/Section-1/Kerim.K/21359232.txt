#include "bits/stdc++.h"
#define MAXN 100009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
int TIM,fup[MAXN],tin[MAXN],arr[MAXN],ban[MAXN],vis[MAXN];
int col[MAXN],n,m,lvl[MAXN],S[MAXN][22],P[MAXN][22];
ll pw[MAXN];
vector<PII>adj[MAXN];
vector<int>way[MAXN];
PII edge[MAXN];
ll mod(ll x){
	return (x%INF);
}
void dfs(int nd,int pr){
	tin[nd]=fup[nd]=++TIM;
	for(int i=0;i<int(adj[nd].size());i++){
		int to=adj[nd][i].ff;
		int ind=adj[nd][i].ss;
		if(to==pr)
			continue;
		if(!fup[to]){
			dfs(to,nd);
			umin(fup[nd],fup[to]); 
			if(tin[nd]<fup[to])
				ban[ind]=1;
		}
		else
			umin(fup[nd],tin[to]);
	}
}
void dfs1(int nd,int pr){
	P[nd][0]=pr;
	if(~pr){
		S[nd][0]=arr[pr];
		lvl[nd]=lvl[pr]+1;
	}
	else
		lvl[nd]=1;
	for(int i=0;i<int(way[nd].size());i++){
		int to=way[nd][i];
		if(to==pr)
			continue;
		dfs1(to,nd);	
	}
}
void build(){
	for(int j=1;j<=17;j++)
		for(int i=1;i<=n;i++)
			if(~P[i][j-1]){
				P[i][j]=P[P[i][j-1]][j-1];
				S[i][j]=S[i][j-1]+S[P[i][j-1]][j-1];
			}
}
int dis(int x,int y){
	if(x==y)
		return arr[x];
	if(lvl[x]<lvl[y])
		swap(x,y);
	int res=arr[x];	
	for(int j=17;j>=0;j--)
		if(~P[x][j] and lvl[x]-(1<<j)>=lvl[y]){
			res+=S[x][j];
			x=P[x][j];
		}
	if(x==y)
		return res;
	res+=arr[y];	
	for(int j=17;j>=0;j--)
		if(~P[x][j] and P[x][j]!=P[y][j]){
			res+=S[x][j];
			res+=S[y][j];
			x=P[x][j];
			y=P[y][j];
		}
	return res+arr[P[x][0]];	
			
}
int bfs(int nd,int renk){
	col[nd]=renk;
	vis[nd]=1;
	int res=1;
	for(int i=0;i<int(adj[nd].size());i++){
		int to=adj[nd][i].ff;
		int ind=adj[nd][i].ss;
		if(!vis[to] and !ban[ind])	
			res+=bfs(to,renk);
	}
	return res;
}
int main(){
	#ifndef ONLINE_JUDGE
    freopen("file.in", "r", stdin);
	#endif	
	memset(P,-1,sizeof P);
	pw[0]=1;
	for(int i=1;i<MAXN;i++)
		pw[i]=mod(2*pw[i-1]);
	scanf("%d%d",&n,&m);
	for(int i=1;i<=m;i++){
		int u,v;
		scanf("%d%d",&u,&v);
		adj[u].pb(mp(v,i));
		adj[v].pb(mp(u,i));
		edge[i]=mp(u,v);
	}
	dfs(1,-1);int sz=0;
	for(int i=1;i<=n;i++)
		if(!vis[i]){
			if(bfs(i,++sz)==1)
				arr[col[i]]=0;
			else
				arr[col[i]]=1;
		}	
	for(int i=1;i<=m;i++)
		if(ban[i]){
			int u=edge[i].ff;
			int v=edge[i].ss;
			way[col[u]].pb(col[v]);
			way[col[v]].pb(col[u]);
		}
	dfs1(1,-1);	
	build();
	int q;
	scanf("%d",&q);	
	while(q--){
		int x,y;
		scanf("%d%d",&x,&y);
		printf("%lld\n",pw[dis(col[x],col[y])]);
	}
	return 0;
}
