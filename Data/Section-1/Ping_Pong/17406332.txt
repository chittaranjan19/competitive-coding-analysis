#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <ctime>

#define ll long long
#define ld long double

using namespace std;

const ll inf = (ll)2 * 1e18;
const ll MOD = (ll)1e9 + 7;
const ll P = 239;
const ll MAX_N = 2000000;
const long double pi = 3.1415926535897932384626;
const long double eps = 1e-6;

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    bool e[MAX_N + 1];
    for (int i = 0; i <= MAX_N; i++)
        e[i] = true;
    for (int i = 2; i * i <= MAX_N; i++)
        if (e[i])
            for (int j = i + i; j <= MAX_N; j += i)
                e[j] = false;
    int n;
    cin >> n;
    int a[n];
    for (int i = 0; i < n; i++)
        cin >> a[i];
    vector<int> ans;
    for (int i = 0; i < n && ans.size() == 0; i++)
        for (int j = i + 1; j < n && ans.size() == 0; j++)
            if (e[a[i] + a[j]])
            {
                ans.push_back(a[i]);
                ans.push_back(a[j]);
            }
    int cnt1 = 0, cnt2 = 0;
    for (int i = 0; i < n; i++)
        if (a[i] == 1)
            cnt1++;
        else if (a[i] == 2)
            cnt2++;
    cnt2 = min(1, cnt2);
    if (cnt1 + cnt2 >= 2)
    {
        cout << cnt1 + cnt2 << endl;
        for (int i = 0; i < cnt1; i++)
            cout << 1 << " ";
        for (int i = 0; i < cnt2; i++)
            cout << 2 << " ";
    }
    else if (ans.size() == 2)
    {
        cout << 2 << endl << ans[0] << " " << ans[1];
    }
    else
        cout << 1 << endl << a[0];
    return 0;
}
