#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <iostream>
#include <vector>
#include <string>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
using namespace std;

#define eps 1e-10

int n, len, i, j, k, a[2][105], cnt; 
int mem[3005][110][2];

int solve(int L, int i, int j)
{
    if(L == len)
        return 1;
    if(L > len)
        return 0;
    if(mem[L][i][j] != -1)
        return mem[L][i][j];
    int k, res = 0, p, q;
    if(i == 105)
        {
            for(p = 0; p < n; p++)
            {
                res = (res + solve(a[0][p], p, 1 - 0)) % 1000000007;
                if(a[1][p] != a[0][p])
                    res = (res + solve(a[1][p], p, 1 - 1)) % 1000000007;
            }
        }
    else
    {
        for(k = 0; k < n; k++)
        {
        
            if(k != i)
            {
                if(a[0][k] == a[j][i])
                    res = (res + solve(L + a[0][k], k, 1)) % 1000000007;
                if(a[1][k] == a[j][i] && a[0][k] != a[j][i])
                    res = (res + solve(L + a[1][k], k, 0)) % 1000000007;
            }
        }
    }
    return mem[L][i][j] = res;
}

int main()
{
    memset(mem, -1, sizeof(mem));
    scanf("%d %d", &n, &len);
    for(i = 0; i < n; i++)
        scanf("%d %d", &a[0][i], &a[1][i]);
    printf("%d\n", solve(0, 105, 0));
    return 0;
}
