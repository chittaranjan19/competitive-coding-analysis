const maxN=100000+10;
      module=2*maxN;
      INF=2000000;
      maxR=4*maxN;
var n,m,i:longint;
operation,l,r:array[0..maxN] of longint;
Rsq:array[0..maxR] of longint;
function min(a,b:longint):longint;
         begin
         if a<b then min:=a
                else min:=b
         end;
procedure replace(x,y:longint);
           begin
           x:=x+module-1;
           rsq[i]:=x;
           x:=x div 2;
           while i>0 do begin
                        rsq[i]:=min(rsq[2*i],rsq[2*i+1]);
                        x:=x div 2
                        end
           end;
function FoundMin(l,r:longint):longint;
               var i,j,ans:longint;
               begin
               ans:=INF;
               i:=l+module-1;
               j:=r+module-1;
               while i<=j do begin
                             ans:=min(ans,rsq[i]);
                             ans:=min(ans,rsq[j]);
                             i:=(i+1) div 2;
                             j:=(j+1) div 2
                             end;
               FoundMin:=ans
               end;
begin
assign(input,'input.txt'); reset(input);
assign(output,'output.txt'); rewrite(output);
readln(n,m);
for i:=0  to maxR do rsq[i]:=INF;
for i:=1 to n do replace(i,i);
for i:=1 to m do readln(operation[i],l[i],r[i]);
for i:=1 to m do begin
                 if operation[i]=1 then replace(l[i],r[i])
                                   else writeln(FoundMin(l[i],r[i]))

                 end;
close(input);
close(output);
end.
