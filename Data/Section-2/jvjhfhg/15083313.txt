#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <cstdlib>

struct Edge {
    int u, v, w, id, inmst;
    bool operator < (const Edge &rhs) const {
        return w < rhs.w;
    }
}e[100005];

int n, m;

bool cmp(const Edge &a, const Edge &b) {
    return a.id < b.id;
}

int main() {
    scanf("%d%d", &n, &m);
    
    for (int i = 1; i <= m; i++) {
        scanf("%d%d", &e[i].w, &e[i].inmst);
        e[i].id = i;
    }
    
    std::sort(e + 1, e + m + 1);
    for (int i = 1; i < n; i++) {
        if (!e[i].inmst) {
            puts("-1"); return 0;
        }
        else
            e[i].u = i, e[i].v = i + 1;
    }
    
    int u = 1, v = 3;
    for (int i = n; i <= m; i++) {
        e[i].u = u, e[i].v = v;
        v++;
        if (v > n) {
            u++, v = u + 2;
        }
    }
    
    std::sort(e + 1, e + m + 1, cmp);
    for (int i = 1; i <= m; i++)
        printf("%d %d\n", e[i].u, e[i].v);
    
    return 0;
}