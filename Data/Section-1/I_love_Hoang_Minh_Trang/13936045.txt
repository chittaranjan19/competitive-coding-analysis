#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e6 * 5;
const int INF = 1e9 + 7;

using namespace std;

string s;
int n;
vector< int > dd[MAXN];
int a[MAXN], r[MAXN];

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("5C.inp", "r", stdin);
    freopen("5C.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> s; n = s.length(); s = ' ' + s;
    int dem = 0;
    int mmax = 0, sl = 1;
    FORE(i, 1, n) {
        if (s[i] == '(') dem++; else dem--;
        if (s[i] == ')') dd[dem].push_back(i);
        a[i] = dem;
    }

    r[n] = n;
    FORD(i, n - 1, 1){
        r[i] = i;
        while (r[i] + 1 <= n && a[i] <= a[r[i] + 1]) r[i] = r[r[i] + 1];
    }
    //FORE(i, 1, n) cout<<i<<" ";cout<<endl;
    //FORE(i, 1, n) cout<<a[i]<<" ";cout<<endl;
    FORD(i, n - 1, 1) if (s[i] == '('){
        int cuoi = i;
        while (cuoi + 1 <= n && a[i] - 1 <= a[cuoi + 1]) cuoi = r[cuoi + 1];
        //cout<<i<<">>> "<<r[i]<<endl;

            int j = upper_bound(dd[a[i] - 1].begin(), dd[a[i] - 1].end(), cuoi) - dd[a[i] - 1].begin() - 1;
            //FOR(l, 0, dd[a[i] - 1].size()) cout<<dd[a[i] - 1][l]<<" ";cout<<endl;
            if (j && j < dd[a[i] - 1].size()){
                int last = dd[a[i] - 1][j];
                //cout<<i<<" ?"<<last<<endl;
                if (last - i + 1 > mmax){
                    mmax = last - i + 1;
                    sl = 1;
                } else if (last - i + 1 == mmax) sl++;
            }

    }

    cout<< mmax << " "<<sl<<endl;
    return 0;
}
