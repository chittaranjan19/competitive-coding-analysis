// Prime Matrix

#include <algorithm>
#include <bits/stdc++.h>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

int isPrime(int n)
{
	int i,flag=0;
	for(i=3;i<=sqrt(n);i+=2)
	{
		if(n%i==0) {flag=1; break;}
	}
	if(flag==0) return 1;
	else return 0;
}

int toNextPrime(int n)
{
	int c=0,i;
	if(n==1) return 1;
	else if(n==2) return 0;
	else if(n%2==0) {n++; c++;}
	for(i=n;;i+=2) if(isPrime(i)==1) break;
	return c+i-n;
}

int main()
{
	int row,col,i,j,x,min=1000000000,n;
	cin>>row>>col;
	int R[row],C[col];
	for(i=0;i<row;i++)
	{
		R[i]=0;
		for(j=0;j<col;j++)
		{
			cin>>n;
			x=toNextPrime(n);
			R[i]+=x;
			if(i==0) C[j]=x;
			else C[j]+=x;
			if(i==row-1)
			{
				if(C[j]<min) min=C[j];
			}
		}
		if(R[i]<min) min=R[i];
	}
	cout<<min<<endl;
	return 0;
}