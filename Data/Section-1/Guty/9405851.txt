import sys

n 		   = int(sys.stdin.readline())
origDigits = int(sys.stdin.readline())

def digit2List(m):
	l = []
	if m == 0:
		return [0]
	else:
		while m > 0:
			l.append(m % 10)
			m = m / 10
		l.reverse()
		return l

def list2Digit(l):
	c = 0
	d = 1
	for x in reversed(l):
		c += d*x
		d *= 10
	return c

def sumarUno(l):
	return [(x + 1) % 10 for x in l]
	
def shiftPosition(l):
	p = l.pop(-1)
	l[0:0] = [p]
	return l

def respuesta(q):
	p   = len(digit2List(q))
	sol = ''
	while p < n:
		sol += '0'
		p += 1
	return sol + str(q)
	
dl = digit2List(origDigits)
while len(dl) < n:
	dl[0:0] = [0]

shiftList = []

for i in range(n):
	dl = shiftPosition(dl)
	shiftList.append(list(dl))
	

semiFinalList = []
for x in shiftList:
	for i in range(10):
		x = sumarUno(x)
		semiFinalList.append(x)

finalList = [s for s in semiFinalList if s[0] == 0]

print respuesta(min(map(list2Digit,finalList)))
