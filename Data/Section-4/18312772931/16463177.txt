#include<iostream>
#include<functional>
#include<algorithm>
#include<cstring>
#include<string>
#include<vector>
#include<cstdio>
#include<cmath>
#include<map>
using namespace std;
#define CRL(a) memset(a,0,sizeof(a))
typedef unsigned __int64 LL;
typedef  __int64 ll;
#define CMP bool cmp(const node& a,const node& b){	return a.R<b.R||(a.R==b.R&&a.L<b.L); }
const int T = 503000;
const int mod = 1000000007;

ll v[T],sa[T],sb[T];
char s[T];

int main()
{
#ifdef zsc
    freopen("input.txt","r",stdin);
#endif

	int i,j,k;
	ll n,m;
	
	while(~scanf("%I64d",&n))
	{
		for(i=1;i<=n;++i){
			scanf("%I64d",&v[i]);
		}
		scanf("%s",&s);
		fill(sa,sa+T,0);
		fill(sb,sb+T,0);
		for(i=1;i<=n;++i){
			sa[i] += sa[i-1];//A的前缀和
			sb[i] += sb[i-1];//B的前缀和
			if(s[i]=='A'){
				sa[i] += v[i];
			}
			else {
				sb[i] += v[i];
			}
		}
		ll sum = -1;
		for(i=1;i<=n;++i){
			sum = max(sum,sa[i]+sb[n]-sb[i]);//改变前缀
			sum = max(sum,sb[n-i+1]+sa[n]-sa[n-i+1]);//改变后缀
		}
		printf("%I64d\n",sum);
	}

    return 0;
}