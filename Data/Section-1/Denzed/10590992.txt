#include <iostream>
#include <set>

#define prev dnsakjnjkasnjjksan
#define f first
#define s second

using namespace std;

const int N = 1e6 + 179;

int n, k, z[N], balance, prev;
string s;
set<pair<int,int> > segments;

int main() {
    cin >> n >> k >> s;
    z[0] = n;
    for (int i = 1, l = 0, r = 0; i < n; ++i) {
        for (z[i] = (i > r ? 0 : min(z[i - l], r - i + 1)); i + z[i] < n && s[z[i]] == s[i + z[i]]; ++z[i]);
        if (i + z[i] - 1 > r) {
            l = i, r = i + z[i] - 1;
        }
    }
    for (int l = 1; l <= n; ++l) {
        int cur_l = l;
        for (; cur_l * 2 < min(n, k * l) && z[cur_l] >= cur_l; cur_l <<= 1);
        if (cur_l * 2 >= min(n, k * l) && z[k * l - cur_l] >= cur_l) {
            segments.insert({k * l - 1, 0});
            segments.insert({k * l + min(n - k * l, min(l, z[k * l])), 1});
//            cout << k * l << " " << k * l + min(l, z[k * l]) << "\n";
        }
    }
    for (pair<int,bool> seg : segments) {
        for (; prev < seg.f; ++prev) {
            cout << (balance > 0);
        }
        balance += (seg.s ^ 1) - seg.s;
    }
    cout << "\n";
    return 0;
}