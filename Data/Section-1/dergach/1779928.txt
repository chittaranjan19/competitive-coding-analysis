#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <iostream>
#include <vector>
#include <string>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
#include <ctype.h>
using namespace std;

#define eps 1e-10

int n, i, j, k, m = -1, z;
char a[100005][105], s[10005];
string nado, str;
vector <int> v[2];
vector <pair <int, int> > p;

int main()
{
    scanf("%d", &n);
    gets(s);
    for(i = 0; i < n; i++)
    {
        gets(s);
        for(j = 0; s[j] && s[j] == ' '; j++);
        k = 0;
        for(; s[j]; j++)
            a[i][k++] = s[j];
        if(memcmp("throw", a[i], 5) == 0)
            m = i;
        if(memcmp("try", a[i], 3) == 0)
            v[0].push_back(i);
        if(memcmp("catch", a[i], 5) == 0)
        {
            p.push_back(make_pair(i, v[0].back()));
            v[0].pop_back();
        }
    }

    if(m == -1)
    {
        printf("Unhandled Exception\n");
        return 0;
    }

    for(i = 0; a[m][i] != '('; i++)
        a[m][i] = ' ';
    for(; a[m][i] != 0; i++)
        if(a[m][i] == ')' || a[m][i] == '(')
            a[m][i] = ' ';
    stringstream in(a[m]);
    in >> nado;

    sort(p.begin(), p.end());

    for(z = 0; z < p.size(); z++)
    {
        if(p[z].first > m && p[z].second < m)
        {
            j = p[z].first;
            str = "";
            for(k = 0; a[j][k] != '('; k++);
            for(; !isalpha(a[j][k]); k++);
            for(; isalpha(a[j][k]); k++)
                str += a[j][k];
            if(nado == str)
            {
                for(; a[j][k] != '"'; k++);
                k++;
                for(; a[j][k] != '"'; k++)
                    printf("%c", a[j][k]);
                printf("\n");
                return 0;
            }
        }
    }
    printf("Unhandled Exception\n");
    return 0;
}
