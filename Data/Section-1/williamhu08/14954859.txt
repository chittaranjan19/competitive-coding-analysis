#include <bits/stdc++.h>

using namespace std;

#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define rep(it, v) for (auto it = (v).begin(); it != (v).end(); it++)
#define rwfile(f) freopen(f".in", "r", stdin); freopen(f".out", "w", stdout)
#define fi first
#define se second

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
const int MAXN = 505, INF = 0x01010101;

int N;
int A[MAXN];
int dp[MAXN][MAXN];	//making a palindrome then?

int getdp (int x, int y) {
	int &ref = dp[x][y];
	if (ref != INF) {
		return ref;
	}
	if (x == y) {
		return ref = 1;
	}
	if (x == y - 1) {
		return ref = (A[x] == A[y] ? 1 : 2);
	}
	for (int i = x; i < y; i++) {
		ref = min(ref, getdp(x, i) + getdp(i + 1, y));
	}
	if (A[x] != A[y]) {
		return ref;
	}
	ref = min(ref, getdp(x + 1, y - 1));
	// printf("dp[%d][%d] = %d\n", x, y, ref);
	return ref;
}

int main() {
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	scanf("%d", &N);
	for (int i = 1; i <= N; i++) {
		scanf("%d", &A[i]);
	}
	//when did problem B become so hard?
	fillchar(dp, 1);
	printf("%d\n", getdp(1, N));
}