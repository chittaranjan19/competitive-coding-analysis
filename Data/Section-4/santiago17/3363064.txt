import java.io.*;
import java.util.StringTokenizer;
import java.util.LinkedList;
public class Main
{
	public static void main(String[] args) throws IOException
	{
		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		long[] sav = new long[200010];
		//LinkedList<Long> sequence = new LinkedList<>();
		//sequence.addLast(0L);
		int n = Integer.parseInt(bf.readLine());
		int size = 1;
		double sum = 0; 
		long i = 0, k = 0, x = 0, lastc = 0, lasts = 0;
		for(int a = 0; a < n; ++a)
		{
			st = new StringTokenizer(bf.readLine());
			if(st.countTokens() == 3)
			{
				i = Integer.parseInt(st.nextToken());
				k = Integer.parseInt(st.nextToken());
				x = Integer.parseInt(st.nextToken());
			}
			if(st.countTokens() == 2)
			{
				i = Integer.parseInt(st.nextToken());
				k = Integer.parseInt(st.nextToken());
			}	
			if(st.countTokens() == 1)
				i = Integer.parseInt(st.nextToken());	
			if(i == 1)
			{
				sum += k * x;
				lastc = k;
				lasts += x;
				//sequence.add((int)k, k * x);
			}
			if(i == 2)
			{
				sum += k;
				++size;
				sav[size-1] = k;
				//sequence.addLast(k);
					
			}
			if(i == 3)
			{
				if(lastc >= size)
					sum -= sav[size-1] + lasts;
				else
					sum -= sav[size-1];

				--size;
				//sequence.removeLast();
			}
			System.out.println(sum / size);
			//System.out.println("Array");
			/*for(int c = 0; c < size; ++c)
			{
				System.out.print(sav[c]+" ");
				if(c == size-1)
					System.out.println();
			}*/
			//System.out.println("lasts"+lastc+" "+lasts);
			//System.out.println("Suma"+sum+"\n");
		}
	}
}