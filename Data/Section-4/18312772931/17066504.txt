#include<iostream>
#include<functional>
#include<algorithm>
#include<cstring>
#include<string>
#include<vector>
#include<cstdio>
#include<cmath>
#include<map>
using namespace std;
#define CRL(a) memset(a,0,sizeof(a))
#define QWQ ios::sync_with_stdio(0)
typedef unsigned __int64 LL;
typedef  __int64 ll;
const int T = 100000+50;
const int mod = 1000000007;

struct node
{
	char s[20];
	int num,val;
	bool operator<(const node& b)const{
		return num<b.num||(num==b.num&&val>b.val);
	}
}a[T];

int n,m;

bool jugde(int x)
{
	bool f1 ,f2 ;
	f1 = f2 = false;
	if(x+2==n)f1=true;
	for(int i=x;i<x+3&&i<n;++i){
		if(a[x].num!=a[i].num||a[x].val!=a[i].val)f1=true;
	}
	x++;
	if(f1&&x+1==n)f2=true;
	for(int i=x;i<x+2&&i<n;++i){
		if(a[x].num!=a[i].num||a[x].val!=a[i].val)f2=true;
	}
	return f1&&f2;
}

int main()
{
#ifdef zsc
    freopen("input.txt","r",stdin);
#endif

	int i,j,k;

	while(~scanf("%d%d",&n,&m))
	{
		for(i=0;i<n;++i){
			scanf("%s%d%d",&a[i].s,&a[i].num,&a[i].val);
		}
		sort(a,a+n);
		int vis[T];
		memset(vis,0,sizeof(vis));
		for(i=0;i<n;++i){
			if(!vis[a[i].num]&&jugde(i)){
				printf("%s %s\n",a[i].s,a[i+1].s);
				vis[a[i].num] = 1;
			}
			else if(!vis[a[i].num])
				printf("?\n"),vis[a[i].num] = 1;
			else vis[a[i].num] = 1;
		}
	}

    return 0;
}