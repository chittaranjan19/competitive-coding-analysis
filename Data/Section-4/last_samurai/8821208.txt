
/* Author:
 * Rohit Laddha */
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <map>
#include <stack>
#include <set>
#include <queue>
#include <limits.h>
#include <math.h>
#include <deque>
#include <list>
#include<tr1/unordered_map>
using namespace std;
using namespace std::tr1;
#define PI 3.14159265
//#define 
int main(){
	int n;
	cin >> n;
	unordered_map<int,int>hash;
	vector<bool> occur(10000006,false);
	for(int i=0;i<n;i++){
		int x,y;
		cin >> x >> y;
		hash.insert(make_pair<int,int>(x,y));
		occur[x]=!occur[x];
		occur[y]=!occur[y];
	};
	int start1=0;
	int start2=0;
	for(int i =0;i<1000006;i++){
		if (occur[i] && (hash.find(i)!=hash.end()))
			start2 = i;
	}
	//cout<<"start2 "<< start2 <<endl;
	while((hash.find(start1)!=hash.end()) && (hash.find(start2)!=hash.end())) {

		if (start1 != 0) cout<<start1<<" ";
		if (start2 !=0) cout<<start2<<" ";

		start1 = hash.find(start1)->second;
		//cout<<"1## "<<start1<<endl;

		start2 = hash.find(start2)->second;
		//cout<<"2## "<<start2<<endl;
	}
	if (start1!=0) {
		 cout<<start1<<" ";
	}
	if (start2!=0) {
		cout<<start2<<" ";
	}
	cout<<endl;
	return 0;
}
