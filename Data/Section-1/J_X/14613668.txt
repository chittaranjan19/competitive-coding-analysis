#include <iostream>
#include <cstdio>
#include <cstring>

using namespace std;

typedef long long ll;

const int maxn = 1000000 + 5;
const int mod = 1e9 + 7;

int par[maxn];

void init()
{
    memset(par, -1, sizeof(par));
}

int ffind(int x)
{
    return ~par[x] ? par[x] = ffind(par[x]) : x;
}

void unite(int u, int v)
{
    u = ffind(u), v = ffind(v);
    if(u == v) return;
    par[u] = v;
}

ll fast_pow(ll x, int n)
{
    ll ret = 1;
    while(n)
    {
        if(n & 1)
        {
            ret = ret * x % mod;
        }
        x = x * x % mod;
        n >>= 1;
    }
    return ret;
}

int main()
{
    ll n, k;
    while(cin >> n >> k)
    {
        int num = 0;
        if(!k)
        {
            num = n - 1;
        }
        else if(k == 1)
        {
            num = n;
        }
        else
        {
            init();
            for(int i = 1; i < n; ++i)
            {
                unite(i, k * i % n);
            }
            for(int i = 1; i < n; ++i)
            {
                if(ffind(i) == i)
                {
                    ++num;
                }
            }
        }
        cout << fast_pow(n, num) << endl;
    }
    return 0;
}
