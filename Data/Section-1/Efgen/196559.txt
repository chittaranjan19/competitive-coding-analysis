import java.io.*;
import java.util.*;
import java.math.*;

public class Solution {
	static final String FileName = "test";
	

	
	void solve() throws IOException {
		int n = nextInt();
		double V = nextDouble();
		double[] a = new double[n];
		double[] b = new double[n];
		for (int i=0; i<n; i++) a[i] = nextDouble();
		for (int i=0; i<n; i++) b[i] = nextDouble();
		double s = 0;
		for (int i=0; i<n; i++) s += a[i];
		for (int i=0; i<n; i++) a[i] /= s;
		for (int i=0; i<n; i++) a[i] *= V;
		double p = 1;
		for (int i=0; i<n; i++) p = Math.min(p, Math.min(a[i], b[i])/a[i]);
		out.printf(Locale.US, "%1.5f", p*V);
		
		
		
    }

	
    static final int inf = 1000000000+10;
    static final double eps = 1e-8;
    BufferedReader br;
    StringTokenizer st;
    PrintWriter out;
    
    public void run() {
        try {
            //br = new BufferedReader(new FileReader(FileName+".in"));
            //out = new PrintWriter(FileName+".out");
            br = new BufferedReader(new InputStreamReader(System.in));
            out = new PrintWriter(System.out);
            //br = new BufferedReader(new FileReader("input.txt"));
            //out = new PrintWriter("output.txt");
            solve();
            br.close();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }
    }
    String next() throws IOException {
        while (st == null || !st.hasMoreTokens()) {
            String s = br.readLine();
            if (s == null)
                    return null;
            st = new StringTokenizer(s);
        }
        return st.nextToken();
    }
    double nextDouble() throws IOException {
       return Double.parseDouble(next());
    }

    int nextInt() throws IOException {
            return Integer.parseInt(next());
    }
    long nextLong() throws IOException {
            return Long.parseLong(next());
    }
    public static void main(String[] args) {        
    	new Solution().run();    
    }    
}