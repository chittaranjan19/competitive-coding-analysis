#include <bits/stdc++.h>
using namespace std;
typedef unsigned long long ull;
const int maxn = 5010;
const ull base = 3377;
const int mod = 1e9+7;
char s[maxn];
ull p[maxn],h[maxn];
int n,f[maxn][maxn],g[maxn][maxn];
ull geth(int l,int r){
    return h[r]-h[l-1]*p[r-l+1];
}
bool check(int l,int r,int u,int v){
    if (s[l]=='0') return 1;
    int lo,hi,mid,t=1e9;
    lo=1;hi=v-u+1;
    while (lo<=hi){
        mid=(lo+hi)>>1;
        if (geth(l,l+mid-1)!=geth(u,u+mid-1)){
            t=min(t,mid);
            hi=mid-1;
        } else
            lo=mid+1;
    }
    if (t==1e9) return 0;
    if (s[l+t-1]>=s[u+t-1]) return 0;
    return 1;
}
int main(){
    scanf("%d\n",&n);
    gets(s+1);s[0]='0';
    p[0]=1;
    for (int i=1; i<=n; i++) p[i]=p[i-1]*base;
    h[0]=0;
    for (int i=1; i<=n; i++) h[i]=h[i-1]*base+s[i];
    f[0][0]=1;
    for (int i=1; i<=n; i++) g[0][i]=1;
    for (int i=1; i<=n; i++){
        for (int j=i; j>=1; j--){
            if (s[j]=='0') f[j][i]=0; else{
                f[j][i]=g[j-1][i-j];
                if (j-(i-j+1)>=0){
                    if (check(j-(i-j+1),j-1,j,i)){
                        f[j][i]+=f[j-(i-j+1)][j-1];
                        f[j][i]-=(f[j][i]>=mod)?mod:0;
                    }
                }
            }
        }
        g[i][0]=0;
        for (int j=1; j<=n; j++){
            g[i][j]=g[i][j-1];
            if (i-j+1>=0) {
                g[i][j]+=f[i-j+1][i];
                g[i][j]-=(g[i][j]>=mod)?mod:0;
            }
        }
    }
    cout<<g[n][n]<<endl;
}
