#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int v[26];
vector<int> occ[26];
LL sum[100005], tmp[100005];
map<LL, int> m;

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("test.in", "r", stdin);
  //freopen("report.out", "w", stdout);
  for(int i=0;i<26;i++)
    cin >> v[i];
  string in;
  cin >> in;
  sum[0] = v[in[0] - 'a'];
  for(int i=1;i<in.size();i++)
    sum[i] = v[in[i] - 'a'] + sum[i - 1];
  for(int i=0;i<in.size();i++)
    occ[in[i] - 'a'].pb(i);
  LL res = 0;
  for(int i=0;i<26;i++)
  {
    m.clear();
    for(int j=0;j<occ[i].size();j++)
    {
      int x = sum[occ[i][j] - 1];
      if(m.find(x - v[i]) != m.end())
      {
        x = m[x - v[i]];
        res+=x;
      }
      if(occ[i][j] == 0) m[0]++;
      else m[sum[occ[i][j] - 1]]++;
    }
  }
  cout << res;
  return 0;
}
