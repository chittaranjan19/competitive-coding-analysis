#include<bits/stdc++.h>
using namespace std;

#define lli long long
#define pb push_back
#define mp make_pair
#define gc getchar_unlocked
#define llu unsigned long long
#define DEBUG(x) cout<<">value ("<<#x<<") : "<<x<<endl;
#define mod 1000000007

const int limit = 5000005;
llu apo[limit];
llu ahash[limit];
llu magic1=173;

/*Hashing*/
void inithash(string str){
    int n = str.size();
    apo[0]=1;
    ahash[0]=0;
    for(int i=1;i<=n;i++){
        apo[i] = (apo[i-1]*magic1);
        ahash[i] = (ahash[i-1]*magic1 + str[i-1]);
    }
    return;
}

//To get hash of idx between i and j (1 based)
inline llu getHash(int i,int j){
    llu h1 = (ahash[j] - (ahash[i-1]*apo[j-i+1]));
    return h1;
}
/*Hashing Done*/

map<llu,int> myIdx;
vector<int> ans;
string str2;

bool good(int idx,int n,int k){
    ans.clear();
    set<int> stt;
    int cnt=0;
    for(int i=idx;i<str2.size() && cnt<n;i+=k){
        int st = i+1;
        int en = i+k;
        llu tmp = getHash(st,en);
        if(myIdx.find(tmp)==myIdx.end()) continue;
        int my = myIdx.find(tmp)->second;
        stt.insert(my);
        ans.pb(my);
        cnt++;
    }
/*    DEBUG(idx);
    for(int i=0;i<ans.size();i++)
        cout<<ans[i]<<" ";
    cout<<endl;*/
    if(stt.size()==n) return true;
    return false;
}

int main(){
    int n,k;
    cin>>n>>k;
    string str;
    cin>>str;
    str2 = str;
    str2 += str;
    int q;
    cin>>q;
    for(int i=1;i<=q;i++){
        string tmp;
        cin>>tmp;
        inithash(tmp);
        myIdx[getHash(1,tmp.size())]=i;
    }
/*    for(auto &it:myIdx)
        cout<<it.first<<" "<<it.second<<endl;
*/    inithash(str2);
    for(int i=0;i<k;i++){
        if(good(i,n,k)){
            cout<<"YES\n";
            for(int i=0;i<ans.size();i++)
                cout<<ans[i]<<" ";
            return 0;
        }
    }
    cout<<"NO\n";
    return 0;
}
