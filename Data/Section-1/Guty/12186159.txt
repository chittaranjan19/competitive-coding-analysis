#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int maxi(int a , int b)
{
	if (a > b)
		return a;
	else
		return b;
}

bool cumple (int &a,int &b,int &a1,int &b1,int &a2,int &b2)
{
	return ((((a1 + a2) <= a) && maxi(b1,b2) <= b) or (((a1 + a2) <= b) && maxi(b1,b2) <= a) or (((b1 + b2) <= a) && maxi(a1,a2) <= b) or (((b1 + b2) <= b) && maxi(a1,a2) <= a));
}

int main()
{
	vector<int> a (3);
	vector<int> b (3);
	forn(i,3)
		cin >> a[i];
		
	bool ans = false;
	ans = ans or cumple(a[0],b[0],a[1],b[1],a[2],b[2]);
	ans = ans or cumple(a[0],b[0],a[1],b[1],b[2],a[2]);
	ans = ans or cumple(a[0],b[0],b[1],a[1],a[2],b[2]);
	ans = ans or cumple(a[0],b[0],b[1],a[1],b[2],a[2]);

	if (ans)
		cout << "YES" << endl;
	else
		cout << "NO" << endl;
	
		
	return 0;
}



