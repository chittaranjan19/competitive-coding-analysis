#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<string>
#include<queue>
#include<vector>
#include<map>
#include<cmath>
#define lowbit(x) ((x)&(-x))
#define Max(a,b) (a>b?a:b)
#define Min(a,b) (a>b?b:a)
#define lron(x)  ((x) << 1)
#define rson(x) ((x)<<1|1)
#define dad(x) ((x)>>1)
#define INF 0x3f3f3f3f
using namespace std;
//typedef __int64 ll;
//typedef long long ll;
int f[200010];
int root = 0; 
int arr[200010]={0};
int find(int x){return x==f[x]? x:f[x]=find(f[x]);}
int g[200010]={0};
int ans = 0;
int main()
{
	//freopen("xx.txt","r",stdin);
	//std::ios::sync_with_stdio(false);
	
	int N; 
	cin >> N;	
	for (int i = 1; i < N+1;i++)f[i] = i;	
	
	for (int i = 1; i < N+1; i++)
	{
		scanf("%d",arr+i);
		
		if(arr[i]==i)
		{
			root = i;
			g[ans++]=i;
		}
		else
		{
			int fa = find(i);
			int fb = find(arr[i]);
			if(fa==fb)
			{
				g[ans++] = fa;			
			}
			else
			{
				f[fa]=fb;
			}
		}
	}
	if(root == 0)
	{
		printf("%d\n",ans);
		root = g[0];
		arr[root]=root;
		for(int i = 1; i < ans;i++)
		{
			arr[g[i]] = root;
		}
	}
	else	
	{
		printf("%d\n",ans-1);
		for(int i = 0; i < ans; i++)
		{
			arr[g[i]] = root;
		}
	}
	printf("%d",arr[1]);
	for(int i = 2; i < N+1; i++) printf(" %d",arr[i]);
	printf("\n");
	return 0;
}

