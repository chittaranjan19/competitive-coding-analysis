#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint cuadratica (double a, double b, double c)
{
	tint res = floor((-b + sqrt(b*b - 4*a*c)) / (2*a));
	return res;
}

int query (tint A, tint B, tint l, tint t, tint m)
{
	if (t < (A+(l-1)*B))
		return -1;
	else
		return min(cuadratica(B,(2*A-B),2*(1-l)*(A+B*l)-2*B+B*l*l+B*l-2*m*t),(t-A+B)/B);
}


int main()
{
	tint n,A,B;
	cin >> A >> B >> n;
	forn(i,n)
	{
		tint l,t,m;
		cin >> l >> t >> m;
		cout << query(A,B,l,t,m) << endl;
	}
	return 0;
}
