#include <iostream>
#include <vector>

using namespace std;

char hor[20], ver[20];
int n, m;

int dfs(int h, int v, vector<vector<bool> >& used)
{
	int res = 0;
	if (!used[h][v])
	{
		++res;
		used[h][v] = true;
		if (hor[h] == '<' && v > 0)
		{
			res += dfs(h, v - 1, used);
		}
		else if (hor[h] == '>' && v < m - 1)
		{
			res += dfs(h, v + 1, used);
		}
		if (ver[v] == '^' && h > 0)
		{
			res += dfs(h - 1, v, used);
		}
		else if (ver[v] == 'v' && h < n - 1)
		{
			res += dfs(h + 1, v, used);
		}
	}
	return res;
}

int main()
{
	cin >> n >> m;
	for (int i = 0; i < n; ++i)
	{
		cin >> hor[i];
	}
	for (int i = 0; i < m; ++i)
	{
		cin >> ver[i];
	}
	for (int i = 0; i < n; ++i)
	{
		for (int j = 0; j < m; ++j)
		{
			vector<vector<bool> > used(n, vector<bool>(m));
			if (dfs(i, j, used) < n*m)
			{
				cout << "NO" << endl;
				return 0;
			}
		}
	}
	cout << "YES" << endl;
	return 0;
}