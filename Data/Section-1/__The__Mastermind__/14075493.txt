uses math;

const tfi = '';//'593b.inp';

var
  n : longint;
  x1,x2 : int64;
  k,b,t1,t2,f : array [1..200000] of int64;

procedure enter;
  var i : longint;
  begin
    assign(input,tfi);
    reset(input);
    read(n,x1,x2);
    for i := 1 to n do
      begin
        read(k[i],b[i]);
        t1[i] := x1*k[i] + b[i];
        t2[i] := x2*k[i] + b[i];
      end;
    close(input);
  end;

procedure swap(var x,y : int64);
  var z : int64;
  begin
    z := x;
    x := y;
    y := z;
  end;

procedure sort(l,h : longint);
  var
    i,j : longint;
    x,x1,x2 : int64;
  begin
    if l > h then exit;
    i := l;
    j := h;
    x := random(h - l + 1) + l;
    x1 := t1[x];
    repeat
      while (t1[i] < x1) do inc(i);
      while (t1[j] > x1) do dec(j);
      if i <= j then
        begin
          swap(t1[i],t1[j]);
          swap(t2[i],t2[j]);
          inc(i);
          dec(j);
        end;
    until i > j;
    sort(l,j);
    sort(i,h);
  end;

function find1(x : int64) : longint;
  var l,r,mid,p : longint;
  begin
    p := n+1;
    l := 1;
    r := n;
    while l <= r do
      begin
        mid := (l + r) div 2;
        if t1[mid] > x then
          begin
            p := mid;
            r := mid - 1;
          end
        else l := mid + 1;
      end;
    exit(p);
  end;

procedure process;
  var i,p1 : longint;
  begin
    sort(1,n);
    f[n] := t2[n];
    f[n+1] := high(int64);
    for i := n-1 downto 1 do
      f[i] := min(f[i+1],t2[i]);
    for i := 1 to n do
      begin
        p1 := find1(t1[i]);
        if f[p1] < t2[i] then
          begin
            write('YES');
            exit;
          end;
      end;
    write('NO');
  end;

begin
  enter;
  process;
end.
