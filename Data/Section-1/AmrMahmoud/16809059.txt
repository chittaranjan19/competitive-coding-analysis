#include <bits/stdc++.h>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int arr[150005];
bool bad[150005];
bool v[150005];
int n;

inline int check(int ind)
{
  if(ind < 0 || ind >= n - 1) return 0;
  if(v[ind]) return 0;
  v[ind] = true;
  int cnt = bad[ind];
  if(ind & 1)
  {
    if(arr[ind] <= arr[ind + 1])
      cnt++;
    else if(cnt)
      cnt = -1;
  }
  else
  {
    if(arr[ind] >= arr[ind + 1])
      cnt++;
    else if(cnt)
      cnt = -1;
  }
  return cnt;
}

void undo(int ind)
{
  if(ind < 0 || ind >= n - 1) return ;
  v[ind] = false;
}

int main()
{
  cin >> n;
  for(int i=0;i<n;i++)
    scanf("%d", &arr[i]);
  int c = 0;
  for(int i=0;i<n-1;i++)
  {
    if(i & 1) bad[i] = (arr[i] <= arr[i + 1]);
    else bad[i] = (arr[i] >= arr[i + 1]);
    c += bad[i];
  }
  int res = 0;
  for(int i=0;i<n-1;i++)
  {
    if(bad[i])
    {
      for(int j=i;j<=i+1;j++)
      {
        for(int k=0;k<n;k++)
        {
          if(j == k) continue;
          if(j == i + 1 && k == i) continue;
          swap(arr[j], arr[k]);
          int tmp = check(j - 1);
          tmp += check(j);
          tmp += check(k - 1);
          tmp += check(k);
          res += (tmp + c == 0);
          swap(arr[j], arr[k]);
          undo(j - 1);
          undo(k - 1);
          undo(j);
          undo(k);
        }
      }
      break;
    }
  }
  cout << res;
  return 0;
}
