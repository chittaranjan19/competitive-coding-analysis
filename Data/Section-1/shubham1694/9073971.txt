#include <bits/stdc++.h>

using namespace std;

#define ll long long

int main()
{
    int n, m, i;
    scanf("%d", &n);
    int a[n];
    vector<int> vec;
    map<int, bool> m1;
    for(i=0; i<n; i++){
        scanf("%d",&a[i]);
        if(m1.find(a[i]-1)==m1.end()){
            m1[a[i]-1] = true;
            vec.push_back(a[i]-1);
        }
        if(m1.find(a[i])==m1.end()){
            m1[a[i]] = true;
            vec.push_back(a[i]);
        }
    }
    scanf("%d", &m);
    int b[m];
    for(i=0; i<m; i++){
        scanf("%d", &b[i]);
        if(m1.find(b[i])==m1.end()){
            m1[b[i]] = true;
            vec.push_back(b[i]);
        }
        if(m1.find(b[i]-1)==m1.end()){
            m1[b[i]-1] = true;
            vec.push_back(b[i]-1);
        }
    }
    int ptr;
    ll vala, valb, mvala, mvalb, preval;
    sort(a, a+n);
    sort(b, b+m);
    sort(vec.begin(), vec.end());
    mvala = 3*n;
    mvalb = 3*m;
    preval = mvala-mvalb;
    for(i=0; i<vec.size(); i++){
        ptr = upper_bound(a, a+n, vec[i])-a;
        vala = ptr*2+(n-ptr)*3;
        ptr = upper_bound(b, b+m, vec[i])-b;
        valb = ptr*2+(m-ptr)*3;
        if((vala-valb)>preval){
            mvala = vala;
            mvalb = valb;
            preval = vala-valb;
        }
        else if((vala-valb)==preval){
            if(vala>mvala){
                mvala = vala;
                mvalb = valb;
            }
        }
        //cout << vec[i] << " " << mvala << " " << mvalb << "\n";
    }
    cout << mvala << ":" << mvalb << endl;
    return 0;
}
