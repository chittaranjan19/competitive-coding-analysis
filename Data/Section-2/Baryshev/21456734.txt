#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
#include <fstream>
#include <tuple>
#include <iomanip>

using namespace std;

#define forn(i, n) for (int i = 0; i < int(n); ++i)
#define for1(i, n) for (int i = 1; i < int(n); ++i)
#define ford(i, n) for (int i = int(n) - 1; i >= 0; --i)
#define fore(i, l, r) for (int i = int(l); i <= int(r); ++i)
#define all(a) a.begin(), a.end()
#define sz(a) (int(a.size()))
#define mp make_pair
#define pb push_back
#define ft first
#define sc second
#define g(a, b) get<a> (b)

typedef int ll;
typedef long double ld;
typedef pair<int, int> pt;

const int MAX_N = 2e4;
const int mod = 1e9 + 7;

int main(){
    string s;
    cin >> s;
    ll sum = 0, ost = 0;
    int l = 0, r = 0;
    while (l < s.size()){
        while(l < s.size() && (s[l] < '0' || s[l] > '9')) l++;
        ll zel = 0, kek = 0;
        r = l;
        while (r < s.size() && ((s[r] >= '0' && s[r] <= '9') || s[r] == '.')) r++;
        r--;
        if (s[r - 2] == '.'){
            kek = (s[r - 1] - '0') * 10ll + 1ll * (s[r] - '0');
            for (int i = l; i < r - 2; i++){
                if (s[i] != '.') zel = 10ll * (zel) + 1ll * (s[i] - '0');
            }
        }
        else{
            for (int i = l; i <= r; i++){
                if (s[i] != '.') zel = 10ll * (zel) + 1ll * (s[i] - '0');
            }
        }
        sum += zel;
        ost += kek;
        l = r + 1;
    }
    sum += ost / 100;
    ost = ost % 100;
    string t = "";
    if (sum == 0) t += '0';
    while (sum != 0){
        t += char(sum % 10 + '0');
        sum = sum / 10;
    }
    string e = "";
    for (int i = 0; i < t.size(); i++){
        if ((i + 1) % 3 == 0 && i + 1 != t.size()){
            e += t[i];
            e += ".";
        }
        else e += t[i];
    }
    for (int i = (int) e.size() - 1; i >= 0; i--)
        cout << e[i];
    if (ost != 0){
        cout << ".";
        if (ost / 10 == 0) cout << '0';
        cout << ost;
    }
    return 0;
}
