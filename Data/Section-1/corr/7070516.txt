#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>

#include<cmath>
#include<iostream>
#include<iomanip>
#include<fstream>

#include<string>
#include<utility>
#include<vector>
#include<list>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>

#define ii long long int
#define pi 2*acos(0.0)
#define eps 1e-9
#define mem(x,y) memset(x,y,sizeof(x))
#define all(x) x.begin(), x.end()
#define pb push_back
#define sz(a) (int)a.size()
#define inf 2147483640
#define mx 60

using namespace std;

const int debug= 0;

int n,m;
bool mat[mx][mx];
bool vis[mx];
vector <int> topOrder;

void dfs(int i);

int main() {
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);

    while (cin>>n>>m) {
        mem(mat, 0);
        mem(vis, 0);
        topOrder.clear();
        int i;
        for (i=1;i<=m;++i) {
            int c,d;
            cin>>c>>d;
            mat[c][d]= mat[d][c]= 1;
        }

        ii ans= 1;
        int prev = 0,now;

        for (i=1;i<=n;++i) {
            if (!vis[i]) {
                dfs(i);
                now = sz(topOrder) - prev;
                ans *= 1<<(now-1);
            }
        }

        /*
        for (i=0;i<n;++i) cout<<topOrder[i]<<" ";
        puts("");

        for (i=n-2;i>=0;--i) {
            if (mat[topOrder[i+1]][topOrder[i]]) ans<<=1;
            cout<<topOrder[i]<<" "<<ans<<endl;
        }
        */
        cout<<ans<<endl;
    }

    return 0;
}

void dfs(int i) {
    vis[i]= 1;
    int j;
    for (j=1;j<=n;++j) {
        if (!mat[i][j] || vis[j]) continue;
        dfs(j);
    }
    topOrder.pb(i);
}
