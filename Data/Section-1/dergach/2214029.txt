#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <time.h>
#include <iostream>
#include <vector>
#include <string>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
using namespace std;

#define eps 1e-8

int a[2][105], c[7];
struct cube{
    int up, down, left, right, front, back;
}b[105];

int main()
{
    int n, i, j, k, x;
    cin >> n >> x;
    for(i = 0; i < n; i++)
    {
        cin >> a[0][i] >> a[1][i];
        b[i].back = -1;
        b[i].down = -1;
        b[i].front = -1;
        b[i].left = -1;
        b[i].right = -1;
        b[i].up = -1;
    }
    b[0].up = x;
    b[0].down = 7 - b[0].up;
    b[0].front = a[1][0];
    b[0].back = 7 - b[0].front;
    b[0].left = a[0][0];
    b[0].right = 7 - b[0].right;
    for(i = 1; i < n; i++)
    {
        set <int> s;
        for(j = 1; j <= 6; j++)
            s.insert(j);
        b[i].left = a[0][i];
        s.erase(b[i].left);
        b[i].right = 7 - b[i].left;
        s.erase(b[i].right);
        b[i].front = a[1][i];
        s.erase(b[i].front);
        b[i].back = 7 - b[i].front;
        s.erase(b[i].back);

        if(*s.begin() == b[i-1].down)
        {
            b[i].down = 7 - b[i-1].down;
            b[i].up = b[i-1].down;
        }
        else
            if(*s.rbegin() == b[i-1].down)
            {
                b[i].down = b[i-1].down;
                b[i].up = 7 - b[i-1].down;
            }
            else
            {
                puts("NO");
                return 0;
            }
    }
    puts("YES");
    return 0;
}
