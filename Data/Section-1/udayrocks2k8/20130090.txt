#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <sstream>
#include <queue>
#include <deque>
#include <bitset>
#include <iterator>
#include <list>
#include <stack>
#include <map>
#include <set>
#include <functional>
#include <numeric>
#include <utility>
#include <limits>
#include <time.h>
#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
using namespace std;

#define INF (1 << 30)
#define INFL (1LL << 50)
#define pb push_back
#define loop_it(it, elements) for(auto it = elements.begin(); it != elements.end(); it++)
#define loop(i, l, r) for(auto i = l; i < r; i++)
#define loop_r(i, r, l) for(auto i = r; i >= l; i--)
#define loop_k(i, l, r, k) for(auto i = l; i < r; i+=k)
#define test_cases int test_cases;scanf("%d", &test_cases);for (int tc_0 = 1; tc_0 <= test_cases; tc_0++)

typedef long long i64;
typedef set<int> si;
typedef vector<int> vi;
typedef vector<i64> vi64;
typedef vector<vi> vvi;
typedef pair<int, int> pii;
typedef vector<pii> vpii;
typedef map<pii, vi> mpiivi;
typedef map<int, int> mii;
typedef map<int, vi> mivi;

int main() {
	i64 a0, a1, a2, a3;
	cin >> a0 >> a1 >> a2 >> a3;
	i64 sum = a0 + a1 + a2 + a3;
	i64 N = -1;
	loop(i, 0, 1000001) if (sum == (i * ((i64) i - 1)) / 2) {
		N = i;
	}
	i64 N0 = -1;
	loop(i, 0, 1000001) if (a0 == (i * ((i64) i - 1)) / 2) {
		N0 = i;
	}
	i64 N1 = -1;
	loop(i, 0, 1000001) if (a3 == (i * ((i64) i - 1)) / 2) {
		N1 = i;
	}
	if (N0 == -1 || N1 == -1 || N == -1 || (N0 + N1) != N || (a1 + a2) != N0 * N1) {
		cout << "Impossible\n";
		return 0;
	}
	i64 n0 = N0, n1 = N1;
	char str[N + 1];
	str[N] = 0;
	int idx = 0;
	while (a1 >= n1) {
		str[idx++] = '0'; a1 -= n1;
		n0--;
	}
	loop (i, 0, n1 - a1) {
		str[idx++] = '1';
	}
	if (n0) {
		str[idx++] = '0';
		n0--;
	}
	loop (i, 0, a1) {
		str[idx++] = '1';
	}
	loop (i, 0, n0) {
		str[idx++] = '0';
	}
	cout << str << endl;
	return 0;
}