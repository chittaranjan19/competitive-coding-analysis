
/* Author:
    * Rohit Laddha */
#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <iostream>
#include <sstream>
#include <string>
#include <utility>
#include <vector>
#include <map>
#include <limits.h>
#include <math.h>
#include <cassert>
#include <ctime>
#include <queue>
#include <tr1/random>
#include <tr1/unordered_map>
using namespace std;
using namespace std::tr1;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define ALL(c) (c).begin(),(c).end()
#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;
#define PI 3.14159265
int main()
{
	int n,k;
	cin >> n >> k;
	int a[n];
	for(int i=0;i<n;i++)
		cin >> a[i];
	int p=INT_MIN;
	for(int i=0;i<n;i++){
		if(a[i]>=0){
			p=i;
			break;
		}
	}
	int cnt=0,ans=0;
	if(p==0){
		for(int i=0;i<n;i++){
			ans+=a[i];
		}
	}
	else if(p==INT_MIN){
		ans+=-1*a[n-1];
		cnt++;
		int i;
//		cout << "first" << endl;
		for(i=n-2;i>=0;i--){
			if(cnt<k && a[i]==a[n-1]){
				ans+=-1*a[i];
				cnt++;
			}
			else 
				break;
//			cout<< ans << endl;
		}
//		cout << "second = " << i << endl;
		for(int j=i;j>=0;j--)
			ans+=a[j];
//			cout<< ans << endl;
	}
	else{
		for(int i=n-1;i>=p;i--){
			ans+=a[i];
//			cout << ans << endl;
		}
		for(int i=p-1;i>=0;i--){
			if(cnt<k && (-1*a[i])<=a[p]){
				ans+=(-1*a[i]);
				cnt++;
//				cout << ans << endl;
			}
			else
				ans+=a[i];
		}
	}
	cout << ans << endl;
	return 0;
}
