#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <stack>
#include <algorithm>
#include <cctype>
#include <vector>
#include <queue>
#include <tr1/unordered_map>
#include <cmath>
#include <map>
#include <bitset>
#include <set>
#include <iomanip>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector< ii > vii;
///////////////////////////////UTIL/////////////////////////////////
#define ALL(x) (x).begin(),x.end()
#define CLEAR0(v) memset(v, 0, sizeof(v))
#define CLEAR(v, x) memset(v, x, sizeof(v))
#define COPY(a, b) memcpy(a, b, sizeof(a))
#define CMP(a, b) memcmp(a, b, sizeof(a))
#define REP(i,n) for(int i = 0; i<n; i++)
#define REPP(i,a,n) for(int i = a; i<n; i++)
#define REPD(i,n) for(int i = n-1; i>-1; i--)
#define REPDP(i,a,n) for(int i = n-1; i>=a; i--)
#define pb push_back
#define pf push_front
#define sz size()
#define mp make_pair
/////////////////////////////NUMERICAL//////////////////////////////
#define INF 1000000000000000000LL
#define EPS 1e-9
/////////////////////////////BITWISE////////////////////////////////
#define CHECK(S, j) (S & (1 << j))
#define CHECKFIRST(S) (S & (-S)) 
#define SET(S, j) S |= (1 << j)
#define SETALL(S, j) S = (1 << j)-1  
#define UNSET(S, j) S &= ~(1 << j)
#define TOOGLE(S, j) S ^= (1 << j)
///////////////////////////////64 BITS//////////////////////////////
#define LCHECK(S, j) (S & (1ULL << j))
#define LSET(S, j) S |= (1ULL << j)
#define LSETALL(S, j) S = (1ULL << j)-1ULL 
#define LUNSET(S, j) S &= ~(1ULL << j)
#define LTOOGLE(S, j) S ^= (1ULL << j)
//__builtin_popcount(m)
//scanf(" %d ", &t);

int n, m;
ii e[250100];
ll peso[250100];

ll weight[510][510];
ll dist[510][510];
ll ans[510][510];

int main(){
    cin >> n >> m;
    int u, v;
    ll l;
    REPP(i, 1, n+1)
    REPP(j, 1, n+1){
        if(i == j) dist[i][j] = 0LL;
        else dist[i][j] = 1000000000000000000LL;
    }
    
    REP(i, m){
        cin >> u >> v >> l;
        e[i] = ii(u, v);
        peso[i] = l;
        weight[u][v] = weight[v][u] = dist[u][v] = dist[v][u] = l;
    }
    REPP(k, 1, n+1)
    REPP(i, 1, n+1)
    REPP(j, 1, n+1) dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);
    
    CLEAR0(ans);
    
    REPP(i, 1, n+1)
    REPP(j, i+1, n+1){
        //cout << "DIST " << " I " << i << " J " << j << " " << dist[i][j] << endl;
        REP(k, m){
            //cout << " ARESTA " << k << " ->>>>> "  << e[k].first << " " << e[k].second << " " << peso[k] << endl;
            //cout << "PRIM " << dist[i][e[k].first] + peso[k] + dist[e[k].second][j] << endl;
            //cout << "SEC " << dist[i][e[k].second] + peso[k] + dist[e[k].first][j] << endl;
            if(
            (dist[i][j] == dist[i][e[k].first] + peso[k] + dist[e[k].second][j])
            || (dist[i][j] == dist[i][e[k].second] + peso[k] + dist[e[k].first][j])){
                ans[i][j]++;
            }
        }
    }
    
    REPP(i, 1, n+1)
    REPP(j, i+1, n+1){
        cout << ans[i][j];
        if(i == n-1 && j == n);
        else cout << " ";
    }
    cout << endl;
    
}
