#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <limits.h>
#include <math.h>
#include <algorithm>
#include <map>
using namespace std;
typedef long long ll;

int totdis[1000005];
int app[1000005];
int data[100005];
int mm=0;

map<int,int> mp;
void dfs(int x,int depth){
    if(x*2<=mm){
        if(mp.find(x*2)==mp.end()){
            mp[x*2]=depth+1;
            dfs(x*2,depth+1);
        }else if(mp[x*2]>depth+1){
            mp[x*2]=depth+1;
            dfs(x*2,depth+1);
        }
    }
    if(x/2>0){
        if(mp.find(x/2)==mp.end()){
            mp[x/2]=depth+1;
            dfs(x/2,depth+1);
        }else if(mp[x/2]>depth+1){
            mp[x/2]=depth+1;
            dfs(x/2,depth+1);
        }
    }
}

int main(){
    int n;
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%d",&data[i]);
        mm=max(mm,data[i]);
    }
    for(int i=0;i<n;i++){
        mp.clear();mp[data[i]]=0;
        dfs(data[i],0);
        map<int,int>::iterator it=mp.begin();
        for(;it!=mp.end();it++){
            totdis[it->first]+=it->second;
            app[it->first]++;
        }
    }
    int ans=INT_MAX;
    for(int i=1;i<=mm;i++){
        //printf("%d %d\n",app[i],totdis[i]);
        if(app[i]==n)ans=min(ans,totdis[i]);
    }
    printf("%d\n",ans);
    return 0;
}
