#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <unordered_set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int MAX_N = 200000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

unordered_set<string> t;

int main()
{
    //ifstream ifs("input.in");
    //ofstream ofs("output.out");
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n, m;
    string s;
    scanf_s("%d %d", &n, &m);
    for (int i = 0; i < n; i++)
    {
        cin >> s;
        t.insert(s);
    }
    for (int i = 0; i < m; i++)
    {
        cin >> s;
        bool b = false;
        for (int j = 0; j < s.size(); j++)
            if (s[j] == 'a')
            {
                s[j] = 'b';
                if (t.find(s) != t.end())
                {
                    printf("YES\n");
                    s[j] = 'a';
                    b = true;
                    break;
                }
                s[j] = 'c';
                if (t.find(s) != t.end())
                {
                    printf("YES\n");
                    s[j] = 'a';
                    b = true;
                    break;
                }
                s[j] = 'a';
            }
            else if (s[j] == 'b')
            {
                s[j] = 'c';
                if (t.find(s) != t.end())
                {
                    printf("YES\n");
                    s[j] = 'b';
                    b = true;
                    break;
                }
                s[j] = 'a';
                if (t.find(s) != t.end())
                {
                    printf("YES\n");
                    s[j] = 'b';
                    b = true;
                    break;
                }
                s[j] = 'b';
            }
            else if (s[j] == 'c')
            {
                s[j] = 'a';
                if (t.find(s) != t.end())
                {
                    printf("YES\n");
                    s[j] = 'c';
                    b = true;
                    break;
                }
                s[j] = 'b';
                if (t.find(s) != t.end())
                {
                    printf("YES\n");
                    s[j] = 'c';
                    b = true;
                    break;
                }
                s[j] = 'c';
            }
        if (!b)
            printf("NO\n");
    }
    return 0;
}