/*	 Hello World!	*/

#include <bits/stdc++.h>

#define pb push_back
#define pf push_front
#define mp make_pair
#define f first
#define s second
#define set(a,b) fill(all(a),b)
#define let(x,a) __typeof(a) x(a)
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d",n)
#define piw(n) printf("%d ",n)
#define pin(n) printf("%d\n",n)
#define all(a) (a).begin(),(a).end()
#define sorti(a) sort(all(a))
#define sortd(a) sort(a.rbegin(),a.rend()) 
#define len(s) s.length()
#define sz(s) s.size()
#define endl '\n'
#define nl printf("\n");
#define present1(c,x) ((c).find(x) != (c).end()) 
#define present2(c,x) (find(all(c),x) != (c).end())
#define tr(v,it) for( let(it,v.begin()) ; it != v.end() ; it++)
#define rtr(v,it) for( let(it,v.rbegin()) ; it != v.rend() ; it++)
#define rep1(i,n) for(int i=0; i<(int)n;i++)
#define rep2(i,a,b) for(int i=(int)a; i<=(int)b; i++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define LL long long int
#define PII pair<int,int>
#define PLL pair<LL,LL>
#define VI vector<int>
#define SI set<int>
#define VPII vector< PII >
#define SPII set< PII >
#define mod (int)1e9+7
#define inf INT_MAX

using namespace std;

LL flag=0;
vector<vector<LL> > V;
VI height;
VI visited;
LL odd=0,even=0;
VI parent;

void dfs(int u)
{
	if(flag) return;
	visited[u]=1;
	rep1(i,V[u].size())
	{
		int v=V[u][i];
		parent[v]=u;
		if(visited[v]==0)
		{
			height[v]=height[u]+1;
			if(height[v]%2) odd++;
			else even++;
			dfs(v);
		}
		else if(visited[v]==1)
		{
			if((height[u]+1-height[v])%2==1 && parent[u]!=v)
			{
				flag=1;
				return;
			}
		}
	}
	visited[u]=2;
}

int main()
{
	LL n,m,a,b;
	cin>>n>>m;
	V.assign(n+1,vector<LL>());
	rep1(i,m)
	{
		cin>>a>>b;
		V[a].pb(b);
		V[b].pb(a);
	}
	if(m==0)
	{
		cout<<"3 "<<n*(n-1)*(n-2)/6<<endl;
		return 0;
	}
	height.assign(n+1,0);
	visited.assign(n+1,0);
	parent.assign(n+1,0);
	vector<LL> O,E;
	LL f=0,g=0;
	rep2(i,1,n)
	{
		if(visited[i]==0)
		{
			odd=0; even=1;
			height[i]=0;
			dfs(i);
			O.pb(odd);
			E.pb(even);
			if(even>=2 || odd>=2) f=1;
			else if(odd+even>=2) g++;
		}
	}
	if(flag) cout<<"0 1"<<endl;
	else
	{
		if(f)
		{
			cout<<"1 ";
			LL ans=0;
			rep1(i,O.size())
			{
				odd=O[i]; even=E[i];
				if(even>=2 || odd>=2)
				{
					ans+=(even*(even-1))/2;
					ans+=(odd*(odd-1))/2;
				}
				else continue;
			}
			cout<<ans<<endl;
		}
		else
		{
			cout<<"2 ";
			if(g)
			{
				cout<<g*(n-2)<<endl;
			}
		}
	}
	return 0;
}