#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<string>
#include<queue>
#include<vector>
#include<map>
#include<cmath>
#define lowbit(x) ((x)&(-x))
#define Max(a,b) (a>b?a:b)
#define Min(a,b) (a>b?b:a)
#define INF 0x3f3f3f3f
using namespace std;
//typedef __int64 ll;
//typedef long long ll;
int dp[200][4] ;
//dp[i][j]
int main()
{
	//freopen("xx.txt","r",stdin);
	//std::ios::sync_with_stdio(false);
	memset(dp,-1,sizeof(dp));
	int n ;
	cin >> n;
	for (int i = 1; i < n+1; i++)
	{
		int num;
		scanf("%d",&num);
		dp[i][0] = 0;
		if(num == 1) dp[i][1] = 0;
		else if(num == 2) dp[i][2] = 0;
		else if(num == 3) dp[i][2] = dp[i][1] = 0;
	}
	
	dp[1][0] = 1;
	for (int i = 2; i < n+1; i++)
	{
		if(dp[i][1] == 0)
		{
			dp[i][1] = INF; 
			if(dp[i-1][0]>=0) dp[i][1] = Min(dp[i][1],dp[i-1][0]);
			if(dp[i-1][2]>=0) dp[i][1] = Min(dp[i][1],dp[i-1][2]);
			if(dp[i][1] == INF) dp[i][1] = -1; 
		}
		if(dp[i][2] == 0)
		{
			dp[i][2] = INF;
			if(dp[i-1][0]>=0) dp[i][2] = Min(dp[i][2],dp[i-1][0]);
			if(dp[i-1][1]>=0) dp[i][2] = Min(dp[i][2],dp[i-1][1]);
			if(dp[i][2] == INF) dp[i][2] = -1;
		}
		 if(dp[i][0] == 0)
		{
			dp[i][0] = INF; 
			if(dp[i-1][0]>=0) dp[i][0] = Min(dp[i-1][0],dp[i][0]);
			if(dp[i-1][1]>=0) dp[i][0] = Min(dp[i-1][1],dp[i][0]);
			if(dp[i-1][2]>=0) dp[i][0] = Min(dp[i-1][2],dp[i][0]);
			dp[i][0]++;
		}
	} 
	int ans = INF;
	for(int i = 0; i < 3; i++) if(dp[n][i]!=-1)ans = Min(ans,dp[n][i]);
	printf("%d\n",ans); 
}

