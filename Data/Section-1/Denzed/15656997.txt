#include <bits/stdc++.h>

#define f       first
#define s       second
#define mp      make_pair
#define rank    something_which_is_supposed_to_be_rank
#define left    something_which_is_supposed_to_be_left
#define right   something_which_is_supposed_to_be_right

using namespace std;

typedef unsigned int uint;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

const int N = 1e5;

int n, a, b, c, indices[N];
ll x[N], y[N];

ll dist2(int i, int j) {
    return (x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j]);
}

bool my_less(int i, int j) {
    return dist2(a, i) < dist2(a, j);
}

bool collinear(int i, int j, int k) {
    return (x[i] - x[j]) * (y[j] - y[k]) == (x[j] - x[k]) * (y[i] - y[j]);
}

int main() {
    cin.sync_with_stdio(0);
    cin.tie(0);
    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> x[i] >> y[i];
        if (x[i] < x[a] || (x[i] == x[a] && y[i] < y[a])) {
            a = i;
        }
        indices[i] = i;
    }
    sort(indices, indices + n, my_less);
    b = indices[1];
    for (c = 2; collinear(a, b, indices[c]) && c < n; ++c);
    cout << a + 1 << " " << b + 1 << " " << indices[c] + 1 << "\n";
    cerr << "Time elapsed: " << (ld) clock() / CLOCKS_PER_SEC << "\n";
    return 0;
}