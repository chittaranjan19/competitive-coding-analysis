/*
*Rainto96
*Beijing University of Posts and Telecommunications School of Software Engineering
*http://blog.csdn.net/u011775691
*/
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <cstring>
#include <string>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <climits>
using namespace std;
#define pb push_back
#define ALL(x) x.begin(),x.end()
#define VINT vector<int>
#define PII pair<int,int>
#define MP(x,y) make_pair((x),(y))
#define ll long long
#define ull unsigned ll
#define MEM0(x)  memset(x,0,sizeof(x))
#define MEM(x,val) memset((x),val,sizeof(x))
#define scan(x) scanf("%d",&(x))
#define scan2(x,y) scanf("%d%d",&(x),&(y))
#define scan3(x,y,z) scanf("%d%d%d",&(x),&(y),&(z))
#define scan4(x,y,z,k) scanf("%d%d%d%d",&(x),&(y),&(z),&(k))
#define Max(a,b) a=max(a,b)
#define Min(a,b) a=min(a,b)
#define rep(x,y) for(int (x)=0;(x)<(y);(x)++ )
using namespace std;
int f[222222];
bool vis[222222];
int n,k,a;
bool judge(int len){
        MEM(vis,0);
        for(int i=1;i<=len;i++){
                vis[f[i] ]=true;
        }
        int geshu=0;
        int lianxu=0;
        for(int i=1;i<=n;){
                if( !vis[i] ){
                        lianxu++;
                        if(lianxu==a){
                                lianxu=0;
                                i+=2;
                                geshu++;
                                continue;
                        }
                }else
                        lianxu=0;
                i++;
        }
        //cerr<<len<<" "<<geshu<<endl;
        return geshu>=k;
}
int main(){
	#ifndef ONLINE_JUDGE
		freopen("C:/OJ/in.txt","r",stdin);
	#endif

	scan3(n,k,a);
	int m;scan(m);
	for(int i=1;i<=m;i++){
                scan(f[i]);
	}
	int l=0,r=m+1;
	int mid=(l+r)/2;
	int minn=0x3f3f3f3f;
	while(l<r){
                if(judge(mid)){
                        r=mid;
                }else {
                        l=mid+1;
                        minn=min(minn,mid);
                }
                mid=(l+r)/2;
	}

	if(!judge(mid)) minn=min(minn,mid);
	if(minn==0x3f3f3f3f) puts("-1");
	else printf("%d\n",minn);
        return 0;
}
