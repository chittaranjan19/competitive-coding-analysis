//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 200 * 1000 + 100;

int n;
ll x, y;
vector <int> g[N];

int d[N];
queue <int> q;

int bfs(int v){
	memset(d, -1, sizeof d);
	d[v] = 0;
	q.push(v);
	int mx = 0;
	int ind = v;
	while(!q.empty()){
		v = q.front();
		q.pop();
		for(int u : g[v]){
			if(d[u] == -1){
				d[u] = d[v] + 1;
				q.push(u);
				if(d[u] > mx){
					mx = d[u];
					ind = u;
				}
			}
		}
	}
	return ind;
}	

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> n >> x >> y;
	for(int i = 0; i < n - 1; ++i){
		int u, v;
		cin >> u >> v;
		u --; v --;
		g[u].PB(v);
		g[v].PB(u);
	}
	int k = bfs(0);
	int t = bfs(k);
	if(x <= y){
		cout << d[t] * x + (n - 1 - d[t]) * y << "\n";
	}
	else{
		for(int i = 0; i < n; ++i){
			if(SZ(g[i]) == n - 1){
				cout << x + (n - 2) * y << "\n";
				return 0;
			}
		}
		cout << y * (n - 1) << "\n";
	}
	return 0;
}
