#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int arr[500005];
int cnt[1000005];

int main()
{
  //freopen("text_editor.txt", "r", stdin);
  //freopen("output.txt", "w", stdout);
  int n, k;
  cin >> n >> k;
  for(int i=0;i<n;i++)
    scanf("%d", &arr[i]);
  int x = 0, y = 0, L = 0, R = 0, curr = 1;
  cnt[arr[0]]++;
  while(R < n)
  {
    while(R != n - 1 && (curr < k || (curr == k && cnt[arr[R + 1]])))
    {
      R++;
      if(cnt[arr[R]]) cnt[arr[R]]++;
      else cnt[arr[R]]++, curr++;
    }
    if(R - L > y - x)
      x = L, y = R;
    if(R == n - 1) break;
    while(curr == k)
    {
      cnt[arr[L]]--;
      if(!cnt[arr[L]]) curr--;
      L++;
    }
  }
  printf("%d %d", x + 1, y + 1);
  return 0;
}
