#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int main()
{
	int n,k;
	cin >> n >> k;
	int newN = n;
	vector<int> solution;
	forn(i,k)
	{
		if (i % 2 == 0)
			solution.push_back(n--);
		else
			solution.push_back(i/2+1);
	}
	int t = solution[k-1];
	forn(i,newN-k)
	{
		if (k % 2 == 0) 
			solution.push_back(++t);
		else
			solution.push_back(--t);
	}
	forn(i,newN)
		cout << solution[i] << " ";
	cout << endl;
	return 0;
}

