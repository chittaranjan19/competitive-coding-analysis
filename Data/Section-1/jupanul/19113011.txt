#include <algorithm>
#include <iostream>
#include <map>
using namespace std;


map< pair<long long, long long>, long long > tax;

void update(long long u, long long v, long long w) {
    while (u != v) {
        if (u > v) {
            long long next = u / 2;
            tax[{next, u}] += w;
            u = next;
        } else {
            long long next = v / 2;
            tax[{next, v}] += w;
            v = next;
        }
    }
}
long long query(long long u, long long v) {
    long long answer = 0;
    while (u != v) {
        if (u > v) {
            long long next = u / 2;
            answer += tax[{next, u}];
            u = next;
        } else {
            long long next = v / 2;
            answer += tax[{next, v}];
            v = next;
        }
    }
    return answer;
}

int main() {
    int q;
    for (cin >> q; q; -- q) {
        int type;
        cin >> type;
        if (type == 1) {
            long long u, v, w;
            cin >> u >> v >> w;
            update(u, v, w);
        } else {
            long long u, v;
            cin >> u >> v;
            cout << query(u, v) << "\n";
        }
    }
    return 0;
}