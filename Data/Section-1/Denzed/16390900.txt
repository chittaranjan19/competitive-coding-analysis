#include <bits/stdc++.h>

#define f       first
#define s       second
#define mp      make_pair
#define rank    something_which_is_supposed_to_be_rank
#define left    something_which_is_supposed_to_be_left
#define right   something_which_is_supposed_to_be_right

using namespace std;

typedef unsigned int uint;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

const int N = 1000;

int n, a[N], ans = 2;

map<int,int> cnt, cur;

inline void update(int x, int y) {
    cur.clear();
    for (int i = 0;; ++i) {
        if (cnt[x] < ++cur[x]) {
            ans = max(ans, i);
            return;
        }
        x += y;
        swap(x, y);
    }
}

int main() {
    cin.sync_with_stdio(0);
    cin.tie(0);
    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
        ++cnt[a[i]];
    }
    ans = max(ans, cnt[0]);
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < i; ++j) {
            if (a[i] || a[j]) {
                update(a[i], a[j]);
                update(a[j], a[i]);
            }
        }
    }
    assert(ans <= 100 || cnt[0] > 100);
    cout << ans << "\n";
    cerr << "Time elapsed: " << (ld) clock() / CLOCKS_PER_SEC << "\n";
    return 0;
}