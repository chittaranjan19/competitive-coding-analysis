#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 300100
#define maxC 200000001000000ll
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define p2 pair<long long, int>
#define p3 pair< int , p2 >

using namespace std;
int n, m, mark[mn], s, ed[mn], dem;
long long d[mn], sum = 0, wei[mn], con[mn];
vector < p3 > g[mn];
priority_queue < p2 > p;

void setup ()
{
    int x, y;
    long long z;
    cin >> n >> m;
    FOR (i, 1, m)
    {
        cin >> x >> y >> z;
        g[x].pb(mp(y, mp(z, i)));
        g[y].pb(mp(x, mp(z, i)));
        wei[i] = z;
    }
    cin >> s;
}

void IJK()
{
    dem = n;
    p.push(mp(0, s));
    FOR (i, 1, n)
        d[i] = con[i] = maxC;
    d[s] = 0;
    ed[s] = 0;
    wei[0] = 0;
    while(!p.empty() && dem)
    {
        long long w = - p.top().F;
        int u = p.top().S;
        p.pop();
        if (d[u] < w || mark[u])
            continue;
        mark[u] = 1;
        sum += wei[ed[u]];
        dem --;
        FOR (i, 0, int(g[u].size()) - 1)
        {
            int v = g[u][i].F;
            long long w2 = g[u][i].S.F;
            int id = g[u][i].S.S;
            if (mark[v] || d[v] < d[u] + w2)
                continue;
            if (d[v] == d[u] + w2 && con[v] <= w2)
                continue;
            con[v] = w2;
            ed[v] = id;
            d[v] = w + w2;
            p.push(mp(- d[v], v));
        }
    }
}

void xuly ()
{
    IJK();
    cout << sum << endl;
    FOR (i, 1, n)
    if (i != s)
        cout << ed[i] << " ";
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
