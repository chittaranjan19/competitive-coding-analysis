#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <stdexcept>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int solve(LL x)
{
  if(x >= 0 && x <= 3) return 0;
  if(x >= 4 && x <= 15) return 1;
  if(x >= 16 && x <= 81) return 2;
  if(x >= 82 && x <= 6723) return 0;
  if(x >= 6724 && x <= 50625) return 3;
  if(x >= 50626 && x <= 1234566) return 1;
  LL e = (LL)sqrt(x);
  LL b = ceil(sqrt(sqrt(x)));
  bool g[5];
  for(int i=0;i<5;i++) g[i] = false;
  for(LL i=b;i<=e && i < x;i++)
  {
    int tmp = solve(i);
    g[tmp] = true;
  }
  int ch = -1;
  for(int k=0;ch == -1;k++)
    if(!g[k])
      ch = k;
  return ch;
}

int main()
{
  ios_base::sync_with_stdio(0);
  bool res = 0;
  int n;
  LL x;
  cin >> n;
  /*setdp(m);
  int beg = 0, en;
  for(int i=1;i<1234567;i++)
  {
    if(solve(i) != solve(i - 1))
    {
      cout << "if(x <=" << beg << " && x >= " << i - 1 << ") return " << solve(i - 1) << ";" << endl;
      beg = i;
    }
  }
  cout << "if(x <=" << beg << " && x >= " << 1234566 << ") return " << 1234566 << ";" << endl;*/
  while(n--)
  {
    cin >> x;
    res^=solve(x);
  }
  if(res == 0) cout << "Rublo\n";
  else cout << "Furlo\n";
  return 0;
}
