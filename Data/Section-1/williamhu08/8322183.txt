#include <iostream>
#include <cstdio>
#include <fstream>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <deque>
#include <sstream>
#include <cmath>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>
#include <functional>
#include <ctime>
#include <climits>
#include <cstdlib>
#include <complex>
//#define NDEBUG 1
#include <cassert>

using namespace std;

#define rep(it, v) for (__typeof((v).begin()) it = (v).begin(); it != (v).end(); it++)
#define debug(...) fprintf(stderr, __VA_ARGS__)

typedef long long ll;
typedef pair<int, int> pii;
const int MAXN = 110;

int N, K, A[MAXN];
vector<pii> ans;

void printans() {
	printf("%d ", *max_element(A, A + N) - *min_element(A, A + N));
	printf("%lu\n", ans.size());
	rep(it, ans) {
		printf("%d %d\n", it->first + 1, it->second + 1);
	}
	exit(0);
}

int main() {
	//why are you stalking me?
#ifndef ONLINE_JUDGE
	freopen("codeforces479B.in", "r", stdin);
#endif
	scanf("%d %d", &N, &K);
	for (int i = 0; i < N; i++) {
		scanf("%d", &A[i]);
	}
	//try doing it
	while (K--) {
		int *mn = min_element(A, A + N), *mx = max_element(A, A + N);
		if (*mn == *mx) {
			//then oops just print out the ans
			printans();
		}
		(*mn)++;
		(*mx)--;
		// for (int i = 1; i <= N; i++) {
		// 	printf("%d ", A[i]);
		// }
		// puts("");
		ans.push_back(pii(mx - A, mn - A));
	}
	printans();
}