#include <bits/stdc++.h>
#define FOR(i, j, k) for(int i = j; i <= k; i ++)
#define FORD(i, j, k) for(int i = j; i >= k; i --)
#define maxC 2000000007
#define mn 305
#define pb push_back
#define mp make_pair
#define F first
#define S second

using namespace std;
int n, m, p, xs, ys, a[mn][mn], d[mn][mn];
vector< pair<int, int> > g[mn * mn];
priority_queue< pair< int, pair<int, int> > > pri;

void setup()
{
    cin >> n >> m >> p;
    FOR(i, 1, n)
    FOR(j, 1, m)
    {
        cin >> a[i][j];
        if (a[i][j] < p)
            g[a[i][j] + 1].pb(mp(i, j)), d[i][j] = maxC;
        else
            xs = i, ys = j;
    }
}

void xuly()
{
    pri.push(mp(0, mp(xs, ys)));
    while(!pri.empty())
    {
        int x = pri.top().S.F;
        int y = pri.top().S.S;
        int w = - pri.top().F;
        pri.pop();
        if (w != d[x][y])
            continue;
        FOR(i, 0, int(g[a[x][y]].size()) - 1)
        {
            int xx = g[a[x][y]][i].F;
            int yy = g[a[x][y]][i].S;
            int dis = abs(x - xx) + abs(y - yy);
            if (d[xx][yy] <= w + dis)
                continue;
            d[xx][yy] = w + dis;
            pri.push(mp(- d[xx][yy], mp(xx, yy)));
        }
    }
    int ans = maxC;
    FOR(i, 1, n)
    FOR(j, 1, m)
    if (a[i][j] == 1)
        ans = min(ans, d[i][j] + i + j - 2);
    cout << ans;
}

int main()
{
    iostream::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup();
    xuly();
    return 0;
}

