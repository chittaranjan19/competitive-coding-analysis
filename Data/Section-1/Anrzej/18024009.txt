#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 2e5 + 10, sqN = 320, lg = 2;

int gcd(int a, int b) {
	return b ? gcd(b, a % b) : a;
}

int n, m;
int f[N], a[N], ans = 0;

void modify(int v, int del){
    if(v > n) return;
	if (f[v] == v) ans--;
	f[v] += del;
	if (f[v] == v) ans++;
}

struct Q{
	int l, r, id;
	bool operator < (Q other) const{
		return r < other.r;
	}
	Q(int _l, int _r, int _id){
		l = _l, r = _r, id = _id;
	}
};

vector<Q> q[sqN];

int res[N];

int main()
{
	cin >> n >> m;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = 0; i < m; i++){
		int l, r;
		cin >> l >> r;
		q[l / sqN].push_back(Q(l - 1, r, i));
	}

	for (int i = 0; i < sqN; i++){
		int l, r; l = r = i*sqN;
		sort(q[i].begin(), q[i].end());

		for (Q _q : q[i]){
			while (r < _q.r)
				modify(a[r], 1), r++;
			while (l < _q.l) 
				modify(a[l], -1), l++;
			while (l > _q.l) 
				modify(a[--l], 1);

			res[_q.id] = ans;
		}
		memset(f, 0, sizeof(f));
		ans = 0;
	}

	for (int i = 0; i < m; i++)
		cout << res[i] << endl;
	return 0;
}