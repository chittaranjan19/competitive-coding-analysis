#include <iostream>
#include <list>

#define mod 1000000007

using namespace std;

int n;
list<int> h[200000];

long long dp[200000];
int nullc[200000];
long long sol[200000];

long long ppow(long long b, long long p) {
    if(p==0) return 1ll;

    long long ret = ppow(b,p>>1);
    ret = (ret*ret) % mod;
    if(p%2) ret = (ret*b) % mod;

    return ret;
}

void dfs(int k) {
    dp[k] = 1ll;

    for(int i:h[k]) {
        dfs(i);
        if(!((dp[i]+1ll) % mod)) nullc[k]++;
        dp[k] = (dp[k] * (1ll+dp[i])) % mod;
    }
}

void solve(int k, long long ab) {
    sol[k] = (ab * dp[k]) % mod;
    if(k!=0) {
        sol[k] = (sol[k] + dp[k]) % mod;
    }

    for(int i:h[k]) {
        long long nab = (sol[k] * ppow((1ll+dp[i]),mod-2)) % mod;
        if((((dp[i]+1ll)%mod)==0) && (nullc[k] == 1)) {
            nab = 1ll;
            for(int j:h[k]) {
                if(j==i) continue;
                nab = (nab * (1ll+dp[j])) % mod;
            }
        }

        solve(i,nab);
    }
}

int main()
{
    ios::sync_with_stdio(0);
    cin >> n;

    for(int i=1; i<n; i++) {
        int p; cin >> p; p--;
        h[p].push_back(i);
    }

    dfs(0);
    solve(0,1ll);

    for(int i=0; i<n-1; i++) {
        cout << sol[i] << " ";
    }
    cout << sol[n-1] << endl;

    return 0;
}
