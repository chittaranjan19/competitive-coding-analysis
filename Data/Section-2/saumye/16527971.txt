#include<bits/stdc++.h>
using namespace std;
int main()
{
	int n,q,r,t,i,a[200005];
	scanf("%d%d",&n,&q);
	for(i=1;i<=n;i++)
	{
		scanf("%d",&a[i]);
	}
	stack<pair<int,int> > s;
	for(i=1;i<=q;i++)
	{
		scanf("%d%d",&t,&r);
		if(s.empty())
		{
			s.push(pair<int,int>(t,r));
		}
		else
		{
			while( !s.empty() && (s.top().second)<=r )
			{
				s.pop();
			}
			s.push(pair<int,int>(t,r));
		}
	}
	int size=s.size();
	pair<int,int> tmp[size+5];
	for(i=size-1;i>=0;i--)
	{
		tmp[i]=s.top();
		s.pop();
	}
	pair<int,int> eff[size+5];
	eff[0]=tmp[0];
	int j=1;
	for(i=1;i<size;i++)
	{
		if(tmp[i].first==eff[j-1].first)
		{
			continue;
		}
		else
		{
			eff[j++]=tmp[i];
		}
	}
	priority_queue<pair<int,int> > max_heap;
	priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > min_heap;
	for(i=1;i<=eff[0].second;i++)
	{
		max_heap.push(pair<int,int>(a[i],i));
		min_heap.push(pair<int,int>(a[i],i));
	}
	int ans[200005];
	for(j=n;j>eff[0].second;j--)
		ans[j]=a[j];
	int start,end;
	bool vis[200005];
	for(i=0;i<=eff[0].second;i++)
		vis[i]=0;
	for(i=1;i<=size;i++)
	{
		if(i==size)
			end=0;
		else
			end=eff[i].second;
		if(eff[i-1].first==1)//max_heap is to be used
		{
			while(j>end)
			{
				if(!vis[max_heap.top().second])
				{
					ans[j--]=max_heap.top().first;
					vis[max_heap.top().second]=1;
				}
				max_heap.pop();
			}
		}
		else//min_heap is to be used
		{
			while(j>end)
			{
				if(!vis[min_heap.top().second])
				{
					ans[j--]=min_heap.top().first;
					vis[min_heap.top().second]=1;
				}
				min_heap.pop();
			}
		}
	}
	for(i=1;i<=n;i++)
		printf("%d ",ans[i]);
	printf("\n");
	return 0;
}
