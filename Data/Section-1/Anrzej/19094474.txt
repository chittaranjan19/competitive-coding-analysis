def bitcnt(l,r,i):
    if(l != 0):
        return bitcnt(0,r,i)-bitcnt(0,l-1,i)
    m = 1 << i
    res = (r//m)*(m//2)+max(0,(r%m)-(m//2)+1)
    return res

import fractions

def fact(n):
    return 1 if n == 0 else fact(n-1)*n

def C(k, n):
    if(k > n): return 0
    res = 1
    for i in range(1, n+1):
        res *= i
    for i in range(1, k+1):
        res /= i
    for i in range(1, n-k+1):
        res /= i
    return res

def p(n, t):
    res = fact(n)
    for i in t:
        res /= fact(i)
    return res

def mebius(n):
    if n == 1:
        return 1
    cur = 2
    ans = 1
    while cur*cur <= n:
        if n%(cur*cur) == 0:
            return 0
        if n%cur != 0:
            cur += 1
            continue
        ans *= -1
        n /= cur
        cur += 1
    if n != 1:
        ans *= -1
    return ans

def m(n, r):
    cur = 1
    res = 0
    while cur <= n:
        if n%cur != 0:
            cur += 1
            continue
        res += r**(n//cur)*mebius(cur)
        cur += 1
    return res//n

def T(n, r):
    res = 0
    cur = 1
    while cur <= n:
        if n%cur != 0:
            cur += 1
            continue
        res += m(cur, r)
        print('d = ', cur, ' ', m(cur, r))
        cur += 1
    return res

s = input()
num = float(s)
s = str(num)
a, b = s.split('.')
e = 0
is_int = False
if b == '0':
    is_int = True
if a == '0' and b == '0':
    print('0')
    exit()
if a == '0':
    while b[-e] == '0':
        e-=1
    e -= 1
else: e = len(a)-1
_a = ''
_b = ''
if e == 0:
    if is_int:
        b = ''
    else: b = '.'+b
    print(a+b)
elif e > 0:
  _a = a[0]
  _b = a[1:]+b
  _b = _b.strip('0')
  if not len(_b) == 0:
      _b = '.'+_b
  print(_a+_b+'E'+str(e))
else:
    _e = e
    e = -e-1
    _a = b[e]
    _b = b[e+1:]
    if len(_b) != 0:
        _b = '.'+_b
    print(_a+_b+'E'+str(_e))
