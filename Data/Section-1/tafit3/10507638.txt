main =>
  A = read_line(),
  B = read_line(),
  D = new_map(),
  C = 1,
  AS = length(A),
  BS = length(B),
  put(D, [0, 0], 0),
  R = 0,
  while(C <= AS)
    R := R + ord(A[C]) - 96,
    put(D, [C, 0], R),
    C := C+1
  end,
  R := 0,
  C := 1,
  while(C <= BS)
    R := R + ord(B[C]) - 96,
    put(D, [0, C], R),
    C := C+1
  end,
  foreach(J in 1 .. BS)
    foreach(I in 1 .. AS)
      if A[I] = B[J] then
        put(D, [I, J], get(D, [I-1,J-1]))
      else
        M1 = get(D, [I-1, J]) + ord(A[I])-96,
        M2 = get(D, [I, J-1]) + ord(B[J])-96,
        M3 = get(D, [I-1, J-1]) + abs(ord(A[I]) - ord(B[J])),
        put(D, [I, J], min(M1, min(M2, M3)))
      end
    end
  end,
  println(get(D, [AS, BS], 0)).
