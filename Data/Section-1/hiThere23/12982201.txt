#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mp make_pair
#define F first
#define S second
#define mn 100001
#define maxC 2000000000
#define pb push_back
#define bit(x, i) ((x >> (i - 1)) & 1)
#define p2 pair<int, int>
#define p3 pair< p2, int >

using namespace std;
int n, m, ans[mn], re[mn];
vector < p3 > part, actor;
set< p2 > Set;
set< p2 > :: iterator it;

bool comp(p3 a, p3 b)
{
    if (a.F.S == b.F.S)
        return a.F.F < b.F.F;
    return a.F.S < b.F.S;
}

void setup ()
{
    int a, b;
    cin >> n;
    FOR(i, 1, n)
    {
        cin >> a >> b;
        part.pb(mp(mp(a, b), i));
    }
    cin >> m;
    FOR(i, 1, m)
    {
        cin >> a >> b >> re[i];
        actor.pb(mp(mp(a, b), i));
    }
    sort(part.begin(), part.end(), comp);
    sort(actor.begin(), actor.end(), comp);
    Set.clear();
}

void xuly ()
{
    int j = 0, dem = 0;
    FOR(i, 0, m - 1)
    {
        p3 u = actor[i];
        while(j < n && part[j].F.S <= u.F.S)
        {
            Set.insert(mp(part[j].F.F, part[j].S));
            j ++;
        }
        FOR(i, 1, re[u.S])
        {
            it = Set.lower_bound(mp(u.F.F, - 1));
            if (it == Set.end())
                break;
            p2 temp = *it;
            ans[temp.S] = u.S;
            Set.erase(temp);
            dem ++;
        }
    }
    if (dem < n)
    {
        cout << "NO";
        return;
    }
    cout << "YES\n";
    FOR(i, 1, n)
    cout << ans[i] << " ";
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup();
    xuly();
    return 0;
}
