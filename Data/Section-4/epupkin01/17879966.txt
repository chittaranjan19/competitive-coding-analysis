#include <iostream>
#include <climits>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(b, 0, sizeof(arr)); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // getchar(), gets()
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); a - массв, n - кол-во эл-тов
#include <iomanip>      // setw(4), setfill('.'), setprecision(2)
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#include <memory>       // shared_ptr<>, uniqu_ptr<>
#include <iterator>     // ostream_iterator<int, char> our_iter(cout, " ");
#include <set>
#include <map>
#include <list>
#include <queue>
#define SRT srand(int(time(0)))

using namespace std;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
ld pi = 3.14159265358979323;
int ten[8] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};

typedef map<int, int> Map;
typedef Map::iterator mIter;
typedef pair<const int, int> mPair;
typedef pair<int, int> Pair;
typedef set<int> Set;
typedef Set::iterator sIter;
typedef list<int> List;
typedef List::iterator lIter;

const int S = 2001;
ld p[S][S] = {1}, p1, p2;
int n, t;

int main()
{
    cin >> n >> p1 >> t;
    p2 = 1 - p1;
    for (int i = 0; i <= t; ++i)
    {
        for (int j = 0; j <= n; ++j)
        {
            if (j == n)
                p[i + 1][j] += p[i][j];
            else
            {
                p[i + 1][j + 1] += p[i][j] * p1;
                p[i + 1][j] += p[i][j] * p2;
            }
        }
    }
    
    ld ans = 0.0;
    for (int j = 0; j <= n; ++j)
        ans += p[t][j] * j;
    
    cout << fixed << setprecision(18) << ans << '\n';
    return 0;
}