#include<bits/stdc++.h>
using namespace std;

#define lli long long
#define pb push_back
#define mp make_pair
#define gc getchar_unlocked
#define lld "%I64d"
#define DEBUG(x) cout<<">value ("<<#x<<") : "<<x<<endl;
#define mod 1000000007

const int limit = 205;
const int l2 = 100005;
vector<int> d[limit];
vector<int> len;
vector<int> cost;
int cnt[l2];
int sum[l2];

int main(){
    int n,x,mx=0;
    scanf("%d",&n);
    sum[0] = 0;
    for(int i=0;i<n;i++){
        scanf("%d",&x);
        len.pb(x);
        cnt[x]++;
        mx = max(mx,x);
    }
    int total = 0;
    for(int i=0;i<n;i++){
        scanf("%d",&x);
        cost.pb(x);
        total += x;
    }
    for(int i=0;i<n;i++){
        d[cost[i]].pb(len[i]);
        sum[len[i]] += cost[i];
    }
//    for(int i=1;i<=10;i++){
//        cout<<i<<" "<<sum[i]<<endl;
//    }
    int res = INT_MAX;
    for(int i=0;i<limit;i++)
        sort(d[i].begin(),d[i].end());
    for(int h=1;h<=mx;h++){
        int ans = total - sum[h];
        int k = cnt[h];
        int added = 0;
        for(int j=limit-1;j>=0;j--){
            auto it = lower_bound(d[j].begin(),d[j].end(),h);
            int cnt = it - d[j].begin();
            if(added+cnt >= k){
                ans -= (k-1-added)*j;
                break;
            }
            else{
                ans -= cnt*j;
            }
        }
        res = min(res,ans);
    }
    printf("%d\n",res);
    return 0;
}
