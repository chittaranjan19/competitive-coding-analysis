#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <iomanip>
#include <set>
#include <fstream>
#include <numeric>
#include <stdexcept>
#include <cassert>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int s[105], q[105];
int arr[105], arr2[105];
bool can[105];
bool canT[105];

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("D-large.in", "r", stdin);
  //freopen("output.txt", "w", stdout);
  int n, k;
  cin >> n >> k;
  for(int i=0;i<n;i++)
  {
    cin >> q[i];
    q[i]--;
    arr[i] = i;
  }
  for(int i=0;i<n;i++)
  {
    cin >> s[i];
    s[i]--;
  }
  for(int _=0;_<=k;_++)
  {
    bool eq = true;
    for(int j=0;j<n && eq;j++)
      eq = (arr[j] == s[j]);
    can[_] = eq;
    for(int i=0;i<n;i++)
      arr2[q[i]] = arr[i];
    for(int i=0;i<n;i++)
      arr[i] = arr2[i];
  }
  for(int i=0;i<n;i++)
    arr[i] = i;
  for(int _=0;_<=k;_++)
  {
    bool eq = true;
    for(int j=0;j<n && eq;j++)
      eq = (arr[j] == s[j]);
    canT[_] = eq;
    for(int i=0;i<n;i++)
      arr2[i] = arr[q[i]];
    for(int i=0;i<n;i++)
      arr[i] = arr2[i];
  }
  bool test = false;
  if(can[0])
  {
    cout << "NO";
    return 0;
  }
  for(int i=1;i<=k;i++)
  {
    if(can[i])
    {
      int rest = k - i;
      if(rest % 2 == 0)
      {
        if(rest == 0) test = true;
        else if(rest >= 2)
        {
          if(i == 1)
          {
            if(canT[1]) test = false;
            else test = true;
          }
          else test = true;
        }
      }
      break;
    }
  }
  for(int i=0;i<=k;i++)
    swap(can[i], canT[i]);
  for(int i=1;i<=k && !test;i++)
  {
    if(can[i])
    {
      int rest = k - i;
      if(rest % 2 == 0)
      {
        if(rest == 0) test = true;
        else if(rest >= 2)
        {
          if(i == 1)
          {
            if(canT[1]) test = false;
            else test = true;
          }
          else test = true;
        }
      }
      break;
    }
  }
  if(test) cout << "YES";
  else cout << "NO";
  return 0;
}
