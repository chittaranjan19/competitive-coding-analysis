#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
//#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int col[505];
int n,m,mod,c1,c2;

int DP[1005][505];

int solve(int s1,int s2)
{
    if(s1 < 0 || s2 < 0) return 0;
    int &temp = DP[s1][s2];
    if(temp != -1) return temp;
    if(c2 * 2 + c1 - s2 * 2 - s1 == 2 * (n - m)) return 1;
    temp = (solve(s1, s2 - 1) * 1LL * s1 * s2) % mod;
    temp+=(solve(s1 - 2, s2) * 1LL * ((s1 * (s1 - 1)) / 2)) % mod;
    temp%=mod;
    temp+=(solve(s1 + 2, s2 - 2) * 1LL * ((s2 * (s2 - 1)) / 2)) % mod;
    return temp %= mod;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin >> n >> m >> mod;
    for(int i=0;i<n;i++)
        col[i] = 2;
    string input;
    setdp(DP);
    for(int i=0;i<m;i++)
    {
        cin >> input;
        for(int i=0;i<n;i++)
            if(input[i] == '1')
                col[i]--;
    }
    for(int i=0;i<n;i++)
    {
        if(col[i] == 1)
            c1++;
        else if(col[i] == 2) c2++;
    }
    cout << solve(c1, c2);
    return 0;
}