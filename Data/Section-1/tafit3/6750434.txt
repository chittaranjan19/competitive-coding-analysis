import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class PashaMaximizes {
    private PashaMaximizes() throws IOException {
        BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
        String h = rd.readLine();
        String[] q = h.split("\\s+");
        int k = Integer.parseInt(q[1]);
        Map<String, Integer> s = new HashMap<>();
        Set<String> toCheck = new HashSet<>();
        toCheck.add(q[0]);
        int n = q[0].length();
        s.put(q[0],0);
        String best = q[0];
        while(!toCheck.isEmpty()) {
            Set<String> another = new HashSet<>();
            for(String y: toCheck) {
                int costFrom = s.get(y);
                if(costFrom + 1 <= k) {
                    for(int i=0;i<n-1;i++) {
                        String y2 = roll(y,i,i+1);
                        if(y2.compareTo(best) > 0) {
                            best = y2;
                            Integer current = s.get(y2);
                            if(current == null) {
                                s.put(y2, costFrom+1);
                                another.add(y2);
                            } else if(costFrom + 1 < current) {
                                s.put(y2, costFrom+1);
                                another.add(y2);
                            }
                        }
                    }
                }
            }
            toCheck = another;
        }
        out(best);
    }

    private String roll(String s, int from, int to) {
        String res = "";
        if(from > 0) {
            res += s.substring(0,from);
        }
        res += s.substring(to,to+1);
        res += s.substring(from, to);
        res += s.substring(to+1);
        return res;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new PashaMaximizes();
    }
}
