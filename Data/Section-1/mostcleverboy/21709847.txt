program j01;
var q,next:array[0..25000000]of longint;
    head,v,num,a,b,dis,l:array[0..5000]of longint;
    n,m,tt,tot,i,c,k,p,w,qq:longint;

procedure add(u,v:longint);
begin
  inc(tt);
  q[tt]:=v;
  next[tt]:=head[u];
  head[u]:=tt;
end;

procedure swap(var a,b:longint);
var c:longint;
begin
  c:=a;a:=b;b:=a;
end;

function min(a,b:longint):longint;
begin
  if a<b then exit(a) else exit(b);
end;

procedure qsort(l,r:longint);
var i,j,x:longint;
begin
  i:=l;j:=r;x:=a[(i+j)shr 1];
  repeat
    while a[i]<x do inc(i);
    while x<a[j] do dec(j);
    if i<=j then
    begin
      swap(a[i],a[j]);
      swap(b[i],b[j]);
      inc(i);dec(j);
    end;
  until i>j;
  if i<r then qsort(i,r);
  if l<j then qsort(l,j);
end;

function pd(st,len,nm,mon:longint):boolean;
var h,tail,tot,i,j,money,number:longint;
begin
  h:=0;tail:=1;
  fillchar(dis,sizeof(dis),0);
  l[1]:=st;
  tot:=0;
  if num[st]>0 then
  begin
    inc(tot);
    a[tot]:=v[st];
    b[tot]:=num[st];
  end;
  while h<tail do
  begin
    inc(h);
    i:=l[h];
    j:=head[i];
    while j>0 do
    begin
      if (q[j]<>1)and(dis[q[j]]=0)and(dis[i]<len) then
      begin
        dis[q[j]]:=dis[i]+1;
        inc(tail);
        l[tail]:=q[j];
        if num[q[j]]>0 then
        begin
          inc(tot);
          a[tot]:=v[q[j]];
          b[tot]:=num[q[j]];
        end;
      end;
      j:=next[j];
    end;
  end;
  if tot>0 then qsort(1,tot);
  money:=0;
  number:=nm;
  for i:=1 to tot do
  begin
    money:=money+a[i]*min(number,b[i]);
    number:=number-min(number,b[i]);
    if number=0 then break;
  end;
  exit((number=0)and(money<=mon));
end;

function ef(c,nm,mon:longint):longint;
var l,r,mid:longint;
begin
  l:=0;r:=n-1;
  while l<r do
  begin
    mid:=(l+r)shr 1;
    if pd(c,mid,nm,mon) then r:=mid else l:=mid+1;
  end;
  if pd(c,l,nm,mon) then exit(l) else exit(-1);
end;

begin
  readln(n,m);
  fillchar(head,sizeof(head),0);
  fillchar(num,sizeof(num),0);
  tt:=0;
  for i:=1 to m do
  begin
    readln(c,k);
    add(c,k);
    add(k,c);
  end;
  readln(w);
  for i:=1 to w do
  begin
    read(c);
    readln(num[c],v[c]);
  end;
  readln(qq);
  for i:=1 to qq do
  begin
    readln(c,k,p);
    writeln(ef(c,k,p));
  end;
end.
