import java.io.*;
import java.util.*;
import java.math.*;

public class Main implements Runnable {
	int n, m;
	boolean[][] a;
	boolean[] f;
	int[] p, d;
	int ck = 0;
	boolean ok = true;
	void dfs(int v) {
		f[v] = true;
		for (int i=0; i<n; i++)
			if (a[v][i])
				if (!f[i]) { p[i] = v;  dfs(i); } else {
					if (i!=p[v]) {
//						ck++;
//						int j = v;					
//						do {
//							ok &= (d[j]>2);
//							j = p[j];
//							
//						} while (j>=0 && j!=i);
						
					}
				}
	}
	void solve() throws IOException {
		n = nextInt();
		m = nextInt();
		a = new boolean[n][n];
		d = new int[n];
		for (int i=0; i<m; i++) {
			int x = nextInt()-1;
			int y = nextInt()-1;
			a[x][y] = a[y][x] = true;
			d[x]++; d[y]++;
		}
		if (n==m) {
			f = new boolean[n];
			p = new int[n]; p[0] = -1;
			dfs(0);
			for (int i=0; i<n; i++) ok &= f[i];			
			if (ok) {
				out.println("FHTAGN!"); 
				return;
			}
		}
		out.println("NO");
		
		
		
		
	}

	BufferedReader br;
	StringTokenizer st;
	PrintWriter out;

	public void run() {
		try {
			br = new BufferedReader(new InputStreamReader(System.in));
			out = new PrintWriter(System.out);
			// br = new BufferedReader(new FileReader("input.txt"));
			// out = new PrintWriter("output.txt");
			solve();
			br.close();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
			System.exit(123);
		}
	}

	String next() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			String s = br.readLine();
			if (s == null)
				return null;
			st = new StringTokenizer(s,", \t");
		}
		return st.nextToken();
	}

	double nextDouble() throws IOException {
		return Double.parseDouble(next());
	}

	int nextInt() throws IOException {
		return Integer.parseInt(next());
	}

	long nextLong() throws IOException {
		return Long.parseLong(next());
	}

	public static void main(String[] args) {
		new Thread(new Main()).start();
	}
}
