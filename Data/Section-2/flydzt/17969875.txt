#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
int main(int argc, char const *argv[])
{
    int n;
    cin >> n;
    int count = 0;
    int flag = 1;
    vector<pair<int, int>> neg, pos;
    for (int i = 0; i < n; ++i)
    {
        int a, b;
        cin >> a >> b;
        if (a < 0)
            neg.push_back(make_pair(a, b));
        else
            pos.push_back(make_pair(a, b));
    }
    sort(neg.begin(), neg.end());
    sort(pos.begin(), pos.end());
    if (neg.size() < pos.size())
    {
        int res = 0;
        for (int i = 0; i < neg.size(); ++i)
        {
            res += neg[i].second;
            res += pos[i].second;
        }
        res += pos[neg.size()].second;
        cout << res << endl;
    }
    else if (neg.size() > pos.size())
    {
        int res = 0;
        for (int i = 0; i < pos.size(); ++i)
        {
            res += neg[i].second;
            res += pos[i].second;
        }
        res += neg[pos.size()].second;
        cout << res << endl;
    }
    else
    {
        int res;
        for (int i = 0; i < pos.size(); ++i)
        {
            res += neg[i].second;
            res += pos[i].second;
        }
        cout << res << endl;
    }
    return 0;
}