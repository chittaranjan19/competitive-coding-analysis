#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <stack>
#include <algorithm>
#include <cctype>
#include <vector>
#include <queue>
#include <tr1/unordered_map>
#include <cmath>
#include <map>
#include <bitset>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef long double real;
///////////////////////////////UTIL/////////////////////////////////
#define ALL(x) (x).begin(),x.end()
#define CLEAR0(v) memset(v, 0, sizeof(v))
#define CLEAR(v, x) memset(v, x, sizeof(v))
#define INRANGE0(x, n) ((x) > -1 && (x) < n)
#define INRANGE(x, a, b) ((x) >= a && (x) <= b)
#define COPY(a, b) memcpy(a, b, sizeof(a))
#define REP(i,n) for(int i = 0; i<n; i++)
#define REPP(i,a,n) for(int i = a; i<n; i++)
#define REPD(i,n) for(int i = n-1; i>-1; i--)
#define REPDP(i,a,n) for(int i = a; i>-1; i--)
#define pb push_back
#define pf push_front
#define sz size()
#define mp make_pair
/////////////////////////////NUMERICAL//////////////////////////////
#define INCMOD(a,b,c) (((a)+b)%c)
#define DECMOD(a,b,c) ((a)+c-b)%c)
#define ROUNDINT(a) (int)((double)(a) + 0.5)
#define INF 2000000000
/////////////////////////////BITWISE////////////////////////////////
#define CHECK(S, j) (S & (1 << j))
#define CHECKFIRST(S) (S & (-S))  //PRECISA DE UMA TABELA PARA TRANSFORMAR EM INDICE
#define SET(S, j) S |= (1 << j)
#define SETALL(S, j) S = (1 << j)-1  //J PRIMEIROS
#define UNSET(S, j) S &= ~(1 << j)
#define TOOGLE(S, j) S ^= (1 << j)
///////////////////////////////64 BITS//////////////////////////////
#define LCHECK(S, j) (S & (1ULL << j))
#define LSET(S, j) S |= (1ULL << j)
#define LSETALL(S, j) S = (1ULL << j)-1ULL  //J PRIMEIROS
#define LUNSET(S, j) S &= ~(1ULL << j)
#define LTOOGLE(S, j) S ^= (1ULL << j)
//scanf(" %d ", &t);

int n;

int inv(int i){
	return n-i+1; 
}

int main(){
	int p[100100];
	bitset<100100> u;
	int ind, i, v;
	while(cin >> n){
		if(n%4 == 2 || n%4 == 3) cout << -1 << endl;
		else{
			int cnt = (n%4 == 0) ? max(0, n/4-1) : n/4, ad = cnt*2, pos = 0;
			int x = 2, y = (n%4 == 0) ? (cnt+1)*4 : (cnt)*4+1;
			REP(i, ad){
				//cout << " ENTREI AKI " << endl;
				if(pos%2 == 0){
					p[pos++] = x;
					x += 2;
				}
				else{
					p[pos++] = y;
					y -= 2;
				}
			}
			if(n%4 == 1) p[pos++] = cnt*2 + 1;
			else{
				int v[4] = {2, 4, 1, 3};
				REP(i, 4) p[pos++] = v[i] + cnt*2;
			}
			x = 1; y = (n%4 == 0) ? ((cnt+1)*4)-1 : ((cnt)*4);
			REP(i, ad){
				//cout << " ENTREI AKI " << endl;
				if(i%2){
					p[n-1-i] = x;
					x += 2;
				}
				else{
					p[n-1-i] = y;
					y -= 2;
				}
			}
			REP(i, n) cout << p[i] << " ";
			cout << endl;
		}
	}
}






