#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>
#include <fstream>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int acnt[26];
int tmp[26];
int bcnt[26];
int ccnt[26];

int main()
{
  ios_base::sync_with_stdio(0);
  string a, b, c;
  cin >> a >> b >> c;
  for(int i=0;i<a.size();i++) acnt[a[i]-'a']++;
  for(int i=0;i<b.size();i++) bcnt[b[i]-'a']++;
  for(int i=0;i<c.size();i++) ccnt[c[i]-'a']++;
  int c1 = 0, c2 = 0, res = 0;
  for(int i=0;;i++)
  {
    for(int j=0;j<26;j++) tmp[j] = acnt[j];
    bool test = true;
    for(int j=0;j<26;j++)
    {
      tmp[j] -= bcnt[j] * i;
      if(tmp[j] < 0) test = false;
    }
    if(!test) break;
    int t = INF;
    for(int j=0;j<26;j++)
      if(ccnt[j])
        t = min(t, tmp[j] / ccnt[j]);
    if(res < t + i)
      res = t + i, c1 = i, c2 = t;
  }
  for(int i=0;i<c1;i++) cout << b;
  for(int i=0;i<c2;i++) cout << c;
  for(int i=0;i<26;i++)
  {
    acnt[i] -= c1 * bcnt[i] + c2 * ccnt[i];
    while(acnt[i])
    {
      acnt[i]--;
      cout << (char)(i + 'a');
    }
  }
  return 0;
}
