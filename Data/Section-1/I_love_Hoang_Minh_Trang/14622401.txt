#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;
string a, b, z;
int m, n, l;
int f[51][101][101][101], vet[51][101][101][101];

int calc(char x, char y)
{
    if (x == y) return 1;
    else return -1;
}

int duyet(int len, int i, int j, int same)
{
    //cout<<i<<" "<<j<<" "<<same<<" "<<m<<" "<<n<<endl;
    if (same >= l) return 0;
    if (f[len][i][j][same] > -1) return f[len][i][j][same];
    if (i == m + 1 && j == n + 1){
        //cout<<len<<" "<<i<<" "<<j<<" "<<same<<endl;
        if (same < l) return len;
        else return 0;
    }
    //if (i > m + 1|| j > n + 1) return 0;
    int ans = 0;
    if (i <= m && j <= n && a[i] == b[j] && same + calc(a[i], z[same + 1]) < l) {
            ans = max(ans,
                max(len + 1, duyet(len + 1, i + 1, j + 1, max(0, same + calc(a[i], z[same + 1])) ))
                                                    );
    }
    if (i <= m) ans = max(ans, max(len, duyet(len, i + 1, j, same)));
    if (j <= n) ans = max(ans, max(len, duyet(len, i, j + 1, same)));
    f[len][i][j][same] = ans;

    if (i <= m && j <= n && a[i] == b[j] && ans ==
                max(len + 1, duyet(len + 1, i + 1, j + 1, max(0, same + calc(a[i], z[same + 1])) ))
                                                    ) vet[len][i][j][same] = 2;
    else
    if (i <= m && ans == max(len, duyet(len, i + 1, j, same))) vet[len][i][j][same] = 0;
    else
    if (j <= n && ans == max(len, duyet(len, i, j + 1, same))) vet[len][i][j][same] = 1;
    return ans;
}

string res = "";
void trace(int len, int i, int j, int same)
{
    //cout<<len<<" "<<i<<" "<<j<<" "<<same<<endl;
    if (i == m + 1 && j == n + 1) return;
    if (vet[len][i][j][same] == 2){
        res += a[i];
        trace(len + 1, i + 1, j + 1, max(0, same + calc(a[i], z[same + 1])) );
    }
    else
    if (vet[len][i][j][same] == 0){
        trace(len, i + 1, j, same);
    }
    else
    if (vet[len][i][j][same] == 1){
        trace(len, i, j + 1, same);
    }
}

int dp[101][101];

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("346B.inp", "r", stdin);
    freopen("346B.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> a >> b >> z;
    m = a.size(); n = b.size(); l = z.size();
    a = '=' + a;
    b = '=' + b;
    z = '=' + z;
    FORE(i, l + 1, 100) z += '+';
    //cout<<z<<endl;
    //cout<<a<<endl;
    //cout<<b<<endl;
    memset(f, -1, sizeof(f));
    memset(vet, -1, sizeof(vet));
    //cout << duyet(0, 1, 1, 0);
    int ans = duyet(0, 1, 1, 0);
    if (ans == 0){
        cout<<0;
        return 0;
    }
//    cout<<ans<<endl;

    trace(0, 1, 1, 0);
    cout<<res;
    return 0;
}
