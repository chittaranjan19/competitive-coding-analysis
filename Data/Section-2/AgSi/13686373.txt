#include<stdio.h>
#include<string.h>

char data[15][15];
int num[15][15];
int cas=0;
 int m,n;
int ffind (int x,int y)
{
    if(x<0||y<0||x>=m||y>=n||data[x][y]=='*')
        return 0;
    return 1;
}
void dfs(int dx,int dy,char x)
{
    if(cas==1)
        return ;

    num[dx][dy]++;

    if(num[dx][dy]==5)
    {
        cas=1;
        return ;
    }

    if(x=='U')
    {

        if(ffind (dx-1,dy) )
            dfs(dx-1,dy,'U');

        else if(ffind (dx,dy+1) )
            dfs(dx,dy+1,'R');

         else if(ffind (dx+1,dy) )
            dfs(dx+1,dy,'D');

         else if(ffind (dx,dy-1) )
            dfs(dx,dy-1,'L');
    }
       else if(x=='R')
    {

        if(ffind (dx,dy+1) )
            dfs(dx,dy+1,'R');

        else if(ffind (dx+1,dy) )
            dfs(dx+1,dy,'D');

         else if(ffind (dx,dy-1) )
            dfs(dx,dy-1,'L');

         else if(ffind (dx-1,dy) )
            dfs(dx-1,dy,'U');
    }
        if(x=='D')
    {
        if(ffind (dx+1,dy) )
            dfs(dx+1,dy,'D');

        else if(ffind (dx,dy-1) )
            dfs(dx,dy-1,'L');

        else if (ffind (dx-1,dy) )
            dfs(dx-1,dy,'U');

        else if(ffind (dx,dy+1) )
            dfs(dx,dy+1,'R');


    }
        if(x=='L')
    {
        if(ffind (dx,dy-1) )
            dfs(dx,dy-1,'L');

        if(ffind (dx-1,dy) )
            dfs(dx-1,dy,'U');

        else if(ffind (dx,dy+1) )
            dfs(dx,dy+1,'R');

         else if(ffind (dx+1,dy) )
            dfs(dx+1,dy,'D');

    }

    return ;
}


int main ()
{

    while(scanf("%d%d",&m,&n)!=EOF)
    {
        cas=0;
        memset(num,0,sizeof(num));
      int i,j;
      int sx,sy;
      char schar;
      for(i=0;i<m;i++)
      {
         scanf("%s",&data[i]);
         for(j=0;j<n;j++)
         {
             if(data[i][j]=='U'||data[i][j]=='R'||data[i][j]=='D'||data[i][j]=='L')
             {
                 sx=i;
                 sy=j;
             }
         }
      }

      schar=data[sx][sy];
      dfs(sx,sy,schar);


      int ans=0;
      for(i=0;i<m;i++)
        for(j=0;j<n;j++)
         if(num[i][j]>0)
         ans++;

      printf("%d\n",ans);

    }
    return 0;
}
