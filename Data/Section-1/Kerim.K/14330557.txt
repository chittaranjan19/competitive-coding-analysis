#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
/*
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
ordered_set s;
*/
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
PII arr[MAXN];
int main(){
	int a;
	cin>>a;
	vector<int>v,g;
	for(int i=0;i<a;i++)
		cin>>arr[i].ff,arr[i].ss=i;
	sort(arr,arr+a);
	for(int i=0;i<a;i+=2)
		v.pb(arr[i].ss+1);
	for(int i=1;i<a;i+=2)
		g.pb(arr[i].ss+1);
	cout<<v.size()<<endl;
	for(int i=0;i<v.size();i++)
		cout<<v[i]<<" ";
	cout<<endl<<g.size()<<endl;
	for(int i=0;i<g.size();i++)
		cout<<g[i]<<" ";
	cout<<endl;					
	return 0;
}