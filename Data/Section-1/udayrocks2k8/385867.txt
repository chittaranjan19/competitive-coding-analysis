/* understand it at your own risk */
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <deque>
#include <stack>
#include <cmath>
#include <cstdio>
#include <climits>
#include <map>
#include <queue> 
#include <cstring>
using namespace std;
 
#define debug(x) cout << #x << " = " << x << endl
#define si size()
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef vector<bool> vb;
typedef vector<vector<bool> > vvb;
typedef vector<string> vs;
typedef long long ii;
typedef long long i64;
typedef long long intint;
typedef pair<int,int> pii;
#define mod(A,B) ((((A) % (B)) + (B)) % (B))
#define b2e(A) (A).begin(), (A).end()
#define e2b(A) (A).rbegin(), (A).rend()
#define rev(A) std::reverse(b2e(A))
#define s(A) std::sort(b2e(A))
#define ss(A) std::stable_sort(b2e(A))
#define un(A) std::unique(b2e(A))
#define er(A) (A).erase(un(A), (A).end())
#define Fill(A,B) std::fill(b2e(A), B)
#define minelt(A) *min_element(b2e(A))
#define maxelt(A) *max_element(b2e(A))
#define For(i,a,b) for(int i=a;i<b;i++)
#define Forr(i,a,b) for(int i=b;i>=a;i--)
#define set(A,i) memset(A,i,sizeof A)
#define pb(i) push_back(i)
#define INF (1<<30)
void swap(int &a,int &b) { int t=a;a=b;b=t; }
//int dx[] = {-1,0,1,0}, dy[] = {0,1,0,-1};
//int dx[] = {1,1,1,0,0,-1,-1,-1}, dy[] = {1,0,-1,1,-1,1,0,-1};
ii gcd(ii a, ii b) {if (a == 0 || b == 0) return max(a,b); if (b % a == 0) return a; return gcd(b%a, a);}
 
//------------------------------------------------------//

//----------------------main code----------------------//
int main()
{
	int n,m;
	cin>>n>>m;
	vi br(m);
	vvi lr(n);
	For(i,0,n)
	{
		int s;
		cin>>s;
		lr[i].resize(s);
		For(j,0,s)
		cin>>lr[i][j];
	}
	For(i,0,m)
	{
		cin>>br[i];
		br[i]--;
	}
	
	For(i,0,n)
	For(j,1,lr[i].size())
	lr[i][j]+=lr[i][j-1];
	
	vi maxa(n),mini(n);
	For(i,0,n)
	{
		maxa[i]=*max_element(b2e(lr[i]));
		mini[i]=*min_element(b2e(lr[i]));
	}
	vector<int> ians(n);
	long long int ans=-100000000;
	For(i,0,n)
	{
		int mans,mi;
		mans=lr[i][0];mi=0;
		For(j,1,lr[i].size())
		{
			mans=max(lr[i][j]-mi,mans);
			mi=min(mi,lr[i][j]);
		}
		ians[i]=mans;
	}
	For(i,0,m)
	ans=max(ans,(long long int)ians[br[i]]);
	long long int minin=min(0,mini[br[0]]);
	long long int cm=lr[br[0]][lr[br[0]].size()-1];
	For(i,1,m)
	{
		ans=max(ans,maxa[br[i]]+cm-minin);
		minin=min(minin,mini[br[i]]+cm);
		cm+=lr[br[i]][lr[br[i]].size()-1];
	}
	cout<<ans<<endl;
}

