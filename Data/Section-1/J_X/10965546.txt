#include <iostream>
#include <algorithm>

using namespace std;

typedef long long ll;

const int maxn = 5000;

ll a[maxn + 100], b[maxn + 100], dp[maxn +100][maxn + 100];

int main()
{
    int n, m, k;
    while(cin >> n >> m >> k)
    {
        for(int i = 0; i < n; ++i)
        {
            cin >> a[i];
        }
        b[1] = 0;
        for(int i = 0; i < m; ++i)
        {
            b[1] += a[i];
        }
        for(int i = m, j = 1; i < n; ++i, ++j)
        {
            b[j + 1] = b[j] - a[i - m] + a[i];
        }
        dp[0][0] = 0;
        for(int i = 1; i <= n + 1 - m; ++i)
        {
            dp[i][0] = 0;
            for(int j = 1; j <= min(k, (i - 1) / m + 1); ++j)
            {
                int k = max(0, i - m);
                dp[i][j] = max(dp[i - 1][j], dp[k][j - 1] + b[i]);
            }
        }
        cout << dp[n + 1 - m][k] << endl;
    }
    return 0;
}
