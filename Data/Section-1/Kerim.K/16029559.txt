#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN],s[MAXN<<2],rr[MAXN],lazy[MAXN<<2];
void upd(int nd,int v){
	lazy[nd]+=v;
	s[nd]+=v;
}
void shift(int nd){
	if(lazy[nd]==0)
		return;
	upd(nd<<1,lazy[nd]);
	upd(nd<<1|1,lazy[nd]);
	lazy[nd]=0;
}
void inc(int l,int r,int v,int nd,int x,int y){
	if(l>y or x>r)
		return;
	if(l<=x and y<=r){
		upd(nd,v);
		return;
	}
	int mid=(x+y)>>1;
	shift(nd);
	inc(l,r,v,nd<<1,x,mid);
	inc(l,r,v,nd<<1|1,mid+1,y);
	s[nd]=min(s[nd<<1],s[nd<<1|1]);
}
int main(){
	int n,len,h,x,c;
	scanf("%d%d%d",&n,&len,&h);
	for(int i=1;i<=len;i++)
		scanf("%d",arr+i),arr[i]=h-arr[i];
	sort(arr+1,arr+len+1);
	for(int i=1;i<=n;i++){
		scanf("%d",&x);
		rr[i]=(upper_bound(arr+1,arr+len+1,x)-arr)-1;
	}
	for(int i=len;i>=1;i--)	
		inc(1,i,-1,1,1,len);
	for(int i=1;i<=len;i++)
		inc(1,rr[i],1,1,1,len);
	int ans=0;
	if(s[1]==0)
		ans++;	
	for(int i=len+1;i<=n;i++){
		inc(1,rr[i-len],-1,1,1,len);
		inc(1,rr[i],1,1,1,len);
		if(s[1]==0)
			ans++;
	}
	printf("%d\n",ans);
	return 0;
}