import java.util.Scanner;

/**
 * Created by leen on 6/3/16.
 *
 * Codeforces
 */
public class MainC {

    static final long MOD = 1000000007;
    static long[] FACT = new long[1000001];
    static long[] POW = new long[1000001];

    static {
        FACT[0] = 1;
        for(int i = 1; i < FACT.length; i++)
            FACT[i] = (FACT[i - 1] * i) % MOD;

        POW[0] = 1;
        for(int i =1; i <POW.length; i++)
            POW[i] = (POW[i-1] << 1) % MOD;
    }

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        while(scan.hasNext()) {
            int numZeros = calcNumZeros(scan.next());
            long numPairs = 0;
            for(int m = 0; m <= numZeros; m++)
                numPairs = ((C(numZeros, m) * POW[numZeros - m]) % MOD + numPairs) % MOD;

            System.out.println(numPairs);
        }
    }

    static long fastPow(long base, long n) {
        if(n==0)
            return 1;
        if(n==1)
            return base;
        long halfn= fastPow(base, n / 2);
        if(n%2==0)
            return ( halfn * halfn ) % MOD;
        else
            return ( ( ( halfn * halfn ) % MOD ) * base ) % MOD;
    }

    static long findMMIFermat(long n) {
        return fastPow(n, MOD - 2);
    }

    static long C(int n, int m) {
        long numerator = FACT[n];
        long denominator = (FACT[m] * FACT[n-m]) % MOD;
        long mmi_denominator = findMMIFermat(denominator);
        return (numerator * mmi_denominator) % MOD;
    }

    static int calcNumZeros(String base64) {
        int numZeros = 0;
        for(int i = 0; i < base64.length(); i++) {
            char c = base64.charAt(i);

            int value;

            if(c == '-')
                value = 62;
            else if(c == '_')
                value = 63;
            else if(c >= 'a')
                value = (c - 'a') + 36;
            else if(c >= 'A')
                value = (c - 'A') + 10;
            else
                value = c - '0';

            for(int j = 0; j < 6; j++) {
                if((value & 0x1) == 0)
                    numZeros++;
                value >>= 1;
            }
        }
        return numZeros;
    }
}
