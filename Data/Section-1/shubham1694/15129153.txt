#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define ll long long
#define f first
#define s second

typedef pair<int, int> pii;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 5005;

ll dp[maxn][maxn], pref[maxn][maxn];
char str[maxn];
int n;
int cnt[10][maxn], minx[maxn][maxn];

/*
    minx i, j: minimum x s.t (i..(i+x)) < (j..(j+x))
    -1: never happens
*/

ll solve(int prev, int cur)
{
    if(cur>n)
        return 1;
    if(dp[prev][cur]!=-1)
        return dp[prev][cur];
    int i, len, nxt, st;
    ll ret = 0;
    len = cur-prev;
    nxt = cur+len-1;
    if(nxt > n)
        return 0;
    st = nxt+1;
    if(minx[prev][cur]==-1 || minx[prev][cur]>=len)
        st++;
    /*for(i=st; i<=n+1; i++){
        if((i<=n && str[i]!='0') || i>n)
            ret = (ret+solve(cur, i))%mod;
    }*/
    ret = pref[cur][st];
    return dp[prev][cur] = ret;
}

int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    int i, j, l, r, lo, mid, hi, ind, x, y, brk;
    ll temp;
    memset(dp, -1, sizeof(dp));
    scanf("%d%s", &n, str+1);
    for(i=n; i>=1; i--){
        for(j=n; j>i; j--){
            if(str[j] > str[i])
                minx[i][j] = 0;
            else if(str[i] > str[j] || (j+1)>n || minx[i+1][j+1]==-1)
                minx[i][j] = -1;
            else
                minx[i][j] = 1 + minx[i+1][j+1];
        }
    }
    /*for(i=1; i<=n; i++){
        for(j=1; j<=n; j++)
            cout << minx[i][j] << " ";
        cout << "\n\n";
    }*/
    for(i=n; i>=1; i--){
        if(str[i]=='0')
            continue;
        for(j=n+1; j>i; j--){
            temp = solve(i, j);
            pref[i][j] = (pref[i][j+1]+temp)%mod;
            //cout << i << " " << j << " " << temp << "\n";
        }
    }
    ll ans = pref[1][2];
    /*for(i=1; i<=n; i++){
        if((i<n && str[i+1]!='0') || i==n)
            ans = (ans + solve(1, i+1))%mod;
        //cout << ans << "\n";
    }*/

    printf("%lld\n", ans);
    return 0;
}
