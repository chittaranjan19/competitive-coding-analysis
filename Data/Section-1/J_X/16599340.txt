#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

typedef long long ll;

const int maxn = 200000 + 5;

struct point
{
    int x, y;
} p[maxn];

bool cmp1(const point &a, const point &b)
{
    return a.x != b.x ? a.x < b.x : a.y < b.y;
}

bool cmp2(const point &a, const point &b)
{
    return a.y != b.y ? a.y < b.y : a.x < b.x;
}

ll cal(ll len)
{
    return len * (len - 1) / 2;
}

int main()
{
    int n;
    scanf("%d", &n);
    for(int i = 0; i < n; ++i)
    {
        scanf("%d%d", &p[i].x, &p[i].y);
    }
    sort(p, p + n, cmp1);
    ll ans = 0;
    for(int i = 0, j = 0; i < n; i = j)
    {
        while(j < n && p[j].x == p[i].x) ++j;
        ans += cal(j - i);
    }
    for(int i = 0, j = 0; i < n; i = j)
    {
        while(j < n && p[i].x == p[j].x && p[i].y == p[j].y) ++j;
        ans -= cal(j - i);
    }
    sort(p, p + n, cmp2);
    for(int i = 0, j = 0; i < n; i = j)
    {
        while(j < n && p[j].y == p[i].y) ++j;
        ans += cal(j - i);
    }
    printf("%I64d\n", ans);
    return 0;
}
