#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
using namespace std;
typedef __int64 ll;
const int maxn=200000+100;
ll a[maxn],b[maxn];
ll f1[maxn][20],f2[maxn][20];
int n;
const int inf=0xfffffff;
void ST_table()
{
    for(int i=1;i<=n;i++)
    {
        f1[i][0]=a[i];
        f2[i][0]=b[i];
    }
    int nlog=(int)(log(double(n))/log(2.0));
    for(int j=1;j<=nlog;j++)
    {
        for(int i=1;i<=n;i++)
        {
            if(i+(1<<j)-1<=n)
            {
                f1[i][j]=max(f1[i][j-1],f1[i+(1<<(j-1))][j-1]);
                f2[i][j]=min(f2[i][j-1],f2[i+(1<<(j-1))][j-1]);
            }
        }
    }
}
ll RMQma(int l,int r)
{
    int nlog=(int)(log(double(r-l+1))/log(2.0));
    return  max(f1[l][nlog],f1[r-(1<<nlog)+1][nlog]);
}
ll RMQmi(int l,int r)
{
    int nlog=(int)(log(double(r-l+1))/log(2.0));
    return  min(f2[l][nlog],f2[r-(1<<nlog)+1][nlog]);
}
int main()
{
    while(scanf("%d",&n)!=EOF)
    {
        for(int i=1;i<=n;i++)
            scanf("%I64d",&a[i]);
        for(int i=1;i<=n;i++)
            scanf("%I64d",&b[i]);
         ST_table();
        ll ans=0;
        for(int i=1;i<=n;i++)
        {
            if(a[i]>b[i]) continue;
            int l=i,r=n,ansl=i,ansr=n+1;
            while(l<=r)
            {
                int mid=(l+r)>>1;
                if(RMQma(i,mid)>=RMQmi(i,mid))ansl=mid,r=mid-1;//ansl��Ļ���������ȵ�λ��
                else l=mid+1;
            }
            l=i,r=n;
            while(l<=r)
            {
                int mid=(l+r)>>1;
                if(RMQma(i,mid)>RMQmi(i,mid)) ansr=mid,r=mid-1;//ansr�����������ȵ��ұߵ�һ��λ��
                else l=mid+1;
            }
           ans+=ansr-ansl;
        }
        printf("%I64d\n",ans);
    }
}
