#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<vector>
using namespace std;

/*
第i个涂j 美感为k的最小花费
*/
long long dp[105][105][105];
long long mi[105][105][2];
int c[105];
long long hf[105][105];
long long getmin(int i,int j,int k){
    long long m = mi[i][k][0];
    if(dp[i][j][k] == m){
            //printf("getmin(%d,%d,%d) = %I64d\n",i,j,k,mi[i][k][1]);
        return mi[i][k][1];
    }else{
        //printf("getmin(%d,%d,%d) = %I64d\n",i,j,k,m);
        return m;
    }
}
void tomin(int i,int k,long long z){
    if(z<=mi[i][k][0] || mi[i][k][0]==-1){
        mi[i][k][1]=mi[i][k][0];
        mi[i][k][0]=z;
    }else if(z<=mi[i][k][1]|| mi[i][k][1]==-1){
        mi[i][k][1]=z;
    }
}
int main()
{
    int n,m,kk;
    scanf("%d%d%d",&n,&m,&kk);
    for(int i=0;i<n;i++){
        scanf("%d",&c[i]);
    }
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            scanf("%I64d",&hf[i][j]);
        }
    }
    memset(dp,-1,sizeof(dp));
    memset(mi,-1,sizeof(mi));
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            for(int k=0;k<=i && k<kk;k++){

                if(c[i] != 0 && c[i] != j+1){
                    dp[i][j][k] = -1;
                }else{
                    if(i==0){
                        if(c[i]==0){
                            if(k==0)
                                dp[i][j][k] = hf[i][j];
                            else dp[i][j][k] = -1;
                        }else if(c[i]==j+1){
                            if(k==0)
                                dp[i][j][k]=0;
                            else dp[i][j][k]=-1;
                        }
                    }else{
                        if(dp[i-1][j][k] != -1){
                            dp[i][j][k] = dp[i-1][j][k];
                            //printf("~dp[%d][%d][%d] = %I64d\n",i,j,k,dp[i][j][k]);
                        }else  dp[i][j][k] = -1;

                        if(k!=0 && getmin(i-1,j,k-1)!=-1){
                            if(dp[i][j][k]==-1) dp[i][j][k]=getmin(i-1,j,k-1);
                            else dp[i][j][k] = min(dp[i][j][k],getmin(i-1,j,k-1));
                        }

                        if(c[i] ==0 && dp[i][j][k]!=-1){
                            //printf("%I64d + %I64d\n",dp[i][j][k],hf[i][j]);
                            dp[i][j][k] += hf[i][j];
                        }
                    }
                }

                if(dp[i][j][k]!=-1){
                    tomin(i,k,dp[i][j][k]);
                }
                //printf("dp[%d][%d][%d] = %I64d\n",i,j,k,dp[i][j][k]);
            }
        }
    }
    long long ans = -1;
    for(int j=0;j<m;j++){
        if(dp[n-1][j][kk-1] != -1){
            if(ans==-1) ans = dp[n-1][j][kk-1];
            else ans = min(ans,dp[n-1][j][kk-1]);
        }
    }
    printf("%I64d\n",ans);
    return 0;
}
