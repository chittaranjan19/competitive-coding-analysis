#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair

using namespace std;

int DP[100005];

vector<int> res;
int sum,limit;
int DP2[100005];
bool visited[100005];

int gett(int t)
{
    for(int i=0;i<31;i++)
    {
        if(t & (1 << i))
            return (1 << i);
    }
}

int solve(int s)
{
    if(DP2[s] != -1)
        return DP2[s];
    if(s == sum)
    {
        DP2[s] = true;
        return true;
    }
    for(int i=1;i<=limit;i++)
    {
        if(DP[i] + s <= sum && !visited[i])
        {
            visited[i] = true;
            DP2[s + DP[i]] = solve(s + DP[i]);
            if(DP2[s + DP[i]] == 1)
            {
                res.push_back(i);
                return 1;
            }
            else visited[i] = false;
        }
    }
    return -1;
}

int main()
{
    cin >> sum >> limit;
    memset(DP2,-1,sizeof(DP2));
    for(int i=1;i<=limit;i++)
    {
        DP[i] = gett(i);
    }
    if(solve(0) == -1)
        cout << -1;
    else
    {
        cout << res.size() << endl;
        for(int i=0;i<res.size();i++)
            printf("%d ",res[i]);
    }
    return 0;
}
