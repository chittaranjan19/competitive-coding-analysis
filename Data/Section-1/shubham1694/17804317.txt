#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

int d[maxn], prefd[maxn], h[maxn], t[maxn];
ll pts[maxn], pref[maxn], dp[101][maxn];

ll cost(int x, int y)
{
	ll ret = pts[y]*1ll*(y-x+1) - (pref[y]-pref[x-1]);
	return ret;
}

void solve(int curk, int l, int r, int left, int right)
{
	if(l>r)
		return;
	int mid = (l+r)>>1;
	int i, opt_idx;
	ll mincost = 1ll<<50, curcost;
	for(i=left; i<=min(mid, right); i++){
		curcost = dp[curk-1][i-1] + cost(i, mid);
		if(curcost < mincost){
			mincost = curcost;
			opt_idx = i;
		}
	}
	dp[curk][mid] = mincost;
	solve(curk, l, mid-1, left, opt_idx);
	solve(curk, mid+1, r, opt_idx, right);
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int i, j, n, m, p;
	scanf("%d%d%d", &n, &m, &p);
	for(i=2; i<=n; i++){
		scanf("%d", &d[i]);
		prefd[i] = prefd[i-1] + d[i];
	}
	for(i=1; i<=m; i++){
		scanf("%d%d", &h[i], &t[i]);
		pts[i] = t[i] - prefd[h[i]];
	}
	sort(pts+1, pts+m+1);
	for(i=1; i<=m; i++)
		pref[i] = pref[i-1] + pts[i];
	for(i=1; i<=m; i++)
		dp[1][i] = cost(1, i);
	for(i=2; i<=p; i++)
		solve(i, 1, m, 1, m);
	printf("%lld\n", dp[p][m]);
	return 0;
}
