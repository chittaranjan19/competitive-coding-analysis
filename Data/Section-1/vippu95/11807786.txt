#include <bits/stdc++.h>
using namespace std;

#define lli long long
#define pb push_back

const int limit = 200005;
lli l[limit],r[limit];
vector< pair<lli,int> > check;
vector< pair<lli,int> > brd;

int ans[limit];

int main(){
    int n,m;
    memset(ans,-1,sizeof(ans));
    scanf("%d %d",&n,&m);
    for(int i=0;i<n;i++){
        scanf("%lld %lld",&l[i],&r[i]);
    }
    for(int i=0;i<n-1;i++){
        lli mn = l[i+1] - r[i];
        lli mx = r[i+1] - l[i];
        mx = max(mn,mx);
        check.pb({mx,i});
    }
    sort(check.begin(),check.end());
   /*cout<<"Req are \n";
    for(int i=0;i<check.size();i++)
        cout<<check[i].first<<" "<<check[i].second<<endl;*/
    for(int i=0;i<m;i++){
        lli ll;
        scanf("%lld",&ll);
        brd.pb({ll,i});
    }
    sort(brd.begin(),brd.end());
   /*cout<<"Brdiges are \n";
    for(int i=0;i<brd.size();i++)
        cout<<brd[i].first<<" "<<brd[i].second<<endl;*/
    int cur = 0,i=0;
    while(i<check.size() && cur<m){
        int idx = check[i].second;
        lli mn = l[i+1] - r[i];
        if(brd[cur].first >= mn && brd[cur].first<=check[i].first){
            ans[idx] = brd[cur].second;
            cur++;
            i++;
        }
        else if(brd[cur].first<mn){
            cur++;
        }
        else if(brd[cur].first > check[i].first){
            break;
        }
    }
    for(int i=0;i<n-1;i++){
        if(ans[i]==-1){
            printf("No\n");
            return 0;
        }
    }
    printf("Yes\n");
    for(int i=0;i<n-1;i++)
        printf("%d ",ans[i]+1);
    printf("\n");
    return 0;
}
