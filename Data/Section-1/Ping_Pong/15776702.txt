#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int MAX_N = 100000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
    int n;
    cin >> n;
    int a[n];
    for (int i = 0; i < n; i++)
        cin >> a[i];
    int c1 = -1, c2 = -1, c3 = -1;
    for (int i = 0; i < n; i++)
        if (c1 == -1)
            c1 = i;
        else if (a[i] != a[c1])
        {
            if (c2 == -1)
                c2 = i;
            else if (a[i] != a[c2])
                c3 = i;
        }
    if (c2 == -1)
    {
        cout << -1;
        return 0;
    }
    if (c3 == -1 && n <= 2)
    {
        cout << -1;
        return 0;
    }
    if (c3 == -1 && n == 3)
    {
        if (a[0] == a[2])
        {
            cout << -1;
            return 0;
        }
        else
        {
            if (a[0] == a[1])
                cout << 2 << " " << 3;
            else
                cout << 1 << " " << 2;
            return 0;
        }
    }
    if (c3 == -1)
    {
        int f1 = -1, f2 = -1, f3 = -1;
        for (int i = 0; i < n; i++)
            if (a[i] == a[c1] && f1 == -1)
                f1 = i;
        vector<int> v;
        for (int i = 0; i < f1; i++)
            if (a[i] == a[c2])
                v.push_back(i);
        if (v.size() >= 2)
        {
            cout << v[1] + 1 << " " << f1 + 1;
            return 0;
        }
        v.clear();
        for (int i = f1 + 1; i < n; i++)
            if (a[i] == a[c2])
                v.push_back(i);
        if (v.size() >= 2)
        {
            cout << f1 + 1 << " " << v[0] + 1;
            return 0;
        }

        f1 = -1, f2 = -1, f3 = -1;
        for (int i = 0; i < n; i++)
            if (a[i] == a[c2] && f1 == -1)
                f1 = i;
        v.clear();
        for (int i = 0; i < f1; i++)
            if (a[i] == a[c1])
                v.push_back(i);
        if (v.size() >= 2)
        {
            cout << v[1] + 1 << " " << f1 + 1;
            return 0;
        }
        v.clear();
        for (int i = f1 + 1; i < n; i++)
            if (a[i] == a[c1])
                v.push_back(i);
        if (v.size() >= 2)
        {
            cout << f1 + 1 << " " << v[0] + 1;
            return 0;
        }
    }
    if (a[c2] > a[c1] && a[c2] > a[c3])
        cout << c1 + 1 << " " << c3 + 1;
    else if (a[c1] > a[c2] && a[c1] > a[c3])
        cout << c1 + 1 << " " << c2 + 1;
    else if (a[c3] > a[c1] && a[c3] > a[c2])
        cout << c2 + 1 << " " << c3 + 1;
	return 0;
}
