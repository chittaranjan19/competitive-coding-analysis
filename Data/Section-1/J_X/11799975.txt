#include <iostream>
#include <bits/stdc++.h>

using namespace std;

const int maxn = 1e5 + 5;

int a[maxn], b[maxn];
vector<int> v[maxn];

int main()
{
    int n, k;
    while(scanf("%d%d", &n, &k) != EOF)
    {
        int cnt = 0, sum = 0;
        for(int i = 0; i < k; ++i)
        {
            int m;
            scanf("%d", &m);
            for(int j = 0; j < m; ++j)
            {
//                scanf("%d", a + j);
                int x;
                scanf("%d", a + j);
//                a[x] = i;
//                v[i].push_back(x);
            }
            for(int j = 0; j < m - 1; ++j)
            {
                b[a[j]] = a[j + 1];
            }
//            for(int j = 1; j < m; ++j)
//            {
//                if(a[j] - a[j - 1] == 1)
//                {
//                    ++cnt;
//                }
//                else
//                {
//                    break;
//                }
//            }
//            sum += m - 1;
        }
//        priority_queue<int, vector<int>, greater<int> > q;
//        q.push(1);
//        int ans = 0;
//        while(!q.empty())
//        {
//            int p = q.top();
//            q.pop();
//            int o = p + 1;
//            if(o != n && (q.empty() || q.top() != o))
//            {
//                int x = a[o];
//                if(x == a[p])
//                {
//                    q.push(o);
//                    continue;
//                }
//                for(int i = 0; i < v[x].size(); ++i)
//                {
//                    q.push(v[x][i]);
//                }
//                ans += v[x].size();
//            }
//        }
        int ans = 0;
        for(int i = 1; i < n; ++i)
        {
            if(b[i] - i != 1)
            {
                ans += 1;

                if(b[i] != 0)
                {
                    ans += 1;
                }
                if(b[i + 1] != 0)
                {
                    ans += 1;
                }
                b[i + 1] = 0;
            }
        }
        printf("%d\n", ans);
    }
    return 0;
}
