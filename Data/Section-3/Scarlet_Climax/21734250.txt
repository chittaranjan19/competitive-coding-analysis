#include<bits/stdc++.h>
#define maxn 100010
#define mod 1000000007
using namespace std;
typedef long long LL;
#define G c=getchar()
inline LL read()
{
	LL x=0,f=1;char G;
	while(c>57||c<48){if(c=='-')f=-1;G;}
	while(c>47&&c<58)x=x*10+c-48,G;
	return x*f;
}
LL C[6][6]={{1},{1,1},{1,2,1},{1,3,3,1},{1,4,6,4,1},{1,5,10,10,5,1}};
#define ls x<<1
#define rs x<<1|1
int l[maxn*6],r[maxn*6],L,R,K;
LL s[maxn*6][6],tag[maxn],TG,S[maxn][6];
inline void update(const int &x)
{
	for(int i=0;i<=5;i++)s[x][i]=(s[ls][i]+s[rs][i])%mod;
}
inline void ope(const int &x)
{
	tag[x]=tag[x>>1];
	for(int i=0;i<=5;i++)s[x][i]=tag[x]*(S[r[x]][i]-S[l[x]-1][i])%mod;
}
inline void pd(const int &x){if(tag[x])ope(ls),ope(rs),tag[x]=0;}
void add(int x)
{
	if(r[x]<L||R<l[x])return;
	pd(x);
	if(L<=l[x]&&r[x]<=R)
	{
		tag[x]=TG;
		for(int i=0;i<=5;i++)s[x][i]=tag[x]*(S[r[x]][i]-S[l[x]-1][i])%mod;
		return;
	}
	add(ls);add(rs);update(x);
}
LL query(int x)
{
	if(r[x]<L||R<l[x])return 0;pd(x);
	if(L<=l[x]&&r[x]<=R)return s[x][K];
	return (query(ls)+query(rs))%mod;
}
void build(int x,int L,int R)
{
	l[x]=L,r[x]=R,tag[x]=0;
	if(L==R)
	{
		LL w=read()%mod;
		for(int i=0;i<=5;i++)
			s[x][i]=w*(S[R][i]-S[L-1][i])%mod;
		return;
	}
	int mid=L+R>>1;
	build(ls,L,mid);build(rs,mid+1,R);update(x);
}
int main()
{
	int n=read(),m=read();
	for(int i=1,j;i<=n;i++)
		for(S[i][0]=1,j=1;j<=5;j++)
			S[i][j]=S[i][j-1]*i%mod;
	for(int i=1,j;i<=n;i++)
		for(j=0;j<=5;j++)
			S[i][j]=(S[i][j]+S[i-1][j])%mod;
	build(1,1,n);
	while(m--)
	{
		char G;
		while(c!='?'&&c!='=')G;
		if(c=='?')
		{
			L=read(),R=read();int cc=read();LL sum=0,ll=1;
			for(K=cc;K>=0;K--,(ll*=(1-L))%=mod)
				(sum+=ll*query(1)%mod*C[cc][K]%mod)%=mod;printf("%I64d\n",(sum+mod)%mod);
//			for(K=0;K<=cc;K++)printf("%lld ",query(1));puts("");,printf("%lld %lld %lld\n",ll,query(1),C[cc][K])	
		}
		else
		{
			L=read(),R=read(),TG=read();
			add(1);
		}
	}
	return 0;
}
