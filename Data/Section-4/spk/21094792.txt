#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>
#include<queue>
#include<set>
#include<stack>

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define scantype int
#define lli long long int
#define N 100006
#define LSOne(S) (S & (-S))

lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}

using namespace std;

void scan(scantype &x);


int tree[2][N];
lli sum[N];

int query(int b,int t)
{
	int sum = 0;
	for (; b; b -= (b&(-b)) ) sum += tree[t][b];
	return sum;
}

void update(int k, int v,int t) {
	for (; k <= N; k += (k&(-k))) tree[t][k] += v;
}

void rup(int i, int j, int v,int t)	{
	update(i, v,t);
	update(j + 1, -v,t);
}

void cal()
{
      for(int i=1;i<N;i++)
              sum[i] = sum[i]+sum[i-1];
}

set<lli> Set;

int main(void)
{

  int n;
  cin>>n;

  int a[n+1];

  for(int i=1;i<=n;i++)
       {
              scan(a[i]);
              sum[i]=a[i];
       }

  cal();

  Set.insert(sum[n]);

  rup(1,n,1,0);
  rup(1,n,n,1);

  int arr[N];

  for(int i=1;i<=n;i++)
  {
         scan(arr[i]);
  }


  for(int i=1;i<=n;i++)
  {
         int idx=arr[i];

         int left  = query(idx,0);
         int right = query(idx,1);


         lli toDel = sum[right]-sum[left-1];
         Set.erase(toDel);


         if(left<=idx-1)
         rup(left,idx-1,idx-1-right,1);
         if(idx+1<=right)
         rup(idx+1,right,idx+1-left,0);

       

         Set.insert( sum[idx-1] - sum[left-1] );
         Set.insert( sum[right] - sum[idx] );
         lli res;
         if(!Set.empty())
           res = *Set.rbegin();
         else
           res =0;

         printf("%lli\n",res);
  }


  return 0;
}









void scan(scantype &x)
{
    /*register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}*/

    register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
