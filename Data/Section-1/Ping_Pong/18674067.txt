#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>
#include <clocale>

#pragma comment(lib,"psapi")

#define ll long long
#define ld long double

using namespace std;

const ll inf = (ll)2 * 1e9;
const ll MOD = (ll)1e9 + 7;
const ll P = 239;
const ll MAX_N = 500;
const ld pi = 3.1415926535897932384626;
const ld eps = 1e-6;

ll f7(ll x)
{
    ll ans = 0, curr = 1;
    while (x > 0)
    {
        ans = ans + (x % 7) * curr;
        x /= 7;
        curr *= 10;
    }
    return ans;
}

ll fl(ll x)
{
    ll cnt = 0;
    while (x > 0)
    {
        cnt++;
        x /= 10;
    }
    return cnt;
}

ll n, m;
ll ln, lm;
vector<bool> used(7, false);

ll rec(ll x, ll y, ll cnt)
{
    if (cnt == ln + lm)
    {
        if (x < n && y < m)
            return 1;
        else
            return 0;
    }
    ll ans = 0;
    if (cnt < ln)
    {
        for (ll i = 0; i < 7; i++)
            if (!used[i])
            {
                used[i] = true;
                ans += rec(x * 10 + i, y, cnt + 1);
                used[i] = false;
            }
    }
    else
    {
        for (ll i = 0; i < 7; i++)
            if (!used[i])
            {
                used[i] = true;
                ans += rec(x, y * 10 + i, cnt + 1);
                used[i] = false;
            }
    }
    return ans;
}

int main()
{
    //freopen("mutants.in", "r", stdin);
    //freopen("mutants.out", "w", stdout);
    //setlocale(LC_CTYPE, "rus");
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin >> n >> m;
    n = f7(n); m = f7(m);
    ln = fl(n); lm = fl(m);
    if (ln + lm > 7)
    {
        cout << 0;
        return 0;
    }
    cout << rec(0, 0, 0);
    return 0;
}
