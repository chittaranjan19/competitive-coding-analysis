#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const int maxn = 1e3 + 5;

int maze[maxn][maxn], a[maxn][maxn], b[maxn][maxn];

int myhash(int x, int y)
{
    return x * maxn + y;
}

int main()
{
    int n, m, q;
    scanf("%d%d%d", &n, &m, &q);
    for(int i = 1; i <= n; ++i)
    {
        a[i][0] = myhash(i, 1);
        for(int j = 1; j <= m; ++j)
        {
            scanf("%d", &maze[i][j]);
            a[i][j] = myhash(i, j + 1);
            b[i][j] = myhash(i, j - 1);
        }
        b[i][m + 1] = myhash(i, m);
    }
    while(q--)
    {
        int x1, y1, x2, y2, h, w;
        scanf("%d%d%d%d%d%d", &x1, &y1, &x2, &y2, &h, &w);
        for(int i = 0; i < h; ++i)
        {
            int x3 = b[x1 + i][y1] / maxn, y3 = b[x1 + i][y1] % maxn;
            int x4 = b[x2 + i][y2] / maxn, y4 = b[x2 + i][y2] % maxn;
            swap(a[x3][y3], a[x4][y4]);
            swap(b[x1 + i][y1], b[x2 + i][y2]);
            x3 = a[x1 + i][y1 + w - 1] / maxn, y3 = a[x1 + i][y1 + w - 1] % maxn;
            x4 = a[x2 + i][y2 + w - 1] / maxn, y4 = a[x2 + i][y2 + w - 1] % maxn;
            swap(b[x3][y3], b[x4][y4]);
            swap(a[x1 + i][y1 + w - 1], a[x2 + i][y2 + w - 1]);
        }
    }
    for(int i = 1; i <= n; ++i)
    {
        int j = a[i][0];
        while(true)
        {
            int x = j / maxn, y = j % maxn;
            if(y == m + 1) break;
            printf("%d ", maze[x][y]);
            j = a[x][y];
        }
        puts("");
    }
    return 0;
}
