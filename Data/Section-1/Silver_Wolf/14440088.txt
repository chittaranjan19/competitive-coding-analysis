// in the name of allah

#include<bits\stdc++.h>
#define LL long long
#define LB long double
#define ALL(X) X.begin(),X.end()
#define DD(X) cout<<#X<<' '<<X<<endl;
using namespace std;

const int MOD=1000*1000*1000+7;
const int MAXN=500+100;
const int MAXM=200+50;
const int INF=1e9+9;

int dx[4]={0,0,-1,+1};
int dy[4]={+1,-1,0,0};
vector <int> ver[MAXN];
bool vis[MAXN];
long long vi[MAXN],xi[MAXN];
long long ans=0;
long long sum=0;

long long __lcm(long long a,long long b){
	if(!(a && b))cout<<sum,exit(0);
	return a*b/__gcd(a,b);
}

void dfs(int v=0){
	int n=0;
	vis[v]=true;
	for(auto u:ver[v]){
		if(!vis[u]){
			dfs(u);
			vi[v]=__lcm(vi[v],vi[u]);
			xi[v]+=xi[u];
			n++;
		}
	}
	ans+=xi[v];
	if(n!=0)vi[v]*=n;
	xi[v]/=vi[v];
	xi[v]*=vi[v];
	ans-=xi[v];
	if(xi[v]==0)cout<<sum,exit(0);
}

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    int n;
	cin>>n;
	for(int i=0;i<n;i++)vi[i]=1;
	for(int i=0;i<n;i++)cin>>xi[i];
	for(int i=0;i<n;i++)sum+=xi[i];
	int x,y;
	while(cin>>x>>y)ver[x-1].push_back(y-1),ver[y-1].push_back(x-1);
	dfs();
	cout<<ans;
}