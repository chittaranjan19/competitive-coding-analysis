/*
*Rainto96
*Beijing University of Posts and Telecommunications School of Software Engineering
*http://blog.csdn.net/u011775691
*/
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <cstring>
#include <string>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <climits>
#include <sstream>
using namespace std;
#define pb push_back
#define ALL(x) x.begin(),x.end()
#define VINT vector<ll>
#define PII pair<ll,ll>
#define MP(x,y) make_pair((x),(y))
#define LL long long
#define ull unsigned long long
#define MEM0(x)  memset(x,0,sizeof(x))
#define MEM(x,val) memset((x),val,sizeof(x))
#define scan(x) scanf("%I64d",&(x))
#define scan2(x,y) scanf("%I64d%I64d",&(x),&(y))
#define scan3(x,y,z) scanf("%I64d%I64d%I64d",&(x),&(y),&(z))
#define scan4(x,y,z,k) scanf("%I64d%I64d%I64d%I64d",&(x),&(y),&(z),&(k))
#define Max(a,b) a=max(a,b)
#define Min(a,b) a=min(a,b)
#define fuck(x) cout<<#x<<" - "<<x<<endl
#define D(x) (x)*(x)
#define LDB long double
LDB p2p(LDB x1,LDB y1, LDB x2,LDB y2){
    return sqrt(D(x1-x2) + D(y1-y2));
}
#define S second
#define F first
int main(){
    //freopen("C:/OJ/OJ/in.txt","r",stdin);
    LL ax,ay,bx,by,tx,ty;
    cin>>ax>>ay>>bx>>by>>tx>>ty;
    vector<pair<pair<LDB, LL>,LL> > vc;
    LL n;cin>>n;
    LDB A=0;
    for(LL i=0;i<n;i++){
        LL xi,yi;
        scan2(xi,yi);
        A += 2*p2p(xi,yi,tx,ty);
        vc.pb(MP(MP(p2p(ax,ay,xi,yi) - p2p(xi,yi,tx,ty) , i),1) );
//        fuck(vc[vc.size()-1].first);
//        fuck(vc[vc.size()-1].second);
        vc.pb(MP(MP(p2p(bx,by,xi,yi) - p2p(xi,yi,tx,ty) , i),2) );
//        fuck(vc[vc.size()-1].first);
//        fuck(vc[vc.size()-1].second);
    }
    sort(ALL(vc));
    LDB ans = 1e30;
    LL siz = vc.size();
    for(LL i=0;i<min(1000LL, siz) ;i++){
        for(LL j=i+1;j<min(1000LL, siz) ;j++){
            if(vc[i].S != vc[j].S && vc[i].F.S != vc[j].F.S){
                ans = min(ans , A + vc[i].F.F + vc[j].F.F);
            }
        }
    }
    double tans = ans;
    printf("%.10f\n",tans);
    return 0;
}

