#include <iostream>
#include <algorithm>

using namespace std;

const int maxn = 1000 * 1000 + 10;
const int maxx = 10 * 1000 * 1000 + 10;

int n,m,x[maxn],l,r,cnt,a[maxn],b[maxn] , t1,t2 , y[maxx], k = -1;
bool mark[maxx];
long long sum[maxn];

int main(){
    cin >> n;
    for(int i = 0; i < n; ++i){
        cin >> x[i];
        if(x[i] > k)
            k = x[i];
        y[x[i]] ++;
        if(y[x[i]] > 1){
            i --;
            n --;
        }
    }
    for(int i = 2; i <= maxx; ++i){
        if(mark[i]){
            continue;
        }
        b[cnt] += y[i];
        for(int j = 2 * i; j <= maxx; j += i){
            mark[j] = true;
            b[cnt] += y[j]; 
        }
        a[cnt] = i;
        cnt ++;
        if(i > k)
            break;
    }

    sum[0] = 0;
    for(int  i = 1; i <= cnt; ++i){
        sum[i] = sum[i - 1] + b[i - 1];
    }

    cin >> m;
    for(int i = 0;i < m; ++i){
        cin >> l >> r;
        t1 = lower_bound(a,a + cnt,l) - a;
        t2 = upper_bound(a,a + cnt,r) - a;
        cout << sum[t2] - sum[t1] << endl; 
    }
    return 0;
}