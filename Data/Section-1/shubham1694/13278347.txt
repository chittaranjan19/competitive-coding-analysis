#include <bits/stdc++.h>

using namespace std;

int a[2], b[2], c[2];

int main()
{
    //freopen("i.txt", "r", stdin);
    int i, j, k, p1, p2, p3, sum, n, flag;
    double s;
    scanf("%d%d%d%d%d%d", &a[0], &a[1], &b[0], &b[1], &c[0], &c[1]);
    sum = (a[0]*a[1]) + (b[0]*b[1]) + (c[0]*c[1]);
    s = sqrt(sum);
    if(s-(int)s){
        printf("-1\n");
        return 0;
    }
    n = (int)s;
    //cout << n << "\n";
    char grid[n+1][n+1];
    for(i=0; i<=n; i++)
        grid[i][n] = grid[n][i] = '\0';
    flag = 0;
    for(i=0; i<2; i++){
        for(j=0; j<2; j++){
            for(k=0; k<2; k++){
                //cout << i << " " << j << " " << k << " " << a[i]+b[j]+c[k] << " " << a[i^1] << " " << b[i^1] << " " << c[i];
                if(a[i]+b[j]+c[k]==n && a[i^1]==n && b[j^1]==n && c[k^1]==n){
                    flag = 1;
                    //cout << "2\n";
                    for(p1=0; p1<a[i]; p1++){
                        for(p2=0; p2<n; p2++)
                            grid[p2][p1] = 'A';
                    }
                    for(p1=a[i]; p1<a[i]+b[j]; p1++){
                        for(p2=0; p2<n; p2++)
                            grid[p2][p1] = 'B';
                    }
                    for(p1=a[i]+b[j]; p1<n; p1++){
                        for(p2=0; p2<n; p2++)
                            grid[p2][p1] = 'C';
                    }
                }
            }
        }
    }

    if(flag){
        printf("%d\n", n);
        for(i=0; i<n; i++)
            printf("%s\n", grid[i]);
        return 0;
    }
    for(i=0; i<2; i++){
        if(a[i^1]!=n)
            continue;
        for(j=0; j<2; j++){
            for(k=0; k<2; k++){
                if(b[j]!=c[k])
                    continue;
                if(a[i]+b[j]!=n)
                    continue;
                if(b[j^1]+c[k^1]!=n)
                    continue;
                flag = 1;
                for(p1=0; p1<a[i]; p1++){
                    for(p2=0; p2<n; p2++)
                        grid[p2][p1] = 'A';
                }
                for(p1=a[i]; p1<n; p1++){
                    for(p2=0; p2<b[j^1]; p2++)
                        grid[p2][p1] = 'B';
                }
                for(p1=a[i]; p1<n; p1++){
                    for(p2=b[j^1]; p2<n; p2++)
                        grid[p2][p1] = 'C';
                }
            }
        }
    }
    if(flag){
        printf("%d\n", n);
        for(i=0; i<n; i++)
            printf("%s\n", grid[i]);
        return 0;
    }
    for(i=0; i<2; i++){
        if(b[i^1]!=n)
            continue;
        for(j=0; j<2; j++){
            for(k=0; k<2; k++){
                if(a[j]!=c[k])
                    continue;
                if(a[j]+b[i]!=n)
                    continue;
                if(a[j^1]+c[k^1]!=n)
                    continue;
                flag = 1;
                //cout << i << " " << j << " " << k << "\n";
                for(p1=0; p1<b[i]; p1++){
                    for(p2=0; p2<n; p2++)
                        grid[p2][p1] = 'B';
                }
                for(p1=b[i]; p1<n; p1++){
                    for(p2=0; p2<a[j^1]; p2++)
                        grid[p2][p1] = 'A';
                }
                for(p1=b[i]; p1<n; p1++){
                    for(p2=a[j^1]; p2<n; p2++)
                        grid[p2][p1] = 'C';
                }
            }
        }
    }
    if(flag){
        printf("%d\n", n);
        for(i=0; i<n; i++)
            printf("%s\n", grid[i]);
        return 0;
    }
    //cout << "10\n";
    for(i=0; i<2; i++){
        if(c[i^1]!=n)
            continue;
        for(j=0; j<2; j++){
            for(k=0; k<2; k++){
                if(b[j]!=a[k])
                    continue;
                if(c[i]+b[j]!=n)
                    continue;
                if(b[j^1]+a[k^1]!=n)
                    continue;
                flag = 1;
                for(p1=0; p1<c[i]; p1++){
                    for(p2=0; p2<n; p2++)
                        grid[p2][p1] = 'C';
                }
                for(p1=c[i]; p1<n; p1++){
                    for(p2=0; p2<b[j^1]; p2++)
                        grid[p2][p1] = 'B';
                }
                for(p1=c[i]; p1<n; p1++){
                    for(p2=b[j^1]; p2<n; p2++)
                        grid[p2][p1] = 'A';
                }
            }
        }
    }
    if(flag){
        printf("%d\n", n);
        for(i=0; i<n; i++)
            printf("%s\n", grid[i]);
        return 0;
    }
    printf("-1\n");
    return 0;
}