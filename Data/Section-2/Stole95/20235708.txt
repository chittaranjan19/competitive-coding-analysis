import java.util.*;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int N = sc.nextInt();
		
		sc.nextLine();
		
		int[][] mat = new int[N][N];
		
		int indexI = -1;
		int indexJ = -1;
		
		int[] rows = new int[N];
		int[] cols = new int[N];
		int[] diagonal = new int[2];
		
		for(int i = 0 ; i < N ; i++){
			String line = sc.nextLine();
			String[] tmp = line.split(" ");
			
			for(int j = 0 ; j < N ; j++){
				mat[i][j] = Integer.parseInt(tmp[j]);
				if(mat[i][j] == 0){
					indexI = i;
					indexJ = j;
				}
				
				rows[i] += mat[i][j];
				cols[j] += mat[i][j];
				if(i == j) diagonal[0] += mat[i][j];
			}
		}
		
		sc.close();
		
		if(N == 1){
			System.out.println(5);
			System.exit(0);
		}
		
		for(int i = N-1 ; i>=0 ; i--){
			diagonal[1] += mat[N-i-1][i];
		}
		
		int rowValue = -1, colValue = -1;
		if(0 != indexI) rowValue = rows[0];
		else if(1 != indexI) rowValue = rows[1];
		
		if(0 != indexJ) colValue = cols[0];
		else if(1 != indexJ) colValue = cols[1];
		
		if(rowValue != colValue){
			System.out.println(-1);
			System.exit(0);
		}
		
		for(int i = 0 ; i < N ; i++){
			if(i != indexI){
				if(rows[i] != rowValue){
					System.out.println(-1);
					System.exit(0);
				}
			}
			if(i != indexJ){
				if(cols[i] != colValue){
					System.out.println(-1);
					System.exit(0);
				}
			}
		}
		
		if(indexI != indexJ && diagonal[0] != rowValue){
			System.out.println(-1);
			System.exit(0);
		}
		
		if((indexI+indexJ) != (N-1) && diagonal[1] != rowValue){
			System.out.println(-1);
			System.exit(0);
		}
		
		if(rows[indexI] != cols[indexJ]){
			System.out.println(-1);
			System.exit(0);
		}
		else if(indexI == indexJ && diagonal[0] != rows[indexI]){
			System.out.println(-1);
			System.exit(0);
		}
		else if((indexI+indexJ) == (N-1) && diagonal[1] != rows[indexI]){
			System.out.println(-1);
			System.exit(0);
		}
		
		System.out.println(rowValue - rows[indexI]);
	}
}
