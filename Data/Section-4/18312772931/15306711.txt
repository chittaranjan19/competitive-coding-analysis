#include<iostream>
#include<algorithm>
#include<cstring>
#include<string>
#include<vector>
#include<cstdio>
#include<cmath>
#include<set>
using namespace std;
#define CRL(a) memset(a,0,sizeof(a))
typedef  __int64 ll;
#define T 1010
#define mod 1000000007

int c[T][T],n,m;
int vis[T][T];
char s[T][T];

int fx[][2]={{1,0},{0,1},{-1,0},{0,-1}};

bool jugde(int x,int y)
{
    if(x>=0&&x<n&&y>=0&&y<m&&!vis[x][y]&&s[x][y]!='*')
        return true;
    return false;
}

bool jugde1(int x,int y)
{
    if(x>=0&&x<n&&y>=0&&y<m)
        return true;
    return false;
}

int cnt,cc;

vector< pair<int,int> > ve;

void dfs(int x,int y)
{
    for(int i=0;i<4;++i){
        int tx = x + fx[i][0];
        int ty = y + fx[i][1];
        if(jugde(tx,ty)){
            ve.push_back(make_pair(tx,ty));
            cnt++;
            vis[tx][ty]=cc;
            dfs(tx,ty);
        }
    }
}

int main()
{
#ifdef zsc
    freopen("input.txt","r",stdin);
#endif

    int i,j,k,ma;
    while(~scanf("%d%d",&n,&m))
    {
        cc = 0;
        for(i=0;i<n;++i){
            for(j=0;j<m;++j){
                c[i][j] = 1;
                vis[i][j]=0;
                scanf("\n%c",&s[i][j]);
            }
        }
        for(i=0;i<n;++i){
            for(j=0;j<m;++j){
                if(!vis[i][j]&&s[i][j]=='.'){
                    cc++;
                    vis[i][j] = cc;
                    cnt = 1;
                    dfs(i,j);
                    for(int f=0;f<ve.size();++f)
                    {
                        c[ve[f].first][ve[f].second] = cnt;
                    }
                    ve.clear();
                    c[i][j] = max(cnt,1);
                }
            }
        }

        for(i=0;i<n;++i){
            for(j=0;j<m;++j){
                if(s[i][j]!='.'){
                    k = 0;
                    int Down=i+1,Up=i-1,Left=j-1,Right=j+1;
                    if(Up>=0&&s[Up][j]=='.')k+=c[Up][j];

                    if(Down<n&&s[Down][j]=='.'&&
                        (!jugde1(Up,j)||vis[Down][j]!=vis[Up][j])
                    )k+=c[Down][j];

                    if(Left>=0&&s[i][Left]=='.'&&
                        (!jugde1(Up,j)||vis[Up][j]!=vis[i][Left])&&
                        (!jugde1(Down,j)||vis[Down][j]!=vis[i][Left])
                        )k+=c[i][Left];

                    if(Right<m&&s[i][Right]=='.'&&
                        (!jugde1(Up,j)||vis[Up][j]!=vis[i][Right])&&
                        (!jugde1(Down,j)||vis[Down][j]!=vis[i][Right]&&
                        (!jugde1(i,Left)||vis[i][Left]!=vis[i][Right]))
                        )k+=c[i][Right];
                    
                    printf("%d",(k+1)%10);
                }
                else {
                    printf(".");
                }
            }
            printf("\n");
        }
    }

    return 0;
}