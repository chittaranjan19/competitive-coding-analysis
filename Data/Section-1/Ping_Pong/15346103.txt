#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <unordered_set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int MAX_N = 1000000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

bool e[MAX_N + 1];
int pref[MAX_N + 1];

int main()
{
    ifstream ifs("input.in");
    ofstream ofs("output.out");
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int a, b, k;
    cin >> a >> b >> k;
    for (int i = 0; i <= MAX_N; i++)
        e[i] = true;
    e[0] = false;
    e[1] = false;
    for (int i = 2; i * i <= MAX_N; i++)
        if (e[i])
            for (int j = i * i; j <= MAX_N; j += i)
                e[j] = false;
    pref[0] = 0;
    for (int i = 0; i <= MAX_N; i++)
        pref[i] = pref[i - 1] + e[i];
    int l = 0, r = b - a + 1 + 1, mid;
    while (r - l > 1)
    {
        mid = (l + r) / 2;
        bool boo = true;
        for (int i = a; i <= b - mid + 1; i++)
            if (pref[i + mid - 1] - pref[i - 1] < k)
            {
                boo = false;
                break;
            }
        if (boo)
            r = mid;
        else
            l = mid;
    }
    cout << (r <= (b - a + 1) ? r : -1);
    return 0;
}