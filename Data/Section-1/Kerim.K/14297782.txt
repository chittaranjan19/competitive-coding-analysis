#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
/*
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
ordered_set s;
*/
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
ll arr[5][3009],dp[5][3009];
ll tap(int n,int h){
	if(n==0)
		return arr[h][n];
	if(dp[h][n]!=-1)	
		return dp[h][n];
	return dp[h][n]=max(tap(n-1,0)+arr[h+1][n],arr[h][n]+tap(n-1,1));	
}
int main(){
	int a,maxi=0;
	cin>>a;
	for(int i=0;i<3;i++)
		for(int j=0;j<a;j++)
			cin>>arr[i][j],dp[i][j]=-1;
	cout<<tap(a-1,0)<<endl;				
	return 0;
}
