#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define lg(x) ceil(log2(x))
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int d[309][309],dp[309][309],n,m,k;
int main(){
	for(int i=0;i<309;i++)
		for(int j=0;j<309;j++)
			dp[i][j]=INF,d[i][j]=INF;
	cin>>n>>m>>k;
	while(m--){
		int l,r,c;
		cin>>l>>r>>c;
		for(int i=l;i<=r;i++)
			umin(d[l][i],c);
	}
	dp[0][0]=0;
	for(int r=1;r<=n;r++)
		for(int h=0;h<=k;h++){
			umin(dp[r][h],dp[r-1][h]);
			for(int i=0;i<h;i++)
				if(r-i>0 && h-i>0)
					dp[r][h]=min(dp[r][h],d[r-i][r]+dp[r-i-1][h-i-1]);
		}
	if(dp[n][k]==INF)
		dp[n][k]-=INF+1;	
	cout<<dp[n][k]<<endl;		
	return 0;
}
