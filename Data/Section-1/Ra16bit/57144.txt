#include <cstdio>
#include <cmath>
#include <algorithm>
using namespace std;
int t,x1,yy1,x2,y2,x3,y3,x4,y4,x5,y5,x6,y6;
long long s,v;
long double d1,d2,d3,d4,d5,d6,eps=1e-8;
int main() {
  scanf("%d",&t);
  while (t--) {
    scanf("%d%d%d%d",&x1,&yy1,&x2,&y2);
    scanf("%d%d%d%d",&x3,&y3,&x4,&y4);
    scanf("%d%d%d%d",&x5,&y5,&x6,&y6);
    if (x1==x3 && yy1==y3) {} else if (x1==x4 && yy1==y4) {
      swap(x3,x4); swap(y3,y4);
    } else if (x1==x5 && yy1==y5) {
      swap(x3,x5); swap(y3,y5);
      swap(x4,x6); swap(y4,y6);
    } else if (x1==x6 && yy1==y6) {
      swap(x3,x6); swap(y3,y6);
      swap(x4,x5); swap(y4,y5);
    } else {
      swap(x1,x2); swap(yy1,y2);
      if (x1==x3 && yy1==y3) {} else if (x1==x4 && yy1==y4) {
        swap(x3,x4); swap(y3,y4);
      } else if (x1==x5 && yy1==y5) {
        swap(x3,x5); swap(y3,y5);
        swap(x4,x6); swap(y4,y6);
      } else if (x1==x6 && yy1==y6) {
        swap(x3,x6); swap(y3,y6);
        swap(x4,x5); swap(y4,y5);
      } else {
        swap(x1,x5); swap(yy1,y5);
        swap(x2,x6); swap(y2,y6);
        if (x1==x3 && yy1==y3) {} else if (x1==x4 && yy1==y4) {
          swap(x3,x4); swap(y3,y4);
        } else {
          swap(x1,x2); swap(yy1,y2);
          if (x1==x3 && yy1==y3) {} else if (x1==x4 && yy1==y4) {
            swap(x3,x4); swap(y3,y4);
          } else { puts("NO"); continue; }
        }
      }
    }
    s=((long long)(x2-x1))*(x4-x3)+((long long)(y2-yy1))*(y4-y3);
    v=((long long)(x2-x1))*(y4-y3)-((long long)(x4-x3))*(y2-yy1);
    if (s>=0 && v!=0) {
      d1=sqrt(double(((long long)(x2-x5))*(x2-x5)+((long long)(y2-y5))*(y2-y5)));
      d2=sqrt(double(((long long)(x5-x1))*(x5-x1)+((long long)(y5-yy1))*(y5-yy1)));
      d3=sqrt(double(((long long)(x2-x1))*(x2-x1)+((long long)(y2-yy1))*(y2-yy1)));
      if (fabs(d1+d2-d3)<eps) {
        d4=sqrt(double(((long long)(x3-x6))*(x3-x6)+((long long)(y3-y6))*(y3-y6)));
        d5=sqrt(double(((long long)(x6-x4))*(x6-x4)+((long long)(y6-y4))*(y6-y4)));
        d6=sqrt(double(((long long)(x3-x4))*(x3-x4)+((long long)(y3-y4))*(y3-y4)));
        if (fabs(d4+d5-d6)<eps && d1<4*d2+eps && d2<4*d1+eps && d4<4*d5+eps && d5<4*d4+eps) puts("YES"); else puts("NO");
      } else {
        d1=sqrt(double(((long long)(x2-x6))*(x2-x6)+((long long)(y2-y6))*(y2-y6)));
        d2=sqrt(double(((long long)(x6-x1))*(x6-x1)+((long long)(y6-yy1))*(y6-yy1)));
        d3=sqrt(double(((long long)(x2-x1))*(x2-x1)+((long long)(y2-yy1))*(y2-yy1)));
        d4=sqrt(double(((long long)(x3-x5))*(x3-x5)+((long long)(y3-y5))*(y3-y5)));
        d5=sqrt(double(((long long)(x5-x4))*(x5-x4)+((long long)(y5-y4))*(y5-y4)));
        d6=sqrt(double(((long long)(x3-x4))*(x3-x4)+((long long)(y3-y4))*(y3-y4)));
        if (fabs(d1+d2-d3)<eps && fabs(d4+d5-d6)<eps && d1<4*d2+eps && d2<4*d1+eps && d4<4*d5+eps && d5<4*d4+eps) puts("YES"); else puts("NO");
      }
    } else puts("NO");
  }
  return 0;
}
