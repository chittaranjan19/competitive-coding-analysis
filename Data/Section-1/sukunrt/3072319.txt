#include<iostream>
#include<sstream>
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<bitset>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
using namespace std;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define ALL(c) (c).begin(),(c).end()
#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;
int total[1000005];

int main(){
  int k;
  scanf("%d", &k);
  string str;
  cin >> str;
  int n = str.length();
 
  for (int i = 0; i < n; i++){
    if(str[i] == '1'){
      total[i] = total[i-1] + 1;
    }
    else
      total[i] = total[i-1];
    //     cout << i << " " << total[i] << endl;
  }
  int prev = 1;
  long long cnt = 0;
  for(int i = 0; i < n; i++){
    if(total[i] == k){
      cnt++;
    }
  }
  for (int i = 1; i < n; ++i){
    if (total[i] - total[prev-1] == k){
      cnt++;
      if(str[prev] == '0'){
        int p = prev;
        while(str[prev] == '0' && prev <= i){
          prev++;
          cnt++;
        }
      
        prev = p;
      }
    }
    else if(total[i] - total[prev-i] > k){
      //      cout << i << "i " << prev << " prev " << endl;
      prev++;
      while(total[i] - total[prev-i] > k) prev++;
      cnt++;
      if(str[prev] == '0'){
        int p = prev;
        while(str[prev] == '0' && prev <= i){
          prev++;
          cnt++;
        }
       prev = p;
      }
    }
  }
      
   

  cout <<cnt << endl;
  return 0;
}
      
        
        
      
      



                            
    
  
