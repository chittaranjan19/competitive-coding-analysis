#include <stdio.h>

int partition(int a[],int p,int q){
        int x=a[p];
        
        int i=p,j;
        for(j=p+1;j<q;j++){
            int t=0;
            if(a[j]<=x){
                i++;
                t=a[i];
                a[i]=a[j];
                a[j]=t;
            }
        }
        a[p]=a[i];
        a[i]=x;
        return i;
    }

void quicksort(int a[],int p,int q){
        if(p<q){
        int r= partition(a,p,q);
        quicksort(a,p,r);
        quicksort(a,r+1,q);
        }
        
    }
int main(void) {
	int n;
	scanf("%d\n",&n);
	int arr[n];
	int i,yes=1;
	for(i=0;i<n;i++)scanf("%d",&arr[i]);
	quicksort(arr,0,n);
	if((arr[0]+arr[n-1])%2==1){yes=0;}
	else{
	    int mid=(arr[0]+arr[n-1])/2;
	    int key=mid-arr[0];
	    for(i=1;i<n/2;i++){
	        if(arr[i]==mid&&arr[n-1-i]==mid){break;}
	        else if(arr[i]!=mid&&arr[n-1-i]==mid){yes=0;break;}
	        else if(arr[i]==mid&&arr[n-1-i]!=mid){yes=0;break;}
	        if((arr[i]+arr[n-1-i])%2==1){yes=0;break;}
	        else{
	            int er=(arr[i]+arr[n-1-i])/2;
	            if(er!=mid){yes=0;break;}
	            if((er-arr[i])!=key){yes=0;break;}
	        }
	    }
	    if(n%2==1&&arr[n/2]!=mid){yes=0;}
	    
	}
	if(yes==1)printf("YES");
	else printf("NO");
	return 0;
}

