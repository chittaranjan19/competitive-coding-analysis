#include <iostream>
#include <set>
#include <vector>
using namespace std;
int main(){
    multiset<long long int>a;
   long long  int n,hh;
    cin>>n;
    string cmd;
    vector<string>command;
    vector<int>ins;
    for(int i = 0; i<n; ++i){
    	cin>>cmd;
    	if(cmd=="removeMin"){
    		a.erase(a.begin());
    		command.push_back(cmd);
    	}
    	else{
    		cin>>hh;
    		ins.push_back(hh);
    	}
    	if(cmd=="insert"){
    		a.insert(hh);
    		command.push_back(cmd);
    	}
    	if(cmd=="getMin"){
    		command.push_back(cmd);
    	}
	}
	if(*a.begin()<hh){
    			while(a.size()>0&&*a.begin()<hh){
    				command.push_back("removeMin");
    			//	for(multiset<int>::iterator it = a.begin(); it!=a.end(); ++it){
    				//	cout<<*it<<" ";
    			//	}
    				a.erase(a.begin());
    			}
    			if(a.size()==0){
    				command.push_back("insert");
    				ins.push_back(hh);
    			}
    			command.push_back(cmd);
    			cout<<command.size()<<endl;
    			for(int i = 0; i<command.size(); ++i){
    				cout<<command[i]<<" ";
    				if(command[i]!="removeMin"){
    					if(i>=ins.size()){
    						cout<<ins[ins.size()-1];
    					}
    					else cout<<ins[i];
    				}
    				cout<<endl;
    				}
    				return 0;
    			}
    		else if(*a.begin()>hh){
    			cout<<n+1<<endl;
    			for(int i = 0; i<n; ++i){
    				cout<<command[i]<<" ";
    				if(command[i]!="removeMin"){
    					if(i>=ins.size()){
    						cout<<ins[ins.size()-1];
    					}
    					else cout<<ins[i];
    				}
    				cout<<endl;
    			}
    			cout<<"insert "<<hh<<endl;
    			cout<<"getMin "<<hh;
    			return 0;
    		}
    		else{
    			command.push_back(cmd);
    			cout<<n<<endl;
    			for(int i = 0; i<n; ++i){
    				cout<<command[i]<<" ";
    				if(command[i]!="removeMin"){
    					cout<<ins[i];
    				}
    				cout<<endl;
    			}
    		}
}