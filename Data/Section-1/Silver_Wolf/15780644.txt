//INOG
//how many problem are you solve ?!
#include<bits/stdc++.h>
using namespace std;

#define mp make_pair
#define ll long long
#define int long long
#define lb long double
#define pb(x) push_back(x)
#define all(x) x.begin(),x.end()

const long long MAXN=3e3+7;
const long long MAXM=1e3;
const long long MOD=1610612741;
const long long INF=1e15+5040;


bool vis[MAXN][MAXN];
int par[MAXN][MAXN];
queue<pair<int,int> > q;
vector<int> ver[MAXN];
set<pair<pair<int,int>,int> > wrong;

main(){
    int n,m,k;
    cin>>n>>m>>k;
    for(int i=0;i<m;i++){
    	int a,b;
        cin>>a>>b;
        ver[a].push_back(b);
        ver[b].push_back(a);
    }
    while(k--){
    	int a,b,c;
        cin>>a>>b>>c;
        wrong.insert(mp(mp(a,b),c));
    }
    
    int x,y;
    q.push(mp(0,1));
    while(!q.empty()){
        x=q.front().first;
        y=q.front().second;
        if(y==n) break;
        q.pop();
        for(auto tmp:ver[y])
            if(!vis[y][tmp] && wrong.find(mp(mp(x,y),tmp))==wrong.end()){
                vis[y][tmp]=true;
                par[y][tmp]=x;
                q.push(mp(y,tmp));
            }
        
    }
    if(q.empty()){
        cout<<-1<<endl;
        return 0;
    }
    vector<int> ans;
    ans.push_back(y);
    while(x!=0){
        ans.push_back(x);
        int tmp = par[x][y];
        y= x;
        x=tmp;
    }
    reverse(ans.begin(),ans.end());
    cout<<ans.size()-1<<endl;
    for(auto res:ans)
        cout<<res<<' ';
    return 0;
}
