#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 2e5 + 10, lg = 2;
ll mod = 1e9 + 7;

int gcd(int a, int b) {
	return b ? gcd(b, a % b) : a;
}

int c(int k, int n){
	int nm = 1, dm = 1;
	while (k){
		nm *= n;
		dm *= k;
		n--, k--;
	}
	return nm / dm;
}

int n, m, p;
int a[1100][1100];
vector<pair<int, int> > snd[N];
vector<int> ans[N];

int main()
{	
	cin >> n >> m >> p;
	for (int i = 0; i < n; i++){
		for (int j = 0; j < m; j++){
			cin >> a[i][j];
			snd[a[i][j]].push_back(mp(i, j));
			ans[a[i][j]].push_back(1e9);
		}
	}
	snd[0].push_back(mp(0, 0));
	ans[0].push_back(0);

	for (int i = 0; i < p; i++){
		for (int j = 0; j < snd[i].size(); j++){
			for (int k = 0; k < snd[i + 1].size(); k++){
				pair<int, int> from, to;
				from = snd[i][j], to = snd[i + 1][k];
				int dx = abs(from.fs - to.fs), dy = abs(from.sc - to.sc);
				ans[i + 1][k] = min(ans[i + 1][k], ans[i][j] + dx + dy);
			}
		}
	}

	cout << ans[p][0];
	return 0;
}