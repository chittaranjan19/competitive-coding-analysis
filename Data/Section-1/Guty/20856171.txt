#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>
#include <valarray>

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 


#define forn(i,n) for(tint i=0;i<(tint)(n); i++)
#define forsn(i,s,n) for(tint i=(s);i<(tint)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl



using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint toNumber (string s)
{
	tint Number;
	if ( ! (istringstream(s) >> Number) )
		Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (tint number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}


struct Digito
{
	tint numero;
	bool cambio;
	Digito (tint nn, bool cc)
	{
		numero  = nn;
		cambio = cc;
	}
};


int main()
{
	#ifdef ACMTUYO
		assert(freopen("entrada.in", "r", stdin));
	#endif
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	tint n,t;
	while (cin >> n >> t)
	{
		string s;
		cin >> s;
		if (n == 1)
			cout << s << "\n";
		else
		{
			tint punto = 0;
			vector<tint> a (n-1);
			forn(i,n)
			{
				if (s[i] == '.')
					punto = i;
				else if (punto == 0)
					a[i] = s[i]-'0';
				else
					a[i-1] = s[i]-'0';
			}
			//imprimirVector(a);
			bool flag = true;
			for (tint i = n-2; i > 0; i--)
			{
				if (a[i] == 10)
				{
					a[i] = -1;
					a[i-1]++;
				}
				else if (t > 0)
				{
					if (a[i] >= 5 && i >= punto)
					{
						a[i] = -1;
						a[i-1]++;
						t--;
						if (i == punto)
							flag = false;
					}
					else if (a[i] <= 4)
						break;
				}
				else
					break;
			}
			
			
			
			//cout << "- --- - " << endl;
			//imprimirVector(a);
			forn(i,punto)
			{
				if (a[i] >= 0)
					cout << a[i];
				else
					flag = false;	
			}
			if (flag)
			{
				cout << ".";
				forsn(i,punto,n-1)
					if (a[i] >= 0)
						cout << a[i];
			}
			cout << "\n";
		}
		
		
	}
	return 0;
}



