#include <bits/stdc++.h>
#define mp make_pair
#define pb push_back
#define problem "test"
typedef long long ll;
typedef long double ld;
typedef unsigned int ui;
typedef unsigned long long ull;
const int z = 20022;
const double eps = 1e-9;
const int inf = int(1e9);
const ll llinf = ll(1e18);
using namespace std;

string s[z], t[z];
int n;
map <string, vector <ui>> cnt;
inline void low(string &s)
{
    for (ui i = 0; i < s.size(); i++)
        if (isupper(s[i]))
            s[i] = tolower(s[i]);
}
inline void parse(ui i)
{
    ui sz = s[i].size();
    for (ui j = 0; j < sz; j++)
    {
        if (isupper(s[i][j]))
            t[i] += tolower(s[i][j]);
        else
            t[i] += s[i][j];
    }
}
int main()
{
    cin.tie(0);
    ios_base::sync_with_stdio(0);
//  freopen(problem".in", "r", stdin);
//  freopen(problem".out", "w", stdout);
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cin >> s[i];
        ui sz = s[i].size();
        if (sz > 10)
        {
            string tmp = s[i].substr(s[i].size() - 10, 10);
            low(tmp);
            if (tmp == "@bmail.com")
            {
                int haveplus = 0, haveat = 0;
                for (ui j = 0; j < sz; )
                {
                    if (s[i][j] == '+')
                        haveplus = 1;
                    if (s[i][j] == '@')
                        haveat = 1;
                    
                    if (!haveat && (haveplus|| s[i][j] == '.'))
                        j++;
                    else
                    {
                        if (isupper(s[i][j]))
                            t[i] += tolower(s[i][j]);
                        else
                            t[i] += s[i][j];
                        j++;
                    }
                }
            }
            else
                parse(i);
        }
        else
            parse(i);
        cnt[t[i]].pb(i);
//      cout << t[i] << "\n";
    }
    cout << cnt.size() << "\n";
    for (map <string, vector <ui>> :: iterator it = cnt.begin(); it != cnt.end(); it++)
    {
        vector <ui> tmp = (*it).second;
        cout << tmp.size() << " ";
        for (ui i = 0; i < tmp.size(); i++)
            cout << s[tmp[i]] << " ";
        cout << "\n";
    }
    return 0;
}