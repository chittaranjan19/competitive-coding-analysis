#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 100001
#define pb push_back
#define mp make_pair
#define F first
#define S second

using namespace std;
int n, a[mn], pos[mn], all[mn], r = 0;
vector< pair<int, int> > sw;
bool prime[mn];

void buildPrime()
{
    FOR(i, 2, mn - 1)
    if (!prime[i])
    {
        for(int t = i * 2; t < mn; t += i)
            prime[t] = true;
        all[++ r] = i;
    }
}

void setup()
{
    buildPrime();
    cin >> n;
    FOR(i, 1, n)
    {
        cin >> a[i];
        pos[a[i]] = i;
    }
}

int binary(int x)
{
    int le = 0, ri = r + 1;
    while(ri - le > 1)
    {
        int g = ((le + ri) >> 1);
        if (all[g] <= x)
            le = g;
        else
            ri = g;
    }
    return all[le];
}

void xuly ()
{
    FOR(i, 1, n)
    {
        while(pos[i] > i)
        {
            int dif = pos[i] - i + 1;
            int oldPos = pos[i];
            int val = binary(dif);
            int newPos = pos[i] - val + 1;
            swap(a[newPos], a[oldPos]);
            pos[a[newPos]] = newPos;
            pos[a[oldPos]] = oldPos;
            sw.pb(mp(newPos, oldPos));
        }
    }
    cout << sw.size() << '\n';
    FOR(i, 0, int(sw.size()) - 1)
        cout << sw[i].F << ' ' << sw[i].S << '\n';
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
