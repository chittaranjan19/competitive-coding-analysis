//in the name of GOD
//<MohammadJavad Akbari />

#include<bits/stdc++.h>
using namespace std;

//#define mp make_pair
#define int long long
#define ld long double
#define all(x) x.begin(),x.end()
#define endl '\n'
#define MohammadJA main

const long long MAXN=1e5+100;
const long long MAXM=3e3;
const long long MOD=1610612741;
const long long mod=1e9+7;
const long long INF=1e15+5040;
const long long MAX_LOG=19;

const int dx[4]={1,-1,0,0};
const int dy[4]={0,0,-1,1};

int par[MAXN][MAX_LOG+1];
int vup[MAXN][MAX_LOG+1];
int vdn[MAXN][MAX_LOG+1];
int dis[MAXN];

vector<int>ver[MAXN];
map<pair<int,int>,bool>m;

void dfs(int v=1,int pa=0,int d=0){
    par[v][0]=pa;
    dis[v]=d;
    for(auto u:ver[v])
        if(u!=pa)dfs(u,v,d+1);
}

void build(){
	for(int i=1;i<MAX_LOG;i++)
		for(int j=0;j<MAXN;j++)
			par[j][i]=par[par[j][i-1]][i-1];		
}

int ipar(int v,int x){
    for(int i=0;x>0;i++){
        if(x%2)v=par[v][i];
        x/=2;
    }
    return v;
}

void idn(int x, int y){
	if(dis[x]>dis[y])swap(x,y);
	int z=dis[y]-dis[x];
	
	for(int i=0; z!=0 ;i++){
        if(z%2)vdn[y][i]++,y=par[y][i];
        z/=2;
    }
}

void iup(int x, int y){
	if(dis[x]>dis[y])swap(x,y);
	int z=dis[y]-dis[x];
	
	for(int i=0; z!=0 ;i++){
        if(z%2)vup[y][i]++,y=par[y][i];
        z/=2;
    }
}

int lca(int x,int y){
    if(dis[x]>dis[y])swap(x,y);
    y=ipar(y,dis[y]-dis[x]);
    if(y==x)return x;
    for(int i= MAX_LOG-1;i>=0;i--)
		if(par[x][i]-par[y][i])
			x=par[x][i],y=par[y][i];
	return par[x][0];
}

MohammadJA(){
	/*ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);*/
	
	int n,k;
	cin>>n;
	for(int i=1;i<n;i++){
		int x,y,z;
		cin>>x>>y>>z;
		m[{x,y}]=z;
		ver[x].push_back(y);
		ver[y].push_back(x);
	}
	dfs();
	build();
	
	cin>>k;
	k--;
	int x; cin>>x;
	while(k--){
		int y; cin>>y;
		if(x==y)continue;
		if(lca(x,y)==x)
			idn(x,y);
		else if(lca(x,y)==y)
			iup(x,y);
		else{
			int z=lca(x,y);
			iup(x,z);
			idn(y,z);
		}
		
		x=y;
	}
	
	for(int i=MAX_LOG-1; i!=0;i--)
		for(int j=1;j<=n;j++){
			vdn[j][i-1]+=vdn[j][i];
			vdn[par[j][i-1]][i-1]+=vdn[j][i];
			
			vup[j][i-1]+=vup[j][i];
			vup[par[j][i-1]][i-1]+=vup[j][i];
			/*if(vdn[0][i-1] || vup[0][i-1])
				cout<<i<<' '<<j<<'\n';*/
		}
		
	/*for(int i=1;i<=n;i++)
		cout<<i<<" : "<<vdn[i][0]<<' '<<vup[i][0]<<'\n';*/
	int ans=0;
	for(int i=2;i<=n;i++){
		ans+=m[{par[i][0],i}]*((1<<vdn[i][0])-1);
		ans+=m[{i,par[i][0]}]*((1<<vup[i][0])-1);
	}
	cout<<ans;
}
