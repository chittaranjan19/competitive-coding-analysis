#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <map>

const int drct[4][2] = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};

int n, m, x, y;
char s[100005];
bool map[505][505];

std::map<char, int> turn;

int main() {
    turn['U'] = 0, turn['D'] = 1, turn['L'] = 2, turn['R'] = 3;
    
    scanf("%d%d%d%d", &n, &m, &x, &y);
    scanf("%s", s + 1);
    int len = strlen(s + 1);
    int cnt = n * m;
    
    printf("1 "); map[x][y] = 1; cnt--;
    for (int i = 1; i < len; i++) {
        int tmp = turn[s[i]];
        int xx = x + drct[tmp][0], yy = y + drct[tmp][1];
        if (xx >= 1 && xx <= n && yy >= 1 && yy <= m) {
            if (!map[xx][yy]) {
                printf("1 "); cnt--; map[xx][yy] = 1;
            }
            else printf("0 ");
            x = xx, y = yy;
        }
        else printf("0 ");
    }
    printf("%d", cnt);
    
    return 0;
}