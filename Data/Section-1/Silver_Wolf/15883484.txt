//INOG
//how many problem are you solve ?!
#include<bits/stdc++.h>
using namespace std;

#define mp make_pair
#define ll long long
#define int long long
#define lb long double
#define pb(x) push_back(x)
#define all(x) x.begin(),x.end()

const long long MAXN=1e6+7;
const long long MAXM=1e3;
const long long MOD=1610612741;
const long long INF=1e15+5040;
const int dx[4]={1,-1,0,0};
const int dy[4]={0,0,-1,1};

map<pair<pair<int,int>,pair<int,int>>,bool>m;
int w,h,n;
int size[MAXN];
bool vis[MAXM][MAXM];

void dfs(int x,int y,int cnt){
	size[cnt]++;
	vis[x][y]=true;
	for(int i=0;i<4;i++){
		int nx=x+dx[i];
		int ny=y+dy[i];
		if(nx>=0 && ny>=0 && nx<w && ny<h && !m[mp(mp(x,y),mp(nx,ny))] && !vis[nx][ny])dfs(nx,ny,cnt);
	}
}

main(){
    cin>>w>>h>>n;
    for(int i=0;i<n;i++){
    	int x1,x2,y1,y2;
    	cin>>x1>>y1>>x2>>y2;
    	if(x1==x2)
    		for(int i=min(y1,y2);i<max(y1,y2);i++){
    			m[mp(mp(x1-1,i),mp(x1,i))]=true;
    			m[mp(mp(x1,i),mp(x1-1,i))]=true;
    		}
    		
    	if(y1==y2)
    		for(int i=min(x1,x2);i<max(x1,x2);i++){
    			m[mp(mp(i,y1-1),mp(i,y1))]=true;
    			m[mp(mp(i,y1),mp(i,y1-1))]=true;
    		}
    }
    int cnt=0;
    for(int i=0;i<n;i++)
    	for(int j=0;j<n;j++)
    		if(!vis[i][j])dfs(i,j,cnt++);
    int sum=0;
    for(int i=0;i<n;i++)sum+=size[i];
    size[cnt]=w*h-sum;
    sort(size,size+n+1);
    for(int i=0;i<n+1;i++)cout<<size[i]<<' ';
}
