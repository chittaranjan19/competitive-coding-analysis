#pragma comment(linker, "/STACK:1024000000,1024000000")
#include <bits/stdc++.h>
using namespace std;
const int N = 5e5 + 10, INF = 0x3f3f3f3f, MOD = 1e9 + 7;
int n;
vector<int> G[N];
void dfs(int u, int fa, int dep, vector<int>& d) {
    if(G[u].size() == 1) {
        d.push_back(dep);
        return;
    }
    int v;
    vector<int>::iterator it;
    for (it = G[u].begin(); it != G[u].end(); it++)
//    for(int v :  G[u])
    {
    	v = *it;
    	if(v != fa) dfs(v, u, dep + 1, d);
    }
//	    if(v != fa) dfs(v, u, dep + 1, d);
}

int main() {
    while(scanf("%d", &n) == 1) {
        for(int i = 1; i <= n; ++i) G[i].clear();
        for(int i = 1; i < n; ++i) {
            int u, v; scanf("%d%d", &u, &v);
            G[u].push_back(v);
            G[v].push_back(u);
        }
        int ans = 0;
        int v;
   		vector<int>::iterator it;
   		for (it = G[1].begin(); it != G[1].end(); it++)
//        for(int v : G[1])
		{
			v = *it;
            vector<int> d;
            dfs(v, 1, 1, d);
            sort(d.begin(), d.end());
            for(int i = 1; i < d.size(); ++i)
                d[i] = max(d[i], d[i - 1] + 1);
            ans = max(ans, d.back());
        }
        printf("%d\n", ans);
    }
    return 0;
}