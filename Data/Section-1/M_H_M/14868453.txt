//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 1000 + 100;

int n;
ld a[N][N];
ld e[N];
ld p[N];
vector <pair<ld, int> > v;

bool cmp(pair<ld, int> u, pair<ld, int> v){
	if(u.X / (1. - p[u.Y]) < v.X / (1. - p[v.Y])) return true;
	return false;
}

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> n;
	for(int i = 0; i < n; ++i)
		for(int j = 0; j < n; ++j)
			cin >> a[i][j], a[i][j] /= 100;
	for(int i = 0; i < n; ++i){
		e[i] = 1.;
		p[i] = 1.;
		if(i == n - 1) e[i] = 0., p[i] = 0.;
		v.PB(MP(e[i], i));
	}
	sort(v.begin(), v.end());
//	reverse(v.begin(), v.end());
	for(int i = 0; i < n; ++i){
		int k = v[i].Y;
//		cerr << "bug : " << k << "\n";
		e[k] /= (1 - p[k]);
		for(int j = i + 1; j < n; ++j){
			int t = v[j].Y;
			e[t] += p[t] * a[t][k] * (e[k]);
//			cerr << t << " " << e[t] << " \n";
			p[t] *= (1. - a[t][k]);
			v[j] = MP(e[t], t);
		}
		sort(v.begin() + i + 1, v.end(), cmp);
	}
	cout << fixed << setprecision(9) << e[0] << "\n";
	return 0;
}
