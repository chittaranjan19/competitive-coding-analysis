// Almost Prime

#include <algorithm>
#include <bits/stdc++.h>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

int prime[1000];

int isPrime(int n)
{
	int flag=0;
	for(int i=3;i<=sqrt(n);i+=2)
	{
		if(n%i==0) {flag=1; break;}
	}
	if(flag==0) return 1;
	else return 0;
}

int main()
{
	int n,ans=0,i,j,l,k,m,flag;
	cin>>n;
	if(n<=2) cout<<"0"<<endl;
	else
	{
		prime[0]=2;
		l=1;
		for(i=3;i<=n/2;i+=2)
		{
			if(isPrime(i)) prime[l++]=i;
		}
		for(i=6;i<=n;i++)
		{
			for(j=0;j<l-1;j++)
			{
				if(i%prime[j]==0)
				{
					for(k=j+1;k<l;k++)
					{
						if(i%prime[k]==0)
						{
							flag=0;
							for(m=k+1;m<l;m++)
							{
								if(i%prime[m]==0)
								{
									flag=1;
									break;
								}
							}
							if(flag==1) break;
							ans++;
						}
					}
					if(flag==1) break;
				}
			}
		}
		cout<<ans<<endl;
	}
	return 0;
}