#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) find((v).begin(),(v).end(),(x)) - (v).begin()

typedef long long tint;

using namespace std;

struct tupla4
{
	int fst,snd,thrd,frth;
	
};

tupla4 tupla(int a, int b, int c, int d)
{
	tupla4 x;
	x.fst = a;
	x.snd = b;
	x.thrd = c;
	x.frth = d;
	return x;
	
}

int lugar(tupla4 x, int y)
{
	if (y == 0)
		return x.fst;
	if (y == 1)
		return x.snd;
	if (y == 2)
		return x.thrd;
	if (y == 3)
		return x.frth;
	else 
		return -999; // No me bancaba el warning
}

tupla4 suma(tupla4 x, tupla4 y)
{
	tupla4 s;
	s.fst = x.fst + y.fst;
	s.snd = x.snd + y.snd;
	s.thrd = x.thrd + y.thrd;
	s.frth = x.frth + y.frth;
	return s;
}

tupla4 mult(tupla4 x, int a)
{
	tupla4 s;
	s.fst = x.fst * a;
	s.snd = x.snd * a;
	s.thrd = x.thrd * a;
	s.frth = x.frth * a;
	return s;
}

int main()
{
	int n;
	cin >> n;
	vector <int> a (n);
	forn(i,n)
		cin >> a[i];
	sort(a.begin(),a.end());
	vector<tupla4> v;
	tupla4 t1 = tupla(1,1,3,3);
	tupla4 t2 = tupla(1,2,2,3);
	vector<int> printList;
	bool termine = false;
	forn(alfa, a[0]+1)
		forn(beta,a[0]+1-alfa)
			v.push_back(suma(mult(t1,alfa),mult(t2,beta)));
	forn(i,v.size())
	{
		vector<int> flag(4,-1);
		int j = 0;
		while (j < n)
		{
			int r = 0;
			while (r < 4)
			{	
				if (a[j] == lugar(v[i],r))
				{
					flag[r] = a[j];
					j++;
				}
				r++;
			}
			j++;		
		}
		if (count(flag.begin(),flag.end(),-1) == 4 - n)
		{
			if (not termine)
			{
			forn(r,4)
				if (flag[r] == -1)
					printList.push_back(lugar(v[i],r));
			termine = true;
			}
			
		}		
	}
	if (termine)
	{
		cout << "YES" << endl;
		forn(i, printList.size())
			cout << printList[i] << endl;
	}
	else
		cout << "NO" << endl;
	return 0;
}


