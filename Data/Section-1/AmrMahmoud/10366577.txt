#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <stdexcept>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

set<int> vcut, hcut;
map<int, int> mv, mh;

int main()
{
  ios_base::sync_with_stdio(0);
  int w, h, q, x;
  cin >> w >> h >> q;
  char in;
  vcut.insert(0);
  vcut.insert(w);
  hcut.insert(0);
  hcut.insert(h);
  mv[w] = 1;
  mh[h] = 1;
  while(q--)
  {
    cin >> in >> x;
    if(in == 'H')
    {
      set<int>::iterator it = hcut.lower_bound(x);
      set<int>::iterator it2 = it;
      it2--;
      mh[*it - *it2]--;
      if(mh[*it - *it2] == 0)
        mh.erase(*it - *it2);
      mh[*it - x]++;
      mh[x - *it2]++;
      hcut.insert(x);
    }
    else
    {
      set<int>::iterator it = vcut.lower_bound(x);
      set<int>::iterator it2 = it;
      it2--;
      mv[*it - *it2]--;
      if(mv[*it - *it2] == 0)
        mv.erase(*it - *it2);
      mv[*it - x]++;
      mv[x - *it2]++;
      vcut.insert(x);
    }
    map<int, int>::iterator it = mv.end();
    it--;
    LL res = it->first;
    it = mh.end();
    it--;
    res*= it->first;
    cout << res << "\n";
  }
  return 0;
}