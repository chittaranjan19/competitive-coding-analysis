#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mp make_pair
#define F first
#define S second
#define pb push_back
#define mn 100005
#define maxC 2000000000

using namespace std;
int n, m;
pair<int, int> e[mn], p[mn], q[mn];
bool mark[mn];
map< pair<int, int> , int > Map;

bool checkE(int u, int v)
{
    int x = min(u, v);
    int y = max(u, v);
    return Map[mp(x, y)];
}

void setup()
{
    int b, r = 0;
    cin >> n >> m;
    FOR(i, 1, m)
    {
        cin >> p[i].F >> b;
        p[i].S = i;
        if (b)
            q[++ r] = p[i];
    }
    sort(q + 1, q + r + 1);
    sort(p + 1, p + m + 1);
    FOR(i, 1, r)
        e[q[i].S] = mp(i, i + 1), mark[q[i].S] = true, Map[mp(i, i + 1)] = 1;
    int last, v = 4;
    mark[0] = true;
    FOR(i, 1, m)
    {
        if (mark[p[i].S])
        {
            last = i;
            break;
        }
        if (v > n)
        {
            cout << -1;
            return;
        }
        e[p[i].S] = mp(2, v);
        Map[mp(2, v)] = 1;
        v ++;
    }
    int up = 2, down = 1;
    FOR(i, last + 1, m + 1)
    if (mark[p[i].S])
    {
        up ++;
        down ++;
        int le = down - 2;
        int ri = up + 2;
        FOR(j, last + 1, i - 1)
        {
            int u = p[j].S;
            while(le > 0 && checkE(le, down))
                le --;
            if (le > 0)
            {
                e[u] = mp(le, down);
                Map[mp(le, down)] = 1;
            }
            else
            {
                while(ri <= n && checkE(up, ri))
                    ri ++;
                if (ri <= n)
                {
                    e[u] = mp(up, ri);
                    Map[mp(up, ri)] = 1;
                }
                else
                {
                    cout << -1;
                    return;
                }
            }
        }
        last = i;
    }
    FOR(i, 1, m)
        cout << e[i].F << ' ' << e[i].S << '\n';
}

void xuly ()
{

}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
