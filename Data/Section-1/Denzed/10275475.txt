#include <iostream>
#include <cstdio>
#include <vector>

using namespace std;

vector<vector<int> > mass;
vector<vector<int> > new_mass;

void rotation(){
    vector<int> mass1;
    for(int i = 0; i < mass[0].size(); i++){
        for(int j = mass.size() - 1; j >= 0; j--){
            mass1.push_back(mass[j][i]);
        }
        new_mass.push_back(mass1);
        mass1.clear();
    }
}

void turn(){
    mass.clear();
    vector<int> mass1;
    /*for(vector<int> &shit : mass) {
        shit.clear();
    }*/
    for(int i = 0; i < new_mass.size(); i++){
        for(int j = new_mass[0].size() - 1; j >= 0; j--){
            mass1.push_back(new_mass[i][j]);
        }
        mass.push_back(mass1);
        mass1.clear();
    }
}

void scaling(){
    new_mass.clear();
    int h = mass[0].size();
    vector<int> mass1((2 * h), 0);
    for(int i = 0; i < mass.size() * 2; i++){
        new_mass.push_back(mass1);
    }
    for(int i = 0; i < mass.size(); i++){
        for(int j = 0; j < mass[0].size(); j++){
            new_mass[2 * i][2 * j] = mass[i][j];
            new_mass[2 * i + 1][2 * j] = mass[i][j];
            new_mass[2 * i][2 * j + 1] = mass[i][j];
            new_mass[2 * i + 1][2 * j + 1] = mass[i][j];
        }
    }
}

int main()
{
    //freopen("i.in", "r", stdin);
    //freopen("o.out", "w", stdout);
    int w, h;
    cin >> w >> h;
    vector<int> mass1;
    char c;
    for(int i = 0; i < h; i++){
        for(int j = 0; j < w; j++){
            cin >> c;
            if(c == '*'){
                mass1.push_back(1);
            }
            else{
                mass1.push_back(0);
            }
        }
        mass.push_back(mass1);
        mass1.clear();
    }
    rotation();
    turn();
    scaling();
    for(int i = 0; i < new_mass.size(); i++){
        for(int j = 0; j < new_mass[0].size(); j++){
            if(new_mass[i][j] == 1){
                cout << '*';
            }
            else{
                cout << '.';
            }
        }
        cout << endl;
    }

    return 0;
}
