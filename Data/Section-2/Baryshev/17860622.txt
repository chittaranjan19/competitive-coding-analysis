#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
#include <fstream>
#include <tuple>
#include <iomanip>

#include <unordered_set>
#include <unordered_map>

#pragma warning(disable: 4101)
using namespace std;

#define forn(i,n) for (int i = 0; i < int(n); ++i)
#define for1(i,n) for (int i = 1; i < int(n); ++i)
#define ford(i,n) for (int i = int(n) - 1; i >= 0; --i)
#define fore(i,l,r) for (int i = int(l); i <= int(r); ++i)
#define all(a) a.begin(), a.end()
#define sz(a) (int(a.size()))
#define mp make_pair
#define pb push_back
#define ft first
#define sc second
#define g(a,b) get<a> (b)

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pt;

const double pi = acos(-1.0);
const int INF = 1000000000;
const int MAX = 100007;
const int MAX2 = 2000000;
const int inf = (int) 1e9 + 5;
const long long mod =  1e9 + 7;
const int BASE = 10;
const int ST = 1000003;
const int CNT = 100;
const double eps=1e-9;
const long long base = 2204234849;
const long long l_inf = (long long) 4e18;
const int logn = 30;

int main()
{
#if 0
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif

#if 1
    cout << setprecision(20) << fixed;
#endif
    long long ax,ay,bx,by,tx,ty;
    double otv=0;
    long long key=0;
    cin >> ax>> ay >> bx >> by >> tx >> ty;
    long long n,x,y;
    cin >> n;
    long long w[1000001]={0,};
    long long start[1000001][2];
    double ww[1000001];
    pair<double,int> a[1000001], b[1000001], t[1000001];
    forn(i, n)
    {
        cin >> x >> y;
        start[i][0]=x;start[i][1]=y;
        ww[i]=sqrt((tx-x)*(tx-x) +(ty-y)*(ty-y));
        t[i]=mp((tx-x)*(tx-x) +(ty-y)*(ty-y),i);
    }
    sort(t, t+n);
    for (int i=n-1;i>=0;i--)
    {
        if ((ax-start[t[i].sc][0])*(ax-start[t[i].sc][0]) +(ay-start[t[i].sc][1])*(ay-start[t[i].sc][1]) <
            (bx-start[t[i].sc][0])*(bx-start[t[i].sc][0]) +(by-start[t[i].sc][1])*(by-start[t[i].sc][1]))
        {
        //cout << t[i].sc << "a ";
        otv+=sqrt((ax-start[t[i].sc][0])*(ax-start[t[i].sc][0]) +(ay-start[t[i].sc][1])*(ay-start[t[i].sc][1])) + ww[t[i].sc];
                ax=tx;ay=ty;
        }
        else
        {
            //cout << t[i].sc << "b ";
        otv+=sqrt((bx-start[t[i].sc][0])*(bx-start[t[i].sc][0]) +(by-start[t[i].sc][1])*(by-start[t[i].sc][1])) + ww[t[i].sc];
                bx=tx;by=ty;
        }
    }
    cout << otv;
return 0;
}
