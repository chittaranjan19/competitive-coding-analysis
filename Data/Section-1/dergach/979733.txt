#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <iostream>
#include <vector>
#include <string>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
#include <time.h>
using namespace std;

char s[100005], a[100005], b[100005], sum[100005], res[2][100005];
int N, i, j, k, cnt[2][22], cnt0, start, stor[2][22], maxv;

int main()
{
    gets(s);
    N = strlen(s);
    for(i = 0; i < N; i++)
    {
        cnt[0][s[i]-48]++;
        cnt[1][s[i]-48]++;
        stor[0][s[i]-48]++;
        stor[1][s[i]-48]++;
    }

    for(j = 1; j <= 9; j++)
    {
        start = 0;
        for(i = 0; i < 10; i++)
            for(k = 0; k < 2; k++) 
                cnt[k][i] = stor[k][i];

        if(cnt[0][j] > 0 && cnt[1][10-j] > 0)
        {
            cnt[0][j]--;
            cnt[1][10-j]--;
            a[start] = j;
            b[start++] = 10 - j;
        }

        for(k = 0; k <= 9; k++)
        {
            while(cnt[0][k] > 0 && cnt[1][9-k] > 0)
            {
                a[start] = k;
                b[start] = 9 - k;
                cnt[0][k]--;
                cnt[1][9-k]--;
                start++;
            }
        }
        cnt0 = 0;
        if(cnt[0][0] > 0 && cnt[1][0] > 0)
        {
            for(i = start - 1 + cnt[0][0]; i >= cnt[0][0]; i--)
            {
                a[i] = a[i-cnt[0][0]];
                b[i] = b[i-cnt[0][0]];
            }
            for(i = 0; i < cnt[0][0]; i++)
                a[i] = b[i] = 0;
            start += cnt[0][0]; 
        }

        i = 1;
        k = start;
        while(i <= 9)
        {
            if(cnt[0][i] > 0)
            {
                cnt[0][i]--;
                a[k++] = i;
            }
            if(cnt[0][i] == 0)
                i++;
        }
        k = start;
        i = 1;
        while(i <= 9)
        {
            if(cnt[1][i] > 0)
            {
                cnt[1][i]--;
                b[k++] = i;
            }
            if(cnt[1][i] == 0)
                i++;
        }


        bool vse = false;
        sum[0] = 0;
        for(i = 0; i < N; i++)
        {
            sum[i+1] = (sum[i] + a[i] + b[i]) / 10;
            sum[i] = (sum[i] + a[i] + b[i]) % 10;
            if(sum[i] != 0)
                vse = true;
            if(!vse)
                cnt0++;
        }
        if(cnt0 > maxv)
        {
            maxv = cnt0;
            for(i = 0; i < N; i++)
            {
                res[0][i] = a[i];
                res[1][i] = b[i];
            }
        }
    }
    for(i = N - 1; i >= 0; i--)
        printf("%d", res[0][i]);
    printf("\n");
    for(i = N - 1; i >= 0; i--)
        printf("%d", res[1][i]);
    printf("\n");
    return 0;
}