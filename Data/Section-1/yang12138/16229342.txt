/*
    ━━━━━┒
    ┓┏┓┏┓┃让老子先跳！
    ┛┗┛┗┛┃＼○／
    ┓┏┓┏┓┃ //
    ┛┗┛┗┛┃ノ)
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┃┃┃┃┃┃
    ┻┻┻┻┻┻
*/
#include <cstdio>
#include <iostream>
#include <cstring>
#include <string>
#include <algorithm>
#include <cctype>
#include <stack>
#include <map>
#include <set>
#include <iomanip>
#include <cstdlib>
#include <queue>
#include <ctime>
#include <cmath>
using namespace std;
typedef long long ll;
const ll mod=1e9+7;
ll quick_pow(int x,int n)
{
    ll ans=1;
    ll num=x;
    while(n)
    {
        if(n%2) (ans*=num)%=mod;
        (num*=num)%=mod;
        n/=2;
    }
    return ans;
}
int main()
{
    int p,k;
    while(scanf("%d%d",&p,&k)!=EOF)
    {
        if(k==0) printf("%I64d\n",quick_pow(p,p-1));
        else if(k==1) printf("%I64d\n",quick_pow(p,p));
        else
        {
            int m=1;
            ll temp=k;
            for(;m<p;m++)
            {
                if(temp==1) break;
                (temp*=k)%=p;
            }
            int n=(p-1)/m;
            printf("%I64d\n",quick_pow(p,n));
        }
    }
    return 0;
}












