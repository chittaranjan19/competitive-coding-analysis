
// Vineet Mehta---
#include <bits/stdc++.h>
#define forn(i, n) for(int i = 0; i < int(n); i++)
#define form(i,b) for(int i=1;i<=b;i++)
#define lli long long
#define mp make_pair
#define pi pair<int,int>
#define pli pair<lli,lli>
#define pb push_back
#define x first
#define y second
#define sl(x) scanf("%I64d",&x)
#define pl(x) printf("%I64d\n",x)
#define sf(x) sort(x.begin(),x.end(),func)
#define s(x) sort(x.begin(),x.end())
#define all(v) v.begin(),v.end()
#define r(v) {reverse(all(v));}


const double EPS = 1e-24;
const lli mod = 1000000007ll;
const lli mod1 = 1000000009ll;
const lli mod2 = 1100000009ll;
const double PI = 3.14159265359;
int INF = 2147483645;
lli INFINF = (lli)1e15;

using namespace std;
template <class T>T Max2(T a,T b){return a<b?b:a;}
template <class T>T Min2(T a,T b){return a<b?a:b;}
template <class T>T Max3(T a,T b,T c){return Max2(Max2(a,b),c);}
template <class T>T Min3(T a,T b,T c){return Min2(Min2(a,b),c);}
template <class T>T Max4(T a,T b,T c,T d){return Max2(Max2(a,b),Max2(c,d));}
template <class T>T Min4(T a,T b,T c,T d){return Min2(Min2(a,b),Max2(c,d));}
template <class T>void swap(T &a, T &b){ T c = b; b = a; a = c;}

lli bit_count(lli _x){lli _ret=0;while(_x){if(_x%2==1)_ret++;_x/=2;}return _ret;}
lli bit(lli _mask,lli _i){return (_mask&(1<<_i))==0?0:1;}
lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}
lli add(lli a,lli b,lli m){lli x=a+b;while(x>=m)x-=m;return x;}
lli sub(lli a,lli b,lli m){lli x=a-b;while(x<0)x+=m;return x;}
lli mul(lli a,lli b,lli m){lli x=a*b;x%=m;return x;}

typedef vector< int > vi;
typedef vector< lli > vli;
typedef vector< vi > vvi;
typedef vector< vli > vvli;
int gr[51][51]={0},visit[51][51]={0},visit1[51][51]={0};
string s[51];

int sz,n,m,k,f;
void dfs(int i, int j){
	visit[i][j]=1;
	sz++;
	if(!i || !j || (i==n-1 )||( j==m-1 )) {f = -1;return;}
	if(gr[i+1][j] && !visit[i+1][j]) dfs(i+1,j);
	if(gr[i-1][j] && !visit[i-1][j]) dfs(i-1,j);
	if(gr[i][j-1] && !visit[i][j-1]) dfs(i,j-1);
    if(gr[i][j+1] && !visit[i][j+1]) dfs(i,j+1);
	return;
}
void dfs2(int i, int j){
	visit1[i][j]=1;
	s[i][j] = '*';
	if(gr[i+1][j] && !visit1[i+1][j]) dfs(i+1,j);
	if(gr[i-1][j] && !visit1[i-1][j]) dfs(i-1,j);
	if(gr[i][j-1] && !visit1[i][j-1]) dfs(i,j-1);
	if(gr[i][j+1] && !visit1[i][j+1]) dfs(i,j+1);
	return;
}
int main()
{
ios::sync_with_stdio(false);	
cin.tie(NULL);
cin>>n>>m>>k;

vector < pair < int, pi >  > lake;
forn(i,n) cin>>s[i];
forn(i,n) forn(j,m)	if(s[i][j]=='.') gr[i][j] = 1;
forn(i,n) {forn(j,m) {
	if(!i || !j || (i==n-1 )||( j==m-1 )) continue;
	f = 0;
	sz=0;
	if(gr[i][j] && !visit[i][j]) {dfs(i,j);
	if(f!=-1) lake.pb(mp(sz,mp(i,j)));}
}
}
sort(all(lake));
int ans=0;
//cout<<lake.size();
k = lake.size()-k;
forn(l,k){
	//cout<<lake[l].x<<endl;
	ans += lake[l].x;
	dfs2(lake[l].y.x,lake[l].y.y);
}
cout<<ans<<endl;
forn(i,n) cout<<s[i]<<endl;


}

 
        
