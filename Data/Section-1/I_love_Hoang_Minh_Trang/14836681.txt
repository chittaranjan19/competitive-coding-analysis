#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;

void add(int &a, int b)
{
    a += b;
    if (a >= INF) a -= INF;
}
int n, q, t;
int a[MAXN];
vector< int > v;
int next[MAXN];
bool roof[MAXN];
bool Selected[MAXN];
int dp[2][MAXN];
int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("283C.inp", "r", stdin);
    freopen("283C.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n >> q >> t;
    FORE(i, 1, n) cin >> a[i];
    FORE(i, 1, n) roof[i] = 1;
    FORE(i, 1, q){
        int u, v;
        cin >> u >> v;
        next[u] = v;
        roof[v] = 0;
    }
    int min_force = 0;
    FORE(u, 1, n) if (roof[u]){
        int tmp = 0;
        int x = u;
        while (1){
            if (Selected[x]){
                cout << 0;
                return 0;
            }
            Selected[x] = 1;
            tmp += a[x];

            v.push_back(tmp);
            if (next[x] == 0) break; else min_force += tmp;
            x = next[x];
        }
    }
    //FOR(i, 0, v.size()) cout << v[i] <<" ";cout<<endl;
    int prev = 1, cur = 0;
    if (t < min_force){
        cout<<0;
        return 0;
    }
    t -= min_force;
    dp[0][0] = 1;
    FOR(i, 0, v.size()){
        prev ^= 1; cur ^= 1;
        FORE(j, 0, t){
            dp[cur][j] = dp[prev][j];
            if (j >= v[i]) add(dp[cur][j], dp[cur][j - v[i]]);
        }
        //FORE(j, 0, t) cout << dp[cur][j]<<" ";cout<<endl;
    }
    cout << dp[cur][t];
    return 0;
}

