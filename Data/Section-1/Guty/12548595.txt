#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;



void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int main()
{
	int n;
	cin >> n;
	map<int,string> first; // no es el first name, es first porque es menor lexicograficamente
	map<int,string> second;
	forn(i,n)
	{
		string f,s;
		cin >> f >> s;
		if (f < s)
		{
			first[i+1]  = f;
			second[i+1] = s;
		}
		else
		{
			first[i+1]  = s;
			second[i+1] = f;
		}
	}
	string anterior = "";
	forn(i,n)
	{
		int ind;
		cin >> ind;
		if(first[ind] > anterior)
			anterior = first[ind];
		else if (second[ind] > anterior)
			anterior = second[ind];
		else
		{
			cout << "NO" << endl;
			return 0;
		}
	}
	cout << "YES" << endl;
	
	return 0;
}



