/*
*Rainto96
*Beijing University of Posts and Telecommunications School of Software Engineering
*http://blog.csdn.net/u011775691
*/
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <cstring>
#include <string>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <climits>
using namespace std;
#define pb push_back
#define ALL(x) x.begin(),x.end()
#define VINT vector<int>
#define PII pair<int,int>
#define MP(x,y) make_pair((x),(y))
#define ll long long
#define ull unsigned long long
#define MEM0(x)  memset(x,0,sizeof(x))
#define scand(x) scanf("%d",&x)
#define Max(a,b) a=max(a,b)

////****getNext of KMP and Count the times of pattern appearing in main string(Can Overlap!See the UnitTest)***///
/*W[] is the pattern , starting from 0*/
int n,k;
int next_[1111111];
void getnext_(char W[],int wlen){//This function will be used in KMP_count()
    int j,k;
    j=0;
    k=-1;
    next_[0]=-1;
    while(j<wlen){
        if(k==-1||W[j]==W[k]){
            next_[++j]=++k;
        }
        else k=next_[k];
    }
}
char str[1111111];
int main(){
        #ifndef ONLINE_JUDGE
                freopen("in.txt","r",stdin);
        #endif // ONLINE_JUDGE

        cin>>n>>k;
        cin>>str;
        if(k==1){
                for(int i=0;i<n;i++)
                        printf("1");
                printf("\n");
        }
        getnext_(str,n);
        for(int i=0;i<n;i++){
                int nxt=next_[i];
                if(i==0 || str[nxt]!=str[i]){
                        printf("0");
                        continue;
                }
                if((i+1)%(i-nxt)==0){
                        int seg=(i+1)/(i-nxt);
                        if(seg%k==0 || seg%(k+1)==0 || seg%(2*k+1)==0){
                                printf("1");
                        }else{
                                printf("0");
                        }
                        continue;
                }else if(((i+1)/(i-nxt))%k==0){
                        printf("1");
                        continue;
                }else{
                        printf("0");
                        continue;
                }
        }
        printf("\n");
//        for(int i=0;i<=n;i++){
//                cout<<str[i]<<"\t";
//        }
//        cout<<endl;
//        for(int i=0;i<=n+1;i++){
//                cout<<next_[i]<<"\t";
//        }
//        cout<<endl;
        return 0;
}
