#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>
#include <fstream>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

vector<int> v;

int DP[67][1000005];
bool ch[67][1000005];

int solve(int ind, int n)
{
  if(n < 0) return INF;
  if(n == 0) return 0;
  if(ind == v.size()) return INF;
  int &temp = DP[ind][n];
  if(temp != -1) return temp;
  temp = solve(ind + 1, n);
  if(temp > solve(ind, n - v[ind]) + 1)
    temp = solve(ind, n - v[ind]) + 1, ch[ind][n] = true;
  return temp;
}

void get(int ind, int n)
{
  if(n == 0) return;
  if(ch[ind][n])
  {
    cout << v[ind] << " ";
    get(ind, n - v[ind]);
  }
  else get(ind + 1, n);
}

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("3.txt", "r", stdin);
  //freopen("out.out", "w", stdout);
  for(int i=0;i<=64;i++)
  {
    int tmp = 0;
    for(int j=6;j>=0;j--)
    {
      tmp*=10;
      if(i & (1 << j))
        tmp++;
    }
    //cerr << tmp << "\n";
    v.push_back(tmp);
  }
  int n;
  cin >> n;
  setdp(DP);
  cout << solve(0, n) << "\n";
  get(0, n);
  return 0;
}
