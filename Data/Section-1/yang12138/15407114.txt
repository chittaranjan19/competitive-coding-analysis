/*
    ━━━━━┒
    ┓┏┓┏┓┃让老子先跳！
    ┛┗┛┗┛┃＼○／
    ┓┏┓┏┓┃ //
    ┛┗┛┗┛┃ノ)
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┃┃┃┃┃┃
    ┻┻┻┻┻┻

*/


#include <cstdio>
#include <iostream>
#include <cstring>
#include <string>
#include <algorithm>
#include <cctype>
#include <stack>
#include <map>
#include <set>
#include <iomanip>
#include <cstdlib>
#include <queue>
#include <ctime>
#include <cmath>
using namespace std;
typedef long long ll;
const int maxn=1005;
char a[maxn][maxn],vis[maxn][maxn];
int n,m;
int dx[]={1,0,0,-1},dy[]={0,1,-1,0};
void dfs(int x,int y,int &ans)
{
    for(int i=0;i<4;i++)
    {
        int xx=x+dx[i],yy=y+dy[i];
        if(xx>=0&&xx<n&&yy>=0&&yy<m&&a[xx][yy]=='.')
        {
            a[xx][yy]=' ';
            ans++;
            dfs(xx,yy,ans);
            a[xx][yy]='.';
        }
    }
}
int main()
{
    while(scanf("%d%d",&n,&m)!=EOF)
    {
        memset(vis,0,sizeof(vis));
        for(int i=0;i<n;i++) scanf("%s",a[i]);
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
            {
                if(a[i][j]=='.') vis[i][j]='.';
                else
                {
                    int ans=1;
                    dfs(i,j,ans);
                    ans%=10;
                    vis[i][j]='0'+ans;
                }
            }
        for(int i=0;i<n;i++) printf("%s\n",vis[i]);
    }
    return 0;
}