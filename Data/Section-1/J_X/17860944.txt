#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>

using namespace std;

typedef long long ll;

const int maxn = 500000 + 6;
const int INF = 1 << 30;

int a[maxn];

bool C1(int n, int k, int x)
{
    ll sum = 0, cnt = 0;
    for(int i = 0; i < n; ++i)
    {
        if(a[i] > x)
        {
            sum += a[i] - x;
        }
        else
        {
            sum -= x - a[i];
            cnt += x - a[i];
        }
    }
    return sum >= 0 && cnt <= k;
}
bool C2(int n, int k, int x)
{
//    if(1 <= x && x <= 2)
//    {
//        cout << 1 << endl;
//    }
    ll sum = 0, cnt = 0;
    for(int i = 0; i < n; ++i)
    {
        if(a[i] > x)
        {
            sum -= a[i] - x;
            cnt += a[i] - x;
        }
        else
        {
            sum += x - a[i];
        }
    }
    return sum >= 0 && cnt <= k;
}

int main()
{
    int n, k;
    scanf("%d%d", &n, &k);
    for(int i = 0; i < n; ++i) scanf("%d", a + i);
    int l = 1, r = INF;
    while(l < r)
    {
        int m = (l + r + 1) >> 1;
        if(C1(n, k, m)) l = m;
        else r = m - 1;
    }
    int low = l;
    l = 1, r = INF;
    while(l < r)
    {
        int m = (l + r) >> 1;
        if(C2(n, k, m)) r = m;
        else l = m + 1;
    }
    printf("%d\n", l - low);
    return 0;
}
