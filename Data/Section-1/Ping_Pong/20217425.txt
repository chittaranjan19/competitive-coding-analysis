#include <bits/stdc++.h>

#define ll long long
#define ld long double

using namespace std;

const int N = 100000;
const int inf = (int)1e9;
const int MOD = (int)1e9 + 7;
const ld eps = 1e-6;
const int ABC = 26;

int main()
{
    //freopen("point.in", "r", stdin);
    //freopen("point.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    int n, m;
    cin >> n >> m;
    int cnt[m + 1][3];
    int c0, d0;
    cin >> c0 >> d0;
    cnt[0][0] = n / c0;
    cnt[0][1] = c0;
    cnt[0][2] = d0;
    for (int i = 1; i <= m; i++)
    {
        int a, b, c, d;
        cin >> a >> b >> c >> d;
        cnt[i][0] = min(n / c, a / b);
        cnt[i][1] = c;
        cnt[i][2] = d;
    }
    int dp[m + 2][n + 1];
    for (int i = 0; i < m + 2; i++)
        for (int j = 0; j <= n; j++)
            dp[i][j] = 0;
    dp[0][0] = 0;
    for (int i = 0; i <= m; i++)
        for (int j = 0; j <= n; j++)
            for (int k = 0; k <= cnt[i][0]; k++)
                if (j + cnt[i][1] * k <= n)
                    dp[i + 1][j + cnt[i][1] * k] = max(dp[i + 1][j + cnt[i][1] * k], dp[i][j] + cnt[i][2] * k);
    int ans = 0;
    for (int j = 0; j <= n; j++)
        ans = max(ans, dp[m + 1][j]);
    cout << ans;
    return 0;
}
