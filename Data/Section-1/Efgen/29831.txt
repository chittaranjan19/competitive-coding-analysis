import java.io.*;         
import java.util.*;         
import java.math.*;         

public class Main  implements Runnable {
//public static final String FileName = "test";
StreamTokenizer ST;      
PrintWriter out;      
BufferedReader br;   
Scanner in;
static final int inf = 1000000000+10;
static final double eps = 1e-8;

int nextInt() throws IOException{      
    ST.nextToken();      
    return (int)ST.nval;      
}
long nextLong() throws IOException{      
    ST.nextToken();      
    return (long)ST.nval;      
}      
String next() throws IOException{      
    ST.nextToken();      
    return ST.sval;      
}      
double nextD() throws IOException{      
    ST.nextToken();      
    return ST.nval;      
}      
public static void main(String[] args) throws IOException {       
   new Thread(new Main()).start();
//	new Main().run();
}

public void run()  {      
    try {
    	br = new BufferedReader(new InputStreamReader(System.in));
    	out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));  	
    	
    	//br = new BufferedReader(new FileReader(new File(FileName+".in")));
    	//out = new PrintWriter(new BufferedWriter(new FileWriter(FileName+".out")));
    	//br = new BufferedReader(new FileReader(new File("input.txt")));
    	//out = new PrintWriter(new BufferedWriter(new FileWriter("output.txt")));
    	//in = new Scanner(br);
        ST = new StreamTokenizer(br);      
        solve();      
        out.close();
        //in.close();
        br.close();   
    }         
    catch (IOException e) {        
    	throw new IllegalStateException(e);       
    }      
}



public void solve() throws IOException {
	String[] ss = br.readLine().split(" ");
	int t = Integer.parseInt(ss[0]);
	int m = Integer.parseInt(ss[1]);
	int[] mem = new int[m+1];
	int ID = 0;
	for (int tt=1; tt<=t; tt++) {
		StringTokenizer st = new StringTokenizer(br.readLine()," ");
		char c = st.nextToken().charAt(0);
		if (c=='a') {
			int sz = Integer.parseInt(st.nextToken());
			boolean ok = false;
			for (int i=1; i<=m; i++) if (mem[i]==0){
				int cnt = 1;
				while (i+cnt<=m && mem[i+cnt]==0) cnt++;
				if (cnt>=sz) {
					ok = true;					
					ID++;
					out.println(ID);
					for (int j=0; j<sz; j++) mem[i+j] = ID;
					break;
				}
			}
			if (!ok) out.println("NULL");
		} else 
		if (c=='e') {
			int id = Integer.parseInt(st.nextToken());
			boolean ok = false;
			for (int i=1; i<=m; i++) if (mem[i] == id) { mem[i] = 0; ok = true; }
			if (!ok) out.println("ILLEGAL_ERASE_ARGUMENT");
		} else {
			for (int i=1; i<=m; i++) 
			while (mem[i]==0){
				boolean ex = true;
				for (int j=i; j<m; j++){ mem[j] = mem[j+1]; if (mem[j+1]>0)ex = false; }
				mem[m] = 0;
				if (ex) break;
			}
		}
		
	}
	
}
}










 