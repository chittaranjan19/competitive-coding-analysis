import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProblemA3 {
    BufferedReader rd;
    long a,b;

    private ProblemA3() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        long[] q = longarr();
        a = q[0];
        b = q[1];
        long n = q[2];
        for(long i=0;i<n;i++) {
            q = longarr();
            out(solve(q[0], q[1], q[2]));
        }
    }

    private long solve(long min, long t, long m) {
        long left = 0;
        long right = 1000_000_000;
        while(right - left > 1) {
            long mid = (left + right) / 2;
            if(possible(min, mid, t, m)) {
                left = mid;
            } else {
                right = mid;
            }
        }
        if(left >= min) {
            return left;
        }
        return -1;
    }

    private boolean possible(long min, long max, long t, long m) {
        long fmax = f(max);
        if(fmax > t) {
            return false;
        }
        long fmin = f(min);
        long area = (fmax + fmin)*(max-min+1) / 2;
        return area <= t*m;
    }

    private long f(long x) {
        return a + b*(x-1);
    }

    private long[] longarr() throws IOException {
        return longarr(rd.readLine());
    }

    private long[] longarr(String s) {
        String[] q = split(s);
        int n = q.length;
        long[] a = new long[n];
        for(int i=0;i<n;i++) {
            a[i] = Long.parseLong(q[i]);
        }
        return a;
    }

    private String[] split(String s) {
        int n = s.length();
        int sp = 0;
        for(int i=0;i<n;i++) {
            if(s.charAt(i)==' ') {
                sp++;
            }
        }
        String[] res = new String[sp+1];
        int last = 0;
        int x = 0;
        for(int i=0;i<n;i++) {
            char c = s.charAt(i);
            if(c == ' ') {
                res[x++] = s.substring(last,i);
                last = i+1;
            }
        }
        res[x] = s.substring(last,n);
        return res;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemA3();
    }
}
