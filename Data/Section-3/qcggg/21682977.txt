/*
ID: qiealex1
PROG: friday
LANG: C++
*/
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int max_score(const vector<int> v){
    vector<vector<int>> s;
    for (size_t i = 0; i < v.size(); ++i)
        s.push_back(vector<int>(v.size()));

    for (size_t i = 0; i < s.size(); ++i)
        s[i][i] = v[i] * i;

    for (int l = 2; l < v.size(); ++l){
        for (int i = 1; i < v.size() - l + 1; ++i){
            int j = i + l - 1;
            for (int k = i; k <= j; ++k){
                int cur_score = v[k] * k;
                if (k - 2 >= i)
                    cur_score += s[i][k - 2];
                if (k + 2 <= j)
                    cur_score += s[k + 2][j];
                s[i][j] = max(s[i][j], cur_score);
            }
            //cout << i << " " << j << " " << s[i][j] << endl;
        }
    }

    return s[1][v.size() - 1];
}

int main()
{
    int n;
    cin >> n;
    vector<int> v1(n);
    int max_num = 0;
    for (int i = 0; i < n; ++i){
        cin >> v1[i];
        max_num = max(v1[i], max_num);
    }
    //cout << max_num << endl;
    vector<int> v(max_num + 1, 0);
    for (int i = 0; i < n; ++i)
        v[v1[i]]++;

    cout << max_score(v) << endl;

}
