#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef vector<int> vi;

#define TRACE

#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif
#define MOD  10000009
ll powmod(ll a,ll b)
{
    if(b==0)return 1;
    ll x=powmod(a,b/2);
    ll y=(x*x)%MOD;
    if(b%2)
        return (a*y)%MOD;
    return y;
}
ll  gcd ( ll a, ll b )
{
  ll c;
  while ( a != 0 ) {
     c = a; a = b%a;  b = c;
  }
  return b;
}
struct sort_pred {
    bool operator()(const std::pair<int,int> &left, const std::pair<int,int> &right) 
    { 
        return left.first < right.first; 
    }
};

vector< pair <int,int> > vect;
int main()
{
	int n,k,foo,state=0;
	cin >> n >>k;
	//std::vector<int> a(n+1);
	vector< pair <int,int> > a,di;
	queue<int> sw;
	for(int i=0;i<n;i++)
	{
		cin >> foo;
		a.push_back(make_pair(foo,i+1));
	//	a[i].first=foo;
	//	a[i].second=i+1;
	}
	sort(a.begin(),a.end(),sort_pred());
	for(int i=0;i<n;i++)
	{
		foo=a[i].second;
		sw.push(foo);
		trace2(a[i].first,a[i].second);
	}
	if(a[0].first!=0)
	{
		cout << "-1" << endl;
	}
	else
	{
		int si=1;
		for(int i=0;si<n;i++)
		{

			foo=si+k-1;
			if(i==0)
				foo++;
			for(;si<min(n,foo) ;si++)
			{
				trace2(i,si);
				trace2(a[i].second,a[si].second);
				trace2(a[i].first,a[si].first);
				if(a[i].first<a[si].first)
				{
					di.push_back(make_pair(a[i].second,a[si].second));
				}
				else
				{
					state=1;
					break;
				}
			}
			if(state==1)
			{
				break;
			}
		}
		if(state==1)
		{
			cout << "-1" << endl;
		}
		else
		{
			cout << di.size() << endl;
			for(int i=0;i< di.size();i++)
			{
				cout <<di[i].first << " " << di[i].second <<endl;
			}
		//	cout << endl;
		}
	}
	return 0;
}