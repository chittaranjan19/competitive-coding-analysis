//INOG
//<MohammadJavad Akbari/>
//I Try So Hard And Got So Far,But In The End It Doesn't Even Matter... 

#include<bits/stdc++.h>
using namespace std;

#define mp make_pair
#define int long long
#define ld long double
#define all(x) x.begin(),x.end()
#define endl '\n'
#define MohammadJA main

const long long MAXN=1e5;
const long long MAXM=3e3;
const long long MOD=1610612741;
const long long mod=1e9+7;
const long long INF=1e15+5040;

const int MAX_LOG=21;
const int dx[4]={1,-1,0,0};
const int dy[4]={0,0,-1,1};

//int p[MAXN];
//int root(int x){if(p[x]<0)return x;return p[x]=root(p[x]);}
//inline void merge(int x,int y){x=root(x);y=root(y);p[y]+=p[x];p[x]=y;}

int dis(long double x1,long double y1,long double x2,long double y2){
	return((x2-x1)*(x2-x1)+(y1-y2)*(y1-y2));
}
long double disa[MAXN],disb[MAXN],dist[MAXN];
long double x[MAXN],y[MAXN];
vector<pair<int,int> >v1,v2;
MohammadJA(){
	
	int ax,ay,bx,by,tx,ty;
	cin>>ax>>ay>>bx>>by>>tx>>ty;

	int n;
	cin>>n;


	for(int i=0;i<n;i++){
		cin>>x[i]>>y[i];
		disa[i]=sqrt(dis(x[i],y[i],ax,ay));
		disb[i]=sqrt(dis(x[i],y[i],bx,by));
		dist[i]=sqrt(dis(x[i],y[i],tx,ty));
		v1.push_back(make_pair(disa[i]-dist[i],i));
		v2.push_back(make_pair(disb[i]-dist[i],i));
	}


	if(n==1) return cout<<min(disa[0],disb[0])+dist[0],0;

	sort(all(v1));
	sort(all(v2));
	
	int n1,n2;

	if(v1[0].second!=v2[0].second)
		n1=v1[0].second,n2=v2[0].second;
	else if(v1[1].first>v2[1].first)
		n1=v1[0].second,n2=v2[1].second;
	else
		n1=v1[1].second,n2=v2[0].second;

	long double ans=0;
	for(int i=0;i<n;i++)
		ans+=dist[i]*2;
	ans+=min(min(disa[n1]-dist[n1],disb[n2]-dist[n2]),disa[n1]-dist[n1]+disb[n2]-dist[n2]);
	cout << fixed <<  setprecision(12);
	cout<<ans<<'\n';
}