#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 100005
#define maxC 1000000007
#define base 1000007
#define pb push_back

using namespace std;
int n, k, x, hat[base], khat[base];
bool prime[base], mark[base];
int allPrime[base], r = 0;

void makePrime()
{
    FOR(i, 2, base - 1)
    if (!prime[i])
    {
        for(int t = (i << 1); t < base; t += i)
            prime[t] = true;
        allPrime[++ r] = i;
    }
}

void factor(int x, int* mang)
{
    FOR(i, 1, r)
    {
        int u = allPrime[i];
        if (u * u > x)
            break;
        int dem = 0;
        while(x % u == 0)
            dem ++, x /= u;
        mang[u] = max(mang[u], dem);
    }
    if (x > 1)
        mang[x] = max(mang[x], 1);
}

void setup()
{
    makePrime();
    cin >> n >> k;
    FOR(i, 1, n)
    {
        cin >> x;
        if (mark[x])
            continue;
        mark[x] = true;
        factor(x, hat);
    }
    factor(k, khat);
    FOR(i, 1, r)
    {
        int u = allPrime[i];
        if (khat[u] > hat[u])
        {
            cout << "No";
            return;
        }
    }
    cout << "Yes";
}

void xuly()
{

}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
