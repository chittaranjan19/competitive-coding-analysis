#include<stdio.h>
#include<algorithm>
using namespace std;
int a[100005],bit[100005];
int bitbit(int x){
    int ans=0;
    while(x){
        x>>=1;
        ans++;
    }
    return ans;
}
int f(int x,int y){
    int ans=0;
    while(1){
        while(x>y){
            x>>=1;
            ans++;
        }
        while(y>x){
            y>>=1;
            ans++;
        }
        if(x==y) break;
    }
    return ans;
}
int abs(int x){
    return x>0?x:-x;
}
int main(){
    int n;
    scanf("%d",&n);
    int maxbit=0;
    int z[50]={0};
    int bitsum=0;
    for(int i=0;i<n;i++){
        scanf("%d",&a[i]);
        bit[i]=bitbit(a[i]);
        maxbit=max(bit[i],maxbit);
        bitsum+=bit[i]-1;
    }
    //z[1]=bitsum;
    int zz=0;
    int can=1;
    for(int i=1;i<=maxbit+1;i++){
        //printf("i=%d\n",i);
        int n1=0,n0=0;
        int ans=0;
        for(int j=0;j<n;j++){
            z[i]+=f(a[j],zz);
            //printf("f(%d)=%d %d\n",j,f(a[j],zz),a[j]&(1<<bit[j]>>i));
            ans+=abs(bit[j]-i)+1;
            if((a[j]&(1<<bit[j]>>i))!=0){
                n1++;
                //printf("ans=%d|\n",ans);
            }if((1<<bit[j]>>i)==0){
                n0++;
                //printf("-");
            }
        }
        //printf("n1=%d\n",n1);
        if((n1==n||n1==0)&&can==1&&n0==0){
            z[i]=ans;
            zz=((zz<<1)+(n1==n));
        }else{
            can=0;
            zz=(zz<<1);
        }
        //printf("zz=%d\n",zz);
    }
    int ansans=1000000000;
    for(int i=2;i<=maxbit+1;i++){
            //printf("z[%d]=%d\n",i,z[i]);
        ansans=min(ansans,z[i]);
    }
    printf("%d\n",ansans);
    return 0;
}
