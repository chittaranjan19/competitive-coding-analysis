// This amazing code is by Eric Sunli Chen.
#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <string>
#include <utility>
#include <vector>
using namespace std;
template<typename T> void get_int(T &x)
{
	char t=getchar();
	bool neg=false;
	x=0;
	for(; (t>'9'||t<'0')&&t!='-'; t=getchar());
	if(t=='-')neg=true,t=getchar();
	for(; t<='9'&&t>='0'; t=getchar())x=x*10+t-'0';
	if(neg)x=-x;
}
template<typename T> void print_int(T x)
{
	if(x<0)putchar('-'),x=-x;
	short a[20]= {},sz=0;
	while(x>0)a[sz++]=x%10,x/=10;
	if(sz==0)putchar('0');
	for(int i=sz-1; i>=0; i--)putchar('0'+a[i]);
}
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define get1(a) get_int(a)
#define get2(a,b) get1(a),get1(b)
#define get3(a,b,c) get1(a),get2(b,c)
#define printendl(a) print_int(a),puts("")
typedef long long LL;
typedef unsigned long long uLL;
typedef pair<int,int> pii;
const int inf=0x3f3f3f3f;
const LL Linf=1ll<<61;
const double pi=acos(-1.0);

template<typename T> inline void updmax(T &x,const T y){if(x<y)x=y;}
template<typename T> inline void updmin(T &x,const T y){if(x>y)x=y;}

const int mod=1e9+7;
LL power(LL x,LL y)
{
	LL ret=1;
	while(y)
	{
		if(y&1)ret=ret*x%mod;
		x=x*x%mod;
		y>>=1;
	}
	return ret;
}
vector<int> g[200111],tg[200111],v;
bool use[200111];
int n,dep[200111],cyc,all,cur,mark[200111];
LL ans=1;
void dfs(int x)
{
	use[x]=1;
	v.pb(x);
	for(int i=0;i<(int)g[x].size();i++)
		if(!use[g[x][i]])
			dfs(g[x][i]);
}
void dfs2(int x,int d)
{
	dep[x]=d;
	mark[x]=cur;
	for(int i=0;i<(int)tg[x].size();i++)
		if(!dep[tg[x][i]])
			dfs2(tg[x][i],d+1);
		else if(mark[tg[x][i]]==cur)cyc=dep[x]-dep[tg[x][i]]+1;
	mark[x]=0;
}
int main()
{
	get1(n);
	for(int i=1,x;i<=n;i++)
	{
		get1(x);
		g[x].pb(i);
		g[i].pb(x);
		tg[x].pb(i);
	}
	for(int i=1;i<=n;i++)if(!use[i])
	{
		v.clear();
		dfs(i);
		for(int j=0;j<(int)v.size();j++){cur++;if(dep[v[j]]==0)dfs2(v[j],1);}
		all=v.size();
		ans=ans*power(2,all-cyc)%mod*(power(2,cyc)+mod-2)%mod;
	}
	printendl(ans);
	return 0;
}