import java.io.*;         
import java.util.*;         
import java.math.*;         

 
public class Main  implements Runnable {
//public static final String FileName = "test";
StreamTokenizer ST;      
PrintWriter out;      
BufferedReader br;   
Scanner in;
static final int inf = 1000000000;
 
int nextInt() throws IOException{      
    ST.nextToken();      
    return (int)ST.nval;      
}
long nextLong() throws IOException{      
    ST.nextToken();      
    return (long)ST.nval;      
}      
String next() throws IOException{      
    ST.nextToken();      
    return ST.sval;      
}      
double nextD() throws IOException{      
    ST.nextToken();      
    return ST.nval;      
}      
public static void main(String[] args) throws IOException {       
   new Thread(new Main()).start();
//	new Main().run();
}
 
public void run()  {      
    try {
    	br = new BufferedReader(new InputStreamReader(System.in));
    	out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));    	
    	//br = new BufferedReader(new FileReader(new File(FileName+".in")));
    	//out = new PrintWriter(new BufferedWriter(new FileWriter(FileName+".out")));
    	in = new Scanner(br);
        ST = new StreamTokenizer(br);      
        solve();      
        out.close();
        //in.close();
        br.close();   
    }         
    catch (IOException e) {       
    	e.printStackTrace();
    	throw new IllegalStateException(e);  
    }      
}

int f(int x) {
	if (x%9==0) return 9;
	return x%9;
}
public void solve() throws IOException {
	int n = nextInt();
	int[] a = new int[10];
	for (int i=1; i<=9; i++) a[i] = n/9;
	for (int i=1; i<=f(n); i++) a[i]++;
	long res = 0;
	for (int i=1; i<=n; i++)
		res -= n/i;
	for (int i=1; i<=9; i++)
		for (int j=1; j<=9; j++)
			res += 1l*a[i]*a[j]*a[f(i*j)];	
	/*int r = 0;
	for (int i=1; i<=n; i++)
		for (int j=1; j<=n; j++)
			for (int k=1; k<=n; k++)
				if (i*j!=k && f(f(i)*f(j))==f(k)) r++;
	out.println(r);*/
	out.println(res);
		
	
}
  
}
















 
 
  