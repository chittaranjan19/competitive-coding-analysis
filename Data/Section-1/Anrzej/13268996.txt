#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <stdio.h>

using namespace std;

#define ll long long
#define ull unsigned long long 
#define sc second
#define fs first
#define mp make_pair

ll n, k, a[200000];

struct s
{
	int d, ost;
	bool operator < (s b) const {
		return ost > b.ost;
	}
	
};

string s[1000];

void print(int w, int l, char ch1, int w1, char ch2, int w2, char ch3, int h)
{
	string t = "";
	for (int i = 0; i < w; i++)
		t += ch1;
	for (int i = 0; i < l; i++)
		cout << t << endl;
	t = "";
	for (int i = 0; i < w1; i++)
		t += ch2;
	for (int i = 0; i < w2; i++)
		t += ch3;
	for (int i = 0; i < h; i++)
		cout << t << endl;
}

int main()
{
	//freopen("grant.in", "r", stdin);
	//freopen("grant.out", "w", stdout);
	int x[2][3];
	for (int i = 0; i < 3; i++)
		cin >> x[0][i] >> x[1][i];
	for (int i = 0; i < 2; i++)
	{
		swap(x[0][0], x[1][0]);
		for (int j = 0; j < 2; j++)
		{
			swap(x[0][1], x[1][1]);
			for (int k = 0; k < 2; k++)
			{
				swap(x[0][2], x[1][2]);
				//cout << x[0][1] << x[0][0] << x[0][2] << endl;
				if (x[0][1] == x[0][0] && x[0][0] == x[0][2])
				{
					string t = "";
					for (int l = 0; l < x[0][0]; l++)
						t += 'A';
					for (int l = 0; l < x[1][0]; l++)
						cout << t << endl;
					t = "";
					for (int l = 0; l < x[0][1]; l++)
						t += 'B';
					for (int l = 0; l < x[1][1]; l++)
						cout << t << endl;
					t = "";
					for (int l = 0; l < x[0][0]; l++)
						t += 'C';
					for (int l = 0; l < x[1][2]; l++)
						cout << t << endl;
					return 0;
				}
				if (x[0][0] == x[0][2] + x[0][1] && x[1][2] == x[1][1]){
					print(x[0][0], x[1][0], 'A', x[0][2], 'C', x[0][1], 'B', x[1][2]);
					return 0;
				}
				if (x[0][1] == x[0][2] + x[0][0] && x[1][2] == x[1][0]){
					print(x[0][1], x[1][1], 'B', x[0][2], 'C', x[0][0], 'A', x[1][2]);
					return 0;
				}
				if (x[0][2] == x[0][1] + x[0][0] && x[1][0] == x[1][1]){
					print(x[0][2], x[1][2], 'C', x[0][1], 'B', x[0][0], 'A', x[1][1]);
					return 0;
				}
			}
		}
	}
	return 0;
}