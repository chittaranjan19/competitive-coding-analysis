#include "bits/stdc++.h"
#define MAXN 200009
#define MOD 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
const int N=1e6+9;
ll arr[MAXN],par[MAXN],inv[MAXN];
ll ans[MAXN],s[MAXN<<2],F[N];
int last[N];
vector<PII>adj[MAXN];
ll mod(ll x){
	return (x%MOD);
}
ll Fe(ll x,int y){
	if(!y)
		return 1LL;
	ll h=Fe(x,y/2);
	h=mod(h*h);
	if(y&1)
		h=mod(h*x);
	return h;	
}
void upd(int p,ll v,int nd,int x,int y){
	if(x==y){
		s[nd]=mod(s[nd]*v);
		return;
	}
	int mid=(x+y)>>1;
	if(p<=mid)
		upd(p,v,nd<<1,x,mid);
	else
		upd(p,v,nd<<1|1,mid+1,y);
	s[nd]=mod(s[nd<<1]*s[nd<<1|1]);	
}
ll tap(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return 1LL;
	if(l<=x and y<=r)
		return s[nd];
	int mid=(x+y)>>1;
	ll i1=tap(l,r,nd<<1,x,mid);
	ll i2=tap(l,r,nd<<1|1,mid+1,y);
	return mod(i1*i2);	
}
int main(){
	fill(s,s+(MAXN<<2),1);
	#ifndef ONLINE_JUDGE
    freopen("file.in", "r", stdin);
	#endif	
	int a;
	scanf("%d",&a);par[0]=inv[0]=1;
	for(int i=1;i<=a;i++){
		scanf("%lld",arr+i);
		par[i]=mod(par[i-1]*arr[i]);
		inv[i]=Fe(par[i],MOD-2);
	}
	int q;
	scanf("%d",&q);
	for(int i=1;i<=q;i++){
		int l,r;
		scanf("%d%d",&l,&r);
		adj[r].pb(mp(l,i));
	}
	for(int j=1;j<N;j++)
		F[j]=Fe(j,MOD-2);
	for(int i=1;i<=a;i++){
		ll x=arr[i];
		for(int j=2;j<=sqrt(arr[i]);j++){
			if(x%j==0){
				while(x%j==0)
					x/=j;
				if(last[j])	
					upd(last[j],mod(j*Fe(j-1,MOD-2)),1,1,a);
				upd(i,mod((j-1)*Fe(j,MOD-2)),1,1,a);	
				last[j]=i;		
			}		
		}
		if(x>1){
			if(last[x])	
				upd(last[x],mod(x*Fe(x-1,MOD-2)),1,1,a);
			upd(i,mod((x-1)*Fe(x,MOD-2)),1,1,a);	
			last[x]=i;		
		}
		for(int j=0;j<int(adj[i].size());j++)
			ans[adj[i][j].ss]=mod(mod(par[i]*inv[adj[i][j].ff-1])*tap(adj[i][j].ff,i,1,1,a));
	}
	for(int i=1;i<=q;i++)
		printf("%lld\n",ans[i]);
	return 0;
}
