#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <iomanip>
#include <set>
#include <fstream>
#include <numeric>
#include <stdexcept>
#include <cassert>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

LL gcd(LL a, LL b)
{
  if(!b) return a;
  return gcd(b, a % b);
}

LL lcm(LL a,LL b)
{
  return a / gcd(a, b) * b;
}

int k;
int DP[360365];
LL dist;
LL beg;

int solve(int diff)
{
  LL num = beg - diff;
  if(num == dist) return 0;
  if(num < dist) return INF;
  if(DP[diff] != -1)
    return DP[diff];
  int res = solve(diff + 1) + 1;
  for(int i=2;i<=k;i++)
  {
    LL nxt = num - (num % i);
    if(nxt == num) continue;
    res = min(res, solve(beg - nxt) + 1);
  }
  DP[diff] = res;
  return res;
}

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("D-large.in", "r", stdin);
  //freopen("output.txt", "w", stdout);
  LL a, b;
  cin >> a >> b >> k;
  int num = 1;
  for(int i=2;i<=k;i++)
    num = lcm(num, i);
  setdp(DP);
  if(num >= a - b)
  {
    dist = b;
    beg = a;
    cout << solve(0);
    return 0;
  }
  dist = a;
  while(dist % num)
    dist--;
  beg = a;
  LL res = solve(0);
  setdp(DP);
  a = dist;
  dist -= num;
  if(dist <= b)
  {
    dist = b;
    beg = a;
    res+=solve(0);
    cout << res;
    return 0;
  }
  beg = a;
  int tmp = solve(0);
  LL sol = (a - b) / num;
  a-= sol * num;
  res+= sol * 1LL * tmp;
  dist = b;
  beg = a;
  setdp(DP);
  res+=solve(0);
  cout << res;
  return 0;
}
