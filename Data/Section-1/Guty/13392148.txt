#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint gcd (tint a, tint b)
{
	if (a > b)
		return gcd(b,a);
	else if (a == 0)
		return b;
	else
		return gcd(b % a, a);
}

int main()
{
	int n;
	cin >> n;
	map<tint, tint> q;
	forn(i,n*n)
	{
		int aux;
		cin >> aux;
		q[aux]++;
	}
	vector<tint> ans;
	tint maxi = q.rbegin()->first;
	q[maxi]--;
	ans.push_back(maxi);
	
	forsn(i,1,n)
	{
		map<tint,tint> :: iterator it = --q.end();
		while (it->second == 0)
			it--;
		maxi = it->first;
		q[maxi]--;
		forn(j,i)
			q[gcd(maxi,ans[j])] -= 2;
		ans.push_back(maxi);
	}
	forn(i,ans.size())
		cout << ans[i] << " ";
	cout << endl;
	return 0;
}



