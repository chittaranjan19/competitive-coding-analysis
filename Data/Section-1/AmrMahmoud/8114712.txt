#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int main()
{
    //freopen("decomp.in","r",stdin);
    //freopen("decomp.out","w",stdout);
    ios_base::sync_with_stdio(0);
    int t;
    cin >> t;
    while(t--)
    {
        pair<int,int> co[4],temp[4];
        for(int i=0;i<4;i++)
        {
            cin >> co[i].first >> co[i].second;
            cin >> temp[i].first >> temp[i].second;
        }
        vector<vector<pair<int,int> > > rot(4);
        int res = INF;
        for(int i=0;i<4;i++)
        {
            pair<int,int> tes = co[i];
            rot[i].pb(tes);
            for(int j=0;j<3;j++)
            {
                tes.first-=temp[i].first;
                tes.second-=temp[i].second;
                tes.second*=-1;
                swap(tes.first,tes.second);
                tes.first+=temp[i].first;
                tes.second+=temp[i].second;
                rot[i].pb(tes);
            }
        }
        for(int i=0;i<4;i++)
        {
            for(int j=0;j<4;j++)
            {
                for(int k=0;k<4;k++)
                {
                    for(int l=0;l<4;l++)
                    {
                        vector<pair<int,int> > x;
                        vector<double> y;
                        x.push_back(rot[0][i]);
                        x.push_back(rot[1][j]);
                        x.push_back(rot[2][k]);
                        x.push_back(rot[3][l]);
                        for(int ii=0;ii<4;ii++)
                        {
                            for(int jj=ii+1;jj<4;jj++)
                            {
                                y.push_back((double)sqrt((double)(x[ii].first - x[jj].first) * (x[ii].first - x[jj].first) + (double)(x[ii].second - x[jj].second) * (x[ii].second - x[jj].second)));
                            }
                        }
                        sort(y.begin(),y.end());
                        if(y[0] > EPS && fabs(y[0]-y[1]) <= EPS && fabs(y[0]-y[2]) <= EPS && fabs(y[0]-y[3]) <= EPS)
                            if(fabs(y[4]-y[5]) <= EPS)
                                res = min(res, i + j + k + l);
                    }
                }
            }
        }
        if(res == INF) cout << -1 << "\n";
        else cout << res << "\n";
    }
    return 0;
}
/*
1
1 1 0 0
-1 1 0 0
-1 1 0 0
-1 1 0 0
*/
