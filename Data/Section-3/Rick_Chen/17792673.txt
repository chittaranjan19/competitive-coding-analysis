#include<cstdio>
#include<cstring>

int n,m;
int map[205][205],link[205],color[205],used[205];

bool PutColor(int x,int tp)
{
	if(color[x]==1-tp) return 0;
	if(color[x]==tp) return 1;
	color[x]=tp;
 	for (int i=1;i<=n;i++)
  		if (map[x][i]&&!PutColor(i,!tp)) return 0;
   	return 1;
}

bool judge()
{
	memset(color,-1,sizeof(color));
	for(int i=1;i<=n;i++)
		if(color[i]==-1&&!PutColor(i,0)) return 1;
	return 0;
}

int can(int t)  
{  
    int i;  
    for(i=1;i<=n;i++)  
    {  
       if(used[i]==0 && map[t][i])  
       {  
           used[i]=1;  
           if(link[i]==-1 || can(link[i]))  
           {  
              link[i]=t;  
              return 1;  
           }  
       }  
    }  
    return 0;  
}  

int MaxMatch()  
{  
    int i,num;  
    num=0;  
    memset(link,-1,sizeof(link));  
    for(i=1;i<=n;i++)  
    {  
       memset(used,0,sizeof(used));  
       if(can(i)) num++;  
    }  
    return num;  
}  

int main()
{
	int x,y;
	while(~scanf("%d%d",&n,&m))
	{
		memset(map,0,sizeof(map));
		while(m--)
		{
			scanf("%d%d",&x,&y);
			map[x][y]=map[y][x]=1;
		}
		if(judge()) printf("0\n");
		else printf("%d\n",MaxMatch()/2);
	}
	return 0;
}