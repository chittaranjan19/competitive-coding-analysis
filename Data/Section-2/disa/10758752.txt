#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <vector>
#include <set>
#include <algorithm>
#include <iomanip>
#include <map>
#include <cmath>
#include <queue>
using namespace std;

const int sz = 1e5 * 3;
typedef long long ll;

//ifstream cin ("input.txt"); ofstream cout ("output.txt");
// ifstream cin ("swap.in"); ofstream cout ("swap.out");

vector < vector <int> > g(sz);
ll sum[sz];
int n;

void dfs(int v) {
	vector <ll> chsum;
	for (int i = 0; i < g[v].size(); i++) {
		int to = g[v][i];
		dfs(to);
		chsum.push_back(sum[to]);
	}
	sort(chsum.rbegin(), chsum.rend());

	for (int i = 1; i < chsum.size(); i += 2) {
		ll nowsum = chsum[i - 1] + chsum[i];
		if (nowsum <= 0) break;
		sum[v] += nowsum;
	}
}

int main() { 	
	cin >> n;
	for (int i = 1; i <= n; i++) {
		int p, x;
		cin >> p >> x;
		sum[i] = x;
		if (p != -1)
			g[p].push_back(i);
	}	

	dfs(1);

	ll ans = 0;

	for (int i = 1; i <= n; i++) {
		ans = max(ans, sum[i]);
	}
	cout << ans << endl;
	return 0;
}