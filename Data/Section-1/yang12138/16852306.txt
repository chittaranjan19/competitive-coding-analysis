/*


	/＼7　　　 ∠＿/
	　 /　│　　 ／　／
	　│　Z ＿,＜　／　　 /`ヽ
	　│　　　　　ヽ　　 /　　〉
	　 Y　　　　　`　 /　　/
	　ｲ●　､　●　　⊂⊃〈　　/
	　()　 へ　　　　|　＼〈		//去吧比卡丘！！！
	　　>ｰ ､_　 ィ　 │ ／／
	　 / へ　　 /　ﾉ＜| ＼＼
	　 ヽ_ﾉ　　(_／　 │／／
	　　7　　　　　　　|／	|
	　　＞―r￣￣`ｰ―＿

*/


#include <iostream>
#include <cstdio>
#include <cmath>
#include <string>
#include <cstring>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
using namespace std;
typedef long long ll;
const int maxn=200005;
struct node
{
    int x,y;
}p[maxn];
bool cmp1(node a,node b)
{
    if(a.x==b.x) return a.y<b.y;
    return a.x<b.x;
}

bool cmp2(node a,node b)
{
    if(a.y==b.y) return a.x<b.x;
    return a.y<b.y;
}
ll C(ll x)
{
    return x*(x-1)/2;
}
int main()
{
    int n;scanf("%d",&n);
    for(int i=0;i<n;i++) scanf("%d%d",&p[i].x,&p[i].y);
    sort(p,p+n,cmp1);
    ll ans=0;
    for(int i=1;i<n;i++){
        if(p[i].x==p[i-1].x){
            ll now=1;
            while(p[i].x==p[i-1].x) now++,i++;
            ans+=C(now);
        }
    }
    sort(p,p+n,cmp2);
    for(int i=1;i<n;i++){
        if(p[i].y==p[i-1].y){
            ll now=1;
            while(p[i].y==p[i-1].y) now++,i++;
            ans+=C(now);
        }
    }
    for(int i=1;i<n;i++){
        if(p[i].x==p[i-1].x&&p[i].y==p[i-1].y){
            ll now=1;
            while(p[i].x==p[i-1].x&&p[i].y==p[i-1].y) now++,i++;
            ans-=C(now);
        }
    }
    printf("%I64d\n",ans);
    return 0;
}









