#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair
#define all(x) x.begin(), x.end()

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 3e5 + 10, lg = 31, MAXN = 1111;
ll mod = 1e9 + 7;

ll gcd(ll a, ll b) {
	return b ? gcd(b, a % b) : a;
}

ll _gcd(ll a, ll b, ll & x, ll & y) {
	if (a == 0) {
		x = 0; y = 1;
		return b;
	}
	ll _x1, _y1;
	ll d = _gcd(b%a, a, _x1, _y1);
	x = _y1 - (b / a) * _x1;
	y = _x1;
	return d;
}

ll binpow(ll a, ll n) {
	ll res = 1;
	while (n) {
		if (n & 1)
			res *= a;
		a *= a;
		n >>= 1;
		a %= mod;
		res %= mod;
	}
	return res;
}


void term_res(string res){
	cout << res;
	exit(0);
}

int n;
ll a[N], p[N];

set<int> dltd;
set<pair<ll, ll> > sm;

int main()
{
	cin >> n;
	for(int i = 1; i <= n; i++)
		cin >> a[i], a[i]+=a[i-1];
	for(int i = 0; i < n; i++)
		cin >> p[i];
	dltd.insert(0);
	dltd.insert(n+1);
	sm.insert(mp(-a[n], 1));
	for(int i = 0; i < n; i++){
		int cur = p[i];
		int lw = *(--dltd.lower_bound(cur));
		int up = *dltd.upper_bound(cur);
		ll hv = a[up-1] - a[lw];
		sm.erase(mp(-hv, lw+1));
		ll f = a[cur-1] - a[lw], scn = a[up-1] - a[cur];
		sm.insert(mp(-f, lw+1));
		sm.insert(mp(-scn, cur+1));
		dltd.insert(cur);
		cout << -(*sm.begin()).fs << endl;
	}
	return 0;
}