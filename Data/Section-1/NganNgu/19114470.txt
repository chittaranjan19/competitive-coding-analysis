#include <iostream> 
#include <cstdio>
#include <map>

using namespace std;

#define For(i , a , b) for (int i = a , _b = b ; i <= _b ; ++i)
#define Ford(i , a  ,b) for (int i = a , _b = b : i >= _b ; --i)
#define Rep(i , n) for (int i = 0 , _n = n ; i < _n ; ++i)
#define sz(A) ((int)A.size())
#define LL(x) (x << 1)
#define RR(x) ((x << 1) | 1)

typedef pair<int , int> pt;

map<long long , long long> incCost;
int q;

int depth(long long x) {
	int res = 0;
	while (true) {
		if (!x) break;
		res++;
		x >>= 1;
	}
	return res;
}

void ReadData() {
	cin >> q;
	while (q--) {
		int type; cin >> type;
		if (type == 1) {
			long long u , v , w; 
			cin >> u >> v >> w;
			int du = depth(u) , dv = depth(v);
			while (du > dv) {
				incCost[u] += w; --du; u>>=1;
			}
			while (dv > du) {
				incCost[v] += w; --dv; v>>=1;
			}
			while (u != v) {
				incCost[u] += w;
				incCost[v] += w; 
				u>>=1; v >>=1;
			}
		} else {
			long long u , v;
			long long res = 0;
			cin >> u >> v;
			int du = depth(u) , dv = depth(v);
			while (du > dv) {
				res += incCost[u]; --du; u>>=1;
			}
			while (dv > du) {
				res += incCost[v]; --dv; v>>=1;
			}
			while (u != v) {
				res += incCost[u] + incCost[v]; 
				u>>=1; v >>=1;
			}
			cout << res << "\n";
		}
	}	
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	
	//freopen("input.inp" , "r" , stdin);
	ReadData();

	return 0;

}			