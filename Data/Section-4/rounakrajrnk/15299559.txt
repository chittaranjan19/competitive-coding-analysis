#include<bits/stdc++.h>
#define s(x) scanf("%d",&x)
#define ll long long
#define l(x) scanf("%lld",&x)
#define cst int t; s(t); while(t--)
#define fr freopen("in.txt", "r", stdin)
#define finp ios_base::sync_with_stdio(false)
#define pb push_back
#define pf printf
 ll mod=1000000007;

using namespace std;

char s[1009][1009];
int v[1009][1009];
int res[1009][1009];
int n,m;
int x;
int id=1;

void bfs(int i, int j)
{
    v[i][j]=1,x++;
    if(i<n-1&&s[i+1][j]=='.'&&v[i+1][j]==0)
        bfs(i+1, j);
    if(i>0&&s[i-1][j]=='.'&&v[i-1][j]==0)
        bfs(i-1, j);
    if(j<m-1&&s[i][j+1]=='.'&&v[i][j+1]==0)
        bfs(i, j+1);
    if(j>0&&s[i][j-1]=='.'&&v[i][j-1]==0)
        bfs(i, j-1);
}

void buildres(void)
{
    memset(res, 0, sizeof(res));
    int id=0;
    for(int i=0; i<n; i++)
    {
        for(int j=0 ; j<m; j++)
        {
            memset(v, 0, sizeof(v));
            x=0;
            if(s[i][j]=='.' && res[i][j]==0)
                bfs(i,j);
            for(int k=0; k<n; k++)
                for(int l=0; l<m; l++)
                    if(v[k][l]==1)
                        res[k][l]=x;
        }
    }

}

int main()
{
    //fr;
    s(n);
    s(m);
    for(int i=0; i<n; i++)
        scanf("%s",s[i]);
   // for(int i=0; i<n; i++) printf("%s\n",s[i]);
    buildres();
    for(int i=0; i<n; i++){
        for(int j=0; j<m; j++){
            if(s[i][j]=='*')
            {
                x=0;
                memset(v, 0, sizeof(v));
                bfs(i,j);
                s[i][j]=(x)%10+'0';
            }
            /*
            if(s[i][j]=='*'){
                s[i][j]='0'+(1 + (i>0?res[i-1][j]:0) + (i<n-1?res[i+1][j]:0) + (j>0?res[i][j-1]:0) +(j<m-1?res[i][j+1]:0))%10;
                //cout<<(1 + (i>0?res[i-1][j]:0) + (i<n-1?res[i+1][j]:0) + (j>0?res[i][j-1]:0) +(j<m-1?res[i][j+1]:0))%10<<endl;
            }
            cout<<res[i][j]<<' ';*/
        }
            //cout<<endl;
        }
    for(int i=0; i<n; i++) printf("%s\n",s[i]);
    return 0;
}










