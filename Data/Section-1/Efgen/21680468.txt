import java.io.*;
import java.util.*;

public class Main implements Runnable {

    String rev(String s) {
        return new StringBuilder(s).reverse().toString();
    }

    void solve() throws IOException {
        String s = next();
        char d = '.';
        for (char c = 'A'; c <= 'Z'; c++) {
            if (s.indexOf(c) != s.lastIndexOf(c)) {
                d = c;
                break;
            }
        }
        int p1 = s.indexOf(d);
        int p2 = s.lastIndexOf(d);
        if (p1 + 1 == p2) {
            out.print("Impossible");
        } else {
            String w = s.substring(p1, p2) + (s.substring(p2 + 1)) + s.substring(0, p1);
            //out.println(w);

            int len = p2 - p1 - 1;
            int pos1 = len / 2 + 1;

            // out.println(len);
            // out.println(pos1);

            out.println(w.substring(pos1 + 13, 26) + w.substring(0, pos1));
            out.println(rev(w.substring(pos1, pos1 + 13)));
        }
    }

    BufferedReader br;
    StringTokenizer st;
    PrintWriter out;

    public void run() {
        try {
            br = new BufferedReader(new InputStreamReader(System.in));
            out = new PrintWriter(System.out);

            solve();
            br.close();
            out.flush();
            out.close();
        } catch (Exception e) {
            e.printStackTrace();
            System.exit(123);
        }
    }

    String next() throws IOException {
        while (st == null || !st.hasMoreTokens()) {
            String s = br.readLine();
            if (s == null)
                return null;
            st = new StringTokenizer(s);
        }
        return st.nextToken();
    }

    double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static void main(String[] args) {
        new Thread(new Main()).start();
    }
}
//GHIJKLMTABCDEF