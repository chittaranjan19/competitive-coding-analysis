#include<bits/stdc++.h>
using namespace std;

const int MAXN=1e6+100;
const int INF=1e9;

int mp[MAXN];
int a[MAXN];

vector<int>mnr,mnl,mxr,mxl;
int solve(int xl,int xr){

    if(xr-xl==1)return 1;
    int mid=(xl+xr)/2;
    int res=solve(xl,mid)+solve(mid,xr);

    mnr.push_back(a[mid]);  mxr.push_back(a[mid]);
    for(int i=mid+1;i!=xr;i++)mnr.push_back(min(a[i],mnr.back())),  mxr.push_back(max(a[i],mxr.back()));

    mnl.push_back(a[mid-1]);mxl.push_back(a[mid-1]);
    for(int i=mid-2;i>=xl;i--)mnl.push_back(min(a[i],mnl.back())),  mxl.push_back(max(a[i],mxl.back()));

    int r=mnr.size();
    int l=mnl.size();
    {
        int h1=0 , h2=r;
        for(int i=0;i<l;i++){
            while(h1<r && mnr[h1]>mnl[i])mp[mxr[h1] - h1 - 1]+=(h1>=h2) , h1++;
            while(h2>0 && mxr[h2-1]>mxl[i])mp[mxr[h2-1] - h2]+=(h1>=h2) , h2--;
            res+=mp[mnl[i] + i];
        }
        for(int i=0;i<r;i++)mp[mxr[i] - i - 1]=0;
    }

    {
        int h1=0 , h2=l;
        for(int i=0;i<r;i++){
            while(h1<l && mnl[h1]>mnr[i])mp[mxl[h1] - h1 - 1]+=(h1>=h2) , h1++;
            while(h2>0 && mxl[h2-1]>mxr[i])mp[mxl[h2-1] - h2]+=(h1>=h2) , h2--;
            res+=mp[mnr[i] + i];
        }
        for(int i=0;i<l;i++)mp[mxl[i] - i - 1]=0;
    }

    for(int i=0;i<l;i++){
        int len=mxl[i] - mnl[i] + 1;
        int rindex=len - i - 2;
        if(len > i + 1 && mnr[rindex] >= mnl[i] && mxr[rindex] <= mxl[i])res++;
    }

    for(int i=0;i<r;i++){
        int len=mxr[i] - mnr[i] + 1;
        int lindex=len - i - 2;
        if(len > i + 1 && mnl[lindex] >= mnr[i] && mxl[lindex] <= mxr[i])res++;
    }
    mnr.clear();    mxr.clear();    mnl.clear();    mxl.clear();
    return res;
}
int main(){
    int n;  cin>>n;
    for(int i=0;i<n;i++){int x,y;   cin>>x>>y;  a[--x]=y+1e5;}
    cout<<solve(0,n);
}
