uses    math;
const   fi      ='';
        fo      ='';
        oo      =trunc(1e5);

var     n       :longint;
        a       :array[0..oo] of longint;
        d, c    :array[0..oo] of longint;
        f       :text;
        res     :longint;
procedure nhap;
var     i :longint;
begin

        assign(f, fi);
        reset(f);
        read(f, n);
        for i:=1 to n do read(f, a[i]);
        close(f);
end;

procedure optimize;
var     i, j    :longint;
begin
        a[0]:=low(longint);
        a[n+1]:=high(longint);
        c[1]:=1;
        d[n]:=1;
        c[0]:=0;
        d[n+1]:=0;
        res:=0;


        for i:=2 to n do
                if a[i-1]<a[i] then c[i]:=c[i-1]+1 else c[i]:=1;
        for i:=n-1 downto 1 do
                if a[i]<a[i+1] then d[i]:=d[i+1]+1 else d[i]:=1;
        if d[1]=n then
                begin
                        res:=n;
                        exit;
                end;
         res:=max(max(d[1]+1,res),c[n]+1);
        for i:=1 to n do
                if (a[i-1]+1<a[i+1]) then
                        if (c[i-1]+d[i+1]+1 > res) then res:=c[i-1]+d[i+1]+1;
end;

procedure xuat;
begin
        assign(f, fo);
        rewrite(F);
        write(f, res);
        close(f);
end;

BEGIN
        nhap;
        optimize;
        xuat;
END.
