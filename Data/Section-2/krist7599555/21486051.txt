#include <bits/stdc++.h>
using namespace std;

int msock,mday,mcolor;
int sockcolor[200200];
int sockunion[200200];

vector<int> unio[200200];

inline int fi(int num){
	
	return sockunion[num] = sockunion[num]==num ? num : fi(sockunion[num]);
	
}


map<int,int> MAP;

int main(){
	
	int i,j,k;
	
	cin >> msock >> mday >> mcolor;
	
	for(i=1;i<=msock;i++){
		
		cin >> sockcolor[i];
		sockunion[i] = i;
		
	}
	
	for(i=1;i<=mday;i++){
		
		cin >> j >> k;
		sockunion[fi(j)] = fi(k);
		
	}
	
	for(i=1;i<=msock;i++){
		
		unio[fi(i)].push_back(sockcolor[i]);
		
	}
	
	int Count=0;
	
	for(i=1;i<=msock;i++){
		
		MAP.clear();
		int temp,maxx(0);
		for(int ii: unio[i]){
			
			temp = ++MAP[ii];
			maxx = max(maxx,temp);
		}
		
		Count += unio[i].size() - maxx;
		
	}
	
	
	cout << Count;
	
	
}
