#include <bits/stdc++.h>
using namespace std;

int main () {
	int n;
	long long x, y;
	cin >> n >> x >> y;
	vector <int> V [n];
	for (int i = 1; i < n; ++i){
		int p, q;
		cin >> p >> q;
		p--;
		q--;
		V [p].push_back (q);
		V [q].push_back (p);
	}
	if (n == 2){
		cout << x << endl;
		return 0;
	}
	if (n == 3){
		cout << min(2 * x, y + x) << endl;
		return 0;
	}
	if (x < y){
		long long dist [n];
		for (int i = 0; i < n; ++i)dist [i] = -1;
		int s = 0;
		for (int i = 0; i < n; ++i) if (V[i].size () == 1) s = i;
		queue <int> Q;
		Q.push (s);
		dist [s] = 0;
		while (!Q.empty ()){
			int v = Q.front ();
			Q.pop ();
			for (int i = 0; i < V[v].size (); ++i){
				if (dist [V[v][i]] < 0){
					dist [V[v][i]] = dist [v] + 1;
					Q.push (V[v][i]);
				}
			}
		}
			long long int maks = 0, maks2 = 0;
			for (int i = 0; i < n; ++i) maks = max(maks, dist [i]);
			cout << maks * x + (n - maks - 1) * y;
	}
	else{
		int maxd = 0;
		for (int i = 0; i < n; ++i) maxd = max((int)V[i].size(), maxd);
		cout << (maxd == n - 1 ? x + (n - 2)*y : (n - 1) * y)  << endl;

	}
}
