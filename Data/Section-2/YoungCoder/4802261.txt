# include <iostream>
# include <cstdlib>
# include <cstdio>

using namespace std;

const int N = 1000000;
int n, m, l[N], r[N], x[N], a[N], d[N << 2];

void build_tree (int v, int L, int R)
{
    if (L == R)
    {
        a[R] = v;
        return;
    }
    int m = ((L + R) >> 1), nv = (v << 1);
    build_tree (nv, L, m);
    build_tree (nv ^ 1, m + 1, R);
}

void push (int v, int L, int R)
{
    if (L == R)
        return;
    int nv = (v << 1), m = ((L + R) >> 1);
    d[nv] = d[nv ^ 1] = d[v];
    d[v] = 0;
}

void update (int v, int L, int R, int l, int r, int x)
{
    /*cout << v << " " << " " << L << " " << R << "\n";
    system ("pause");*/
    if (l <= L && R <= r)
    {
        d[v] = x;
        push (v, L, R);
        return;
    }

    if (d[v] != 0)
        push (v, L, R);

    if (L > r || R < l)
        return;

    int  m = ((L + R) >> 1), nv = (v << 1);
    update (nv, L, m, l, r, x);
    update (nv ^ 1, m + 1, R, l, r, x);
}

void push_down (int v, int L, int R)
{
    if (L == R)
        return;

    int nv = (v << 1), m = ((L + R) >> 1);

    if (d[v] != 0)
        push (v, L, R);

    push_down (nv, L, m);
    push_down (nv ^ 1, m + 1, R);
}

int main ()
{
    //freopen ("output.txt", "w", stdout);
    cin >> n >> m;

    build_tree (1, 1, n);

    for (int i = 1; i <= m; ++i)
    {
        cin >> l[i] >> r[i] >> x[i];

        /*
        if (x - 1 >= l && x - 1 >= 1)
            update (1, 1, n, l, x - 1, x);
        if (x + 1 <= r && x + 1 <= n)
            update (1, 1, n, x + 1, r, x);
        //push_down (1, 1, n);
        cout << l << " " << r << " " << x << "\n";
        for (int i = 1; i <= n; ++i)
            cout << d[a[i]] << " ";
        cout << "\n\n";*/
    }

    for (int i = n; i >= 1; --i)
    {
        if (x[i] - 1 >= l[i] && x[i] - 1 >= 1)
            update (1, 1, n, l[i], x[i] - 1, x[i]);
        if (x[i] + 1 <= r[i] && x[i] + 1 <= n)
            update (1, 1, n, x[i] + 1, r[i], x[i]);
        /*push_down (1, 1, n);
        for (int i = 1; i <= n; ++i)
            cout << d[a[i]] << " ";
        cout << "\n\n";*/
    }

    push_down (1, 1, n);

    for (int i = 1; i <= n; ++i)
        cout << d[a[i]] << " ";

    return 0;
}
