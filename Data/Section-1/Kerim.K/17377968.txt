#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int dp[3][359][359];
int mod(int x){
	return (x%INF);
}
int open(int x,int y,int z){
	if(!y or !z)
		return 0;
	return dp[x][y-1][z-1];
}
int close(int x,int y,int z){
	return dp[x][y][z+1];
}
int opcl(int x,int y,int z){
	if(!y)
		return 0;
	return dp[x][y-1][z];
}
int nothing(int x,int y,int z){
	return dp[x][y][z];
}
int main(){
	int n,m,x;
	scanf("%d%d%d",&n,&m,&x);
	if(n>m)
		return printf("0\n"),0;
	dp[0][0][0]=1;	
	for(int i=1;i<=m;i++)
		for(int j=0;j<=n;j++)
			for(int k=0;k<=j;k++){
				dp[i&1][j][k]=0;
				if(x==i){
					dp[i&1][j][k]=mod(dp[i&1][j][k]+open((i&1)^1,j,k));
					dp[i&1][j][k]=mod(dp[i&1][j][k]+opcl((i&1)^1,j,k));
				}
				else{
					dp[i&1][j][k]=mod(dp[i&1][j][k]+open((i&1)^1,j,k));
					dp[i&1][j][k]=mod(dp[i&1][j][k]+opcl((i&1)^1,j,k));
					dp[i&1][j][k]=mod(dp[i&1][j][k]+close((i&1)^1,j,k));
					dp[i&1][j][k]=mod(dp[i&1][j][k]+nothing((i&1)^1,j,k));	
				}
			}
	int ret=dp[m&1][n][0];	
	for(int i=1;i<=n;i++)
		ret=mod(ret*i);
	printf("%d\n",ret);	
	return 0;
}

