#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
const LL INF = 0x3f3f3f3f3f3f;

int n,m,k;
LL dp[305][305];
LL cost[305][305];


void solve()
{
    dp[0][0] = 0;
    for (int i=1;i<=n;i++)
    {
        for (int j=0;j<=n;j++)
        {
            dp[i][j] = dp[i-1][j];
            for (int x = 1; x<=i && x<=j; x++)
            {
                dp[i][j] = min(dp[i][j], dp[i-x][j-x] + cost[i-x+1][i]);
            }
        }
    }
    if (dp[n][k] == INF)
        dp[n][k] = -1;
    printf("%I64d\n",dp[n][k]);

}

int main()
{
    scanf("%d%d%d",&n,&m,&k);
    for (int i=0;i<=300;i++)
    {
        for (int j=0;j<=300;j++)
        {
            dp[i][j] = INF;
            cost[i][j] = INF;
        }
    }

    int l,r,c;
    int a,b;
    for (int i=0;i<m;i++)
    {
        scanf("%d%d%d",&l,&r,&c);

        for (a = l; a <= r; a++)
        {
            for (b = a; b <= r; b++)
            {
                cost[a][b] = min(cost[a][b],(LL)c);
            }
        }
    }
    solve();
    return 0;
}
