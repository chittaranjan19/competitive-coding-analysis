#include<iostream>
#include<vector>
#include<algorithm>
#include<cmath>

using namespace std;

int main(){

  long long v;
  int state = 0, state1 = 0, state2 = 0, state3 = 0;
  long long step = 0;
  cin >> v;
  long long i;

  long long temp = 0;
  int n1 = 7;
  while(temp <= v && n1--){
    i = 1;
    temp += 1;
    step++;
    if(temp > v){
      state1 = 1;
      break;
    }
  }
  if(state1)step--;
  state = 0;
  int n2 = 2;
  while(temp <= v && n2--){
    i = 2;
    temp += 8;
    step++;
    if(temp > v){
      state2 = 1;
      break;
    }
  }
  if(state2)step--;
  state3 = 0;
  while(temp <= v){
    i++;
    temp += pow(i, 3);
    step++;
    if(temp > v)state3 ++;
    //i++;
  }
  if(state3)step--;
  
  long long temp1 = temp - pow(i, 3);
  if(v - temp1 > (long long)(pow(i, 3) - pow((i-1), 3))) temp1 += (long long)(pow(i, 3) - pow((i-1), 3));

  cout << step << ' ' << temp1;

  

  /*
  while(v){
    long long temp;
    temp = (long long)cbrtl(v);
    temp = (long long)pow(temp, 3);
    v -= temp;
    step++;
  }
  step--;
  cout << step << 
  */
  return 0;
}
