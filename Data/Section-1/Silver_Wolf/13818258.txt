// in the name of allah

#include<bits\stdc++.h>
#include <stdio.h>

#define debug(x) cout<<#x<<" = "<<x<<endl
#define pb(k) push_back(k)
#define pf(k) push_front(k)
#define pob() pop_back()
#define pof() pop_front()
#define LL long long
#define LB long double
#define PII pair <int,int>
#define PLI pair <long long,int>
#define sin(k) sin(k*PI/180)
#define tan(k) sin(k*PI/180)
#define cot(k) sin(k*PI/180)
#define cos(k) cos(k*PI/180)


using namespace std;

ifstream input("input.txt");
ofstream output("output.txt");

const int MOD=1000*1000*100;
const int MAXN=100+10;
const int MAXM=10+1;
const int INF=1000*1000*1000+9;

long long dp[MAXN][MAXN];
bool check [MAXN][MAXN];
int a,b;


bool CHECK(int n1,int n2){
    int t1=(n1+a-1)/a;
    int t2=(n2+b-1)/b;
    if(t1>n2+1 or t2>n1+1)return false;
    return true;
}



long long solve(int n1,int n2){
    if(check[n1][n2])return dp[n1][n2];
    if(n1==0)return (n2<b+1);
    if(n2==0)return (n1<a+1);
    
    check[n1][n2]=true;
    if(CHECK(n1,n2)){
    dp[n1][n2]=solve(n1-1,n2)+solve(n1,n2-1);
    if(n1>a)dp[n1][n2]-=solve(n1-a-1,n2);
    if(n2>b)dp[n1][n2]-=solve(n1,n2-b-1);
    dp[n1][n2]+=4*MOD;
    dp[n1][n2]%=MOD;
    }
    return dp[n1][n2];
}
int main(){
    int n1,n2;
    
    cin>>n1>>n2>>a>>b;
    //cout<<CHECK(n1,n2)<<endl;
    if(CHECK(n1,n2))cout<<solve(n1,n2)<<endl;
    else cout<<0;
    
}