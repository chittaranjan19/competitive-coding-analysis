#include<stdio.h>
#include<algorithm>
#include<map>
#include<queue>
using namespace std;
int gcd(int a,int b)
{
    if(b==0)
        return a;
    return gcd(b,a%b);
}
map<int,int> m1;
class priortise
{
public:
    bool operator()(const int &x,const int &y)
    {
        return x<y;
    }
};
int main()
{
    int n,a[505*500]={0},i,ans[505]={0},tmp,j;
    scanf("%d",&n);
    priority_queue<int,vector<int>,priortise> q;
    for(i=0;i<n*n;i++)
    {
        scanf("%d",&a[i]);
        q.push(a[i]);
    }
    sort(a,a+n*n);
    for(i=0;i<n;i++)
    {
        while(!q.empty())
        {
            int u=q.top();
            q.pop();
            if(m1[u]==0)
            {
                ans[i]=u;
                break;
            }
            m1[u]--;
        }
        for(j=i;j>=0;j--)
        {
            if(i==j)
            {
                m1[ans[i]]+=1;
            }
            else
            {
                m1[gcd(ans[i],ans[j])]+=2;
            }
        }

    }
    for(i=0;i<n;i++)
    {
        printf("%d ",ans[i]);
    }
    return 0;
}
