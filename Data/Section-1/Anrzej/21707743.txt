#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair
#define all(x) x.begin(), x.end()

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 5e5 + 10, lg = 31, MAXN = 1111;
ll mod = 1e9 + 7;

ll gcd(ll a, ll b) {
	return b ? gcd(b, a % b) : a;
}

ll _gcd(ll a, ll b, ll & x, ll & y) {
	if (a == 0) {
		x = 0; y = 1;
		return b;
	}
	ll _x1, _y1;
	ll d = _gcd(b%a, a, _x1, _y1);
	x = _y1 - (b / a) * _x1;
	y = _x1;
	return d;
}

ll binpow(ll a, ll n) {
	ll res = 1;
	while (n) {
		if (n & 1)
			res *= a;
		a *= a;
		n >>= 1;
		a %= mod;
		res %= mod;
	}
	return res;
}


void term_res(string res){
	cout << res;
	exit(0);
}

ld f(ld x){
	return (x + 1) / (x * 2 + x*x);
}

int n;

int a[111];
int _a[111];
int main()
{
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> _a[i], a[i] = _a[i];
	vector<string> ans1, ans2;
	int R1 = 100, R2 = 100;
	int mn = 123123;
	for (int i = 0; i < n; i++)
		mn = min(mn, a[i]);
	while (1){
		set<int> r;
		for (int i = 0; i < n; i++){
			r.insert(a[i]);
		}
		if (r.size() == 1){
			R1 = *r.begin();
			break;
		}
		set<pair<int, int> > s;
		for (int i = 0; i < n; i++){
			s.insert(mp(-a[i], i));
		}
		int top1 = (*s.begin()).sc;
		s.erase(s.begin());
		int top2 = (*s.begin()).sc;
		a[top1] -= 1;
		a[top2] -= 1;
		a[top1] = max(0, a[top1]);
		a[top2] = max(0, a[top2]);
		string tans = "";
		for (int i = 0; i < n; i++)
			tans += '0';
		tans[top1] = '1';
		tans[top2] = '1';
		ans1.push_back(tans);
	}

	set<pair<int, int> > s;
	for (int i = 0; i < n; i++){
		s.insert(mp(-_a[i], i));
	}
	int top1 = (*s.begin()).sc;
	s.erase(s.begin());
	int top2 = (*s.begin()).sc;
	s.erase(s.begin());
	int top3 = (*s.begin()).sc;
	_a[top1] -= 1;
	_a[top2] -= 1;
	_a[top3] -= 1;
	_a[top1] = max(0, _a[top1]);
	_a[top2] = max(0, _a[top2]);
	_a[top3] = max(0, _a[top3]);
	string tans = "";
	for (int i = 0; i < n; i++)
		tans += '0';
	tans[top1] = '1';
	tans[top2] = '1';
	tans[top3] = '1';
	ans2.push_back(tans);
	while (1){
		set<int> r;
		for (int i = 0; i < n; i++){
			r.insert(_a[i]);
		}
		if (r.size() == 1){
			R2 = *r.begin();
			break;
		}
		set<pair<int, int> > s;
		for (int i = 0; i < n; i++){
			s.insert(mp(-_a[i], i));
		}
		int top1 = (*s.begin()).sc;
		s.erase(s.begin());
		int top2 = (*s.begin()).sc;
		_a[top1] -= 1;
		_a[top2] -= 1;
		_a[top1] = max(0, _a[top1]);
		_a[top2] = max(0, _a[top2]);
		string tans = "";
		for (int i = 0; i < n; i++)
			tans += '0';
		tans[top1] = '1';
		tans[top2] = '1';
		ans2.push_back(tans);
	}
	if (R1 > R2){
		cout << R1 << endl << ans1.size() << endl;
		for (int i = 0; i < ans1.size(); i++) cout << ans1[i] << endl;
	}
	else{
		cout << R2 << endl << ans2.size() << endl;
		for (int i = 0; i < ans2.size(); i++) cout << ans2[i] << endl;
	}
	return 0;
}