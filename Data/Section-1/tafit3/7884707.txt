import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProblemBDiv2 {
    private ProblemBDiv2() throws IOException {
        BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
        String h = rd.readLine();
        String[] q1 = h.split("\\s+");
        int n = q1.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q1[i]);
        }
        int p = a[0];
        int q = a[1];
        int l = a[2];
        int r = a[3];
        int[][] fixed = new int[p][2];
        for(int i=0;i<p;i++) {
            h = rd.readLine();
            q1 = h.split("\\s+");
            fixed[i][0] = pint(q1[0]);
            fixed[i][1] = pint(q1[1]);
        }
        int[][] mv = new int[q][2];
        for(int i=0;i<q;i++) {
            h = rd.readLine();
            q1 = h.split("\\s+");
            mv[i][0] = pint(q1[0]);
            mv[i][1] = pint(q1[1]);
        }
        int res = 0;
        for(int i=l;i<=r;i++) {
            boolean ok = false;
            for(int j=0;j<q;j++) {
                for(int k=0;k<p;k++) {
                    if(overlap(fixed[k], add(mv[j], i))) {
                        ok = true;
                        break;
                    }
                }
                if(ok) {
                    break;
                }
            }
            if(ok) {
                res++;
            }
        }
        out(res);
    }

    private boolean overlap(int[] a, int[] b) {
        return !(a[1] < b[0] || b[1] < a[0]);
    }

    private int[] add(int[] x, int y) {
        return new int[] { x[0] + y, x[1] + y };
    }

    private int pint(String s) {
        return Integer.parseInt(s);
    }

    private long plong(String s) {
        return Long.parseLong(s);
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemBDiv2();
    }
}
