#include <iostream>
#include<bits/stdc++.h>
using namespace std;
int dp[30001][510],c[30001]={0},max1,d;
int recurse(int sum,int diff)
{
    if(sum>max1 )
        return 0;
       if(d>=246 && (diff>=d+246 || diff<=d-246))
        return 0;
       if(dp[sum][d+246-diff]!=-1)
            return dp[sum][d+246-diff];
        if(diff==1)
            dp[sum][d+246-diff]=c[sum]+max(recurse(sum+diff,diff),recurse(sum+diff+1,diff+1) );
        else
      dp[sum][d+246-diff]=c[sum]+max(max(recurse(sum+diff-1,diff-1),recurse(sum+diff,diff)),recurse(sum+diff+1,diff+1) );

      //cout<<sum<<" "<<level<<endl;
      return dp[sum][d+246-diff];
}
int main()
{
   int n,i,p;
   cin>>n>>d;
   max1=-1;
   for(i=0;i<n;i++)
    {
        cin>>p;
        c[p]++;
        max1=max(max1,p);
    }
    memset(dp,-1,sizeof(dp));
    cout<<recurse(d,d)<<endl;
    return 0;
}
