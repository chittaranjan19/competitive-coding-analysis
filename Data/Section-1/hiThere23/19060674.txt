#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 200005
#define maxC 1000000007
#define mp make_pair
#define F first
#define S second

using namespace std;
int n, k, r = 0;
pair<int, int> poi[mn << 1];
long long fac[mn], inv[mn], ans = 0;

long long power(long long a, long long b)
{
    long long re = 1;
    while(b)
    {
        if (b & 1)
            re = (re * a) % maxC;
        a = (a * a) % maxC;
        b >>= 1;
    }
    return re;
}

void makeFC()
{
    fac[0] = inv[0] = 1;
    FOR(i, 1, n)
    {
        fac[i] = (fac[i - 1] * i) % maxC;
        inv[i] = power(fac[i], maxC - 2);
    }
}


long long c(int i, int j)
{
    long long re = (fac[j] * inv[i]) % maxC;
    return (re * inv[j - i]) % maxC;
}

void setup()
{
    cin >> n >> k;
    FOR(i, 1, n)
    {
        cin >> poi[++ r].F;
        poi[r].S = -1;
        cin >> poi[++ r].F;
        poi[r].F ++;
        poi[r].S = 1;
    }
    makeFC();
    sort(poi + 1, poi + r + 1);
}

void xuly()
{
    int last = poi[1].F;
    int num = 0;
    for(int i = 1; i <= r;)
    {
        int cur = poi[i].F;
        if (num >= k)
            ans = (ans + c(k, num) * (cur - last)) % maxC;
        while(poi[i].F == cur)
            num -= poi[i ++].S;
        last = cur;
    }
    cout << ans;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
