#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

bool arr[100005];
vector<int> g[100005];
int res = 0, m;

void dfs(int node, int parent = -1, int curr = 0)
{
  if(!arr[node])
    curr = 0;
  else curr++;
  if(curr > m) return ;
  bool leaf = true;
  for(int i=0;i<g[node].size();i++)
  {
    if(g[node][i] == parent) continue;
    dfs(g[node][i], node, curr);
    leaf = false;
  }
  res += leaf;
}

int main()
{
  int n, x, y;
  scanf("%d %d", &n, &m);
  for(int i=1;i<=n;i++)
    scanf("%d", &arr[i]);
  for(int i=1;i<n;i++)
  {
    scanf("%d %d", &x, &y);
    g[x].pb(y);
    g[y].pb(x);
  }
  dfs(1);
  printf("%d", res);
  return 0;
}
