#include <stdio.h>
const int dx[4]={0,1,0,-1};
const int dy[4]={1,0,-1,0};
int i,j,ii,jj,x,y,d,n,m,it,fi,fr,u[12],qx[1000100],qy[1000100];
char s[1010][1010];
bool uu[1010][1010];
int main() {
  scanf("%d%d",&n,&m);
  for (i=0; i<n; i++) scanf("%s",s[i]);
  for (ii=0; ii<n; ii++) for (jj=0; jj<m; jj++) if (s[ii][jj]=='.') {
    qx[0]=ii; qy[0]=jj; fi=0; fr=1;
    while (fi<fr) {
      i=qx[fi]; j=qy[fi++]; ++it;
      if (s[i][j]!='.') continue;
    for (d=0; d<4; d++) {
      x=i+dx[d];
      y=j+dy[d];
      if (x>=0 && x<n && y>=0 && y<m && s[x][y]>='0' && s[x][y]<='9') u[s[x][y]-'0']=it;
    }
    if (j<m-1 && s[i][j+1]=='.') {
      for (d=0; d<4; d++) {
        x=i+dx[d];
        y=j+dy[d]+1;
        if (x>=0 && x<n && y>=0 && y<m && s[x][y]>='0' && s[x][y]<='9') u[s[x][y]-'0']=it;
      }
      for (d=0; d<10; d++) if (u[d]!=it) break;
      s[i][j]=s[i][j+1]=d+'0';
      for (d=0; d<4; d++) {
        x=i+dx[d];
        y=j+dy[d]+1;
           if (x>=0 && x<n && y>=0 && y<m && s[x][y]=='.' && uu[x][y]==false) {
        uu[x][y]=true; qx[fr]=x; qy[fr++]=y;
       }
      }
    } else if (i<n-1 && s[i+1][j]=='.') {
      for (d=0; d<4; d++) {
        x=i+dx[d]+1;
        y=j+dy[d];
        if (x>=0 && x<n && y>=0 && y<m && s[x][y]>='0' && s[x][y]<='9') u[s[x][y]-'0']=it;
      }
      for (d=0; d<10; d++) if (u[d]!=it) break;
      s[i][j]=s[i+1][j]=d+'0';
      for (d=0; d<4; d++) {
        x=i+dx[d]+1;
        y=j+dy[d];
           if (x>=0 && x<n && y>=0 && y<m && s[x][y]=='.' && uu[x][y]==false) {
        uu[x][y]=true; qx[fr]=x; qy[fr++]=y;
       }
      }
    } else if (j>=0 && s[i][j-1]=='.') {
      for (d=0; d<4; d++) {
        x=i+dx[d];
        y=j+dy[d]-1;
        if (x>=0 && x<n && y>=0 && y<m && s[x][y]>='0' && s[x][y]<='9') u[s[x][y]-'0']=it;
      }
      for (d=0; d<10; d++) if (u[d]!=it) break;
      s[i][j]=s[i][j-1]=d+'0';
      for (d=0; d<4; d++) {
        x=i+dx[d];
        y=j+dy[d]-1;
           if (x>=0 && x<n && y>=0 && y<m && s[x][y]=='.' && uu[x][y]==false) {
        uu[x][y]=true; qx[fr]=x; qy[fr++]=y;
       }
      }
    } else if (i>=0 && s[i-1][j]=='.') {
      for (d=0; d<4; d++) {
        x=i+dx[d]-1;
        y=j+dy[d];
        if (x>=0 && x<n && y>=0 && y<m && s[x][y]>='0' && s[x][y]<='9') u[s[x][y]-'0']=it;
      }
      for (d=0; d<10; d++) if (u[d]!=it) break;
      s[i][j]=s[i-1][j]=d+'0';
            for (d=0; d<4; d++) {
        x=i+dx[d]-1;
        y=j+dy[d];   
           if (x>=0 && x<n && y>=0 && y<m && s[x][y]=='.' && uu[x][y]==false) {
        uu[x][y]=true; qx[fr]=x; qy[fr++]=y;
       }
       }
      
    } else {
      for (d=0; d<10; d++) if (u[d]==it) break;
      if (d<10) s[i][j]=d+'0'; else { puts("-1"); return 0; }
    }
    for (d=0; d<4; d++) {
      x=i+dx[d];
      y=j+dy[d];
      if (x>=0 && x<n && y>=0 && y<m && s[x][y]=='.' && uu[x][y]==false) {
        uu[x][y]=true; qx[fr]=x; qy[fr++]=y;
      }
    }
  }
  }
  for (i=0; i<n; i++) puts(s[i]);
  return 0;
}
