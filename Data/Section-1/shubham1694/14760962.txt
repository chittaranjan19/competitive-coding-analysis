#include <iostream>
#include <string>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <functional>
#include <algorithm>
#include <climits>
#include <list>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <stack>
#include <queue>
#include <vector>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define ll long long
#define f first
#define s second

typedef pair<int, int> pii;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

int check(vector<int> &v)
{
    int i, f, cur, j;
    for(i=0; i<v.size(); i++){
        f = j = 0;
        cur = v[i];
        while(j<8){
            if(cur==1){
                f = 1;
                break;
            }
            cur = v[cur];
            j++;
        }
        if(!f)
            return 0;
    }
    return 1;
}

int generator(vector<int> &v, int left, int k)
{
    //cout << left << "\n";
    if(left==0)
        return check(v);
    int i, ret = 0;
    for(i=1; i<=k; i++){
        v.pb(i);
        ret += generator(v, left-1, k);
        v.pop_back();
    }
    return ret;
}

ll modpow(ll a, ll b)
{
    ll x=1, y=a;
    while(b){
        if(b%2)
            x=(x*y)%mod;
        y=(y*y)%mod;
        b/=2;
    }
    return x;
}

ll temp[] = {0, 1, 2, 9, 64, 625, 7776, 117649, 2097152};

int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    int n, k;
    sd(n), sd(k);
    vector<int> v;
    //int x = generator(v, k, k);
    //cout << x << "\n";
    ll ans = temp[k];
    ans = (ans*modpow(n-k, n-k))%mod;
    cout << ans << "\n";
    return 0;
}
