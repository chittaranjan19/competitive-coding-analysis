#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1001;
const int INF = 1e9 + 7;

using namespace std;

int n, m;
struct L{
    int c, p, vt;
    bool operator <(const L & op) const
    {
        return c < op.c;
    }
} a[MAXN];

struct P{
    int r, vt;
    bool operator < (const P &op) const
    {
        return r < op.r;
    }
} b[MAXN];

int f[MAXN][MAXN];
int ans[MAXN];

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("416C.inp", "r", stdin);
    freopen("416C.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n;
    FORE(i, 1, n) {
        cin >> a[i].c >> a[i].p;
        a[i].vt = i;
    }
    cin >> m;
    FORE(i, 1, m){
        cin >> b[i].r;
        b[i].vt = i;
    }
    sort(a + 1, a + n + 1);
    sort(b + 1, b + m + 1);
    for(int i = 1; i <= n; i++)
    for(int j = 1; j <= m; j++){
        f[i][j] = f[i - 1][j];
        if (a[i].c <= b[j].r) {
                //f[i][j] = max(f[i][j], f[i - 1][j - 1] + a[i].p);
                if (f[i][j] < f[i - 1][j - 1] + a[i].p){
                    f[i][j] = f[i - 1][j - 1] + a[i].p;
                    //ans[a[i].vt] = b[j].vt;
                    //cout<<" "<<a[i].vt<<"=="<<b[j].vt<<endl;
                }
        }
    }
    //cout<< f[n][m] << endl;
    int i = n, j = m;
    int dem = 0;
    while (i){
        if (f[i][j] == f[i - 1][j]) i--;
        else {
            dem++;
            ans[a[i].vt] = b[j].vt;
            i--;
            j--;
        }
    }
    cout<< dem<<" "<<f[n][m]<<endl;
    FORE(i, 1, n) if (ans[i]) cout<<i<<" "<<ans[i]<<endl;
    return 0;
}

