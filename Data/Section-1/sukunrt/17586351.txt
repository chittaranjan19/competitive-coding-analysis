#include <bits/stdc++.h>

using namespace std;
string s;
set <string> store;
int n;
int v[100005];
int valid[100005][5];


int check_back( int i, int k ){
    int x = 3, y = 2;
    if( k == 3 ) x = 2, y = 3;
    if( valid[ i + k ][x] ||
	( valid[i + k][y] && i+k <= n &&
	  s.substr( i, k ) != s.substr( i+k , k ) ) )
	return 1;
    return 0;
}


void check_suffix( int i ){
    if( i < 5 ) return;
    if( check_back( i, 2 ) )
    {
	valid[ i ][2] = 1;
	store.insert( s.substr(i, 2 ) );
    }
    if( check_back( i, 3 ) )
    {
	valid[ i ][3] = 1;
	store.insert( s.substr( i, 3 ) );
    }
}

    
	
    

int main()
{
    ios::sync_with_stdio( false );
    cin >> s;
    n = s.size();
    valid[n][2] = 1;
    valid[n][3] = 1;
    for(int i = n-1; i >= 5; i-- )
	check_suffix( i );
    int res=  0;
    for( auto x: store ) res++;
    cout << res << endl;
    for( auto x: store ){

	cout << x << endl;
    }


    return 0;
    
}
    
