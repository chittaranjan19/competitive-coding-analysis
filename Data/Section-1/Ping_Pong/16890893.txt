#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;

bool comp(pair<pair<int, int>, int> a, pair<pair<int, int>, int> b)
{
    return (a.first.first != b.first.first ? a.first.first < b.first.first : a.second < b.second);
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n, m;
    cin >> n >> m;
    vector<pair<pair<int, int>, int> > event;
    for (int i = 0; i < n; i++)
    {
        int x;
        cin >> x;
        event.push_back(make_pair(make_pair(x, x), 2));
    }
    for (int i = 0; i < m; i++)
    {
        int x, t;
        cin >> x >> t;
        event.push_back(make_pair(make_pair(x - t, x + t), 1));
        event.push_back(make_pair(make_pair(x + t, x - t), 3));
    }
    int ans = 0;
    sort(event.begin(), event.end(), comp);
    set<pair<int, int> > s;
    for (int i = 0; i < event.size(); i++)
        if (event[i].second == 1)
        {
            s.insert(make_pair(event[i].first.second, event[i].first.first));
        }
        else if (event[i].second == 2)
        {
            if (s.size() > 0)
            {
                ans++;
                s.erase(s.begin());
            }
        }
        else
        {
            if (s.find(event[i].first) != s.end())
                s.erase(event[i].first);
        }
    cout << ans;
    return 0;
}
