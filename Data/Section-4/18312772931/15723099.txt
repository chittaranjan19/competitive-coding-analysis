#include<iostream>
#include<algorithm>
#include<cstring>
#include<string>
#include<vector>
#include<cstdio>
#include<cmath>
#include<set>
using namespace std;
#define CRL(a) memset(a,0,sizeof(a))
typedef unsigned __int64 LL;
typedef  __int64 ll;
const int T = 103000;
const int mod = 1000000007;

int Map[1010][1010];
bool vis[1010][1010];


ll comb(double a,double b)
{
	double cm = 1.0;
	while(b>0)
	{
		cm*=(a--)/(b--);
	}
	return cm+0.5;
}

int main()
{
#ifdef zsc
    freopen("input.txt","r",stdin);
#endif

	int n,m,i,j,k,u,v;
	int row,col;

	while(~scanf("%d",&n))
	{
		memset(vis,false,sizeof(vis));
		memset(Map,0,sizeof(Map));
		row = col = 1000;
		for(i=0;i<n;++i){
			scanf("%d%d",&u,&v);
			Map[u][v] = 1;
		}
		ll cnt=0;
		vector<ll> ve;
		for(i=1;i<=row;++i){
			for(j=1;j<=col;++j){
				cnt=0;
				if(!vis[i][j]&&Map[i][j]){
					for(k=0;i+k<=row&&j+k<=col;++k){
						vis[i+k][j+k] = true;
						if(Map[i+k][j+k]){
							cnt++;
						}
					}
				}
				if(cnt>1){
					ve.push_back(cnt);
				}
			}
		}
		memset(vis,false,sizeof(vis));
		for(i=1;i<=row;++i){
			for(j=col;j>=1;--j){
				cnt=0;
				if(!vis[i][j]&&Map[i][j]){
					for(k=0;i+k<=row&&j-k>=0;++k){
						vis[i+k][j-k] = true;
						if(Map[i+k][j-k]){
							cnt++;
						}
					}
				}
				if(cnt>1){
					ve.push_back(cnt);
				}
			}
		}
		cnt = 0;
		for(i=0;i<ve.size();++i){
			cnt += comb(ve[i],2);
		}
		printf("%I64d\n",cnt);
	}

    return 0;
}