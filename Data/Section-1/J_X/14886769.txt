#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

typedef pair<int, int> P;
typedef long long ll;

const int MAXN = 2e5 + 5;
const int INF = 1 << 29;

ll sum[3][MAXN];
P p[3][MAXN], min_[3][MAXN];
int a[MAXN], b[MAXN];

bool C(int m, int i, int j, int k)
{
    ll tmp1 = sum[1][i] * min_[1][m].first;
    ll tmp2 = sum[2][j] * min_[2][m].first;
    return k >= tmp1 + tmp2;
}

int main()
{
    int n, m, k, s;
    while(~scanf("%d%d%d%d", &n, &m, &k, &s))
    {
        min_[1][0] = min_[2][0] = P(INF, 0);
        for(int i = 1; i <= n; ++i)
        {
            scanf("%d", a + i);
            min_[1][i] = min(min_[1][i - 1], P(a[i], i));
        }
        for(int i = 1; i <= n; ++i)
        {
            scanf("%d", b + i);
            min_[2][i] = min(min_[2][i - 1], P(b[i], i));
        }
        int cnt1 = 1, cnt2 = 1;
        for(int i = 1; i <= m; ++i)
        {
            int x, y;
            scanf("%d%d", &x, &y);
            if(x == 1)
            {
                p[1][cnt1++] = P(y, i);
            }
            else
            {
                p[2][cnt2++] = P(y, i);
            }
        }
        sort(p[1] + 1, p[1] + cnt1);
        sort(p[2] + 1, p[2] + cnt2);
        for(int i = 1; i < cnt1; ++i)
        {
            sum[1][i] = sum[1][i - 1] + p[1][i].first;
        }
        for(int i = 1; i < cnt2; ++i)
        {
            sum[2][i] = sum[2][i - 1] + p[2][i].first;
        }
        int day1 = n + 1, day2 = n + 1, ans = -1;
        for(int i = 0; i < cnt1 && i <= k; ++i)
        {
            int j = k - i;
            if(j < 0 || j >= cnt2) continue;
            int l = 1, r = n + 1;
            while(r > l)
            {
                int mid = (l + r) >> 1;
                C(mid, i, j, k) ? r = mid : l = mid + 1;
            }
            if(max(day1, day2) > l)
            {
                day1 = min_[1][l].second;
                day2 = min_[2][l].second;
                ans = i;
            }
        }
        if(~ans)
        {
            printf("%d\n", max(day1, day2));
            for(int i = 1; i <= ans; ++i)
            {
                printf("%d %d\n", p[1][i].second, day1);
            }
            for(int i = 1; i <= k - ans; ++i)
            {
                printf("%d %d\n", p[2][i].second, day2);
            }
        }
        else
        {
            puts("-1");
        }
    }
    return 0;
}
