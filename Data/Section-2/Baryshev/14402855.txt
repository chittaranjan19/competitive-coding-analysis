#include <iostream>
#include <map>
#include <stack>
#include <vector>
#include <cstdio>
#include <stdio.h>
#include<algorithm>

using namespace std;
vector<vector <int> > kal;
long long i,t,g=0,f=0,d=0,s=0,a,b,z=0,x=0,c=0;
long long used[1000]= {0,};
void dfs(int i){
    used[i]=1;
    for (int j=0;j<kal[i].size();j++)
        if (used[kal[i][j]]!=1){
                d++;s=max(s,d);
        dfs(kal[i][j]);
        d--;
    }
    used[i]=0;
}

int main(){

    cin >> a;
    for(i=0;i<a;i++){
        cin >> g;
        kal.resize(g);
        for (int p=0;p<g-1;p++) {cin >> z >> x;
        kal[z-1].push_back(x-1);
        kal[x-1].push_back(z-1);}
        s=0;
        for (t=0;t<g-1;t++) {
            d=0;
            dfs(t);
        }
        c+=s;
        kal.clear();
    }
    cout << c;
    return 0;
}
