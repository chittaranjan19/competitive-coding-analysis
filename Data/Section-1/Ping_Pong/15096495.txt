#include <bits/stdc++.h>
#include <iostream>
#include <cstdio>
#include <stdlib.h>
#include <cmath>
#include <algorithm>

using namespace std;
const int inf = (int)1e9;
const int MAX_N = 50;
const int MOD = (int)1e9 + 7;

int main()
{
    //freopen("slalom.in", "r", stdin);
    //freopen("output.txt", "w", stdout);
    //ios_base::sync_with_stdio(false);
    //cin.tie(NULL);
    int n, k, s, f;
    scanf("%d %d", &n, &k);
    vector<pair<int, int> > v(n * 2), ans;
    for (int i = 0; i < n; i++)
    {
        scanf("%d %d", &s, &f);
        v[i * 2] = make_pair(s, 0);
        v[i * 2 + 1] = make_pair(f, 1);
    }
    sort(v.begin(), v.end());
    int cnt = 0, st = -inf * 2;
    for (int i = 0; i < n * 2; i++)
    {
        if (v[i].second == 0)
            cnt++;
        else
            cnt--;
        if (cnt == k && st == -inf * 2)
            st = v[i].first;
        if (cnt == k - 1 && st != -inf * 2)
        {
            ans.push_back(make_pair(st, v[i].first));
            st = -inf * 2;
        }
    }
    printf("%d\n", ans.size());
    for (int i = 0; i < ans.size(); i++)
        printf("%d %d\n", ans[i].first, ans[i].second);
    return 0;
}
