#include <stdio.h>
#include <iostream>
#include <stdlib.h>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <string>
#include <math.h>

using namespace std;

typedef struct
{
    int i;
    int j;
    int num;
    int cnt;
} chess;

bool comp1(chess a, chess b)
{
    if (a.i < b.i)
        return true;
    else if (a.i == b.i)
        return a.j < b.j;
    else
        return false;
}

bool comp2(chess a, chess b)
{
    if (a.j < b.j)
        return true;
    else if (a.j == b.j)
        return a.i < b.i;
    else
        return false;
}

bool comp3(chess a, chess b)
{
    if (a.i - a.j < b.i - b.j)
        return true;
    else if (a.i - a.j == b.i - b.j)
        return a.i + a.j < b.i + b.j;
    else
        return false;
}

bool comp4(chess a, chess b)
{
    if (a.i + a.j < b.i + b.j)
        return true;
    else if (a.i + a.j == b.i + b.j)
        return a.i - a.j < b.i - b.j;
    else
        return false;
}

int main()
{
    int n, m;
    scanf("%d %d", &n, &m);
    chess a[m];
    for (int i = 0; i < m; i++)
    {
        scanf("%d %d", &a[i].i, &a[i].j);
        a[i].num = i;
        a[i].cnt = 0;
    }
    sort(a, a + m, comp1);
    for (int i = 1; i < m; i++)
        if (a[i].i == a[i - 1].i)
        {
            a[i].cnt++;
            a[i - 1].cnt++;
        }
    sort(a, a + m, comp2);
    for (int i = 1; i < m; i++)
        if (a[i].j == a[i - 1].j)
        {
            a[i].cnt++;
            a[i - 1].cnt++;
        }
    sort(a, a + m, comp3);
    for (int i = 1; i < m; i++)
        if (a[i].j - a[i].i == a[i - 1].j - a[i - 1].i)
        {
            a[i].cnt++;
            a[i - 1].cnt++;
        }
    sort(a, a + m, comp4);
    for (int i = 1; i < m; i++)
        if (a[i].j + a[i].i == a[i - 1].j + a[i - 1].i)
        {
            a[i].cnt++;
            a[i - 1].cnt++;
        }
    int ans[9];
    for (int i = 0; i < 9; i++)
        ans[i] = 0;
    for (int i = 0; i < m; i++)
        ans[a[i].cnt]++;
    for (int i = 0; i < 9; i++)
        printf("%d ", ans[i]);
    return 0;
}
