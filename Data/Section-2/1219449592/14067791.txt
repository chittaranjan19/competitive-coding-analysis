#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <string.h>
#include <queue>
using namespace std;
struct Node
{
	string str;
	bool flag;
	int len;
	char a, b;
	void fun()
	{
		a = str[0];
		b = -1;
		int i = 1;
		len = str.length();
		flag = true;
		while(i < len && a == str[i])	i++;
		if (i < len)	b = str[i];
		i++;
		while(i < len && (a == str[i] || b == str[i]))	i++;
		if (i < len)	flag = false;
		if (flag)
		{
			if (a > b)
			{
				a = a+b;
				b = a-b;
				a -= b;
			}
		}
	}
	friend bool operator ==(const Node aa, const Node bb)
	{
		if (aa.a == -1)
		{
			return aa.b == bb.a || aa.b == bb.b;
		}
		else
		{
			if (bb.a == -1)
			{
				return aa.a == bb.b || bb.b == aa.b;
			}
			else
			{
				return aa.a == bb.a && aa.b == bb.b;
			}
		}
	}
}no[110];
int n;

int main()
{
#ifndef   ONLINE_JUDGE
	freopen("1.txt", "r", stdin);
#endif
	int i, j, m, t, k;
	char a1, a2, b1, b2;
	cin >> n;
	for(i = 0, j = 0; i < n; i++)
	{
		cin >> no[j].str;
		no[j].fun();
		if (no[j].flag)		j++;
	}
	m = 0;
	for (i = 0; i < j; i++)
	{
		t = 0;
		a1 = no[i].a;
		b1 = no[i].b;
		for(k = 0; k < j; k++)
		{	
			a2 = no[k].a;
			b2 = no[k].b;
			if (a1 == -1)
			{
				if (b1 == a2 || b1 == b2)
				{
					t += no[k].len;
					a1 = a2;
					b1 = b2;
				}
			}
			else if (a2 == -1)
			{
				if (a1 == b2 || b1 == b2)
				{
					t += no[k].len;
				}
			}
			else
			{
				if (a1 == a2 && b1 == b2)
				{
					t += no[k].len;
				}
			}
		}
		m = max(m, t);
	}
	cout << m;
	return 0;
}
