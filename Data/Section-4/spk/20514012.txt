#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>
#include<queue>
#include<set>
#include<stack>

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define scantype int
#define lli long long int
#define N 100000


lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}

using namespace std;

lli MOD = 1000000007;

void scan(scantype &x);

int turns,k;
lli pos[100001],neg[100001];
map< pair<int,int> , lli > dp;

lli tot_ways(int n,int t)
{
       if(dp.count({n,t}))return dp[{n,t}];

       if(t==0)
       {
           if(n==0)return 1;
           else  return 0;
       }
       for(int i=-k;i<=k;i++)
       {
              dp[{n,t}] = (dp[{n,t}]+tot_ways(n-i,t-1))%MOD;
       }

       return dp[{n,t}];
}

int main(void)
{
  int a,b;
  cin>>a>>b>>k>>turns;

  for(int i=-(k*turns);i<=(k*turns);i++)
  {
         if(i<0)neg[-i]=tot_ways(i,turns);
         else pos[i] = tot_ways(i,turns);
  }

  lli tot=0;

  for(int i=0;i<=N;i++)
  {
         tot = (tot+pos[i])%MOD;
         tot = (tot+neg[i])%MOD;
  }

  tot = (tot-pos[0]+MOD)%MOD;

  vector<lli> arr;

  for(int i=-(k*turns);i<=(k*turns);i++)
  {
         if(i<0)arr.pb(neg[i]);
         else arr.pb(pos[i]);
  }

  for(int i=1;i<arr.size();i++)
  {
         arr[i] = (arr[i-1]+arr[i])%MOD;
  }
  int len = arr.size();

  lli ans=0;
  for(int i=arr.size()-1,p=k*turns;i>-1;i--)
  {
       lli scoreA = (p+a);

       int index = p+a-1-b+(turns*k);

       lli scob;
       if(index>k*turns)
       {
              scob = arr[len-1];
       }else if(index<0)
       {
              scob = 0;
       }else
       {
              scob = arr[index];
       }

       ans =  (ans + (arr[i]*scob)%MOD)%MOD;
  }
  cout<<ans;
  return 0;
}









void scan(scantype &x)
{
    /*register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}*/

    register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
