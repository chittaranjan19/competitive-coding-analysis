using namespace std;
#include<bits/stdc++.h>
#define db          double
#define ll          long long
#define ull         unsigned long long
#define vi          vector<int>
#define vl          vector<long>
#define vll         vector<ll>
#define pi          pair<int,int>
#define pl          pair<long,long>
#define pll         pair<ll,ll>
#define pb          push_back
#define pf          printf
#define sf          scanf
#define mii         map<int,int>
#define mll         map<ll,ll>
#define II          ({int a; sf("%d",&a); a;})
#define IL          ({long a; sf("%ld",&a); a;})
#define ILL         ({ll a; sf("%lld",&a); a;})
#define ID          ({db a; sf("%lf",&a); a;})
#define IF          ({float a; sf("%f",&a); a;})
#define IC          ({char a; sf("%c",&a); a;})
#define FRI(a,b,c)  for(int i=a;   i<=b; i+=c)
#define FRL(a,b,c)  for(long i=a;  i<=b; i+=c)
#define FRLL(a,b,c) for(ll i=a;    i<=b; i+=c)
#define in          freopen("in.txt","r",stdin)
#define out         freopen("out.txt","w",stdout)
#define PI          2*acos(0.0)
#define mod         1000000007
#define INF         1<<29
#define endl	    '\n'
#define ERR       1e-9
db det(db x1,db y1, db x2, db y2, db x3, db y3)
{
    return ((x1*(y2-y3))-(y1*(x2-x3))+(x2*y3-x3*y2));
}
int main()
{
    ios_base::sync_with_stdio(false);
    ll a=ILL,b=ILL;
    if(b>a)
        pf("-1");
    else
    {
        db p=0.0,q=(db)a;
//        db x,y;
        while(true)
        {
            db mid = (p+q)/2.0;
            ll k= (ll)((db)a/mid);
            db x1, y1, x2, y2, x3, y3,res;
            if(k%2)
                res = det((db)k*mid, mid,(db)(k+1.0)*mid, 0.0, a,b);
            else
                res = det((db)k*mid, 0.0,(db)(k+1.0)*mid, mid, a,b);
            if(abs(res)<=ERR)
            {
                cout<<mid/2.0;
                return 0;
            }
            else if(res<ERR)
            {
                q=mid;
            }
            else
                p=mid;
        }
    }
    return 0;
}
