#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 175781251
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

char s[5005];
bool pal[5005][5005];
int res[5005][5005][2];

int solve(int L, int R, bool b)
{
  if(L == R) return 1;
  int &temp = res[L][R][b];
  if(temp != -1) return temp;
  if(b) return temp = solve(L, R - 1, 1) + pal[L][R];
  return temp = solve(L + 1, R, 0) + solve(L, R - 1, 1) + pal[L][R];
}

int main()
{
  int q, x, y, n;
  scanf("%s", s);
  n = strlen(s);
  for(int i=0;i<n;i++)
  {
    pal[i][i] = true;
    if(i) pal[i - 1][i] = (s[i - 1] == s[i]);
  }
  for(int i=0;i<n;i++)
    for(int j=2;j+i<n;j++)
      if(s[i] == s[i + j])
        pal[i][i + j] = pal[i + 1][i + j - 1];
  setdp(res);
  scanf("%d", &q);
  while(q--)
  {
    scanf("%d %d", &x, &y);
    printf("%d\n", solve(x - 1, y - 1, 0));
  }
  return 0;
}