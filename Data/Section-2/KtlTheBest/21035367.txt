#include <iostream>
#include <vector>
#include <stack>
using namespace std;

#define fr first
#define sc second
#define mkp make_pair
#define pb push_back

int n, m, t, mx, pr[5001], d[5001];
bool u[5001];
vector <pair <int, int> > v[5001];
stack <int> st;

void dfs(int x, int cnt = 1){
	u[x] = 1;
	if(x == n){
		if(cnt > mx){
			mx = cnt;
			int cur = n;
			while(st.size()) st.pop();
			while(pr[cur]){
				st.push(cur);
				cur = pr[cur];
			}
			st.push(1);
		}
		return;
	}
	for(int i = 0; i < v[x].size(); ++ i){
		int to = v[x][i].fr;
		int wg = v[x][i].sc;
		if(u[to] == 0){
			if(d[x] + wg <= t){
				d[to] = d[x] + wg;
				pr[to] = x;
				dfs(to, cnt + 1);
			}
		}	
	}
	u[x] = 0;
}

int main(){
	cin >> n >> m >> t;
	for(int i = 0; i < m; ++ i){
		int x, y, w;
		cin >> x >> y >> w;
		v[x].pb(mkp(y, w));
	}
	dfs(1);
	cout << st.size() << '\n';
	while(st.size()){
		cout << st.top() << ' ';
		st.pop();
	}
	return 0;
}