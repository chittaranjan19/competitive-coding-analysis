#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int P = 239;
const int MAX_N = 200000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

vector<int> z_f(string s)
{
	int len = s.size(), l = -1, r = -1;
	vector<int> z(len);
	for (int i = 0; i < len; i++)
		z[i] = 0;
	for (int i = 1; i < len; i++)
		if (i > r)
		{
			l = i; r = i - 1;
			for (int j = 0; j < len - i; j++)
				if (s[j] == s[i + j])
				{
					z[i]++;
					r++;
				}
				else
					break;
		}
		else
		{
			z[i] = min(z[i - l], r - i + 1);
			for (int j = i + z[i]; j < len; j++)
				if (s[j] == s[j - i])
					z[i]++;
				else
					break;
			if (z[i] > z[i - l])
			{
				l = i;
				r = i + z[i] - 1;
			}
		}
	return z;
}

int main()
{
    //ifstream ifs("input.in");
    //ofstream ofs("output.out");
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    string s1, s2;
    cin >> s1 >> s2;
    int l1 = s1.size(), l2 = s2.size();
    vector<int> v = z_f(s2 + '#' + s1);
    int ans = 0;
    for (int i = 0; i < l1; i++)
        if (v[l2 + 1 + i] >= l2)
        {
            ans++;
            i += l2 - 1;
        }
    cout << ans;
    return 0;
}