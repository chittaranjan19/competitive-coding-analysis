#include <iostream>
#include <vector>
#include <queue>
using namespace std;
vector<vector<int>>g;
int n,m,c=0;
vector<int>answ;
void bfs(int s){
    answ[s] = 0;
    queue<int>q;
    q.push(s);
    while(!q.empty()){
        int temp = q.front();
        q.pop();
        for(int i = 0; i<g[temp].size(); ++i){
            if(answ[g[temp][i]]>answ[temp]+1){
                answ[g[temp][i]] = answ[temp]+1;
                q.push(g[temp][i]);
            }
        }
    }
    
}
int main(){
    cin>>n;
    answ.resize(n,1e8);
    g.resize(n);
    for(int i = 0; i<n; ++i){
            int temp;
            cin>>temp;
            if((i+1<n)){
            g[i].push_back((i+1));
            g[i+1].push_back(i);
            }
                g[i].push_back(temp-1);
    }
    bfs(0);
    for(auto now : answ)
        cout<<now<<" ";
}