#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <math.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <sstream>
#include <queue>
#include <algorithm>
#include <iostream>
#include <stack>
using namespace std;

typedef long long ll;
#define mod 1000000007
#define INF mod
#define pi acos(-1.0)
#define LINF 1000000000000000000LL
#define eps 1e-10
/*
int n;
int a[200005], b[200005];

int main()
{
	cin >> n;

	queue <vector <int> > q;
	set <vector <int> > s;
	vector <int> v;
	for(int i = 0; i < n; i++)
		v.push_back(i);
	q.push(v);
	s.insert(v);
	while(!q.empty())
	{
		vector <int> t = q.front(); q.pop();
		for(int i = 0; i < n; i++)
			if(t[i] == 0)
			{
				swap(t[i], t[(i+1)%n]);
				if(s.find(t) == s.end())
				{
					q.push(t);
					s.insert(t);
				}
				swap(t[i], t[(i+1)%n]);
				swap(t[i], t[(i-1+n)%n]);
				if(s.find(t) == s.end())
				{
					q.push(t);
					s.insert(t);
				}
				break;
			}
	}
	for(set <vector <int> > :: iterator it = s.begin(); it != s.end(); it++)
	{
		for(int i = 0; i < it->size(); i++)
			printf("%d ", (*it)[i]);
		puts("");
	}

	for(int i = 0; i < n; i++)
		scanf("%d", &a[i]);
	for(int i = 0; i < n; i++)
		scanf("%d", &b[i]);

	return 0;
}
*/

int main()
{
	long long s, x;
	cin >> s >> x;
	ll xorRight = x, xorLeft = x;
	for(int i = 0; i < 20; i++)
	{
		if(xorLeft & (1LL << i))
			xorLeft ^= (1LL << i);
	}
	for(int i = 20; i < 40; i++)
	{
		if(xorRight & (1LL << i))
			xorRight ^= (1LL << i);
	}
	map <ll, ll> mp;
	for(ll i = 0; i < (1 << 20); i++)
		if((i+(xorRight^i)) <= s)
			mp[(i+(xorRight^i))]++;
	ll res = 0;
	for(ll i = 0; i < (1 << 20); i++)
	{
		ll ii = (i << 20);
		ll jj = (ii ^ xorLeft);
		if(ii + jj <= s)
			res += mp[s-ii-jj];
	}
	if(s == x)
		res -= 2;
	cout << res << endl;
	return 0;
}