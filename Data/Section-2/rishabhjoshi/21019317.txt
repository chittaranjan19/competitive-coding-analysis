#include <bits/stdc++.h>
#define LL long long
#define FOR(i,c) for(__typeof(c.begin()) i = c.begin(); i != c.end(); i++)
#define F first
#define S second
using namespace std;

const LL mod = 1e9 + 7;

template<typename T> T gcd(T a, T b) { return b == 0?a: gcd(b, a % b); }
template<typename T> T LCM(T a, T b) { return a*(b/gcd(a, b)); }
template<typename T, typename S> T expo(T b, S e, const T &m){if(e <= 1)return e == 0?1: b;\
	return (e&1) == 0?expo((b*b)%m, e>>1, m): (b*expo((b*b)%m, e>>1, m))%m;}
template<typename T, typename S> T expo(T b, S e){if(e <= 1)return e == 0?1: b;\
	return (e&1) == 0?expo((b*b), e>>1): (b*expo((b*b), e>>1));}
template<typename T, typename S> T modinv(T a, S mod) { return expo(a, mod-2, mod); }
template<class T, class S> std::ostream& operator<<(std::ostream &os, const std::pair<T, S> &t) {
	os<<"("<<t.first<<", "<<t.second<<")";
	return os;
}
template<class T> std::ostream& operator<<(std::ostream &os, const std::vector<T> &t) {
	os<<"["; FOR(it,t) { if(it != t.begin()) os<<", "; os<<*it; } os<<"]";
	return os;
}

const int MAXN = 103;
int n, k;
string arr[MAXN];
string pass;

int main() {
    ios_base::sync_with_stdio(false);
    cin >> n >> k;
    for(int i = 1; i <= n; i++) {
        cin >> arr[i];
    }
    cin >> pass;
    int len = pass.size();
    sort(arr + 1, arr + 1 + n, [&](const string &lhs, const string &rhs) {
                return lhs.size() < rhs.size();
            });
    int cnt = 0, same_size = 0, best = 0, worst = 0;
    for(int i = 1; i <= n; i++) {
        if(arr[i].size() == pass.size()) {
            same_size++;
        } else if(arr[i].size() > pass.size()) {
            break;
        } else {
            int add = 1;
            if(cnt == k) {
                add = 5;
            }
            best += add, worst += add;
            cnt++;
        }
    }
    best++;
    worst += 5 * ((same_size - 1) / k);
    worst += (same_size);
    cout << best << ' ' << worst << '\n';
    return 0;
}
