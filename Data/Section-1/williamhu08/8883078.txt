//why are you stalking me?
#include <iostream>
#include <cstdio>
#include <fstream>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <deque>
#include <sstream>
#include <cmath>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>
#include <functional>
#include <ctime>
#include <climits>
#include <cstdlib>
#include <complex>
//#define NDEBUG 1
#include <cassert>

using namespace std;

#define rep(it, v) for (__typeof((v).begin()) it = (v).begin(); it != (v).end(); it++)
#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()

typedef long long ll;
typedef pair<int, int> pii;
const int MAXN = 2014, P = 1e9 + 7;

int N;
char str[MAXN];
bool ispal[MAXN][MAXN], mem[MAXN][MAXN];

bool getdp (int i, int j) {
	bool &ref = ispal[i][j];
	if (mem[i][j]) {
		return ref;
	}
	mem[i][j] = true;
	return ref = (j - i > 1 ? str[i] == str[j] && getdp(i + 1, j - 1) : str[i] == str[j]);
}

int main() {
	//why are you stalking me?
	gets(str + 1);
	N = strlen(str + 1);
	for (int i = 1; i <= N; i++) {
		for (int j = i; j <= N; j++) {
			getdp(i, j);
		}
	}
	ll ans = 0;
	ll prv = 0;
	for (int i = 2; i <= N; i++) {
		for (int j = 0; j < i; j++) {
			prv += ispal[j][i - 1];
		}
		int cur = 0;
		for (int j = i; j <= N; j++) {
			cur += ispal[i][j];
		}
		ans += prv * cur;
	}
	cout << ans << endl;
}