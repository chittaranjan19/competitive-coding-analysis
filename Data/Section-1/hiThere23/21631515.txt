#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 1000006
#define maxC 10000000070000007
#define pb push_back
#define F first
#define S second
#define mp make_pair

using namespace std;
int n, val[mn], a, b;
long long ans = maxC, dp[mn][3];
vector<int> allP;

void extract(int x)
{
    int cur = 1;
    while(++ cur <= sqrt(x))
    if (x % cur == 0)
    {
        allP.pb(cur);
        while(x % cur == 0)
            x /= cur;
    }
    if (x != 1)
        allP.pb(x);
}

void setup()
{
    cin >> n >> a >> b;
    FOR(i, 1, n)
        cin >> val[i];
    extract(val[1]), extract(val[1] - 1), extract(val[1] + 1);
    extract(val[n]), extract(val[n] - 1), extract(val[n] + 1);
    sort(allP.begin(), allP.end());
}

long long dping(int p)
{
    FOR(i, 1, n)
    {
        dp[i][1] = min(dp[i - 1][0], dp[i - 1][1]) + a;
        if (val[i] % p)
        {
            if ((val[i] - 1) % p && (val[i] + 1) % p)
                dp[i][0] = dp[i][2] = maxC;
            else
            {
                dp[i][0] = dp[i - 1][0] + b;
                dp[i][2] = min(dp[i - 1][1], dp[i - 1][2]) + b;
            }
        }
        else
        {
            dp[i][0] = dp[i - 1][0];
            dp[i][2] = min(dp[i - 1][1], dp[i - 1][2]);
        }
    }
    long long re = maxC;
    FOR(i, 0, 2)
        re = min(re, dp[n][i]);
    return re;
}

void xuly()
{
    FOR(i, 0, int(allP.size()) - 1)
    if (i == 0 || allP[i] != allP[i - 1])
        ans = min(ans, dping(allP[i]));
    cout << ans;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    //freopen("FILE.INP", "r", stdin);
    //freopen("FILE.OUT", "w", stdout);
    setup ();
    xuly ();
    return 0;
}
