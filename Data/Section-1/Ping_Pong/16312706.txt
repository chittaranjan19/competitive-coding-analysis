#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int P = 239;
const int MAX_N = 200000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

int main()
{
    //ifstream ifs("input.txt");
    //ofstream ofs("output.txt");
    //freopen("candies.in", "r", stdin);
    //freopen("candies.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n, k, a;
    cin >> n >> k >> a;
    int m;
    cin >> m;
    int b[m];
    for (int i = 0; i < m; i++)
        cin >> b[i];
    int cnt[n + 2];
    for (int i = 0; i <= n + 1; i++)
        cnt[i] = 0;
    cnt[0] = 1; cnt[n + 1] = 1;
    for (int i = 0; i < m; i++)
        cnt[b[i]] = 1;
    int ans = 0, curr = 0;
    for (int i = 1; i <= n + 1; i++)
        if (cnt[i] == 0)
            curr++;
        else
        {
            ans += (curr + 1) / (a + 1);
            curr = 0;
        }
    if (ans >= k)
    {
        cout << -1;
        return 0;
    }
    int l = -1, r = m - 1, mid;
    while (r - l > 1)
    {
        mid = (l + r) / 2;
        for (int i = 0; i <= n + 1; i++)
            cnt[i] = 0;
        cnt[0] = 1; cnt[n + 1] = 1;
        for (int i = 0; i <= mid; i++)
            cnt[b[i]] = 1;
        ans = 0; curr = 0;
        for (int i = 1; i <= n + 1; i++)
            if (cnt[i] == 0)
                curr++;
            else
            {
                ans += (curr + 1) / (a + 1);
                curr = 0;
            }
        if (ans < k)
            r = mid;
        else
            l = mid;
    }
    cout << r + 1;
    return 0;
}
