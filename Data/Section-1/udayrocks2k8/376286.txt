/* understand it at your own risk */
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <deque>
#include <stack>
#include <cmath>
#include <cstdio>
#include <cctype>
#include <cstdlib>
#include <climits>
#include <set>
#include <map>
#include <numeric>
#include <queue>
#include <cstring>
using namespace std;
#define NDEBUG
#ifndef NDEBUG
	#define debug(x) cerr<<#x<<"=\""<<x<<"\""<<" at line#"<<__LINE__<<endl;
	#define hline() cerr<<"-----------------------------------------"<<endl;
	#define print(x)  cerr<<(x)<<endl;
#else
	#define debug(x)
	#define hline()
	#define print(x)
#endif
#define si size()
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef vector<bool> vb;
typedef vector<vector<bool> > vvb;
typedef vector<string> vs;
typedef long long ii;
typedef long long i64;
typedef long long intint;
typedef pair<int,int> pii;
#define mod(A,B) ((((A) % (B)) + (B)) % (B))
#define b2e(A) (A).begin(), (A).end()
#define e2b(A) (A).rbegin(), (A).rend()
#define rev(A) std::reverse(b2e(A))
#define s(A) std::sort(b2e(A))
#define ss(A) std::stable_sort(b2e(A))
#define un(A) std::unique(b2e(A))
#define er(A) (A).erase(un(A), (A).end())
#define Fill(A,B) std::fill(b2e(A), B)
#define minelt(A) *min_element(b2e(A))
#define maxelt(A) *max_element(b2e(A))
#define For(i,a,b) for(int i=a;i<b;i++)
#define Forr(i,a,b) for(int i=b;i>=a;i--)
#define set(A,i) memset(A,i,sizeof A)
#define pb(A,i) A.push_back(i)
#define INF (1<<30)
#define S(x) scanf("%d",&x)
void swap(int &a,int &b) { int t=a;a=b;b=t; }
int __sign;
int __ch;
ii gcd(ii a, ii b) {if (a == 0 || b == 0) return max(a,b); if (b % a == 0) return a; return gcd(b%a, a);}
//int dx[] = {-1,0,1,0}, dy[] = {0,1,0,-1};
//int dx[] = {1,1,1,0,0,-1,-1,-1}, dy[] = {1,0,-1,1,-1,1,0,-1};
//----------------------main code----------------------//
int c[26][26];
int main()
{
	char st[1000],st1[2],st2[2];
	int p;
	scanf("%s",st);
	int ch;
	int n;
	S(ch);S(n);ch++;
	For(i,0,n)
	{
		scanf("%s%s%d",st1,st2,&p);
		c[st1[0]-'a'][st2[0]-'a']=p;
	}
	n=strlen(st);
	int dp[n][ch][26];
	memset(dp,0,sizeof dp);
	For(i,0,n)
	For(j,0,26)
	dp[i][0][j]=-10000000;
	For(i,0,n)
	dp[i][0][st[i]-'a']=0;

	For(i,0,n)
	st[i]-='a';
	For(i,1,n)
	dp[i][0][st[i]]=max(dp[i][0][st[i]],dp[i-1][0][st[i-1]]+c[st[i-1]][st[i]]);

	For(i,1,n)
	For(k,1,ch)
	{
		For(j,0,26)
		For(l,0,26)
		dp[i][k][j]=max(dp[i][k][j],dp[i-1][k-1][l]+c[l][j]);

		For(l,0,26)
		dp[i][k][st[i]]=max(dp[i][k][st[i]],dp[i-1][k][l]+c[l][st[i]]);
	}
	int ans=0;
	For(k,0,ch)
	For(j,0,26)
	ans=max(ans,dp[n-1][k][j]);
	cout<<ans<<endl;
	return 0;
}
