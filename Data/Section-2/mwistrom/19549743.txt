import java.util.*;

public class Q5 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);

        int n = in.nextInt();
        int m = in.nextInt();
        long[] a = new long[n];
        long[] b = new long[m];

        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }

        for (int i = 0; i < m; i++) {
            b[i] = in.nextInt();
        }

        long min_r = 0;
        for (int city_idx = 0; city_idx < n; city_idx++) {

            int tower_idx = Arrays.binarySearch(b, a[city_idx]);
            long closest_tower = Long.MAX_VALUE;
            if (tower_idx < 0) {
                tower_idx = -(tower_idx + 1);
                // System.out.println(city_idx + " " + tower_idx);
                if (tower_idx != b.length)
                    closest_tower = Math.min(closest_tower, Math.abs(a[city_idx] - b[tower_idx]));
                if (tower_idx != 0)
                    closest_tower = Math.min(closest_tower, Math.abs(a[city_idx] - b[tower_idx - 1]));
                // System.out.println("Closeest Tower : " + closest_tower);
            } else {
                closest_tower = 0;
            }
            min_r = Math.max(min_r, Math.abs(closest_tower));
        }

        long max_r = 0;
        int t = 0;

        long min_ct_r;
        for (int c = 0; c < n; c++) {
            if (c - 1 >= 0 && a[c] == a[c - 1])
                continue;
            else
                min_ct_r = Long.MAX_VALUE;
            while (b[t] < a[c]) {
                min_ct_r = Math.min(min_ct_r, Math.abs(b[t] - a[c]));
                if (t == m - 1) {
                    t--;
                    break;
                }
                else
                    t++;
            }
            min_ct_r = Math.min(min_ct_r, Math.abs(b[t] - a[c]));
            
            max_r = Math.max(max_r, min_ct_r);
        }

        // System.out.println(min_r + " " + m_r);
        System.out.println(max_r);

        in.close();
    }
}
