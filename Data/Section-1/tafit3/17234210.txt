import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProblemC {
    BufferedReader rd;

    ProblemC() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int k = intarr()[1];
        int[] a = intarr();
        int n = a.length;
        int used = 0;
        int[] b = new int[n];
        int max = 0;
        int cur = 0;
        int p = 0;
        int maxP = 0;
        for(int i=0;i<n;i++) {
            if(a[i] == 1) {
                cur++;
            } else if(k > 0) {
                b[i] = 1;
                if(used < k) {
                    used++;
                    cur++;
                } else {
                    while(p < i && b[p] == 0) {
                        p++;
                        cur--;
                    }
                    b[p] = 0;
                    p++;
                }
            } else {
                cur = 0;
            }
            if(max < cur) {
                max = cur;
                maxP = p;
            }
        }
        out(max);
        StringBuilder buf = new StringBuilder();
        used = 0;
        for(int i=0;i<n;i++) {
            if(buf.length() > 0) {
                buf.append(' ');
            }
            if(i < maxP) {
                buf.append(a[i]);
            } else if(used < k && a[i] == 0) {
                buf.append(1);
                used++;
            } else {
                buf.append(a[i]);
            }
        }
        out(buf);
    }

    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = split(s);
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }

    public String[] split(String s) {
        if(s == null) {
            return new String[0];
        }
        int n = s.length();
        int start = -1;
        int end = 0;
        int sp = 0;
        boolean lastWhitespace = true;
        for(int i=0;i<n;i++) {
            char c = s.charAt(i);
            if(isWhitespace(c)) {
                lastWhitespace = true;
            } else {
                if(lastWhitespace) {
                    sp++;
                }
                if(start == -1) {
                    start = i;
                }
                end = i;
                lastWhitespace = false;
            }
        }
        if(start == -1) {
            return new String[0];
        }
        String[] res = new String[sp];
        int last = start;
        int x = 0;
        lastWhitespace = true;
        for(int i=start;i<=end;i++) {
            char c = s.charAt(i);
            boolean w = isWhitespace(c);
            if(w && !lastWhitespace) {
                res[x++] = s.substring(last,i);
            } else if(!w && lastWhitespace) {
                last = i;
            }
            lastWhitespace = w;
        }
        res[x] = s.substring(last,end+1);
        return res;
    }

    private boolean isWhitespace(char c) {
        return c==' ' || c=='\t';
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemC();
    }
}
