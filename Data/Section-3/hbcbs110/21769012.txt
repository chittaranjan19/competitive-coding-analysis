#include<iostream>
#include<algorithm>
#include<cstdio>
#include<vector>
#include<stack>
#include<map>
using namespace std;
int c[200005],fa[200005];
long long ans=0,sm,mx;
int n,m,k,tmp;
vector <int> vct[200005];
map <int,int> mp;
void fanit()
{
    for(int i=0;i<200002;i++) fa[i]=i;
}
inline int find(int x)
{
    if(fa[x]==x) return x;
    else return fa[x]=find(fa[x]);
}
void merge(int x,int y)
{
    x=find(x),y=find(y);
    if(x!=y)
    {
        if(x>y) fa[y]=fa[x];
        else fa[x]=fa[y];
    }
}
void fndltk()
{
    map <int,int> :: iterator itm;
    for(int i=1;i<=n;i++) vct[find(i)].push_back(i);
    for(int i=1;i<=n;i++)
    {
        if(vct[i].size()==1) continue;
        mp.clear();
        for(int j=0;j<vct[i].size();j++)
        {
            if(mp.find(c[vct[i][j]])==mp.end()) mp[c[vct[i][j]]]=1;
            else mp[c[vct[i][j]]]=mp[c[vct[i][j]]]+1;
        }
        for(itm=mp.begin(),mx=0,sm=0;itm!=mp.end();itm++)
        {
            mx=max(mx,(long long)(itm->second));
            sm=sm+(long long)(itm->second);
        }
        sm-=mx;
        ans+=sm;
    }
}
int main()
{
    int i,li,ri;
    cin>>n>>m>>k;
    fanit();
    for(i=1;i<=n;i++) scanf("%d",&c[i]);
    for(i=0;i<m;i++)
    {
        scanf("%d%d",&li,&ri);
        merge(li,ri);
    }
    fndltk();
    printf("%I64d\n",ans);
    return 0;
}
    
