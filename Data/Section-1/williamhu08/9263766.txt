//why are you stalking me?
#include <iostream>
#include <cstdio>
#include <fstream>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <deque>
#include <sstream>
#include <cmath>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>
#include <functional>
#include <ctime>
#include <climits>
#include <cstdlib>
#include <complex>
#include <iomanip>
//#define NDEBUG 1
#include <cassert>

using namespace std;

#define rep(it, v) for (auto it = (v).begin(); it != (v).end(); it++)
#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()

typedef long long ll;
typedef pair<int, int> pii;
const int MAXN = 5010;

int N, K;
double P[MAXN];
int T[MAXN];
double dp[MAXN][MAXN];	//dp[song][time] = probability

int main() {
	//why are you stalking me?
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	ios_base::sync_with_stdio(false);
	cin >> N >> K;
	for (int i = 1; i <= N; i++) {
		cin >> P[i] >> T[i];
		P[i] /= 100;
	}
	double s = dp[1][1] = P[1], ans = s;
	//ok let's do the first one
	if (T[1] == 1) {
		dp[1][1] = ans = 1;
	} else {
		for (int i = 2; i <= T[1]; i++) {
			if (i == T[1]) {
				dp[1][i] = 1 - s;
			} else {
				dp[1][i] = dp[1][i - 1] * (1 - P[1]);
				s += dp[1][i];
			}
			ans += dp[1][i];
		}
	}
	for (int i = 2; i <= N; i++) {
		double p = P[i], q = 1 - p;
		int t = T[i];
		double pwr = pow(q, t - 1);
		for (int j = 1; j <= K; j++) {
			double &ref = dp[i][j];
			ref = dp[i][j - 1] * q + dp[i - 1][j - 1] * p;
			if (j > t) {
				ref += pwr * q * (dp[i - 1][j - t] - dp[i - 1][j - t - 1]);
			}
			ans += ref;
		}
	}
	cout << setprecision(9) << ans << endl;
}