#include <iostream>
#include <cstdio>
#include <deque>
#include <algorithm>
using namespace std;

deque <int> order, ans;
int v[5000], d[5000], p[5000];

int main()
{	
	//freopen("c.in", "r", stdin);
	//freopen("c.out", "w", stdout);

	int n;
	cin >> n;
	for(int i = 1; i <= n; i++)
	{
		cin >> v[i] >> d[i] >> p[i];
		order.push_back(p[i]);
	}	



	for(int i = 1; i <= n; i++)
	{
		if(order[0] >= 0)
		{
			ans.push_back(i);                            
		    int k = 1;
		    int gone = 0;
			for(int j = 1; j <= v[i]; j++)
			{
				if(k == order.size())
				{
					break;
				}
			    while(order[k] < 0)
			    {
			    	k++;
			   		if(k == order.size())
			   	 	{
			    		break;
			   		}
			    }
			    if(k == order.size())
				{
					break;
				}
			    order[k] = order[k] - v[i] + j - 1 - gone;
			    if(order[k] < 0)
			    {
			    	 gone = gone + d[i+k];
			    }
			    k++;
			}
			if(gone > 0 && k != order.size())
			{
				while(k < order.size())
				{
					order[k] = order[k] - gone;
					if(order[k] < 0)
					{
						gone += d[i+k];
					}
					k++;
				}	
			}
		}
		/*else
		{

			for(int j = 1; j < order.size(); j++)
			{
				order[j] = order[j] - d[i];	
			}
		}*/
		order.pop_front();
	}

	cout << ans.size() << endl;
	int maxn = ans.size();
	for(int i = 0; i < maxn; i++)
	{
		cout << ans.front() << " ";
		ans.pop_front();	
	}

	return 0;
}
