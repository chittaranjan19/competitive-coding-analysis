#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 2;
const int INF = 1e9 + 7;

using namespace std;
int n, m, k;
struct data{
    int v, w;
};
vector < data > adj[MAXN];
int a[MAXN];
void add(int u, int v, int w)
{
    adj[u].push_back((data){v, w});
}
int dd[MAXN];
int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("B.inp", "r", stdin);
    freopen("B.out", "w", stdout);
    #endif //MIKELHPDATKE

    cin >> n >> m >> k;
    FORE(i, 1, m){
        int u, v, w;
        cin >> u >> v >> w;
        add(u, v, w);
        add(v, u, w);
    }
    if (k == 0){
        cout << -1;
        return 0;
    }
    int ans = INF;
    FORE(i, 1, k) cin >> a[i], dd[a[i]]++;
    FORE(i, 1, k){
        int u = a[i];
        FOR(j, 0, adj[u].size()){
            int v =adj[u][j].v;
            int w = adj[u][j].w;
            if (dd[v] == 0) ans = min(ans, w);
        }
    }
    cout << (ans == INF ? -1 : ans);
    return 0;
}
