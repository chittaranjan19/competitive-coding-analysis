#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"--------------"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
vector<PII>adj[MAXN];
int deg[MAXN],dis[MAXN],arr[MAXN];
int p[MAXN],c[MAXN];
void dfs(int nd,int pr,int cost){
	if(pr!=-1)
		dis[nd]=max(0,dis[pr])+cost;
	tr(it,adj[nd])
		if(it->ff!=pr)
			dfs(it->ff,nd,it->ss);		
}
int main(){
	int n,ans=0;
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
		scanf("%d",arr+i);
	for(int i=2;i<=n;i++){
		scanf("%d%d",&p[i],&c[i]);
		adj[p[i]].pb(mp(i,c[i]));
		deg[i]++;
		deg[p[i]]++;
	}
	dfs(1,-1,0);queue<int>q;
	for(int i=1;i<=n;i++)
		if(deg[i]==1)
			q.push(i);
	while(!q.empty()){
		int nd=q.front();
		q.pop();
		if(arr[nd]<dis[nd]){
			deg[p[nd]]--;
			if(deg[p[nd]]==1)
				q.push(p[nd]);
			ans++;
		}
	}
	printf("%d\n",ans);
	return 0;
}
/*
9 
88 22 83 14 95 91 98 53 11
3 24
7 -8
1 67
1 64
9 65
5 12
6 -80
3 8
*/
