#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <cctype>
#include <vector>
#include <queue>
#include <tr1/unordered_map>
#include <cmath>
#include <map>
#include <bitset>
 
using namespace std;
 
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef long double real;
 
///////////////////////////////UTIL/////////////////////////////////
#define ALL(x) (x).begin(),x.end()
#define CLEAR(v) memset(v, 0, sizeof(v))
#define COPY(a, b) memcpy(a, b, sizeof(a))
#define REP(i,n) for(int i = 0; i<n; i++)
#define REPP(i,a,n) for(int i = a; i<n; i++)
#define REPD(i,n) for(int i = n-1; i>-1; i--)
#define REPDP(i,a,n) for(int i = a; i>-1; i--)
#define pb push_back
#define pf push_front
#define sz size()
#define mp make_pair
/////////////////////////////NUMERICAL//////////////////////////////
#define MOD 1000000007
#define INCMOD(a,b) a = (a+b)%MOD
#define DECMOD(a,b) a = (a+MOD-b)%mod
#define ROUNDINT(a) (int)((double)a + 0.5)
#define INF 2000000000
#define EPS 10e-7
/////////////////////////////BITWISE////////////////////////////////
#define CHECK(S, j) (S & (1 << j))
#define CHECKFIRST(S) (S & (-S)) //PRECISA DE UMA TABELA PARA TRANSFORMAR EM INDICE
#define SET(S, j) S |= (1 << j)
#define SETALL(S, j) S = (1 << j)-1 //J PRIMEIROS
#define UNSET(S, j) S &= ~(1 << j)
#define TOOGLE(S, j) S ^= (1 << j)
//scanf(" %d ", &t);

typedef long long int ll;

ll _sieve_size;
bitset<10000210> bs;
int primes[1000000];
int nprimes;

bool sieve(ll upperbound){
	_sieve_size = upperbound+1;
	bs.set();
	bs[0] = bs[1] = 0;
	nprimes = 0;
	for(ll i = 2; i<=_sieve_size; i++) if(bs[i]){
		for(ll j = i*i; j <= _sieve_size; j+=i) bs[j] = 0;
		primes[nprimes++] = ((int) i);
	}
}

bool tPrime(ll x){
	double raiz = sqrt((double) x);
	int num;
	if(fabs(raiz-floor(raiz)) < EPS){
		num = floor(raiz);
	}
	else if(fabs(ceil(raiz)-raiz) < EPS){
		num = ceil(raiz);
	}
	else return false;

	if(bs[num]) return true;
	return false;
}	

int main(){
	sieve(10000101);
	int n;
	ll x;
	
	while(scanf(" %d ", &n) != EOF){
		REP(i, n){
			cin >> x;
			if(tPrime(x)) printf("YES\n");
			else printf("NO\n");
		}
	}
}

























