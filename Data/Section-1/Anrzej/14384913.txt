#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>

using namespace std;

#define ll long long
#define sc second
#define fs first
#define mp make_pair
#define pb push_back

ll n;
vector<pair<ll, ll> > ans;
ll sqr[4111111];
int main()
{
	cin >> n;
	for (int i = 1; i <= 2e6 + 2; i++)
		sqr[i] = sqr[i - 1] + (ll)i*(ll)i;
	for (ll i = 1; i <= 2e6; i++)
	{
		if (i == 1442249)
		{
			int asdsa = 213;
		}
		ll m = i, l = i, r = 2e18 / (m*m) + 100;
		if (r < i)
			r = i;
		while (l + 1 < r)
		{
			ll mid = (l + r) >> 1;
			ll cur = m*m*mid + sqr[m - 1] - m*(m - 1)*(mid + m) / 2;
			if (cur > n)
				r = mid;
			else
				l = mid;
		}
		ll mid = l;
		if (m*m*mid + sqr[m - 1] - m*(m - 1)*(mid + m) / 2 == n)
		{
			ans.pb(mp(mid, m));
			if (mid != m)
				ans.pb(mp(m, mid));
		}
		mid = r;
		ll ss = m*m*mid + sqr[m - 1] - m*(m - 1)*(mid + m) / 2;
		if (m*m*mid + sqr[m - 1] - m*(m - 1)*(mid + m) / 2 == n && l != r)
		{
			ans.pb(mp(mid, m));
			if (mid != m)
				ans.pb(mp(m, mid));
		}
	}
	sort(ans.begin(), ans.end());
	cout << ans.size() << endl;
	for (int i = 0; i < ans.size(); i++)
		cout << ans[i].fs << ' ' << ans[i].sc << endl;
	return 0;
}