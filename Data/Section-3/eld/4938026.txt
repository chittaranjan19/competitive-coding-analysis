#include<iostream>
#include<vector>

using namespace std;
const int MAXN = 100;

int n , m , z = 0 , s , kk , l;
bool a[MAXN][MAXN];
bool mark[MAXN];
int daraje[MAXN];
vector<int> c;

void input(){
	cin >> n >> m;
	for(int i = 0 , g , h ; i < m ; i++){
		cin >> g >> h;
		a[g][h] = true;
		a[h][g] = true;
		daraje[g]++;
		daraje[h]++;
	}
	for(int i = 1 ; i < n + 1 ; i++)
		if(daraje[i] == 0)
			c.push_back(i);
}

void dfs(int k){
	mark[k] = false;
	cout << k << " " ;
	s++;
	for(int i = 1; i < n + 1 ; i++)
		if(mark[i] && a[k][i] == true){
			dfs(i);
		}
}

void dfs1(int k){
	mark[k] = true;
	for(int i = 1 ; i < n + 1 ; i++)
		if(!mark[i] && a[k][i] == true){
			dfs1(i);
			
		}
	s++;
}

int main(){
	input();
	bool q = false;	
	for(int i = 1 ; i < n + 1 ; i++)
		if(mark[i] == false){
			s = 0;
			dfs1(i);
			if(s > 3)
				q = true;
			if(s == 2)
				kk++;
			if(s == 1)
				l++;
		}
	if(q == true || kk > l)
		cout << "-1";
	else{
		for(int i = 1 ; i < n + 1 ; i++)
			if(mark[i] == true && daraje[i] != 0){
				s = 0;
				dfs(i);
				if(s == 1){
					cout << c[z] << " " << c[z + 1];
					z += 2;
				}
				if(s == 2){
					cout << c[z];
					z++;
				}
				cout << endl;
			}
		for(int i = z ; i < c.size() ; i += 3)
			cout << c[i] << " " << c[i + 1] << " " << c[i + 2] << endl;
			
	}
}