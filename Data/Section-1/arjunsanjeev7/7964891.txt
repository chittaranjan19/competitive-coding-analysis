#include <bits/stdc++.h>

using namespace std;

typedef long long int LL;

class C
{
public:
	LL num;
	LL pos;
};

bool cmp(C x, C y)
{
	if(x.num==y.num) return x.pos<y.pos;
	else return x.num<y.num;
}

int main()
{
	LL n,i,j,num,num1,num2,num3,p,flag=0,count[2001],B[3][2001];
	for(i=0;i<=200;i++) count[i]=0;
	cin>>n;
	C A[n];
	vector<LL> V;
	for(i=0;i<n;i++)
	{
		cin>>num;
		A[i].num=num;
		A[i].pos=i+1;
		count[num]++;
		if(count[num]==2) {flag++; V.push_back(num);}
		if(count[num]==3) {flag=-100000; p=num;}
	}
	if(flag==0 || flag==1) {cout<<"NO"<<endl; return 0;}
	sort(A,A+n,cmp);
	if(flag<0)
	{
		flag=0;
		for(i=0;i<n;i++)
		{
			if(A[i].num==p && flag==0)
			{
				flag=1;
				num1=A[i].pos; num2=A[i+1].pos; num3=A[i+2].pos;
				B[0][i]=num1; B[0][i+1]=num2; B[0][i+2]=num3;
				B[1][i]=num1; B[1][i+1]=num3; B[1][i+2]=num2;
				B[2][i]=num2; B[2][i+1]=num3; B[2][i+2]=num1;
				i+=2;
			}
			else B[0][i]=B[1][i]=B[2][i]=A[i].pos;
		}
	}
	else
	{
		sort(V.begin(),V.end());
		for(i=0;i<n;i++)
		{
			if(A[i].num==V[0])
			{
				num1=A[i].pos; num2=A[i+1].pos;
				B[0][i]=num1; B[0][i+1]=num2;
				B[1][i]=num2; B[1][i+1]=num1;
				B[2][i]=num1; B[2][i+1]=num2;
				i++;
			}
			else if(A[i].num==V[1])
			{
				num1=A[i].pos; num2=A[i+1].pos;
				B[0][i]=num1; B[0][i+1]=num2;
				B[2][i]=num2; B[2][i+1]=num1;
				B[1][i]=num1; B[1][i+1]=num2;
				i++;
			}
			else B[0][i]=B[1][i]=B[2][i]=A[i].pos;
		}
	}
	cout<<"YES"<<endl;
	for(i=0;i<=2;i++)
	{
		for(j=0;j<n;j++)
		{
			cout<<B[i][j]<<" ";
		}
		cout<<endl;
	}
	return 0;
}