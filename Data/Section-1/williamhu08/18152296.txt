(lambda __g, __print, __y: [[[[(lambda __after, __sentinel, __items: __y(lambda __this: lambda: (lambda __i: [(a.append([]), [(lambda __after, __sentinel, __items: __y(lambda __this: lambda: (lambda __i: [(lambda __after: (a[i].append(0), __after())[1] if (s[j] == '.') else (a[i].append(1), __after())[1])(lambda: __this()) for __g['j'] in [(__i)]][0] if __i is not __sentinel else __after())(next(__items, __sentinel)))())(lambda: __this(), [], iter(range(m))) for __g['s'] in [(raw_input())]][0])[1] for __g['i'] in [(__i)]][0] if __i is not __sentinel else __after())(next(__items, __sentinel)))())(lambda: [[(lambda __after: __y(lambda __this: lambda: (b[0].append(b[0][(j - 1)]), (lambda __after: (lambda __target, __slice: [__after() for __target[__slice] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__target[__slice], 1))]][0])(b[0], j) if ((a[0][j] == 0) and (a[0][(j - 1)] == 0)) else __after())(lambda: [__this() for __g['j'] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__g['j'], 1))]][0]))[1] if (j < m) else __after())())(lambda: [(lambda __after: __y(lambda __this: lambda: (b.append([]), (b[i].append(b[(i - 1)][0]), (lambda __after: (lambda __target, __slice: [__after() for __target[__slice] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__target[__slice], 1))]][0])(b[i], 0) if ((a[i][0] == 0) and (a[(i - 1)][0] == 0)) else __after())(lambda: [(lambda __after: __y(lambda __this: lambda: (b[i].append(((b[i][(j - 1)] + b[(i - 1)][j]) - b[(i - 1)][(j - 1)])), (lambda __after: (lambda __target, __slice: [__after() for __target[__slice] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__target[__slice], 1))]][0])(b[i], j) if ((a[i][j] == 0) and (a[(i - 1)][j] == 0)) else __after())(lambda: (lambda __after: (lambda __target, __slice: [__after() for __target[__slice] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__target[__slice], 1))]][0])(b[i], j) if ((a[i][j] == 0) and (a[i][(j - 1)] == 0)) else __after())(lambda: [__this() for __g['j'] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__g['j'], 1))]][0])))[1] if (j < m) else __after())())(lambda: [__this() for __g['i'] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__g['i'], 1))]][0]) for __g['j'] in [(1)]][0]))[1])[1] if (i < n) else __after())())(lambda: [(x.append([]), (lambda __after, __sentinel, __items: __y(lambda __this: lambda: (lambda __i: [(x[0].append(0), __this())[1] for __g['j'] in [(__i)]][0] if __i is not __sentinel else __after())(next(__items, __sentinel)))())(lambda: [(lambda __after: __y(lambda __this: lambda: (x.append([]), (x[i].append(0), (lambda __after: (lambda __target, __slice: [__after() for __target[__slice] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__target[__slice], 1))]][0])(x[i], 0) if ((a[i][0] == 0) and (a[(i - 1)][0] == 0)) else __after())(lambda: [(lambda __after: __y(lambda __this: lambda: (x[i].append(x[i][(j - 1)]), (lambda __after: (lambda __target, __slice: [__after() for __target[__slice] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__target[__slice], 1))]][0])(x[i], j) if ((a[i][j] == 0) and (a[(i - 1)][j] == 0)) else __after())(lambda: [__this() for __g['j'] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__g['j'], 1))]][0]))[1] if (j < m) else __after())())(lambda: [__this() for __g['i'] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__g['i'], 1))]][0]) for __g['j'] in [(1)]][0]))[1])[1] if (i < n) else __after())())(lambda: [(y.append([]), (y[0].append(0), [(lambda __after: __y(lambda __this: lambda: (y[0].append(0), (lambda __after: (lambda __target, __slice: [__after() for __target[__slice] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__target[__slice], 1))]][0])(y[0], j) if ((a[0][j] == 0) and (a[0][(j - 1)] == 0)) else __after())(lambda: [__this() for __g['j'] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__g['j'], 1))]][0]))[1] if (j < m) else __after())())(lambda: [(lambda __after: __y(lambda __this: lambda: (y.append([]), (y[i].append(0), [(lambda __after: __y(lambda __this: lambda: (y[i].append(y[(i - 1)][j]), (lambda __after: (lambda __target, __slice: [__after() for __target[__slice] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__target[__slice], 1))]][0])(y[i], j) if ((a[i][j] == 0) and (a[i][(j - 1)] == 0)) else __after())(lambda: [__this() for __g['j'] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__g['j'], 1))]][0]))[1] if (j < m) else __after())())(lambda: [__this() for __g['i'] in [((lambda o, v: (lambda r: o + v if r is NotImplemented else r)(object.__getattribute__(object.__getattribute__(type(o), '__dict__').get('__iadd__', lambda self, other: NotImplemented), '__get__')(o, type(o))(v)))(__g['i'], 1))]][0]) for __g['j'] in [(1)]][0])[1])[1] if (i < n) else __after())())(lambda: [(lambda __after, __sentinel, __items: __y(lambda __this: lambda: (lambda __i: [[[[[[(lambda __after: (__print(b[i2][j2]), __after())[1] if ((i1 == 0) and (j1 == 0)) else (lambda __after: (__print(((b[i2][j2] - b[i2][(j1 - 1)]) - y[i2][j1])), __after())[1] if (i1 == 0) else (lambda __after: (__print(((b[i2][j2] - b[(i1 - 1)][j2]) - x[i1][j2])), __after())[1] if (j1 == 0) else (__print((((((((b[i2][j2] - b[(i1 - 1)][j2]) - b[i2][(j1 - 1)]) + b[(i1 - 1)][(j1 - 1)]) - x[i1][j2]) + x[i1][(j1 - 1)]) - y[i2][j1]) + y[(i1 - 1)][j1])), __after())[1])(lambda: __after()))(lambda: __after()))(lambda: __this()) for __g['j2'] in [((int(s[3]) - 1))]][0] for __g['i2'] in [((int(s[2]) - 1))]][0] for __g['j1'] in [((int(s[1]) - 1))]][0] for __g['i1'] in [((int(s[0]) - 1))]][0] for __g['s'] in [(raw_input().split(' '))]][0] for __g['i'] in [(__i)]][0] if __i is not __sentinel else __after())(next(__items, __sentinel)))())(lambda: None, [], iter(range(q))) for __g['q'] in [(int(raw_input()))]][0]) for __g['i'] in [(1)]][0]) for __g['j'] in [(1)]][0])[1])[1] for __g['y'] in [([])]][0]) for __g['i'] in [(1)]][0], [], iter(range(m))))[1] for __g['x'] in [([])]][0]) for __g['i'] in [(1)]][0]) for __g['j'] in [(1)]][0] for __g['b'] in [([[0]])]][0], [], iter(range(n))) for __g['a'] in [([])]][0] for __g['m'] in [(int(s[1]))]][0] for __g['n'] in [(int(s[0]))]][0] for __g['s'] in [(raw_input().split(' '))]][0])(globals(), __import__('__builtin__').__dict__['print'], (lambda f: (lambda x: x(x))(lambda y: f(lambda: y(y)()))))