#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>

using namespace std;

void scan(int &x); //IMPORTANT: for positive only

vector<int> AL[100001];
bool visited[100001]={false};
bool flag;

void dfs(int,int);

int main(void)
{

  int city,road,x,y;

  cin >> city >> road;

  for(int i=1; i<=road; i++)
  {
      scan(x);
      scan(y);

      AL[x].push_back(y);
      AL[y].push_back(x);
  }
  int total = 0;
  for(int i=1;i<road+1;i++)
  {
      if(!visited[i])
      {
          flag = false; // true -> graph , false -> tree
          dfs(i,0);

          if(!flag)
                total++;
      }
  }
  cout << total;
  return 0;
}

void dfs(int s,int parent)
{
    visited[s] = true;

    for(int i=0;i<AL[s].size();i++)
    {
        if(AL[s][i]==parent) continue;
        else if(!visited[AL[s][i]])  dfs(AL[s][i],s);
        else flag = true;
    }
}











void scan(int &x)
{
    register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}

   /* register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x; */
}
