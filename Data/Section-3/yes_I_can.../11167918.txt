using namespace std;
#include<bits/stdc++.h>
#define db          double
#define ll          long long
#define ull         unsigned long long
#define vi          vector<int>
#define vl          vector<long>
#define vll         vector<ll>
#define pi          pair<int,int>
#define pl          pair<long,long>
#define pll         pair<ll,ll>
#define pb          push_back
#define pf          printf
#define sf          scanf
#define mii         map<int,int>
#define mll         map<ll,ll>
#define II          ({int a; sf("%d",&a); a;})
#define IL          ({long a; sf("%ld",&a); a;})
#define ILL         ({ll a; sf("%lld",&a); a;})
#define ID          ({db a; sf("%lf",&a); a;})
#define IF          ({float a; sf("%f",&a); a;})
#define IC          ({char a; sf("%c",&a); a;})
#define FRI(a,b,c)  for(int i=a;   i<=b; i+=c)
#define FRL(a,b,c)  for(long i=a;  i<=b; i+=c)
#define FRLL(a,b,c) for(ll i=a;    i<=b; i+=c)
#define in          freopen("in.txt","r",stdin)
#define out         freopen("out.txt","w",stdout)
#define PI          2*acos(0.0)
#define mod         1000000007
#define INF         1<<29
template<typename P> struct Cmp
{
    bool operator()(const P &p1, const P &p2)
    {
        if(p1.second < p2.second)
            return true;
//        if(p1.second == p2.second) return p1.first < p2.first;
        return false;
    }
};
int main()
{
    ll n=ILL;
    vector<pll>v;
    for(ll i=0; i<n; i++)
    {
        ll x=ILL,t=ILL;
        v.pb(make_pair(x,t));
    }
    sort(v.begin(), v.end());
    ll count=0;
    ll pointer;
    for(ll i=0; i<n; i++)
    {
        if(i==0)
        {
            count++;
            pointer=v[i].first;
        }
        else if(i==n-1)
            count++;
        else
        {
            if(v[i].first-v[i].second>pointer)
            {
                count++;
                pointer=v[i].first;
            }
            else if(v[i].first+v[i].second<v[i+1].first)
            {
                count++;
                pointer=v[i].first+v[i].second;
            }
            else
                pointer = v[i].first;
        }
    }
    cout<<count;
    return 0;
}
