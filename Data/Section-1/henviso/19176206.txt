#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <stack>
#include <algorithm>
#include <cctype>
#include <vector>
#include <queue>
#include <tr1/unordered_map>
#include <cmath>
#include <map>
#include <bitset>
#include <set>
#include <iomanip>
#include <utility>    
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector< ii > vii;
///////////////////////////////UTIL/////////////////////////////////
#define ALL(x) (x).begin(),x.end()
#define CLEAR0(v) memset(v, 0, sizeof(v))
#define CLEAR(v, x) memset(v, x, sizeof(v))
#define COPY(a, b) memcpy(a, b, sizeof(a))
#define CMP(a, b) memcmp(a, b, sizeof(a))
#define REP(i,n) for(int i = 0; i<n; i++)
#define REPP(i,a,n) for(int i = a; i<n; i++)
#define REPD(i,n) for(int i = n-1; i>-1; i--)
#define REPDP(i,a,n) for(int i = n-1; i>=a; i--)
#define pb push_back
#define pf push_front
#define sz size()
#define mp make_pair
/////////////////////////////NUMERICAL//////////////////////////////
#define INF 0x3f3f3f3f
#define EPS 1e-9
/////////////////////////////BITWISE////////////////////////////////
#define CHECK(S, j) (S & (1 << j))
#define CHECKFIRST(S) (S & (-S)) 
#define SET(S, j) S |= (1 << j)
#define SETALL(S, j) S = (1 << j)-1  
#define UNSET(S, j) S &= ~(1 << j)
#define TOOGLE(S, j) S ^= (1 << j)
///////////////////////////////64 BITS//////////////////////////////
#define LCHECK(S, j) (S & (1ULL << j))
#define LSET(S, j) S |= (1ULL << j)
#define LSETALL(S, j) S = (1ULL << j)-1ULL 
#define LUNSET(S, j) S &= ~(1ULL << j)
#define LTOOGLE(S, j) S ^= (1ULL << j)
//__builtin_popcount(m)
//scanf(" %d ", &t);
//L[i]=L[i/2]+1;

#define PI 3.14159265359

int n;
int L[200100];
int a[200100];
int b[200100];
int pda[20][200100];
int pdb[20][200100];

void precmp(){
	L[0]=-1;
	for(int i = 0; i<n; i++){ 
		L[i+1]=L[(i+1)/2]+1;
		pda[0][i] = a[i]; 
		pdb[0][i] = b[i]; 
	}
	for(int i = 1; (1 << i) <= n; i++){
		for(int j = 0; (j + (1<<i) - 1) < n; j++){
			pda[i][j] = max(pda[i-1][j], pda[i-1][j + (1 << (i-1))]);
			pdb[i][j] = min(pdb[i-1][j], pdb[i-1][j + (1 << (i-1))]);
		}
	}
}

int ra(int i, int j){
	int k = L[j-i+1];
	return max(pda[k][i], pda[k][j - (1 << k) + 1]);
}

int rb(int i, int j){
	int k = L[j-i+1];
	return min(pdb[k][i], pdb[k][j - (1 << k) + 1]);
}

int main(){
	cin >> n;
	REP(i, n) cin >> a[i];
	REP(i, n) cin >> b[i];
	precmp();
	ll tans = 0LL;
	REP(i, n){
		if(ra(i,i) != rb(i, i)) continue;
		int hi = n-i-1, lo = 0, mid, ans = 0;
		while(hi-lo>1){
			mid = (hi+lo)/2;
			if(ra(i, i+mid) == rb(i, i+mid)){
				lo = mid;
				ans = mid;
			}
			else hi = mid;
		}
		tans += (ans+1LL);
	}
	cout << tans << endl;
}
