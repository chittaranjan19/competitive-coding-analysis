#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
/*
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
ordered_set s;
*/
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN];
int main(){
	int a,x,sum=0,k;
	cin>>k;
	vector<int>v;
	for(int i=0;i<12;i++)
	cin>>x,v.pb(x);
	sort(all(v));
	for(int i=v.size()-1;i>=0;i--){
		if(sum>=k){
			cout<<v.size()-1-i<<endl;
			return 0;
		}
		sum+=v[i];
	}
	if(sum>=k){
		cout<<v.size()<<endl;
	}
	else
		cout<<"-1"<<endl;
	return 0;
}
