#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 3e5 + 10, lg = 20, MAXN = 1111;
ll mod = 1e9 + 7;

ll gcd(ll a, ll b) {
	return b ? gcd(b, a % b) : a;
}

ll _gcd(ll a, ll b, ll & x, ll & y) {
	if (a == 0) {
		x = 0; y = 1;
		return b;
	}
	ll _x1, _y1;
	ll d = _gcd(b%a, a, _x1, _y1);
	x = _y1 - (b / a) * _x1;
	y = _x1;
	return d;
}

ll binpow(ll a, ll n) {
	ll res = 1;
	while (n) {
		if (n & 1)
			res *= a;
		a *= a;
		n >>= 1;
		a %= mod;
		res %= mod;
	}
	return res;
}
int n;
int c[N];
ll dp[N][2];
string s[N];
int main()
{
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> c[i];
	for (int i = 0; i < n; i++){
		dp[i][0] = dp[i][1] = 2e18;
	}
	dp[0][0] = 0, dp[0][1] = c[0];
	for (int i = 0; i < n; i++){
		cin >> s[i];
	}
	for (int i = 1; i < n; i++){
		string rs = s[i];
		reverse(rs.begin(), rs.end());
		string prs = s[i - 1];
		reverse(prs.begin(), prs.end());
		if (dp[i-1][0] != 2e18){
			if (s[i] > s[i-1])
				dp[i][0] = min(dp[i - 1][0], dp[i][0]);
			if (rs > s[i - 1])
				dp[i][1] = min(dp[i][1], dp[i-1][0] + c[i]);
		}
		if (dp[i - 1][1] != 2e18){
			if (s[i] > prs)
				dp[i][0] = min(dp[i - 1][1], dp[i][0]);
			if (rs > prs)
				dp[i][1] = min(dp[i - 1][1] + c[i], dp[i][1]);
		}
	}
	ll ans = min(dp[n - 1][0], dp[n - 1][1]);
	if (ans == 2e18)
		cout << -1;
	else cout << ans;
	return 0;
}