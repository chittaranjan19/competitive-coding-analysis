#include <iostream>
#include <vector>
#include <deque>
using namespace std;
  
int a[1000001];
                
vector <int> ari;
vector <int> arj;
deque <int> maxl;
deque <int> minl;




int main()


{
	/*freopen("input.txt", "r", stdin); 	freopen("output.txt", "w", stdout);*/
	int n, k, i;
	cin >> n >> k;
	for (int i = 1; i <= n; i++)
	{
		cin >> a[i];
	}

	if( n == 1)
	{
		cout << a[1] << " " << a[1] << endl << a[1] << " " << a[1];
		return 0;
	}

	int j = 2;
	i = 1;
	int cnt = 1;
	int maxi = -1;  
	maxl.push_back(1);
	minl.push_back(1);
	

	while ( i <= n )
	{       
//		cout << i << " " << j << endl;          
		cnt++;

		while ( (maxl.size() != 0) && (a[j] >= a[maxl.back()]) )
		{
			maxl.pop_back();	
		}
		maxl.push_back(j);

//		cout << 1 << endl;

		while ( (minl.size() != 0) && (a[j] <= a[minl.back()]) )
		{
//			cout << j << " " << minl.back() << " --- " << minl.size() << endl;
			minl.pop_back();
//			cout << j << " " << " --- " << minl.size() << endl;
		}
		minl.push_back(j);

//		cout << 2 << endl;

		while ( a[maxl[0]] - a[minl[0]] > k )
		{
			if ( maxl[0] == i )
			{
				maxl.pop_front();	
			}
			if ( minl[0] == i )
			{
				minl.pop_front();
			}
			i++;
			cnt--;
		}

//		cout << i << " " << j << endl;
//		cout << maxl.size() << " " << minl.size() << " " << cnt << endl << endl;
		
		if ( maxi < cnt)
		{
			maxi = cnt;
		}
		if (j == n)
		{
			break;
		}
		j++;
	}
	    
	cout << maxi << " ";

	if( maxi == 1)
	{
		cout << n << endl;
		for(int i = 1; i <=n ; i++)
		{
			cout << i << " " << i << endl;
		}
		return 0;
	}
	    
	int b = 0;  
	j = 2;
	i = 1;
	cnt = 1;    
	while(!maxl.empty())
	{
		maxl.pop_back();
	}
	while(!minl.empty())
	{
		minl.pop_back();
	}
	maxl.push_back(1);
	minl.push_back(1);
		

	while ( i <= n )
	{       
//		cout << i << " " << j << endl;          
		cnt++;

		while ( (maxl.size() != 0) && (a[j] >= a[maxl.back()]) )
		{
			maxl.pop_back();	
		}
		maxl.push_back(j);

//		cout << 1 << endl;

		while ( (minl.size() != 0) && (a[j] <= a[minl.back()]) )
		{
//			cout << j << " " << minl.back() << " --- " << minl.size() << endl;
			minl.pop_back();
//			cout << j << " " << " --- " << minl.size() << endl;
		}
		minl.push_back(j);

//		cout << 2 << endl;

		while ( a[maxl[0]] - a[minl[0]] > k )
		{
			if ( maxl[0] == i )
			{
				maxl.pop_front();	
			}
			if ( minl[0] == i )
			{
				minl.pop_front();
			}
			i++;
			cnt--;
		}

//		cout << i << " " << j << endl;
//		cout << maxl.size() << " " << minl.size() << " " << cnt << endl << endl;
		
		if ( maxi == cnt)
		{
			ari.push_back(i);
			arj.push_back(j);
			b++;
		}
		if (j == n)
		{
			break;
		}
		j++;
	}
	
	
	cout << b << endl;

	for ( int i = 0; i <= (b-1); i++)
	{
		cout << ari[i] << " " << arj[i] << endl;
	}

	   
	return 0;
}

