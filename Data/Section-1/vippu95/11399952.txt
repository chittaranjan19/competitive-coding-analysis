#include<bits/stdc++.h>

using namespace std;

#define lli long long
#define pb push_back
#define mp make_pair
#define gc getchar_unlocked
#define lld "%I64d"
#define DEBUG(x) cout<<">value ("<<#x<<") : "<<x<<endl;
#define mod 1000000007

const int limit = 1000005;
int a[limit];
int b[limit];
lli bit[limit];
lli sum[limit];

void update(int idx){
    while(idx < limit){
        bit[idx]++;
        idx += idx & (-idx);
    }
    return;
}

lli query(int idx){
    lli ans = 0;
    while(idx > 0){
        ans += bit[idx];
        idx -= idx & (-idx);
    }
    return ans;
}

void updatesum(int idx , lli v){
    while(idx < limit){
        sum[idx] += v;
        idx += idx & (-idx);
    }
    return;
}

lli querysum(int idx){
    lli ans = 0;
    while(idx > 0){
        ans += sum[idx];
        idx -= idx & (-idx);
    }
    return ans;
}

map<int,int> htab;

int main(){
   for(int i=0;i<limit;i++){
        bit[i] = 0;
        sum[i] = 0;
   }

   int n,x;
   cin>>n;
   lli ans = 0;
   int cnt = 1;
   for(int i=0;i<n;i++) {
        cin>>a[i];
        b[i] = a[i];
   }
   sort(a,a+n);
   for(int i=0;i<n;i++){
        if(htab.find(a[i]) == htab.end()){
            htab[a[i]] = cnt;
            cnt++;
        }
   }
   for(int i=0;i<n;i++){
        b[i] = htab.find(b[i])->second;
   }
   for(int i=0;i<n;i++){
        x = b[i];
        update(x);
        lli inv = query(limit-1)-query(x);
        updatesum(x,inv);
        ans += querysum(limit-1)-querysum(x);
        /*DEBUG(x);
        DEBUG(query(limit-1));
        DEBUG(query(x));
        DEBUG(querysum(limit-1));
          DEBUG(querysum(x));
        DEBUG(ans);*/
   }
   cout<<ans<<endl;
   return 0;
}
