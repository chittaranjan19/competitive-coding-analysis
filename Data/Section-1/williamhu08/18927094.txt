#include <bits/stdc++.h>

using namespace std;
typedef complex<int> point;

int N;
char S[15];

point getloc (int x) {
	if (x == 0) {
		return point(3, 1);
	}
	x--;
	return point(x / 3, x % 3);
}

bool isloc (point p) {
	for (int i = 0; i < 10; i++) {
		if (p == getloc(i)) {
			return true;
		}
	}
	return false;
}

int main() {
	scanf("%d %s", &N, S);
	for (int i = 0; i < N; i++) {
		S[i] -= '0';
	}
	vector<point> diff;
	for (int i = 1; i < N; i++) {
		diff.push_back(getloc(S[i]) - getloc(S[i - 1]));
	}
	
	for (int i = 0; i < 10; i++) {
		if (i == S[0]) {
			continue;
		}
		//start from here!
		bool bad = false;
		point loc = getloc(i);
		for (point p : diff) {
			loc += p;
			if (!isloc(loc)) {
				bad = true;
				break;
			}
		}

		if (!bad) {
			puts("NO");
			return 0;
		}
	}
	puts("YES");
}
