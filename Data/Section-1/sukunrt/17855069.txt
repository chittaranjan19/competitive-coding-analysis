#include <bits/stdc++.h>

using namespace std;

int p[100005][2];
int a[2],b[2],t[2];
int cand1, cand2;
int n;
long double dist( int x, int y, int a, int b){
    return sqrt( (long double)(x-a) * (long double)(x-a) + (long double)(y-b) * (long double)(y-b) );
}

long double solve( int x, int y, int r, int s ){

    long double mi = 1000000000;
    for(int i = 0; i < n; i++){
	long double adj = dist( x,y,p[i][0], p[i][1] ) - dist(t[0],t[1], p[i][0], p[i][1] );
	if( adj < mi ) {
	    mi = adj;
	    cand1 = i;
	}
    }
    long double sec = 0;
    long double mis = 100000000;
    for(int i = 0; i < n; i++){
	if( i == cand1 ) continue;
	long double sec = dist( r,s,p[i][0], p[i][1] ) - dist(t[0],t[1], p[i][0], p[i][1] );
	if( sec < mis ) mis = sec;

    }
    return (min( mi, mi + mis ) );
}

	

int main(){
    ios::sync_with_stdio(false);
    cin >> a[0] >> a[1] >> b[0] >> b[1] >> t[0] >> t[1];

    cin >> n;
    for(int i = 0; i < n; i++){
	cin >> p[i][0] >> p[i][1];
    }
 
    long double mi = min( solve( a[0],a[1],b[0],b[1] ), solve(b[0],b[1],a[0],a[1]) );
    for(int i = 0; i < n; i++ ){
	mi += 2 * dist( p[i][0],p[i][1], t[0],t[1]);
    }
    cout << fixed << showpoint;
    cout << setprecision(12);
    cout << mi << endl;
    return 0;
}
    

    
    
