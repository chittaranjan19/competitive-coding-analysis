#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
/*
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
ordered_set s;
*/
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
PII x[MAXN];
map<int,deque<PII> >pm;
vector<PII>v;
int main(){
	int a,w;
	cin>>a;
	for(int i=0;i<a;i++)
		cin>>x[i].ss>>x[i].ff;
	sort(x,x+a);	
	for(int i=0;i<a;i++)	
		pm[x[i].ff-x[i].ss].pb(mp(x[i].ss,x[i].ff));	
	for(int i=0;i<a;i++){
		cin>>w;
		if(pm[w].size()==0){
			cout<<"NO"<<endl;
			return 0;
		}
		int d=-1;
		if(v.size()==0)
			d=0;
		for(int j=0;j<pm[w].size() and v.size()>=1;j++)
			if(pm[w][j].ff>=v[v.size()-1].ff or pm[w][j].ss>=v[v.size()-1].ss){
				d=j;
				break;
			}	
		if(d==-1){
			cout<<"NO"<<endl;
			return 0;
		}
		v.pb(pm[w][d]);
		pm[w][d]=pm[w][0];
		pm[w].pop_front();
	}
	cout<<"YES"<<endl;
	for(int i=0;i<v.size();i++)
		cout<<v[i].ff<<" "<<v[i].ss<<endl;
	return 0;
}
