#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

map<int, int> m1, m2[maxn];
map<int, int> :: iterator it;
pair<int, pii> q[maxn];
vector<pair<int, pii> > v[maxn];
vector<int> ft;
int ans[maxn];

void update(int idx, int val)
{
	while(idx<ft.size()){
		ft[idx] = (ft[idx]+val);
		idx+=(idx&(-idx));
	}
}

void range_update(int s, int e, int val)
{
	update(s, val);
	update(e+1, -val);
}

int read(int idx)
{
	int ret = 0;
	while(idx>0){
		ret = (ret+ft[idx]);
		idx-=(idx&(-idx));
	}
	return ret;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int m, i, j, t, a, ind, lim;
	scanf("%d", &m);
	for(i=1; i<=m; i++){
		scanf("%d%d%d", &q[i].f, &q[i].s.f, &q[i].s.s);
		m1[q[i].s.s] = 1;
	}
	j = 1;
	for(it=m1.begin(); it!=m1.end(); ++it)
		it->s = j++;
	lim = j;
	for(i=1; i<=m; i++){
		ind = m1[q[i].s.s];
		v[ind].pb(mp(i, mp(q[i].f, q[i].s.f)));
		m2[ind][q[i].s.f] = 1;
	}
	for(i=1; i<lim; i++){
		j = 1;
		for(it=m2[i].begin(); it!=m2[i].end(); ++it)
			it->s = j++;
		ft.resize(j+10, 0);
		for(auto jt:v[i]){
			ind = jt.f;
			a = jt.s.f;
			t = m2[i][jt.s.s];
			//cout << a << " " << ind << " " << t << " " << i << " " << j << "\n";
			if(a==1)
				range_update(t+1, j, 1);
			else if(a==2)
				range_update(t+1, j, -1);
			else
				ans[ind] = read(t);
		}
		ft.clear();
	}
	for(i=1; i<=m; i++){
		if(q[i].f==3)
			printf("%d\n", ans[i]);
	}
	return 0;
}
