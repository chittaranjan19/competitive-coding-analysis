#include <iostream>
#include <algorithm>

using namespace std;

int n,k;
long long a[300000];
long long dp[300000];

int main()
{
    ios::sync_with_stdio(0);
    cin >> n >> k;

    for(int i=0; i<n; i++) cin >> a[i];

    sort(a,a+n);

    fill(dp,dp+n,n*4000000000ll);
    int ss = n/k;
    int bs = ss+1;
    int bc = n%k;

    dp[ss-1] = a[ss-1]-a[0];
    if(n%k) dp[bs-1] = a[bs-1]-a[0];
    for(int i=bs; i<n; i++) {
        dp[i] = (a[i]-a[i-(ss-1)]) + dp[i-ss];
        if(((i-ss)%k) >= (n%k)) continue;
        dp[i] = (a[i]-a[i-(bs-1)]) + dp[i-bs];
    }

    cout << dp[n-1] << endl;

    return 0;
}
