import java.io.BufferedInputStream;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

/**
 * Created by leen on 7/27/16.
 */
public class _651C {
    public static void main(String[] args) {
        Scanner scan = new Scanner(new BufferedInputStream(System.in, 1024 * 128));
        int n = scan.nextInt();
        Map<Integer, Integer> xToNum = new HashMap<Integer, Integer>();
        Map<Integer, Integer> yToNum = new HashMap<Integer, Integer>();
        Map<Point, Integer> pointToNum = new HashMap<Point, Integer>();

        for(int i = 0; i < n;i ++) {
            int x = scan.nextInt(), y = scan.nextInt();
            Integer xNum = xToNum.get(x);
            if(xNum == null)
                xToNum.put(x, 1);
            else
                xToNum.put(x, xNum+1);

            Integer yNum = yToNum.get(y);
            if(yNum == null)
                yToNum.put(y, 1);
            else
                yToNum.put(y, yNum+1);

            Point p = new Point(x, y);
            Integer pNum = pointToNum.get(p);
            if(pNum == null)
                pointToNum.put(p, 1);
            else
                pointToNum.put(p, pNum+1);
        }
        int numPairs = 0;
        for(int value : xToNum.values())
            numPairs += C2(value);

        for(int value : yToNum.values())
            numPairs += C2(value);

        for(int value : pointToNum.values())
            numPairs -= C2(value);

        System.out.println(numPairs);
    }

    static int C2(int n) {
        return n * (n-1) / 2;
    }

    static class Point {
        final int x;
        final int y;

        Point(int x, int y) {
            this.x = x;
            this.y = y;
        }

        @Override
        public int hashCode() {
            return x ^ y;
        }

        @Override
        public boolean equals(Object obj) {
            if(obj instanceof Point) {
                Point p = (Point) obj;
                return x == p.x && y == p.y;
            }
            else
                return false;
        }
    }
}
