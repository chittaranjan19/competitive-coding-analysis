//Coder: Vipin Singh
#include<bits/stdc++.h>
using namespace std;

#define lli long long
#define pb push_back
#define mp make_pair
const int limit = 110;
vector<char> ans;
string a[limit];
bool taken[26];

int findpos(char c){
	for(int i=0;i<ans.size();i++){
		if(ans[i]==c)
			return i;
	}
	return -1;
}

int main(){
	int n;
	char c1,c2;
	bool posi = true;
	for(int i=0;i<26;i++)
		taken[i]=false;
	scanf("%d",&n);
	string prev,s,nex;
	for(int i=0;i<n;i++){
		cin>>s;
		a[i]=s;
	}
	ans.pb(a[0][0]);
	taken[a[0][0]-'a']=true;
	prev = a[0];
	for(int i=1;i<n;i++){
		nex = a[i];
		c1='#';
		c2='#';
		for(int i=0;i<prev.size()&&i<nex.size();i++){
			if(prev[i] != nex[i]){
				c1=prev[i];
				c2=nex[i];
				break;
			}
		}
		if(c1==c2){
			if(nex.size() < prev.size() ){
				posi=false;
				break;
			}
			prev=nex;
			continue;
		}
		int pos1=findpos(c1);
		int pos2=findpos(c2);
		if(pos1 == -1 && pos2==-1){
			ans.pb(c1);
			ans.pb(c2);
		}
		if(pos1 != -1 && pos2==-1){
			ans.pb(c2);
		}
		if(pos1==-1 && pos2 != -1){
			posi=false;
			break;
		}
		if(pos1 != -1 && pos2 != -1){
			if(pos2 < pos1){
				posi=false;
				break;
			}
		}
		prev=nex;
	}
	if(!posi){
		printf("Impossible\n");
		return 0;
	}
	for(int i=0;i<ans.size();i++){
		printf("%c",ans[i]);
		taken[ans[i]-'a']=true;
	}
	for(int i=0;i<26;i++){
		if(!taken[i])
			printf("%c",'a'+i);
	}
	printf("\n");
}
