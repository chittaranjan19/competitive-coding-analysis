#include <string>
#include <algorithm>
#include <math.h>
#include <vector>
#include <queue>
#include <stack>
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <set>
#include <cstring>
#include <map>
#include <unordered_map>
#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;
#define ll long long
#define db double
#define fs first
#define sc second
#define mp make_pair

vector<int> g[500000];

int ans[300000];

int main()
{
    //ios::sync_with_stdio(false);
    int n, m;
    scanf("%d%d", &n, &m);
    for (int i = 0; i < n; i++)
    {
        int k;
        scanf("%d", &k);
        for (int j = 0; j < k; j++)
        {
            int t;
            scanf("%d", &t);
            g[i].push_back(t);
        }
    }
    bool can = 1;
    memset(ans, -1, sizeof(ans));
    for (int i = 0; i < n; i++)
    {
        bool good = 0;
        for (int j = 0; j < g[i].size(); j++)
        {
            if (g[i][j] > 0)
            {
                if (ans[g[i][j]] == 1)
                    good = 1;
            }
            else if (ans[-g[i][j]] == 0)
                good = 1;
        }
        if (good == 1) continue;
        bool cnt = 0;
        for (int j = 0; j < g[i].size(); j++)
        {
            if (ans[abs(g[i][j])] == -1)
            {
                if (g[i][j] > 0)
                    ans[g[i][j]] = 1;
                else ans[-g[i][j]] = 0;
                cnt = 1;
                break;
            }
        }
        if (!cnt)
            can = 0;
    }
    if (can)
    {
        cout << "YES" << endl;
        for (int i = 0; i < m; i++){
            if (ans[i + 1] == -1)
                ans[i + 1] = 0;
            cout << ans[i + 1];
        }
    }
    else cout << "NO";
    return 0;
}