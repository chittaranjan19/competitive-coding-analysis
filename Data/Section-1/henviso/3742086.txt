#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <stack>
#include <algorithm>
#include <cctype>
#include <vector>
#include <queue>
#include <tr1/unordered_map>
#include <cmath>
#include <map>
#include <bitset>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int,int> ii;
///////////////////////////////UTIL/////////////////////////////////
#define ALL(x) (x).begin(),x.end()
#define CLEAR0(v) memset(v, 0, sizeof(v))
#define CLEAR(v, x) memset(v, x, sizeof(v))
#define INRANGE0(x, n) ((x) > -1 && (x) < n)
#define INRANGE(x, a, b) ((x) >= a && (x) <= b)
#define COPY(a, b) memcpy(a, b, sizeof(a))
#define REP(i,n) for(int i = 0; i<n; i++)
#define REPP(i,a,n) for(int i = a; i<n; i++)
#define REPD(i,n) for(int i = n-1; i>-1; i--)
#define REPDP(i,a,n) for(int i = a; i>-1; i--)
#define pb push_back
#define pf push_front
#define sz size()
#define mp make_pair
/////////////////////////////NUMERICAL//////////////////////////////
#define INCMOD(a,b,c) (((a)+b)%c)
#define DECMOD(a,b,c) (((a)+c-b)%c)
#define ROUNDINT(a) (int)((double)(a) + 0.5)
#define INF 2000000000
#define EPS 1e-9
/////////////////////////////BITWISE////////////////////////////////
#define CHECK(S, j) (S & (1 << j))
#define CHECKFIRST(S) (S & (-S))  //PRECISA DE UMA TABELA PARA TRANSFORMAR EM INDICE
#define SET(S, j) S |= (1 << j)
#define SETALL(S, j) S = (1 << j)-1  //J PRIMEIROS
#define UNSET(S, j) S &= ~(1 << j)
#define TOOGLE(S, j) S ^= (1 << j)
///////////////////////////////64 BITS//////////////////////////////
#define LCHECK(S, j) (S & (1ULL << j))
#define LSET(S, j) S |= (1ULL << j)
#define LSETALL(S, j) S = (1ULL << j)-1ULL  //J PRIMEIROS
#define LUNSET(S, j) S &= ~(1ULL << j)
#define LTOOGLE(S, j) S ^= (1ULL << j)
//scanf(" %d ", &t);
#define DFS_WHITE -1
#define DFS_BLACK 1
#define DFS_GRAY 2

int x, y, d;

//inv modular de a mod b = m Ã© o x
ull gcd(ull a, ull b){
	if(b == 0) return a;
	gcd(b, a%b);
}

ull lcm(ull a, ull b){
	return (a/gcd(a,b))*b;
}

int main(){
	ull n, d;
	cin >> n >> d;
	int h;
	ull v[100];
	cin >> h;
	REP(i, h){
		cin >> v[i];
	}
	ull num = 1, den = v[h-1];
	ull aux;
	REPD(i, h-1){
		if(gcd(den, v[i]) == 1 && den > 1000000000ULL && num > 1000000000ULL){
			num = 0;
			den = 0;
			break;
		}
	
		aux = lcm(den, v[i]);
		num = aux*v[i] + aux/den * num;
		den = aux;
		if(num%den == 0){
			num /= den;
			den = 1;
		}
		if(i) swap(num, den);
	}
	if(den == d && num == n) printf("YES\n");
	else printf("NO\n");
}
