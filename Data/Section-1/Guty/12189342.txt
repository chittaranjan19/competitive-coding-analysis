#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}
/* 
 Caso que anda

aabbaabcdbcdbaabcdabbbcd
abbbcdbaabcdbaaaabbcdbcd

 Caso que no anda

aabbaabcdbcd
aabbcdbaabcd

*/
void ordenar(string &s)
{
	int n = s.size();
	int nOrig = n;
	int l = 1;
	while (n % 2 == 0)
	{
		n /= 2;
		l *= 2;
	}
	for (int r = nOrig/l; r < nOrig; r *= 2)
	{
		for (int i = 0; i < nOrig; i += 2*r)
		{
			string s1 = s.substr(i,r);
			string s2 = s.substr(i+r,r);
			if (s1 > s2)
			{
				s.replace(i,r,s2);
				s.replace(i+r,r,s1);
			}
		}
	}
}

int main()
{
	string a,b;
	cin >> a >> b;
	ordenar(a);
	ordenar(b);
	if (a == b)
		cout << "YES" << endl;
	else
		cout << "NO" << endl;
	return 0;
}



