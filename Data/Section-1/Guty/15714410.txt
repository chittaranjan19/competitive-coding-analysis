#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint toNumber (string s)
{
	tint Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (tint number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}




int main()
{
	#ifdef ACMTUYO
	if (!freopen("entrada.in", "r", stdin))
		return 1;
	#endif
	ldouble x,y,z;
	while (cin >> x >> y >> z)
	{
		vector<string> a = {"x^y^z","x^z^y","(x^y)^z", "(x^z)^y", "y^x^z","y^z^x", "(y^x)^z","(y^z)^x", "z^x^y","z^y^x","(z^x)^y","z^(y^x)"};
		vector<ldouble> ad = {pow(y,z)*log(x), pow(z,y)*log(x) , z*y*log(x), y*z*log(x),pow(x,z)*log(y),pow(z,x)*log(y),x*z*log(y),z*x*log(y), pow(x,y)*log(z),pow(y,x)*log(z),x*y*log(z),y*x*log(z)};
		ldouble maxi = -9999999999999999.0,maxiInd = -1;
		forn(i,12)
			if (ad[i] > maxi)
			{
				maxiInd = i;
				maxi = ad[i];
			}
		cout << a[maxiInd] << endl;
	}
	return 0;
}



