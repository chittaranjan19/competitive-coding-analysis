#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef vector<int> vi;

#define TRACE

#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif
#define MOD  1000009
ll powmod(ll a,ll b)
{
    if(b==0)return 1;
    ll x=powmod(a,b/2);
    ll y=(x*x)%MOD;
    if(b%2)
        return (a*y)%MOD;
    return y;
}
struct sort_pred {
    bool operator()(const std::pair<int,int> &left, const std::pair<int,int> &right) 
    { 
        return left.second < right.second; 
    }
};
int main()
{
    int tc;
    int n,h;
    double k,foo,sum=0;
    ll tm=0,bar;
    cin >> n >> h >>k;
    std::vector<double > a(100009);
    for(int i=0;i<n;i++)
    {
        cin >>a[i];
    }
    for(int i=0;i<n;i++)
    {
        if(sum+a[i]>h)
        {
           // trace2(sum,tm);
            //while((sum+a[i])>h)
            //{
                foo=(a[i]+sum-h)/k;
                bar=ceil(foo);
                sum-=(k*bar);
                tm+=bar;
              //  trace4(sum,tm,bar,i);
                if(sum<0)
                    sum=0;
           // }
            sum+=a[i]-k;
            tm++;
        //    trace3(sum,tm,i);

        }
        else
        {
            sum+=a[i];
     //      trace3(sum,tm,i);
        }
    }
    if(sum>0)
    {
        foo=(sum)/k;
        bar=ceil(foo);
        tm+=bar;
     //   if(sum<0)
      //      sum=0;
    }
    cout <<tm <<'\n';
    return 0;
}