#include <bits/stdc++.h>

using namespace std;

#define f first
#define s second
#define mp make_pair

typedef long long ll;
typedef pair<ll, ll> pll;

const int maxn = 100010;

vector<pll> lines;
int pointer = 0;
int a[maxn], b[maxn];
ll dp[maxn];

double intersection_x(pll l1, pll l2)
{
	return (double)(l2.s-l1.s)/(l1.f-l2.f);
}

void insert(pll line)
{
	while(lines.size()>=2){
		pll l1 = lines.back();
		lines.pop_back();
		pll l2 = lines.back();
		if(intersection_x(line, l2) < intersection_x(line, l1)){
			lines.push_back(l1);
			break;
		}
	}
	lines.push_back(line);
}

ll query(int x)
{
	if(pointer >= lines.size())
		pointer = (int)lines.size()-1;
	while(pointer < lines.size()-1 && lines[pointer].f*x + lines[pointer].s > lines[pointer+1].f*x + lines[pointer+1].s)
		++pointer;
	return lines[pointer].f*x + lines[pointer].s;
}

int main()
{
	int i, j, n;
	scanf("%d", &n);
	for(i=1; i<=n; i++)
		scanf("%d", &a[i]);
	for(i=1; i<=n; i++)
		scanf("%d", &b[i]);
	insert(mp(b[1], 0));
	for(i=2; i<=n; i++){
		dp[i] = query(a[i]);
		insert(mp(b[i], dp[i]));
	}
	printf("%lld\n", dp[n]);
	return 0;
}