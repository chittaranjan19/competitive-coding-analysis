#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

typedef long long ll;

const int mod = 1e6 + 3;

int pow_mod(int x, ll n)
{
    int ret = 1;
    while(n)
    {
        if(n & 1) ret = (ll)ret * x % mod;
        x = (ll)x * x % mod;
        n >>= 1;
    }
    return ret;
}

int main()
{
    ll n, m;
    cin >> n >> m;
    ll now = 1, has = 0;
    for(int i = 1; i <= n && now < m; ++i)
    {
        now <<= 1;
        has += (m - 1) / now;
    }
    if(now < m) cout << 1 << ' ' << 1 << endl;
    else
    {
        int tmp = pow_mod(2, n), up = 1, down = pow_mod(tmp, m - 1);
        for(int i = 1; i < m; ++i)
        {
            up = (ll)up * (tmp - i + mod) % mod;
            if(!up) break;
        }
        has = pow_mod(pow_mod(2, has), mod - 2);
        up = (ll)up * has % mod;
        down = (ll)down * has % mod;
        up = (down - up + mod) % mod;
        cout << up << ' ' << down << endl;
    }
    return 0;
}
