#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>

#include<cmath>
#include<iostream>
#include<iomanip>
#include<fstream>

#include<string>
#include<utility>
#include<vector>
#include<list>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>

#define ii long long int
#define pi 2*acos(0.0)
#define eps 1e-9
#define mem(x,y) memset(x,y,sizeof(x))
#define all(x) x.begin(), x.end()
#define pb push_back
#define sz(a) (int)a.size()
#define inf 2147483640
#define mx 100010

using namespace std;

const int debug= 0;

struct RoundScore {
    int score,round;
    RoundScore() {}
    RoundScore(int Score,int Round) {
        score=Score;
        round=Round;
    }
};

struct Player {
    string name;
    int score,round;
    Player() {}
    Player(string Name,int Score,int Round) {
        name=Name;
        score=Score;
        round=Round;
    }
    bool operator < (const Player &p) const {
        if (score==p.score) {
            return round > p.round;
        }
        return 0;
    }

    void print() {
        cout<<"name: "<<name<<", score: "<<score<<endl;
    }
};

int main() {
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int x;
    while (cin>>x) {
        map <string,RoundScore> rcMap;
        string winner,name;
        int score,i;
        for (i=1;i<=x;++i) {
            cin>>name>>score;
            rcMap[name]=RoundScore(rcMap[name].score+score,i);
        }

        map <string,RoundScore> :: iterator it;
        priority_queue <Player> q;
        for (it=rcMap.begin();it!=rcMap.end();++it) {
            name=(*it).first;
            RoundScore rc=(*it).second;
            q.push(Player(name,rc.score,rc.round));
        }
        winner=q.top().name;
        cout<<winner<<endl;
    }

    return 0;
}
