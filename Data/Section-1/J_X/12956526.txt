#include <iostream>
#include <cstring>
#include <cstdio>

using namespace std;

const int maxn = 3000 + 5;

int num[maxn];
bool dp[3][maxn];

int main()
{
    int n, m;
    while(cin >> n >> m)
    {
        memset(num, 0, sizeof(num));
        bool flag = false;
        for(int i = 0; i < n; ++i)
        {
            int x;
            scanf("%d", &x);
            ++num[x % m];
            if(x % m == 0)
            {
                flag = true;
            }
        }
        if(!flag)
        {
            memset(dp, 0, sizeof(dp));
            dp[0][0] = true;
            bool *now = dp[0], *nxt = dp[1];
            for(int i = 1; i < m; ++i)
            {
                for(int j = 0; j < m; ++j)
                {
                    if(!now[j]) continue;
                    nxt[j] = true;
                    for(int k = 1; k <= num[i]; ++k)
                    {
                        nxt[(j + k * i) % m] = true;
                        if((j + k * i) % m == 0)
                        {
                            flag = true;
                        }
                    }
                    now[j] = false;
                }
                swap(now, nxt);
            }
        }
        cout << (flag ? "YES" : "No") << endl;
    }
    return 0;
}