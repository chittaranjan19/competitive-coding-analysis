#include <bits/stdc++.h>
using namespace std;
int n2=0,n3=0,n5=0,n7=0,n11=0,n13=0;
vector<int> vec;
int k;
int p2[29];
int p3[29];
int p5[29];
int p7[29];
int p11[29];
int p13[29];
bool check(){
    return (n2>=0&&n3>=0&&n5>=0&&n7>=0&&n11>=0&&n13>=0&&vec.size()>=k);
}
bool trycount6(bool count){
    if(check()) return true;
    vec.clear();
    n2=n3=n5=n7=n11=n13=0;
    for(int p2=0,e2=1;;++p2){
        if(e2>2*k*k) break;
        for(int p3=0,e3=1;;++p3){
            if(e2*e3>2*k*k) break;
            for(int p5=0,e5=1;;++p5){
                if(e2*e3*e5>2*k*k) break;
                for(int p7=0,e7=1;;++p7){
                    if(e2*e3*e5*e7>2*k*k) break;
                    for(int p11=0,e11=1;;++p11){
                        if(e2*e3*e5*e7*e11>2*k*k) break;
                        for(int p13=0,e13=1;;++p13){
                            if(e2*e3*e5*e7*e11*e13>2*k*k) break;
                            vec.push_back(e2*e3*e5*e7*e11*e13);
                            if(count){
                                if(p2)++n2;
                                else --n2;
                                if(p3)++n3;
                                else --n3;
                                if(p5)++n5;
                                else --n5;
                                if(p7)++n7;
                                else --n7;
                                if(p11)++n11;
                                else --n11;
                                if(p13)++n13;
                                else --n13;
                            }
                            e13*=13;
                        }
                        e11*=11;
                    }
                    e7*=7;
                }
                e5*=5;
            }
            e3*=3;
        }
        e2*=2;
    }
    return check();
}
bool trycount5(bool count){
    if(check()) return true;
    vec.clear();
    n2=n3=n5=n7=n11=n13=0;
    for(int p2=0,e2=1;;++p2){
        if(e2>2*k*k) break;
        for(int p3=0,e3=1;;++p3){
            if(e2*e3>2*k*k) break;
            for(int p5=0,e5=1;;++p5){
                if(e2*e3*e5>2*k*k) break;
                for(int p7=0,e7=1;;++p7){
                    if(e2*e3*e5*e7>2*k*k) break;
                    for(int p11=0,e11=1;;++p11){
                        if(e2*e3*e5*e7*e11>2*k*k) break;
                        vec.push_back(e2*e3*e5*e7*e11);
                        if(count){
                            if(p2)++n2;
                            else --n2;
                            if(p3)++n3;
                            else --n3;
                            if(p5)++n5;
                            else --n5;
                            if(p7)++n7;
                            else --n7;
                            if(p11)++n11;
                            else --n11;
                        }
                        e11*=11;
                    }
                    e7*=7;
                }
                e5*=5;
            }
            e3*=3;
        }
        e2*=2;
    }
    return check();
}
bool trycount4(bool count){
    if(check()) return true;
    vec.clear();
    n2=n3=n5=n7=n11=n13=0;
    for(int p2=0,e2=1;;++p2){
        if(e2>2*k*k) break;
        for(int p3=0,e3=1;;++p3){
            if(e2*e3>2*k*k) break;
            for(int p5=0,e5=1;;++p5){
                if(e2*e3*e5>2*k*k) break;
                for(int p7=0,e7=1;;++p7){
                    if(e2*e3*e5*e7>2*k*k) break;
                    vec.push_back(e2*e3*e5*e7);
                    if(count){
                        if(p2)++n2;
                        else --n2;
                        if(p3)++n3;
                        else --n3;
                        if(p5)++n5;
                        else --n5;
                        if(p7)++n7;
                        else --n7;
                    }
                    e7*=7;
                }
                e5*=5;
            }
            e3*=3;
        }
        e2*=2;
    }
    return check();
}
bool trycount3(bool count){
    if(check()) return true;
    vec.clear();
    n2=n3=n5=n7=n11=n13=0;
    for(int p2=0,e2=1;;++p2){
        if(e2>2*k*k) break;
        for(int p3=0,e3=1;;++p3){
            if(e2*e3>2*k*k) break;
            for(int p5=0,e5=1;;++p5){
                if(e2*e3*e5>2*k*k) break;
                vec.push_back(e2*e3*e5);
                if(count){
                    if(p2)++n2;
                    else --n2;
                    if(p3)++n3;
                    else --n3;
                    if(p5)++n5;
                    else --n5;
                }
                e5*=5;
            }
            e3*=3;
        }
        e2*=2;
    }
    return check();
}
bool trycount2(bool count){
    if(check()) return true;
    vec.clear();
    n2=n3=n5=n7=n11=n13=0;
    for(int p2=0,e2=1;;++p2){
        if(e2>2*k*k) break;
        for(int p3=0,e3=1;;++p3){
            if(e2*e3>2*k*k) break;
            vec.push_back(e2*e3);
            if(count){
                if(p2)++n2;
                else --n2;
                if(p3)++n3;
                else --n3;
            }
            e3*=3;
        }
        e2*=2;
    }
    return check();
}
bool trycount1(bool count){
    if(check()) return true;
    vec.clear();
    n2=n3=n5=n7=n11=n13=0;
    for(int p2=0,e2=1;;++p2){
        if(e2>2*k*k) break;
        vec.push_back(e2);
        if(count){
            if(p2)++n2;
            else --n2;
        }
        e2*=2;
    }
    return check();
}
int scoreit(int x){
    return (x%2==0)+2*(x%3==0)+4*(x%5==0)+8*(x%7==0)+16*(x%11==0)+32*(x%13==0);
}
int main(){
    cin>>k;
    n2=n3=n5=n7=n11=n13=0;
    if(!(trycount1(true) ||
        trycount2(true) ||
        trycount3(true) ||
        trycount4(true) ||
        trycount5(true) ||
        trycount6(true)
        ))
        cout<<k<<endl;
    int score=0;
    int tam=vec.size();
    vector<int> elim(vec.size(),0);
    while(tam>k){
        for(int i=0;i<vec.size();++i){
            if(elim[i]==0&&scoreit(vec[i])==score){
                elim[i]=1;
                --tam;
                if(tam<=k) break;
            }
        }
        ++score;
    }
    for(int i=0;i<vec.size();++i){
        if(elim[i]==0){
            cout<<vec[i]<<" ";
        }
    }
    return 0;
}