using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})




long long n,l[200000+123],r[200000+123],a[200000+123],j,ans[200000+123],dc[200000+123],dem;

struct node
{
    int gt,tr,ph;
};

node t[200000+10];

bool cmp(node a, node b)
{
    return a.gt>b.gt;
}

int main()
{

    cin >> n;
    FORE(i,1,n) cin >> a[i];
    FORE(i,1,n)
    {
        l[i]=i;
        j=i-1;
        while (j && a[i]<=a[j]) j=l[j]-1;
        l[i]=j+1;
    }
    FORD(i,n,1)
    {
        r[i]=i;
        j=i+1;
        while (j<=n && a[i]<=a[j]) j=r[j]+1;
        r[i]=j-1;
    }
    FORE(i,1,n)
    {
        t[i].gt=a[i];
        t[i].tr=l[i];
        t[i].ph=r[i];
    }
    sort(t+1,t+n+1,cmp);
    dem=0;
    FORE(i,1,n)
    {
        dc[i]=t[i].ph-t[i].tr+1;
        dem=max(dem,dc[i-1]);
        FORE(j,dem+1,dc[i]) ans[j]=t[i].gt;
    }
    FORE(i,1,n) cout << ans[i] << " ";
}
