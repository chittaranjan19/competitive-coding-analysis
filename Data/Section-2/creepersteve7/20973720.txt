#include <bits/stdc++.h>

using namespace std;

int n,m,na,nb,x,y;
int a[100005],v[100005];
vector <int> g[100005];
bool pos=true;

int nxt=2;
void DFS(int nod, int val, bool init){
    if(!pos) return;
    a[nod]=val;
    v[nod]=1;
    if(val==1) val=2;
    else val=1;
    for(int i=0;i<g[nod].size();i++){
        if(v[g[nod][i]] && a[g[nod][i]]!=val) pos=false;
        else if(!v[g[nod][i]]) DFS(g[nod][i],val,false);
    }
    if(init && nxt<=n){
        while(v[nxt]) nxt++;
        DFS(nxt,1,true);
    }
}

int main()
{
    cin >> n >> m;
    for(int i=1;i<=m;i++) cin >> x >> y, g[x].push_back(y), g[y].push_back(x);
    DFS(1,1,true);
    if(!pos) cout << -1;
    else{
        for(int i=1;i<=n;i++){
            if(a[i]==1) na++;
        }
        cout << na << '\n';
        for(int i=1;i<=n;i++){
            if(a[i]==1) cout << i << ' ';
        }
        for(int i=1;i<=n;i++){
            if(a[i]==2) nb++;
        }
        cout << '\n' << nb << '\n';
        for(int i=1;i<=n;i++){
            if(a[i]==2) cout << i << ' ';
        }
    }
}
