#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<char> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int main()
{
	string s;
	cin >> s;
	vector<string> todasLasPalabras;
	forn(i,s.size()-1)
		forsn(j,i,s.size())
		{
			string acLeft  = s.substr(0,i);
			string acRight = s.substr(j,s.size());
			string ac = acLeft + acRight;
			todasLasPalabras.push_back(ac);
		}
	forn(i,s.size())
		todasLasPalabras.push_back(s.substr(0,i));
	if (find(todasLasPalabras.begin(), todasLasPalabras.end(), "CODEFORCES") != todasLasPalabras.end())
		cout << "YES" << endl;
	else 
		cout << "NO" << endl;
	return 0;
}
