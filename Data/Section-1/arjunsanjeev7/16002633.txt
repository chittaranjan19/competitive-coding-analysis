/*	 Hello World!	*/

#include <bits/stdc++.h>

#define pb push_back
#define pf push_front
#define mp make_pair
#define f first
#define s second
#define let(x,a) __typeof(a) x(a)
#define all(a) (a).begin(),(a).end() 
#define endl '\n'
#define present(c,x) ((c).find(x) != (c).end()) 
#define tr(v,it) for( let(it,v.begin()) ; it != v.end() ; it++)
#define rtr(v,it) for( let(it,v.rbegin()) ; it != v.rend() ; it++)
#define rep1(i,n) for(int i=0; i<(int)n;i++)
#define rep2(i,a,b) for(int i=(int)a; i<=(int)b; i++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define LL long long int
#define PII pair<int,int>
#define VI vector<LL>
#define inf INT_MAX

using namespace std;

void FastIO()
{
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	cout.tie(NULL);
}

int main()
{
	FastIO();
	LL n;
	cin>>n;
	VI a(n,0);
	for(int i=0;i<n;i++)
	{
		cin>>a[i];
	}
	sort(all(a));
	VI cnt(5000,0),sum(5000,0);
	for(int i=0;i<n;i++)
	{
		for(int j=i+1;j<n;j++)
		{
			cnt[a[j]-a[i]]++;
		}
	}
	for(int i=4999;i>=0;i--)
	{
		if(i==4999)
		{
			sum[i]=cnt[i];
		}
		else
		{
			sum[i]=sum[i+1]+cnt[i];
		}
	}
	double ans=0;
	for(int i=0;i<5000;i++)
	{
		if(cnt[i])
		for(int j=0;j<5000;j++)
		{
			if(!cnt[j]) continue;
			LL x;
			if(i+j+1>=5000) x=0;
			else x=sum[i+j+1];
			ans+=(cnt[i]*cnt[j]*x);
		}
	}
	double d=(double)(2)/(n*(n-1));
	cout<<setprecision(10)<<fixed<<ans*d*d*d<<endl;
	return 0;
}