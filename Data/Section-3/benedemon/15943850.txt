
#include<bits/stdc++.h>
using namespace std;

vector<int> v[1000001];

void search(vector<int> a, int l , int r)
{
    if(r-l==1)
    {
        if(a[r]-a[l]>1)
        {
            cout<<a[l]<<endl;
            return;
        }
    }

    if(a[l+1]-a[l]>1)
      {
          cout<<a[l]<<endl;
          return;
      }
        if(a[r]-a[r-1]>1)
        {
            cout<<a[r]<<endl;
            return ;
        }


    int mid=a[l]+a[r];
    mid/=2;

    int pos=lower_bound(a.begin(),a.end(),mid)-a.begin();

    if(a[pos]!=mid)
    {
        cout<<mid<<endl;
        return;
    }
    if(a[pos+1]-a[pos]>1)
    {
        cout<<a[pos]+2<<endl;
        return;
    }

    if(a[pos]-a[l]!=pos-l)
    {
        search(a,l,pos);
    }
    else
    {
        search(a,pos+1,r);
    }
    return;
}

int main()
{
     int a[200001],n,m,i,x,l,r,i1,i2;

     cin>>n>>m;

     for(i=0;i<n;i++)
        {
            cin>>a[i];

            v[a[i]].push_back(i);
        }
    while(m--)
    {
        cin>>l>>r>>x;

        i1=lower_bound(v[x].begin(),v[x].end(),l-1)-v[x].begin();

        i2=upper_bound(v[x].begin(),v[x].end(),r-1)-v[x].begin();

        i2--;
        //cout<<v[x][0]<<" "<<v[x][1]<<" "<<v[x][2];
        //cout<<i1<<" "<<i2<<endl;

        if(i2-i1==r-l)
        {
            cout<<-1<<endl;
            continue;
        }
        else if(i1!=l)
        {
            cout<<l+1<<endl;
            continue;
        }
        else if(i2!=r)
        {
            cout<<r+1<<endl;
            continue;
        }

        search(v[x],l-1,r-1);
    }
    return 0;
}
