#include <iostream>
#include <bits/stdc++.h>

using namespace std;
const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int MAX_N = 100000;

bool big(string s, int st1, int st2, int d)
{
    for (int i = 0; i < d; i++)
        if (s[st1 - d + 1 + i] > s[st2 - d + 1 + i])
            return true;
        else if (s[st1 - d + 1 + i] < s[st2 - d + 1 + i])
            return false;
    return false;
}

int main()
{
    int n;
    cin >> n;
    string s;
    cin >> s;
    int l = s.size();
    int dp[l][l];
    for (int i = 0; i < l; i++)
        for (int j = 0; j < l; j++)
            dp[i][j] = 0;
    dp[0][0] = 1;
    int pref[l][l];
    for (int i = 1; i < l; i++)
    {
        for (int j = 0; j < l; j++)
            pref[i - 1][j] = dp[i - 1][j];
        for (int j = 1; j < l; j++)
            pref[i - 1][j] = (pref[i - 1][j] + pref[i - 1][j - 1]) % MOD;
        for (int j = 1; j <= (i + 1); j++)
        {
            if (i + 1 == j)
                dp[i][j - 1] = 1;
            else
            {
                if (s[i - j + 1] == '0')
                    dp[i][j - 1] = 0;
                else
                {
                    if (j * 2 > (i + 1))
                        dp[i][j - 1] = pref[i - j][i - j];
                    else if (j * 2 == (i + 1))
                    {
                        if (big(s, i, i - j, j))
                            dp[i][j - 1] = 1;
                        else
                            dp[i][j - 1] = 0;
                    }
                    else
                    {
                        if (big(s, i, i - j, j))
                            dp[i][j - 1] = pref[i - j][j - 1];
                        else if (j > 1)
                            dp[i][j - 1] = pref[i - j][j - 2];
                    }
                }
            }
        }
    }
    /*for (int j = 0; j < l; j++)
    {
        for (int i = 0; i < l; i++)
            cout << dp[i][j] << " ";
        cout << endl;
    }*/
    int ans = 0;
    for (int i = 0; i < l; i++)
        ans = (ans + dp[l - 1][i]) % MOD;
    cout << ans;
    return 0;
}
