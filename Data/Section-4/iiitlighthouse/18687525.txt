#include <iostream>
#include <string.h>
#include <vector>
#include <algorithm>
using namespace std;

int main(){
	int i,n,q,p,r,m;
	cin>>n;
	cin>>q;
	int a[n+4];
	a[1]=1;
	vector<int> total(n+4,1);
	vector<int> subtree(n+4,1);
	vector<int> index(n+4,1);
	//memset(subtree,1,sizeof(subtree));
	//memset(index,0,sizeof(index));
	//memset(total,1,sizeof(total));
	//cout<<total[1]<<endl;
	//cout<<index;
	for(i=0;i<n-1;i++){

		cin>>a[i+2];
		
		//cout<<a[i+2]<<endl;
		p=a[i+2];
		
		while(p!=1){
			total[p]++;
			
			p=a[p];
		}
		total[1]++;
		
	}
	for(i=2;i<=n;i++){
		if(total[i]>(subtree[a[i]]-1)){
			subtree[a[i]]=total[i]+1;
			index[a[i]]=i;
		}
	}
	/*for(i=0;i<=n;i++){
		cout<<total[i]<<" "<<subtree[i]<<" "<<index[i]<<endl;
	}*/
	for(i=0;i<q;i++){
		cin>>r;
		if((subtree[r]-1)<=total[r]/2){
			cout<<r<<endl;
		}
		else{
			p=total[r]/2;
			while(r!=0 && subtree[r]>p){
				r=index[r];
			}
			cout<<r<<endl;
		}
	}
	return 0;
}