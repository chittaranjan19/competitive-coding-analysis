#include <iostream>
#include <vector>

#define f first
#define s second

using namespace std;

const int N = 50;

int n;
bool moves[2 * N - 1][2 * N - 1];
vector<pair<int,int> > figures, attacked, not_attacked;

int main() {
    cin >> n;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            char c;
            cin >> c;
            if (c == 'o') {
                figures.push_back({i, j});
            } else if (c == 'x') {
                attacked.push_back({i, j});
            } else {
                not_attacked.push_back({i, j});
            }
        }
    }
    for (pair<int,int> figure : figures) {
        for (pair<int,int> cell : attacked) {
            moves[n - 1 + cell.f - figure.f][n - 1 + cell.s - figure.s] = 1;
        }
    }
    for (pair<int,int> figure : figures) {
        for (pair<int,int> cell : not_attacked) {
            moves[n - 1 + cell.f - figure.f][n - 1 + cell.s - figure.s] = 0;
        }
    }
    for (pair<int,int> cell : attacked) {
        bool flag = 0;
        for (pair<int,int> figure : figures) {
            if (moves[n - 1 + cell.f - figure.f][n - 1 + cell.s - figure.s]) {
                flag = 1;
                break;
            }
        }
        if (!flag) {
            cout << "NO\n";
            return 0;
        }
    }
    cout << "YES\n";
    for (int i = 0; i < 2 * n - 1; ++i) {
        for (int j = 0; j < 2 * n - 1; ++j) {
            if (i == n - 1 && j == n - 1) {
                cout << "o";
            } else {
                cout << (moves[i][j] ? "x" : ".");
            }
        }
        cout << "\n";
    }
    return 0;
}