import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProblemB2 {
    BufferedReader rd;
    Boolean[][][] q;

    ProblemB2() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        rd.readLine();
        char[] c = rd.readLine().toCharArray();
        int[] u = new int[3];
        for(char d: c) {
            if(d=='B') {
                u[0]++;
            } else if(d=='G') {
                u[1]++;
            } else {
                u[2]++;
            }
        }
        StringBuilder res = new StringBuilder();
        q = new Boolean[311][311][311];
        if(dp(u, 0)) {
            res.append('B');
        }
        q = new Boolean[311][311][311];
        if(dp(u, 1)) {
            res.append('G');
        }
        q = new Boolean[311][311][311];
        if(dp(u, 2)) {
            res.append('R');
        }
        out(res);
    }

    private boolean dp(int[] u, int req) {
        Boolean res = q[u[0]][u[1]][u[2]];
        if(res == null) {
            if(u[0] == 0 && u[1] == 0 && u[2] == 0) {
                res = false;
            } else {
                boolean ok = true;
                for (int i = 0; i < 3; i++) {
                    if (u[i] > 0 && req != i) {
                        ok = false;
                        break;
                    }
                }
                if(ok) {
                    res = true;
                } else {
                    if(u[0] > 0 && u[1] > 0) {
                        if(dp(new int[] { u[0]-1, u[1]-1, u[2]+1 }, req)) {
                            ok = true;
                        }
                    }
                    if(!ok && u[1] > 0 && u[2] > 0) {
                        if(dp(new int[] { u[0]+1, u[1]-1, u[2]-1 }, req)) {
                            ok = true;
                        }
                    }
                    if(!ok && u[0] > 0 && u[2] > 0) {
                        if(dp(new int[] { u[0]-1, u[1]+1, u[2]-1 }, req)) {
                            ok = true;
                        }
                    }
                    if(!ok && u[0] > 1) {
                        if(dp(new int[] { u[0]-1, u[1], u[2] }, req)) {
                            ok = true;
                        }
                    }
                    if(!ok && u[1] > 1) {
                        if(dp(new int[] { u[0], u[1]-1, u[2] }, req)) {
                            ok = true;
                        }
                    }
                    if(!ok && u[2] > 1) {
                        if(dp(new int[] { u[0], u[1], u[2]-1 }, req)) {
                            ok = true;
                        }
                    }
                    res = ok;
                }
            }
            q[u[0]][u[1]][u[2]] = res;
        }
        return res;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemB2();
    }
}
