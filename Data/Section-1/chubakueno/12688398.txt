#include <bits/stdc++.h>
#define MULT 1009LL
#define MOD 10000000000037LL
using namespace std;
typedef long long ll;
char input[2010], sInicio[2010], sFin[2010];
ll inicio, fin, n, nInicio, nFin, hInicio, hFin, nVInicio, nVFin;
ll M[2010][2010];
unordered_set<ll> f;
vector<int> vInicio, vFin;

int main()
{
    
    scanf("%s %s %s", input, sInicio, sFin);
    n = strlen(input);
    nInicio = strlen(sInicio);
    nFin = strlen(sFin);
    hInicio = 0;
    for (int i = 0; i < nInicio; i++)
        hInicio = ((hInicio * MULT) + sInicio[i]) % MOD;
    hFin = 0;
    for (int i = 0; i < nFin; i++)
        hFin = ((hFin * MULT) + sFin[i]) % MOD;
    ll aux = 0;
    for (int i = 0; i < n; i++)
    {
        aux = 0;
        for (int j = i; j < n; j++)
        {
            aux = ((aux * MULT) + input[j]) % MOD;
            M[i][j] = aux;
        }
        if((i+nInicio-1)<n&&hInicio==M[i][i+nInicio-1]) vInicio.push_back(i);
        if((i+nFin-1)<n&&hFin==M[i][i+nFin-1]) vFin.push_back(i);
    }
    nVInicio=vInicio.size();
    nVFin=vFin.size();
    int res = 0;
    for (int i = 0; i < nVInicio; i++)
    {
        for (int j = 0; j < nVFin; j++)
        {
            if (vInicio[i] <= vFin[j]&&vInicio[i]+nInicio<=vFin[j]+nFin)
            {
                if (!f.count(M[vInicio[i]][vFin[j] + nFin - 1]))
                {
                    res++;
                    f.insert(M[vInicio[i]][vFin[j] + nFin - 1]);
                }
            }
        }
    }
    printf("%d\n", res);
}