using namespace std;
#include<bits/stdc++.h>
#define FOR(i, a, b) for (int i = a; i < b; i++)
#define FORE(i, a, b) for (int i = a; i <= b; i++)
#define FORD(i, a, b) for (int i = a; i >= b; i--)
const int MAXN = 2*1e3;
const int INF  = 1e9 + 7;

int n, Count[MAXN], f[MAXN][MAXN], Trace[MAXN][MAXN], a[1234567];
int k ;

int Sub(int x, int y)
{
    int tmp;
    tmp = (x - y) % k;
    if (tmp >= 0) return tmp;
    else return tmp + k;
}

int main()
{
    ios::sync_with_stdio(false);
    //freopen("573B.inp", "r", stdin);
    //freopen("573B.out", "w", stdout);
    cin >> n >> k;
    FORE(i, 1, n) {
        cin >> a[i];
        Count[ a[i] % k]++;
    }
    //FORE(i, 0 , k - 1)cout<<Count[i]<<" ";cout<<endl;
    memset(f, 0, sizeof(f));
    f[0][0] = Count[0];
    FORE(i, 0, k)
    FORE(j, 0, k) Trace[i][j] = -1;
    //cout<<Sub(0, 3)<<endl;
    Trace[0][0] = Count[0];
    for(int i = 1; i <= k - 1; i++)
        for(int t = 0; t <= k - 1; t++)
        for(int j = 0; j <= Count[i]; j++) {
        //if (i == 2 && t == 2 && j == 1) cout<<Trace[1][0]<<"wtf"<<endl;
        if (f[i][t]) break;
        if (  (Trace[i - 1][Sub(t, j * i)] != -1) && (f[i][t] <= f[i - 1][Sub(t, j * i)] + j) )  {
            f[i][t] = f[i - 1][Sub(t, j * i)] + j;
            Trace[i][t] = j;
        }
        }
    //cout<<f[1][1]<<endl;
    if (f[k - 1][0]) cout<<"YES"; else cout<<"NO";
    return 0;
}
