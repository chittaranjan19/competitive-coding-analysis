#include <bits/stdc++.h>

using namespace std;

#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define rep(it, v) for (auto it = (v).begin(); it != (v).end(); it++)
#define rwfile(f) freopen(f".in", "r", stdin); freopen(f".out", "w", stdout)
#define fi first
#define se second

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
const int MOD = 1e9 + 7;

int add (int x, int y) {
	return (x + y) % MOD;
}

void addeq (int &x, int y) {
	x = add(x, y);
}

int mult (int x, int y) {
	return ll(x) * y % MOD;
}

void multeq (int &x, int y) {
	x = mult(x, y);
}

int P, K;

int pwr (int x, int y) {
	int ans = 1;
	while (y--) {
		multeq(ans, x);
	}
	return ans;
}

int main() {
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	ios::sync_with_stdio(false);
	cin >> P >> K;
	if (K == 0) {
		cout << pwr(P, P - 1) << endl;
		return 0;
	} else if (K == 1) {
		//anything
		cout << pwr(P, P) << endl;
		return 0;	
	}
	//f(0) = 0
	int ord = 1, curk = K;
	while (curk != 1) {
		curk = (ll(curk) * K) % P;
		ord++;
	}
	//order
	//leXD
	int ncyc = (P - 1) / ord;
	cout << pwr(P, ncyc) << endl;
}