#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
	string s;
int calc(){	
	vector<int>v;
	for(int i=s.size()-1;i>=0;i--)
		if(s[i]>='0' and s[i]<='9')
			v.pb(s[i]-'0');
	int h=0;		
	for(int i=v.size()-1;i>=0;i--)		
		h=h*10+v[i];
	return h;	
}
int main(){
	getline(cin,s);
	int n=calc();
	int pos=1,neg=0;
	for(int i=0;i<s.size();i++){
		if(s[i]=='-')
			neg++;
		if(s[i]=='+')	
			pos++;	
	}
	int fup=0,nn=n,done=1;
	vector<int>f;
	for(int i=0;i<s.size();i++)
		if(s[i]=='-')
			s[i+2]='1',fup--;	
	n+=neg;
	int c=0;
	for(int i=1;i<=pos;i++){
		f.pb(n/(pos-i+1)),n-=n/(pos-i+1),fup+=f.back();	
		if(f.back()>nn)
			done=0;
	}
	for(int i=0;i<s.size();i++)
		if(s[i]=='+')
			s[i+2]='*';		
	s[0]='*';
	if(fup!=nn or !done){
		printf("Impossible\n");
		return 0;
	}
	printf("Possible\n");
	for(int i=0;i<s.size();i++){
		if(s[i]=='*')
			printf("%d",f[c++]);
		else
			cout<<s[i];	
	}
	printf("\n");
	return 0;
}
