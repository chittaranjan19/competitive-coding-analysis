#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

vector<pii> edges;
vector<int> adj[maxn];
int parent[maxn], rnk[maxn], cycle[maxn], seen[maxn];

int find(int x)
{
	if(parent[x]!=x)
		return parent[x] = find(parent[x]);
	return x;
}

void merge(int x, int y)
{
	int rx, ry;
	rx = find(x);
	ry = find(y);
	if(rx==ry){
		cycle[rx] = 1;
		return;
	}
	if(rnk[rx]<rnk[ry])
		parent[rx] = ry;
	else if(rnk[ry]<rnk[rx])
		parent[ry] = rx;
	else{
		parent[ry] = rx;
		rnk[rx]++;
	}
}

int dfs(int cur)
{
	seen[cur] = 1;
	int ret = cycle[cur];
	for(auto it:adj[cur]){
		if(!seen[it])
			ret|=dfs(it);
	}
	return ret;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int i, j, n, m, u, v, ans;
	scanf("%d%d", &n, &m);
	ans = 0;
	for(i=1; i<=n; i++)
		parent[i] = i;
	for(i=1; i<=m; i++){
		scanf("%d%d", &u, &v);
		adj[u].pb(v);
		adj[v].pb(u);
		edges.pb(mp(u, v));
		merge(u, v);
	}
	for(i=1; i<=n; i++){
		if(!seen[i]){
			if(!dfs(i))
				ans++;
		}
	}
	printf("%d\n", ans);
	return 0;
}
