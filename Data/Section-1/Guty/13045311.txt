#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

struct Chabon
{
	Chabon(int strength, int me, int partner)
	{
		fuerza = strength;
		yo = me;
		pareja = partner;
	}
	int fuerza, yo, pareja;
};

bool operator < (Chabon c1, Chabon c2)
{
	return c1.fuerza >= c2.fuerza;
}

int main()
{
	int n;
	cin >> n;
	vector<Chabon> p;
	forsn(i,2,2*n+1)
	{
		forsn(j,1,i)
		{
			int fuerza;
			cin >> fuerza;
			p.push_back(Chabon(fuerza,i,j));
		}
	}
	sort(p.begin(),p.end());
	int ordenados = 0;
	vector<int> partner (2*n+1,-1); // indexo de 1
	int k = 0;
	while (ordenados < 2*n)
	{
		int i = p[k].yo, j = p[k].pareja;
		if (partner[i] == -1 && partner[j] == -1)
		{
			partner[i] = j;
			partner[j] = i;
			ordenados += 2;
		}
		k++;
	}
	forsn(i,1,2*n+1)
		cout << partner[i] << " ";
	cout << endl;
	
	
	return 0;
}



