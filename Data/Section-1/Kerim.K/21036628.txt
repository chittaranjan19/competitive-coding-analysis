#include "bits/stdc++.h"
#define MAXN 200009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
int n,k,x,mini=INF,ps,arr[MAXN];
int mxpos,mx=-INF,mn=INF,mnpos;
int zero=0,neg=0,pos=0;
void go(){
	for(int i=1;i<=n;i++)
		printf("%d ",arr[i]);
	printf("\n");
	exit(0);	
}
void upd(int indis,int y){
	arr[indis]=y;
	if(y<0){
		if(umax(mx,y))
			mxpos=indis;
		neg++;
	}
	if(y>0){
		if(umin(mn,y))
			mnpos=indis;	
		pos++;
	}
	if(!y)
		zero++;
}
void love(){
	priority_queue<PII,vector<PII>,greater<PII> >q;
	for(int i=1;i<=n;i++)
		q.push(mp(abs(arr[i]),i));
	for(int i=1;i<=k;i++){
		int ind=q.top().ss;
		int val=q.top().ff;
		q.pop();
		q.push(mp(val+x,ind));
		if(arr[ind]<0)
			arr[ind]-=x;
		else
			arr[ind]+=x;
	}
	go();
}
void solve(){
	if(neg&1)
		love();
	if(!neg){
		while(mn>=0 and k>=1){
			arr[mnpos]-=x;
			mn-=x;
			k--;
		}
		love();
	}
	if(!pos){
		while(mx<=0 and k>=1){
			arr[mxpos]+=x;
			mx+=x;
			k--;
		}
		love();
	}
	if(mn>abs(mx)){
		while(mx<=0 and k>=1){
			arr[mxpos]+=x;
			mx+=x;
			k--;
		}
		love();
	}
	while(mn>=0 and k>=1){
		arr[mnpos]-=x;
		mn-=x;
		k--;
	}
	love();
}
int main(){
	#ifndef ONLINE_JUDGE
    freopen("file.in", "r", stdin);
	#endif	
	scanf("%d%d%d",&n,&k,&x);
	for(int i=1;i<=n;i++){
		scanf("%d",arr+i);
		upd(i,arr[i]);
		if(umin(mini,arr[i]))
			ps=i;
	}	
	if(mini-k*x>=0){
		arr[ps]-=k*x;
		go();
	}
	if(zero>k)
		go();
	if(neg&1){
		for(int i=1;i<=n;i++)
			if(!arr[i])
				upd(i,x);
	}
	else{
		int flag=0;
		for(int i=1;i<=n;i++)
			if(!arr[i]){
				if(!flag)
					upd(i,-x),flag=1;
				else
					upd(i,x),pos++;
			}
	}
	if(zero==k)
		go();
	else{
		k-=zero;
		solve();	
	}
	return 0;
}	
