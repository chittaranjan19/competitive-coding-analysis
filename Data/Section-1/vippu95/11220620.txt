#include<bits/stdc++.h>
using namespace std;

#define lli long long
#define pb push_back
#define mp make_pair
#define gc getchar_unlocked
#define lld "%I64d"
#define DEBUG(x) cout<<">value ("<<#x<<") : "<<x<<endl;
#define mod 1000000007

const int limit = 5000005;
int cnt[limit];
vector<bool> prime(limit,true);

int get(lli num,lli div){
    int ans = 0;
    lli temp = num;

    while(num%div==0){
        ans++;
        num = num/div;
    }
     //if(temp==6) cout<<div<<" "<<ans<<endl;
    return ans;
}

void seive(){
    lli upto = sqrt(limit);
	for(lli i=2;i<=upto;i++){
		if(prime[i]){
            //if(i<=10) cout<<i<<endl;
			for(lli j=i;j*i<limit;j+=i){
				prime[j]=false;
                cnt[j] += get(j,i);
            }
		}
	}
	for(lli i=upto+1;i<limit;i++){
        if(prime[i]) cnt[i] += 1;
	}
	return;
}


lli bit[limit];

void update(int idx,lli v){
    while(idx < limit){
        bit[idx] += v;
        idx += idx & (-idx);
    }
    return ;
}

lli query(int idx){
    lli ans = 0;
    while(idx > 0){
        ans += bit[idx];
        idx -= idx & (-idx);
    }
    return ans;
}

int main(){
    memset(cnt,0,sizeof(cnt));
    memset(bit,0,sizeof(bit));
    seive();
    for(int i=1;i<limit;i++){
        update(i,cnt[i]);
    }
    int t;
    scanf("%d",&t);
    while(t--){
        int a,b;
        scanf("%d %d",&a,&b);
        //cout<<query(a)<<" "<<query(b)<<endl;
        lli ans = query(a)-query(b);
        printf("%lld\n",ans);
    }
}

