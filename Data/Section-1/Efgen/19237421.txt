import java.io.*;
import java.util.*;

public class Main implements Runnable {

    void solve() throws IOException {
        int n = nextInt();
        int[] a = new int[n+1];
        for (int i=0; i<n; i++) {
            a[i+1] = nextInt();
        }
        int[][] d = new int[n+1][3];
        for (int i=1; i<=n; i++) {
            d[i][0] = Math.max(d[i-1][0], Math.max(d[i-1][1], d[i-1][2]));
            if ((a[i]&1)!=0) {
                d[i][1] = Math.max(d[i-1][2], d[i-1][0])+1;
            }
            if ((a[i]&2)!=0) {
                d[i][2] = Math.max(d[i-1][1], d[i-1][0])+1;
            }
        }
        int res = Math.max(d[n][0], Math.max(d[n][1], d[n][2]));
        out.print(n-res);



    }

    public void run() {
        try {
            br = new BufferedReader(new InputStreamReader(System.in));
            out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));

            solve();
            br.close();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(123);
        }
    }

    BufferedReader br;
    StringTokenizer st;
    PrintWriter out;


    String next() throws IOException {
        while (st == null || !st.hasMoreTokens()) {
            String s = br.readLine();
            if (s == null)
                return null;
            st = new StringTokenizer(s);
        }
        return st.nextToken();
    }

    double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static void main(String[] args) {
        new Thread(new Main()).start();
    }
}
