#include <bits/stdc++.h>

using namespace std;
typedef pair<int, int> pii;

#define fi first
#define se second

char S[30];
int occ[256];
char ans[2][20];
pii zig[2][20];

int main() {
	scanf("%s", S);
	for (int i = 0; i < 27; i++) {
		occ[S[i]]++;
	}
	char twice = find(occ + 'A', occ + 'Z' + 1, 2) - occ;
	vector<int> pos;
	for (int i = 0; i < 27; i++) {
		if (S[i] == twice) {
			pos.push_back(i);
		}
	}

	if (pos[1] == pos[0] + 1) {
		puts("Impossible");
		return 0;
	}

	printf("%s\n%s\n", ans[0], ans[1]);
	int pos0 = (pos[1] - pos[0] + 1) / 2, pos1 = (pos[1] - pos[0]) / 2;
	if (pos0 == pos1) {
		vector<pii> place;
		for (int i = pos0 - 1; i >= 0; i--) {
			place.push_back(pii(0, i));
		}
		for (int i = 0; i < pos1; i++) {
			place.push_back(pii(1, i));
		}

		vector<pii> place2;
		for (int i = pos1; i < 13; i++) {
			place2.push_back(pii(1, i));
		}
		for (int i = 12; i >= pos0; i--) {
			place2.push_back(pii(0, i));
		}

		for (int i = pos[0]; i < pos[1]; i++) {
			ans[place[i - pos[0]].fi][place[i - pos[0]].se] = S[i];
		}
		for (int i = 0; i < pos[0]; i++) {
			ans[place2[i + place2.size() - pos[0]].fi][place2[i + place2.size() - pos[1]].se] = S[i];
		}
		for (int i = pos[1] + 1; i < 27; i++) {
			ans[place2[i - pos[1] - 1].fi][place2[i - pos[1] - 1].se] = S[i];
		}
	} else {
		/*
		printf("posses %d %d\n", pos[0], pos[1]);
		printf("pos0 %d, pos1 %d\n", pos0, pos1);
		*/
		vector<pii> place;
		for (int i = pos0 - 1; i >= 0; i--) {
			place.push_back(pii(0, i));
		}
		for (int i = 0; i < pos1; i++) {
			place.push_back(pii(1, i));
		}


		for (int i = pos[0]; i < pos[1]; i++) {
			ans[place[i - pos[0]].fi][place[i - pos[0]].se] = S[i];
		}


		vector<pii> place2;
		for (int i = pos1; i < 13; i++) {
			place2.push_back(pii(1, i));
		}
		for (int i = 12; i >= pos0; i--) {
			place2.push_back(pii(0, i));
		}

		/*
		printf("PLACE:\n");
		for (pii p : place2) {
			printf("(%d, %d) ", p.fi, p.se);
		}
		puts("");
		*/

		int spos = 0;
		for (int i = pos[1] + 1; i < 27; i++) {
			ans[place2[i - pos[1] - 1].fi][place2[i - pos[1] - 1].se] = S[i];
			spos++;
		}
		for (int i = 0; i < pos[0]; i++) {
			ans[place2[i + spos].fi][place2[i + spos].se] = S[i];
		}
	}

	for (int i = 0; i < 2; i++) {
		//assert(strlen(ans[i]) == 13);
		puts(ans[i]);
	}
}
