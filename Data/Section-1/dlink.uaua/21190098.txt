#include <bits/stdc++.h>

#define out_file freopen("olymp.in", "r", stdin); freopen("olymp.out", "w", stdout)
#define ls else
#define all(a) a.begin(),a.end()
#define rall(a) a.rbegin(),a.rend()
#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
#define timer int timer=clock()
#define rtn return
#define maxint 2147483647
#define I "%d"
#define II "%d%d"
#define III "%d%d%d"
#define L "%lf"
#define sqr(x) (x)*(x)
#define mp make_pair
#define pb push_back
#define sd second
#define ft first
#define y0 sklfgnjkdnhfxfhn
#define y1 sklfgnjkdnhfxfh
#define y2 sklfgnjkdnhfxfhnv
#define y3 sklfgnjkdnhfxfhna
#define y5 sklfgnjkdnhfxfhns
#define y4 sklfgnjkdnhfxfhnd
#define y6 sklfgnjkdnhfxfhnf

using namespace std;

typedef pair <int,int> pii;
typedef vector < pii > vii;
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef long double ld;
typedef long long ll;

int n, m, k;
bool vis[51][51];
char a[51][51];

int dfs(int y, int x)
{
    if(y < 0 || y >= n || x < 0 || x >= m || vis[y][x])
        rtn 0;
    vis[y][x] = 1;
    int targ = 0;
    if(a[y-1][x] == '.') targ = dfs(y-1, x);
    if(a[y+1][x] == '.') targ += dfs(y+1, x);
    if(a[y][x-1] == '.') targ += dfs(y, x-1);
    if(a[y][x+1] == '.') targ += dfs(y, x+1);
    rtn targ + 1;
}

void rdfs(int y, int x)
{
    if(y < 0 || y >= n || x < 0 || x >= m)
        rtn;
    a[y][x] = '*';
    if(a[y-1][x] == '.') rdfs(y-1, x);
    if(a[y+1][x] == '.') rdfs(y+1, x);
    if(a[y][x-1] == '.') rdfs(y, x-1);
    if(a[y][x+1] == '.') rdfs(y, x+1);
}

int main()
{
    cin >> n >> m >> k;
    for(int i = 0; i < n; i++)
        for(int j = 0; j < m; j++)
            cin >> a[i][j];
    for(int i = 0; i < n; i++)
    {
        if(!vis[i][0] && a[i][0] == '.') dfs(i, 0);
        if(!vis[i][m-1] && a[i][m-1] == '.') dfs(i, m-1);
    }
    for(int i = 0; i < m; i++)
    {
        if(!vis[0][i] && a[0][i] == '.') dfs(0, i);
        if(!vis[n-1][i] && a[n-1][i] == '.') dfs(n-1, i);
    }
    vector<pair<int, pii > > ans;
    for(int i = 0; i < n; i++)
        for(int j = 0; j < m; j++)
            if(a[i][j] == '.' && !vis[i][j])
                ans.pb(mp(dfs(i, j), mp(i, j)));
    sort(all(ans));
    reverse(all(ans));
    int sol = 0;
    for(int i = ans.size() - 1; i >= k; i--)
    {
        sol += ans[i].ft;
        rdfs(ans[i].sd.ft, ans[i].sd.sd);
    }
    cout << sol;
    for(int i = 0; i < n; i++)
    {
        cout << '\n';
        for(int j = 0; j < m; j++)
            cout << a[i][j];
    }
}
