#include <bits/stdc++.h>

using namespace std;

#define endl '\n'
#define all(x) x.begin(), x.end()
typedef long long ll;
#define y1 fckdbear
#ifdef Yukino
    #define LLD "%lld"
#else
    #define LLD "%I64d"
#endif

const int MaxN = (int)(1e5) + 128;

ll m, h1, a1, x1, y1, h2, a2, x2, y2;

set <pair <int, int> > S;

ll binpow (ll a, ll n) {
    ll res = 1;
    while (n) {
        if (n & 1)
            res = (res * a) % m;
        a = (a * a) % m;
        n >>= 1;
    }
    return res;
}

int main () {
    #ifdef Yukino
        freopen (".in", "r", stdin);
    #endif
    
    scanf (LLD LLD LLD LLD LLD LLD LLD LLD LLD, &m, &h1, &a1, &x1, &y1, 
                                                    &h2, &a2, &x2, &y2);
    
    ll d0 = h1, d1 = h2;
    
    // m = (int)(1e9 + 7);
    
    for (int i = 1; i <= (int)(1e6); ++i) {
        h1 = (1ll * h1 * x1 % m + y1 * 1ll) % m;
        h2 = (1ll * h2 * x2 % m + y2 * 1ll) % m;
        if (S.count (make_pair (h1, h2))) {
            puts ("-1");
            return 0;
        }
        S.insert (make_pair (h1, h2));
        if (h1 == a1 && h2 == a2) {
            printf ("%d\n", i);
            return 0;
        }
        // cout << h1 << " " << h2 << endl;
        // cout << (d0 * binpow (x1, i) % m + binpow (x1 + i - 1) * y1 % m) % m << " " << 
                // (d1 * binpow (x2, i) % m + binpow (x2 + i - 1) * y2 % m) % m << endl;
        /* if (h1 == a1 && h2 == a2) {
            printf ("%d\n", i);
            return 0;
        } */
        // S.insert (make_pair (h1, h2));
    }
    
    puts ("-1");
    
    return 0;
}
/*
    d[i] = (d[i - 3] * x^2 + (x + 1) * y) * x + y = d[i - 3] * x^3 + x^2 * y + 2 * y;
    d[i - 1] = (d[i - 3] * x + y) * x + y = d[i - 3] * x * x + (x + 1) * y;
    d[i - 2] = (d[i - 4] * x + y) * x^2 + x * y + y = d[i - 4] * x^3 + y * x^2 + y * x + y;
    d[i - 3] = d[i - 4] * x + y;
*/