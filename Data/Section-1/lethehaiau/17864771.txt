#include <bits/stdc++.h>
using namespace std;

struct point
{
	double x, y;
};

int n;
point a, b, t;
point c[100111];
int d[2], e[2];
double dd[2], ee[2];

double ds(point u, point v)
{
	return(sqrt((u.x-v.x)*(u.x-v.x) + (u.y-v.y)*(u.y-v.y)));
}

int main()
{
	//freopen("in.txt", "r", stdin);
	cin >> a.x >> a.y >> b.x >> b.y >> t.x >> t.y;
	cin >> n;
	for(int i = 0; i < n; i++)
		cin >> c[i].x >> c[i].y;
	for(int i = 0; i < 2; i++)
	{
		dd[i] = -1e12;
		ee[i] = -1e12;
	}
	for(int i = 0; i < n; i++)
	{
		double s1 = ds(c[i], t) - ds(a, c[i]);
		if(s1 > dd[0])
		{
			dd[1] = dd[0];
			d[1] = d[0];
			dd[0] = s1;
			d[0] = i;
		}
		else
		{
			if(s1 > dd[1])
			{
				dd[1] = s1;
				d[1] = i;
			}
		}
		double s2 = ds(c[i], t) - ds(b, c[i]);
		if(s2 > ee[0])
		{
			ee[1] = ee[0];
			e[1] = e[0];
			ee[0] = s2;
			e[0] = i;
		}
		else
		{
			if(s2 > ee[1])
			{
				ee[1] = s2;
				e[1] = i;
			}
		}
	}
	double s = 0;
	for(int i = 0; i < n; i++)
		s += 2*ds(t, c[i]);
	//cout << s;
	double x = -1e12;
	x = max(dd[0], ee[0]);
		for(int i = 0; i < 2; i++)
		for(int j = 0; j < 2; j++)
			if(d[i] != e[j] && x < dd[i] + ee[j])
				x = dd[i] + ee[j];
	if(n == 1)
		s -= max(dd[0], ee[0]);
	else
		s -= x;
	cout << setprecision(12) << fixed << s;
	return 0;
}