
/* Author:
    * Rohit Laddha */
#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <iostream>
#include <sstream>
#include <string>
#include <utility>
#include <vector>
#include <cassert>
#include <ctime>
#include <queue>
#include <tr1/random>
#include <tr1/unordered_map>
using namespace std;
using namespace std::tr1;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define ALL(c) (c).begin(),(c).end()
#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;
int main()
{
	int x ;
	cin >> x;
	int sharp=0,tmp=0;
	for(int i=1;i<=x+50;i++)
	{
		if(i%2!=0)
		{
			if(i==1)sharp=1;
			else sharp=(2*(i-2)*(i-2))+i;
		}
		else
		{
			tmp=i-((i/2)+1);
			if(tmp==1)sharp=4;
			else if(tmp%2==0) sharp=(((tmp*tmp)/2)*4);
			else sharp=(((2*(tmp-2)*(tmp-2))+tmp)*4);
		}
		if(x>sharp)
			continue;
		else
		{
			cout << i << endl;
			break;
		}
	}
	return 0;
}
