#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

int gcd(int a, int b) {
	return b ? gcd(b, a % b) : a;
}

int _gcd(int a, int b, int & x, int & y) {
	if (a == 0) {
		x = 0; y = 1;
		return b;
	}
	int _x1, _y1;
	int d = _gcd(b%a, a, _x1, _y1);
	x = _y1 - (b / a) * _x1;
	y = _x1;
	return d;
}

int _cnt = 0;

vector<int> factor(int n){
	vector<int> f;
	for (int i = 2; i*i <= n; i++){
		if (n % i != 0) continue;
		while (n % i == 0){
			n /= i;
			f.push_back(i);
		}
	}
	if (n != 1)
		f.push_back(n);
	sort(f.begin(), f.end());
	return f;
}

vector<int> _factor(int n){
	vector<int> f;
	for (int i = 2; i*i <= n; i++){
		if (n % i != 0) continue;
		f.push_back(i);
		n /= i;
		while (n % i == 0){
			n /= i;
			f[f.size() - 1] *= i;
		}
	}
	if (n != 1)
		f.push_back(n);
	sort(f.begin(), f.end());
	return f;
}

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 1e6 + 10, lg = 20;
ll mod = 1e9 + 7;
int n;
int a[N];
int b[N];

int main()
{
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i], a[i]--;
	set<pair<int, int> > q;

	for (int i = 0; i < n; i++){
		b[i] = 1e9;
	}

	q.insert(mp(0, 0));
	while (!q.empty()){
		pair<int, int> top = *q.begin();
		q.erase(q.begin());
		int x = top.sc, val = top.fs;
		if (b[x] <= val) continue;
		else{
			b[x] = val;
			if (x != 0 && b[x - 1] > val + 1);
				q.insert(mp(val + 1, x - 1));
			q.insert(mp(val + 1, x + 1));
			q.insert(mp(val + 1, a[x]));
		}
	}
	for (int i = 0; i < n; i++)
		cout << b[i] << ' ';
	return 0;
}