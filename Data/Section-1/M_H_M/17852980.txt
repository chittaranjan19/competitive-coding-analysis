//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<ld, ld> pii;
typedef pair<pii, int> piii;


const int N = 1e5 + 100;

pii bt[N];
pii a, b, t;
int n;
ld sum = 0;

ld dis(pii x, pii y){
	return sqrt((x.X - y.X) * (x.X - y.X) + (x.Y - y.Y) * (x.Y - y.Y));
}

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> a.X >> a.Y;
	cin >> b.X >> b.Y;
	cin >> t.X >> t.Y;
	cin >> n;
	for(int i = 0; i < n; ++i) cin >> bt[i].X >> bt[i].Y;
	for(int i = 0; i < n; ++i){
		sum += 2 * dis(t, bt[i]);
	}
	ld mx[2] = {0, 0}, id[2] = {0, 0}, mx2[2] = {0, 0}, id2[2] = {0, 0};
	for(int i = 0; i < n; ++i){
		if(dis(t, bt[i]) - dis(a, bt[i]) > mx[0]){
			mx2[0] = mx[0];
			id2[0] = id[0];
			mx[0] = dis(t, bt[i]) - dis(a, bt[i]);
			id[0] = i;
		}
		else if(dis(t, bt[i]) - dis(a, bt[i]) > mx2[0]){
			mx2[0] = dis(t, bt[i]) - dis(a, bt[i]);
			id2[0] = i;	
		}
	}
	for(int i = 0; i < n; ++i){
		if(dis(t, bt[i]) - dis(b, bt[i]) > mx[1]){
			mx2[1] = mx[1];
			id2[1] = id[1];
			mx[1] = dis(t, bt[i]) - dis(b, bt[i]);
			id[1] = i;
		}
		else if(dis(t, bt[i]) - dis(b, bt[i]) > mx2[1]){
			mx2[1] = dis(t, bt[i]) - dis(b, bt[i]);
			id2[1] = i;	
		}
	}
	if(id[0] != id[1]){
		sum = sum - mx[0] - mx[1];
	}
	else if(mx2[0] > mx2[1]){
		sum = sum - mx2[0] - mx[1];
	}
	else{
		sum = sum - mx2[1] - mx[0];
	
	}
	cout << fixed << setprecision(6) << sum << "\n";
	return 0;
}
