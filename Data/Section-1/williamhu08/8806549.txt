//why are you stalking me?
#include <iostream>
#include <cstdio>
#include <fstream>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <deque>
#include <sstream>
#include <cmath>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>
#include <functional>
#include <ctime>
#include <climits>
#include <cstdlib>
#include <complex>
//#define NDEBUG 1
#include <cassert>

using namespace std;

#define rep(it, v) for (__typeof((v).begin()) it = (v).begin(); it != (v).end(); it++)
#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()

typedef long long ll;
typedef pair<int, int> pii;

int ans = 1e7;
int H1, A1, D1;
int H2, A2, D2;
int H, A, D;

void setans (int x) {
	if (ans > x) {
		ans = x;
	}
}

int quot (int a, int b) {
	//returns ceil(a / b)
	return a / b + bool(a % b);
}

int main() {
	//why are you stalking me?
#ifndef ONLINE_JUDGE
	freopen("codeforces487A.in", "r", stdin);
#endif
	scanf("%d%d%d%d%d%d%d%d%d", &H1, &A1, &D1, &H2, &A2, &D2, &H, &A, &D);
	for (int i = 0; i <= 1000; i++) {
		for (int j = 0; j <= 1000; j++) {
			//try i A's and j D's
			//calc the # of times it will go down
			int cost = i * A + j * D;
			int monster = max(0, (A1 + i) - D2), yang = max(0, A2 - (D1 + j));
			if (monster == 0) {
				//monster is invincible
				continue;
			}
			if (yang == 0) {
				//he is invincible
				setans(cost);
				continue;
			}
			//ok let's see how many rounds we need for monster to go down
			setans(cost + H * max(0, 1 - (H1 - quot(H2, monster) * yang)));
		}
	}
	printf("%d\n", ans);
}