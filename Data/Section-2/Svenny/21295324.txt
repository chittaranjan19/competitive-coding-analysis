#include <iostream>
#include <cstdlib>
#include <list>
#include <vector>
#include <map>

using namespace std;

#define ip pair<int,int>

int main()
{
	int n, m, k; cin >> n >> m >> k;
	map<ip, int> ks;
	int *ts = new int[k + 1];
	for (int i = 1; i <= k; i++)
	{
		ip xy;
		cin >> xy.first >> xy.second;
		ks[xy] = i;
		ts[i] = -1;
	}
	ip xy;
	int time = 0;
	xy.first = 0;
	xy.second = 0;
	int dir = 1; // 1 /   2 \   3 /v   4 \v
	do
	{
		time++;
		switch (dir)
		{
		case 1:
			xy.first++;
			xy.second++;
			break;
		case 2:
			xy.first--;
			xy.second++;
			break;
		case 3:
			xy.first--;
			xy.second--;
			break;
		case 4:
			xy.first++;
			xy.second--;
			break;
		}
		if (xy.first == 0)
		{
			if (dir == 2)
				dir = 1;
			else if (dir == 3)
				dir = 4;
		}
		else if (xy.first == n)
		{
			if (dir == 1)
				dir = 2;
			else if (dir == 4)
				dir = 3;
		}
		else if (xy.second == 0)
		{
			if (dir == 3)
				dir = 2;
			else if (dir == 4)
				dir = 1;
		}
		else if (xy.second == m)
		{
			if (dir == 1)
				dir = 4;
			else if (dir == 2)
				dir = 3;
		}
		auto it = ks.find(xy);
		if (it != ks.end())
		{
			if (ts[(*it).second] == -1)
				ts[(*it).second] = time;
		}
	} while (!((xy.first >= n && xy.second >= m) ||
		       (xy.first <= 0 && xy.second <= 0) ||
			   (xy.first >= n && xy.second <= 0) ||
			   (xy.first <= 0 && xy.second >= m)));
	for (int i = 1; i <= k; i++)
	{
		cout << ts[i] << endl;
	}
	//system("pause");
	return 0;
}