//in the name of GOD
//<MohammadJavad Akbari />

#include<bits/stdc++.h>
using namespace std;

//#define mp make_pair
//#define int long long
#define ld long double
#define all(x) x.begin(),x.end()
#define endl '\n'
#define MohammadJA main

const long long MAXN=1e6+100;
const long long MAXM=3e3;
const long long MOD=1e9+7;
const long long mod=1e9+7;
const long long INF=1e15+5040;
const long long MAX_LOG=19;

const int dx[4]={1,-1,0,0};
const int dy[4]={0,0,-1,1};



vector<int>c[MAXN],h;
vector<pair<int,int> >cs;
int p[MAXN],np[MAXN];
bool vis[MAXN];
void make(){
	for(int i=1;i<h.size();i++)
		np[h[i-1]]=h[i];
	np[h.back()]=h[0];
}
void dfs(int v,int cnt){
	vis[v]=true;
	c[cnt].push_back(v);
	if(!vis[p[v]])dfs(p[v],cnt);
}

MohammadJA(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	
	int n;
	cin>>n;
	int cnt=0;
	for(int i=1;i<=n;i++)cin>>p[i];
	for(int i=1;i<=n;i++)
		if(!vis[i]){
			dfs(i,cnt);
			if(c[cnt].size()%2){
				int k=c[cnt].size()/2+1;
				int f=c[cnt].size();
				h.clear();
				h.push_back(c[cnt][0]);
				if(f>1)for(int i=k;i!=0;i+=k,i%=f)h.push_back(c[cnt][i]);
				make();
			}
			else 
				cs.push_back({c[cnt].size(),cnt});
			
			
			cnt++;
		}
	if(cs.size()%2)return cout<<-1,0;
	sort(all(cs));
	for(int i=0;i<cs.size();i+=2){
		if(cs[i].first != cs[i+1].first)return cout<<-1,0;
		int n1=cs[i].second,n2=cs[i+1].second;
		h.clear();
		for(int j=0;j<2*cs[i].first;j++)
			if(j%2)h.push_back(c[n1][j/2]);
			else h.push_back(c[n2][j/2]);
		
		make();
	}
	for(int i=1;i<=n;i++)
		cout<<np[i]<<' ';
}
