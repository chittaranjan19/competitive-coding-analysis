#include <cstdio>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <cmath>
#include <climits>
#ifdef DEBUG
    #include <ctime>
#endif
using namespace std;

// template

// abbreviations
#define vi vector<int>
#define vl vector<ll>
#define vb vector<bool>
#define vs vector<string>
#define ii pair<int, int>
#define a first
#define b second
#define vii vector<ii>
#define mii map<int, int>
#define vvi vector<vi>
#define vvl vector<vl>
#define que queue
#define pque priority_queue
#define stk stack
#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define pu push
#define po pop
#define mp make_pair
#define sz(var) ((int) var.size())
#define rep(it, n) for(int it = 0; it < n; ++it)
#define dep(it, n) for(int it = n - 1; it >= 0; --it)
#define rep1(it, n) for(int it = 1; it <= n; ++it)
#define dep1(it, n) for(int it = n; it > 0; --it)
#define loop(it, from, to) for(int it = (from); it <= (to); ++it)
#define iter(it, cont) for(__typeof((cont).begin()) it = (cont).begin(); it != (cont).end(); ++it)
#define riter(it, cont) for(__typeof((cont).rbegin()) it = (cont).rbegin(); it != (cont).rend(); ++it)
#define all(cont) (cont).begin(), (cont).end()
#define rng(cont, n) cont, cont + n
#define memclr(var) memset(var, 0, sizeof(var))

typedef unsigned long long ull;
typedef long long ll;

const int INF = INT_MAX;
const int NINF = INT_MIN;
const ll INF_LL = LLONG_MAX;
const ll NINF_LL = LLONG_MIN;
const double PI = acos(-1.0);
const int MOD = 1e9 + 7;

#ifdef DEBUG
    #define debug(fmt, args...) printf("Line %d, in %s\t: " fmt, __LINE__, __FUNCTION__, ##args)
    #define rep_rt() printf("[Run time: %.3fs]\n", ((double) clock()) / CLOCKS_PER_SEC)
#else
    #define debug(...)
#endif

// end of template

#define MAXN 500

ll matx[MAXN + 1][MAXN + 1];
int n;
ll supposed;
bool same_horizontal() {
    for (int i = 0; i < n; ++i) {
        ll tot = 0;
        for (int j = 0; j < n; ++j) {
            tot += matx[i][j];
        }
        if (tot != supposed)
            return false;
    }
    return true;
}
bool same_vertical() {
    for (int j = 0; j < n; ++j) {
        ll tot = 0;
        for (int i = 0; i < n; ++i) {
            tot += matx[i][j];
        }
        if (tot != supposed)
            return false;
    }
    return true;
}

bool same_diagonal() {
    ll l = 0, r = 0;
    for (int i = 0; i < n; ++i) {
        l += matx[i][i];
        r += matx[i][n - 1- i];
    }
    if ((l == r) and (l == supposed))
        return true;
    return false;
}

int main() {
#ifdef DEBUG
    freopen("711B.in", "r", stdin);
#endif
    
    scanf("%d", &n);

    if (n == 1) {
        printf("%d\n", 1);
        return 0;
    }

    ii pos0;
    rep(i, n) {
        rep(j, n) {
            scanf("%I64d", &matx[i][j]);
            if (matx[i][j] == 0) {
                pos0 = mp(i, j);
            }
        }
    }

    supposed = 0;
    for (int j = 0; j < n; ++j) {
        supposed += matx[pos0.a ? pos0.a - 1 : 1][j];
    }
    ll but_get = 0;
    for (int j = 0; j < n; ++j) {
        but_get += matx[pos0.a][j];
    }
    matx[pos0.a][pos0.b] = supposed - but_get;
    if (same_horizontal() and same_vertical() and same_diagonal()) {
        printf("%I64d\n", matx[pos0.a][pos0.b]);
    } else {
        puts("-1");
    }

#ifdef DEBUG
    rep_rt();
#endif
    return 0;
}