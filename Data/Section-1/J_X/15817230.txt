#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const int maxn = 500 + 5;

char s[maxn];
int g[maxn][maxn];
int n, m;

bool dfs(int u, char c)
{
    s[u] = c;
    for(int v = 1; v <= n; ++v)
    {
        if(u != v && !g[u][v] && (s[v] == s[u] || (!s[v] && !dfs(v, 196 - c)))) return false;
    }
    return true;
}

bool solve()
{
    memset(s, 0, sizeof(s));
    for(int i = 1; i <= n; ++i)
    {
        if(!s[i])
        {
            if(g[i][0] == n - 1) s[i] = 'b';
            else if(!dfs(i, 'a')) return false;
        }
    }
    return true;
}

int main()
{
    while(~scanf("%d%d", &n, &m))
    {
        memset(g, 0, sizeof(g));
        for(int i = 0; i < m; ++i)
        {
            int u, v;
            scanf("%d%d", &u, &v);
            g[u][v] = g[v][u] = 1;
            ++g[u][0], ++g[v][0];
        }
        if(solve()) printf("Yes\n%s\n", s + 1);
        else puts("No");
    }
    return 0;
}
