#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef vector<int> vi;

#define TRACE

#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif
#define MOD  10000009
ll powmod(ll a,ll b)
{
    if(b==0)return 1;
    ll x=powmod(a,b/2);
    ll y=(x*x)%MOD;
    if(b%2)
        return (a*y)%MOD;
    return y;
}
struct sort_pred {
    bool operator()(const std::pair<int,int> &left, const std::pair<int,int> &right) 
    { 
        return left.second < right.second; 
    }
};
int main()
{
    int n;
    cin >> n;
    std::vector<int> a(n+1);
    for(int i=1;i<=n;i++)
    {
        cin >> a[i];
    }
    int state=0;
    int sp=1,ep=sp+1,foo=sp,bar=ep;
    while(state!=1)
    {
        sp=1;ep=sp+1;foo=sp;bar=ep;
        state=1;
        for(int i=1;i<n;i++)
        {
            
            if(a[i]>a[i+1])
            {
                state=0;
                break;
            }
        }
      /*  for(int i=1;i<=n;i++)
        {
            cout << a[i] <<" ";
        } */
       // trace1(state);
        for( ;(bar<=n)&&(foo<bar);)
        {
          //  trace4(sp,ep,foo,bar);
            if(a[foo] >a[bar])
            {
            //    trace2(a[foo],a[bar]);
                int  temp=a[foo];
                a[foo]=a[bar];
                a[bar]=temp;
                ep=bar;
                if(bar==n)
                {
                    cout << sp << " " << ep << endl;
                    foo=sp;
                    break;       
                }
                foo=bar+1;
                bar=foo+1;
            }
            else if(sp!=foo)
            {
                cout << sp << " " << ep << endl;
                foo=bar;
                sp=foo;
                bar=foo+1;
               // bar=ep;
            }
            else
            {
                
                foo=bar;
                sp=foo;
                bar=foo+1;
            }

        }
        if(foo!=sp)
        {
                cout << sp << " " << ep << endl;
        }
        
    }     
    return 0;
}