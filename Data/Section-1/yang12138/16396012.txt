/*
    ━━━━━┒
    ┓┏┓┏┓┃让老子先跳！
    ┛┗┛┗┛┃＼○／
    ┓┏┓┏┓┃ //
    ┛┗┛┗┛┃ノ)
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┃┃┃┃┃┃
    ┻┻┻┻┻┻
*/
#include <cstdio>
#include <iostream>
#include <cstring>
#include <string>
#include <algorithm>
#include <cctype>
#include <stack>
#include <map>
#include <set>
#include <iomanip>
#include <cstdlib>
#include <queue>
#include <ctime>
#include <cmath>
using namespace std;
typedef long long ll;
string a[100005],son[100005],text;
int ok,n,m;
void dfs(int now,string ans)
{
    if(now==n)
    {
        cout<<ans<<endl;
        ok=1;
        return ;
    }
    for(int i=0;i<m&&!ok;i++)
    {
        string temp=text.substr(now,son[i].size());
        if(temp==son[i]) dfs(now+son[i].size(),ans+a[i]+" ");
    }
}
int main()
{
    ok=0;
    cin>>n>>text>>m;
    for(int i=0;i<m;i++)
    {
        cin>>a[i];
        son[i]=a[i];
        transform(son[i].begin(),son[i].end(),son[i].begin(),::tolower);
        reverse(son[i].begin(),son[i].end());
    }
    dfs(0,"");
    return 0;
}

















