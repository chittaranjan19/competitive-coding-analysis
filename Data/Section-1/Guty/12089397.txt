#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int main()
{
	int t,k;
	int maxB = 100000;
	cin >> t >> k;
	vector<tint> v (maxB+1);
	forn(i,k)
		v[i] = 1;
	forsn(i,k,maxB+1)
		v[i] = (v[i-1] + v[i-k]) % 1000000007;
	vector<tint> partSumV (maxB+1);
	partSumV[0] = v[0];
	forsn(i,1,maxB+1)
		partSumV[i] = (partSumV[i-1] + v[i]) % 1000000007;
	forn(i,t)
	{
		int a,b;
		cin >> a >> b;
		cout << partSumV[b] - partSumV[a-1];
	}
		
	
	return 0;
}



