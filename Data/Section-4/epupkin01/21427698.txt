#include <iostream>
#include <climits>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(b, 0, sizeof(arr)); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // getchar(), gets()
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); n - amount; pair
#include <iomanip>      // setw(4), setfill('.'), setprecision(2)
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#include <memory>       // shared_ptr<>, uniqu_ptr<>
#include <iterator>     // ostream_iterator<int, char> out_iter(cout, " ");
#include <set>
#include <map>
#include <list>
#include <queue>
#include <functional>   // function
#define SRT srand(int(time(0)))

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
ld pi = 3.14159265358979323846;
int ten[8] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};
inline void eatline() { while (getchar() != '\n'); }

typedef map<int, int> Map;
typedef Map::iterator mIter;
typedef pair<int, int> Pair;
typedef set<int> Set;
typedef Set::iterator sIter;
typedef multimap<int, int> mMap;
typedef mMap::iterator mmIter;
typedef multiset<int> mSet;
typedef mSet::iterator msIter;
typedef list<int> List;
typedef List::iterator lIter;
typedef deque<int> Deque;
typedef Deque::iterator dIter;

const int S = 400;
int n, b[S], a[S][S], d, r, i, j, k;

inline void show(const int &r, int *a)
{
    for (j = r - 1; j >= 0; --j)
        printf("%d", a[j]);
    putchar('\n');
}

int main()
{
    cin >> n;
    for (i = 0; i < n; ++i)
        cin >> b[i];
    
    r = b[0] / 9;
    if (b[0] % 9)
        ++r, a[0][r-1] = b[0] % 9;
    else
        a[0][r-1] = 9;
    j = 0;
    while (j < r - 1)
        a[0][j++] = 9;
    
    show(r, a[0]);
    for (i = 1; i < n; ++i)
    {
        if (b[i] > b[i-1])
        {
            d = b[i] - b[i-1];
            j = 0;
            while (d > 0)
            {
                if (j < r)
                {
                    if (a[i-1][j] + d > 9)
                        a[i][j] = 9, d -= 9 - a[i-1][j];
                    else
                        a[i][j] = a[i-1][j] + d, d = 0;
                }
                else
                {
                    if (d > 9)
                        a[i][j] = 9, d -= 9;
                    else
                        a[i][j] = d, d = 0;
                }
                ++j;
            }
            if (j < r)
                while (j < r)
                    a[i][j] = a[i-1][j], ++j;
            else
                r = j;
        }
        else
        {
            d = b[i];
            j = r - 1;
            while (d > a[i-1][j])
                d -= a[i-1][j--];
            if (j == r - 1)
            {
                ++r;
                a[i][r-1] = 1;
                a[i][0] = b[i] - 1;
            }
            else
            {
                ++j;
                while (j < r && a[i-1][j] == 9)
                    ++j, d += 9;
                if (j == r)
                {
                    ++r;
                    a[i][r-1] = 1;
                    d = b[i] - 1;
                    j = 0;
                    while (d > 0)
                    {
                        if (d > 9)
                            a[i][j] = 9, d -= 9;
                        else
                            a[i][j] = d, d = 0;
                        ++j;
                    }
                }
                else
                {
                    for (k = r-1; k > j; --k)
                        a[i][k] = a[i-1][k];
                    a[i][j] = a[i-1][j] + 1;
                    --d;
                    j = 0;
                    while (d > 0)
                    {
                        if (d > 9)
                            a[i][j] = 9, d -= 9;
                        else
                            a[i][j] = d, d = 0;
                        ++j;
                    }
                }
            }
        }
        show(r, a[i]);
    }
    return 0;
}