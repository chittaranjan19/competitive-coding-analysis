# include <iostream>
# include <cstdlib>
# include <cstdio>
# include <cmath>
# include <algorithm>

using namespace std;

typedef long long int lli;

const lli N = 1000000;
lli n, A, cf, cm, m, cnt, d[N], L, R, M, sum, x, res, ansL, ansR, ans, ansA;
pair <lli, lli> a[N];

lli f (lli l, lli r)
{
    return d[r] - (l ? d[l - 1] : 0);
}

bool cmp (pair <lli, lli> a, pair <lli, lli> b)
{
    return a.second < b.second;
}

int main ()
{
    cin >> n >> A >> cf >> cm >> m;

    for (lli i = 0; i < n; ++i)
    {
        cin >> a[i].first;
        a[i].second = i;
    }

    if (n == 1)
    {
        a[0].first = min (A, a[0].first + m);
        cout << a[0].first * cm + (a[0].first == A ? cf : 0) << "\n" << a[0].first << "\n";
        return 0;
    }

    sort (a, a + n);

    d[0] = a[0].first;
    for (lli i = 1; i < n; ++i)
        d[i] = d[i - 1] + a[i].first;

    for (lli i = 0; i <= n; ++i)
    {
        sum = i * A - f (n - i, n - 1);
        if (sum > m) break;
        sum = m - sum;
        L = 0; R = n - i - 1; res = -1;
        if (i == n) res += A;
        while (L <= R)
        {
            M = (L + R) >> 1;
            x = a[M].first * (M + 1) - f (0, M);
            if (x > sum) R = M - 1;
            if (x <= sum)
            {
                res = M;
                L = M + 1;
            }
        }
        if (res != -1)
        {
            sum -= a[res].first * (res + 1) - f (0, res);
            cnt = sum / (res + 1);
            cnt = min (cnt, A - a[res].first);
        }
        else cnt = 0;
        sum = i * cf + (a[res].first + cnt) * cm;
        if (sum > ans)
        {
            ans = sum;
            ansL = res;
            ansR = i;
            ansA = cnt;
        }
    }

    cout << ans << "\n";

    a[ansL].first += ansA;
    for (lli i = 0; i <= ansL; ++i)
        a[i].first = a[ansL].first;
    for (lli i = n - ansR; i < n; ++i)
        a[i].first = A;

    sort (a, a + n, cmp);

    for (lli i = 0; i < n; ++i)
        cout << a[i].first << " ";

    cout << "\n";

    return 0;
}


