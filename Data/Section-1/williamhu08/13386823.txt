#include <bits/stdc++.h>

using namespace std; const int MAXN = 105; void setmax (int &a, int b) {if (a < b) {a = b; } } int N, T, A[MAXN]; int temp[MAXN][MAXN]; int lis[MAXN]; int res[MAXN][MAXN], dp[MAXN][MAXN]; void mult (int mat1[MAXN][MAXN], int mat2[MAXN][MAXN]) {for (int i = 0; i < N; i++) {for (int j = i; j < N; j++) {temp[i][j] = 0; for (int k = i; k < j; k++) {setmax(temp[i][j], mat1[i][k] + mat2[k][j]); } } } for (int i = 0; i < N; i++) {copy_n(temp[i], N, mat1[i]); } } int main() {if (fopen("input.txt", "r")) {freopen("input.txt", "r", stdin); } ios::sync_with_stdio(false); cin >> N >> T; vector<int> vall; for (int i = 0; i < N; i++) {cin >> A[i]; vall.push_back(A[i]); } sort(vall.begin(), vall.end()); vall.resize(unique(vall.begin(), vall.end()) - vall.begin()); for (int i = 0; i < N; i++) {int v = lower_bound(vall.begin(), vall.end(), A[i]) - vall.begin(); for (int j = 0; j <= v; j++) {dp[j][v] = *max_element(dp[j] + j, dp[j] + v + 1) + 1; } } for (; T; T >>= 1) {if (T & 1) {mult(res, dp); } mult(dp, dp); } int ans = 0; for (int i = 0; i < N; i++) {setmax(ans, *max_element(res[i] + i, res[i] + N)); } cout << ans << endl; }