#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <math.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <sstream>
#include <fstream>
#include <queue>
#include <algorithm>
#include <iostream>
#include <stack>
#include <bitset>
using namespace std;

typedef long long ll;
typedef long long ull;
#define pi acos(-1.0)
#define eps 1e-7
#define start 131072
#define LINF 1000000000000000000LL
#define pi acos(-1.0)
#define SHIFT 225000
#define mod 10007

int n;
vector<int> v[200005];
int clr[200005];
vector<int> path;

void dfs(int node, int p)
{
	path.push_back(node);
	clr[node] = 1 - clr[node];
	for(int i = 0; i < v[node].size(); ++i)
	{
		if(v[node][i] != p)
		{
			dfs(v[node][i], node);
			clr[node] = 1 - clr[node];
			path.push_back(node);
		}
	}
	if(clr[node] == 0)
	{
		if(node != 1)
		{
			path.push_back(p);
			clr[p] = 1 - clr[p];
			path.push_back(node);
		}
		else
		{
			path.push_back(v[1][0]);
			path.push_back(1);
			path.push_back(v[1][0]);
		}
	}
}

int main()
{
	bool pink = false;
	scanf("%d", &n);
	for(int i = 1; i <= n; i++)
	{
		scanf("%d", &clr[i]);
		if(clr[i] == -1)
		{
			clr[i] = 0;
			pink = true;
		}
	}
	for(int i = 0; i < n - 1; i++)
	{
		int from, to;
		scanf("%d %d", &from, &to);
		v[from].push_back(to);
		v[to].push_back(from);
	}
	if(!pink)
	{
		puts("1");
		return 0;
	}

	clr[1] = 1 - clr[1];
	dfs(1, -1);
	for(int i = 0; i < path.size(); ++i)
	{
		if(i) putchar(' ');
		printf("%d", path[i]);
	}
	puts("");
	return 0;
}