#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int toNumber (string s)
{
	int Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (int number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}




int main()
{
	ios_base::sync_with_stdio(0);
	tint a,b,c;
	set<tint> ans;
	cin >> a >> b >> c;
	forsn(s,1,82)
	{
		tint aux = s;
		tint sumaCifras = s;
		forsn(i,1,a)
			aux*= sumaCifras;
		tint x = b * aux + c;
		tint numero = x;
		tint total = 0;
		while (numero > 0)
		{
			total += (numero % 10);
			numero /= 10;
		}
		if (total == sumaCifras && x > 0 && x < 1000000000)
			ans.insert(x);
	}
	cout << ans.size() << endl;
	for(auto x : ans)
		cout << x << " ";
	cout << endl;
	return 0;
}



