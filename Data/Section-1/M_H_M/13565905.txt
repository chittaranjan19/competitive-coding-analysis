#include <bits/stdc++.h>

#define SZ(x) ((int)x.size())
#define PB push_back
#define MP make_pair
#define X first
#define Y second

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;

const int N = 100 + 50;

int n, k;
char a[3][N];
bool mark[3][N];

bool isok(int x, int y){
	if(3 * y < n && ((a[x][3 * y] >= 'A' && a[x][3 * y] <= 'Z')
				   ||(a[x][3 * y - 2] >= 'A' && a[x][3 * y - 2] <= 'Z')))
		return false;
	return true;
}

bool isokp(int x, int y){
	if(y + 2 * (y - 1) < n && a[x][y + 2 * (y - 1)] >= 'A' && a[x][y + 2 * (y - 1)] <= 'Z')
		return false;
	return true;
}

void dfs(int x, int y){
	if(y >= n) return;
//	cerr << x << " " << y << "\n";
	mark[x][y] = 1;
	if(x == 0){
		if(!isokp(0, y + 1)) return;
		if(isok(0, y + 1) && !mark[0][y + 1])
			dfs(0, y + 1);
		if(isok(1, y + 1) && !mark[1][y + 1])
			dfs(1, y + 1);
	}
	else if(x == 1){	
		if(!isokp(1, y + 1)) return;
		if(isok(0, y + 1) && !mark[0][y + 1])
			dfs(0, y + 1);
		if(isok(2, y + 1) && !mark[2][y + 1])
			dfs(2, y + 1);
		if(isok(1, y + 1) && !mark[1][y + 1])
			dfs(1, y + 1);
	}
	else{
		if(!isokp(2, y + 1)) return;
		if(isok(2, y + 1) && !mark[2][y + 1])
			dfs(2, y + 1);
		if(isok(1, y + 1) && !mark[1][y + 1])
			dfs(1, y + 1);
	}
}

void main2(){
	cin >> n >> k;
	for(int i = 0; i < 3; ++i){
		for(int j = 0; j < n; ++j){
			mark[i][j] = 0;
			cin >> a[i][j];
		}
	}
	if(a[0][0] == 's') 
		dfs(0, 0);
	else if(a[1][0] == 's')
		dfs(1, 0);
	else
		dfs(2, 0);
	bool ans = false;
	ans |= mark[0][n - 1];
	ans |= mark[1][n - 1];
	ans |= mark[2][n - 1];
/*	for(int i = 0; i < 3; ++i){
		for(int j = 0; j < n; ++j){
			cerr << mark[i][j];
		}
		cerr << "\n";
	}*/
	if(ans) cout << "YES\n";
	else cout << "NO\n";
}

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	int t;
	cin >> t;
	for(int i = 0; i < t; ++i) main2();
	return 0;
}
