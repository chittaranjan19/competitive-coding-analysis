#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int n,m,xx;
ll dp[359][359][2][2];
ll mod(ll x){
	return (x%INF);
}
ll fac(int x){
	if(x==1)
		return 1;
	return mod(x*fac(x-1)*1LL);
}
int main(){
	scanf("%d%d%d",&n,&m,&xx);
	if(n>m)
		return !printf("0\n");
	for(int l=1;l<=m;l++)
		for(int r=l;r<=m;r++)
			dp[l][r][0][(l==xx)]=1;
	for(int i=2;i<=n;i++){
		for(int l=1;l<=m;l++)
			for(int r=l;r<=m;r++){
				dp[l][r][1][0]=dp[l][r][0][0];
				dp[l][r][1][1]=dp[l][r][0][1];
				dp[l][r][0][0]=dp[l][r][0][1]=0;
				dp[l][r][1][0]=mod(dp[l][r][1][0]+dp[l][r-1][1][0]);
				dp[l][r][1][1]=mod(dp[l][r][1][1]+dp[l][r-1][1][1]);	
			}	
		for(int l=1;l<=m;l++)
			for(int r=l;r<=m;r++){	
				dp[l][r][1][0]=mod(dp[l][r][1][0]+dp[l-1][r][1][0]);
				dp[l][r][1][1]=mod(dp[l][r][1][1]+dp[l-1][r][1][1]);
			}
		for(int l=1;l<=m;l++)
			for(int r=l;r<=m;r++){
				dp[l][r][0][1]=dp[l-1][r-1][1][1];
				if(l==xx)
					dp[l][r][0][1]=mod(dp[l][r][0][1]+dp[l-1][r-1][1][0]);
				else
					dp[l][r][0][0]=mod(dp[l][r][0][0]+dp[l-1][r-1][1][0]);	
			}
	}
	ll ans=0;
	for(int l=1;l<=m;l++)
		for(int r=l;r<=m;r++)
			ans=mod(ans+dp[l][r][0][1]);
	printf("%lld\n",mod(1LL*ans*fac(n)));
	return 0;
}

