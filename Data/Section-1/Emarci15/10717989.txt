#include <cstdio>

#define mod 1000000007

using namespace std;

int n,m;
int nn;

char p[1000001];
int kmp[1000000];

int a[1000002];

bool lehet[1000000];

long long po26[1000001];

int main()
{
    scanf("%d%d",&n,&m);
    scanf("\n%s",p);
    for(nn = 0; p[nn] != '\0'; nn++);

    for(int i=1; i<=m; i++) {
        scanf("%d",&a[i]);
        a[i]--;
    }

    po26[0] = 1;
    for(int i=1; i<=n; i++) {
        po26[i] = (po26[i-1] * 26) % mod;
    }

    int x = -1;
    kmp[0] = -1;
    for(int i=1; i<nn; i++) {
        kmp[i] = ++x;
        while((x >= 0) && (p[i] != p[x])) x = kmp[x];
    }

    while(x > 0) {
        lehet[nn-(x+1)] = 1;
        x = kmp[x];
    }

    lehet[nn-1] = (p[0] == p[nn-1]);

    for(int i=1; i<m; i++) {
        if(a[i+1]-a[i] >= nn) continue;
        if(!lehet[a[i+1]-a[i]]) {
            printf("0\n");
            return 0;
        }
    }

    long long sol = 1ll;

    a[0] = -nn;
    a[m+1] = n;

    for(int i=0; i<=m; i++) {
        if(a[i+1]-a[i] < nn) continue;
        sol = (sol * po26[(a[i+1]-a[i])-nn]) % mod;
    }

    printf("%l64d\n",sol);

    return 0;
}
