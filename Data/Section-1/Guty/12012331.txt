#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int main()
{
	tint n,l,x,y,c;
	cin >> n >> l >> x >> y;
	vector<tint> a (n);
	forn(i,n)
		cin >> a[i];
	
	tint inf = 0;
	tint sup = n;
	tint i = 0;
	bool sePuedeX = false;
	while (x+a[i] <= l)
	{
		while (sup - inf > 1)
		{
			c = (sup+inf)/2;
			if (a[c] < x + a[i])
				inf = c;
			else
				sup = c;
		}
		sePuedeX = sePuedeX or (a[sup] == x + a[i]);
		i++;
		sup = n;
	}
	
	if (!sePuedeX)
		a.insert(a.begin() + inf + 1, x);
	
	imprimirVector(a);
		
	inf = 0;
	sup = n;
	i = 0;
	bool sePuedeY = false;
	while (y+a[i] <= l)
	{
		while (sup - inf > 1)
		{
			c = (sup+inf)/2;
			if (a[c] < y + a[i])
				inf = c;
			else
				sup = c;
			
		}
		sePuedeY = sePuedeY or (a[sup] == y + a[i]);
		i++;
		sup = n;
		
	}
	cout << !sePuedeX + !sePuedeY << endl;
	if (!sePuedeX)
		cout << x << " ";
	if (!sePuedeY)
		cout << y << " ";

	

	
	return 0;
}
