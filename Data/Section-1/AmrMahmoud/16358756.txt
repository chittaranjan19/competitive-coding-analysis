#include <bits/stdc++.h>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int arr[1005];
vector<int> v;
multiset<int> s;
int buff[1005];

int main()
{
  int n;
  scanf("%d", &n);
  for(int i=0;i<n;i++)
  {
    scanf("%d", &arr[i]);
    s.insert(arr[i]);
  }
  sort(arr, arr + n);
  for(int i=0;i<n;i++)
  {
    if(i > 1 && arr[i] == arr[i - 1] && arr[i - 2] == arr[i]) continue;
    v.pb(arr[i]);
  }
  int res = 2;
  for(int i=0;i<v.size();i++)
  {
    if(i && v[i] == v[i - 1]) continue;
    for(int j=i+1;j<v.size();j++)
    {
      int sz = 0;
      int a = v[i], b = v[j], curr = 2;
      s.erase(s.find(a));
      s.erase(s.find(b));
      while(1)
      {
        int c = a + b;
        if(s.find(c) == s.end()) break;
        s.erase(s.find(c));
        a = b;
        b = c;
        buff[sz++] = c;
        curr++;
      }
      for(int k=0;k<sz;k++)
        s.insert(buff[k]);
      s.insert(v[i]);
      s.insert(v[j]);
      res = max(res, curr);
    }
  }
  cout << res;
  return 0;
}
