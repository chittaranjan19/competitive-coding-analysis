#include<bits/stdc++.h>
#define lowbit(x) ((x)&(-x))
#define Max(a,b) (a>b?a:b)
#define Min(a,b) (a>b?b:a)
#define INF 0x3f3f3f3f
#define rep(i,a,b) for(int i=a;i<(b);++i)
using namespace std;
typedef __int64 ll;
vector<int>vi;
int arr[31][31] = {0};
int N,M;
bool check()
{
	for(int i = 1;i < N+1; ++i)
	{
		int cnt = 0;
		for (int j = 1; j < M+1; ++j)
		{
			if(arr[i][j]!=j)
			{
				cnt++;
			}
		}
		if(cnt > 2) return false;
	}
	return true;
}
int choice[2];
int v = 0;
bool f = false;

void dfs(int u,int t)
{
	if(f)return;
	if(u==vi.size()&&t<=1) return ; 
	if(t==2)
	{
	//	printf("%d %d\n",choice[0],choice[1]);
		for(int i = 1; i < N+1; ++i) swap(arr[i][choice[0]],arr[i][choice[1]]);
		if(check()) f = true;
		for(int i = 1; i < N+1; ++i) swap(arr[i][choice[0]],arr[i][choice[1]]);
		return ;
	}
	choice[t] = vi[u];
	dfs(u+1,t+1);
	dfs(u+1,t);
	return ;
}
int main()
{
 	
 	
	cin >> N >> M;
	for (int i = 1; i < N+1; ++i) for (int j = 1; j < M+1; ++j) cin >> arr[i][j];
	
	for(int i = 1;i < N+1; ++i)
	{
		int cnt = 0;
		for (int j = 1; j < M+1; ++j)
		{
			if(arr[i][j]!=j)
			{
				cnt++;
			}
		}
		if(cnt > 2)
		{
			v = i;
			break;
		}
	}
	if(!v) return cout << "YES" << endl,0;
	for(int i = 1; i < M+1; ++i)
	 if(arr[v][i]!=i)
	  vi.push_back(i);
	if(vi.size()>4) return cout << "NO" << endl,0;
	dfs(0,0);
	if(f) cout << "YES" << endl;
	else cout << "NO" << endl;
	return 0;
}
	//freopen("in.txt","r",stdin);
//std::ios::sync_with_stdio(false);

