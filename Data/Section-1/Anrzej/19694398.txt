#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 5e5 + 10, lg = 20, MAXN = 1111;
ll mod = 1e9 + 7;

ll gcd(ll a, ll b) {
	return b ? gcd(b, a % b) : a;
}

ll _gcd(ll a, ll b, ll & x, ll & y) {
	if (a == 0) {
		x = 0; y = 1;
		return b;
	}
	ll _x1, _y1;
	ll d = _gcd(b%a, a, _x1, _y1);
	x = _y1 - (b / a) * _x1;
	y = _x1;
	return d;
}

ll binpow(ll a, ll n) {
	ll res = 1;
	while (n) {
		if (n & 1)
			res *= a;
		a *= a;
		n >>= 1;
		a %= mod;
		res %= mod;
	}
	return res;
}

int n, q;

int ans = 0, cur = 0;
vector<int> unread[N];
set<int > st;

int main()
{
	cin >> n >> q;
	for (int i = 0; i < q; i++){
		int t;
		cin >> t;
		if (t == 1){
			int x;
			cin >> x;
			unread[x].push_back(cur);
			st.insert(cur);
			cur++;
			ans++;
		}
		if (t == 2){
			int x;
			cin >> x;
			for (int i = 0; i < unread[x].size(); i++){
				int k = unread[x][i];
				if (st.count(k))
					st.erase(k), ans--;
			}
			unread[x].clear();
		}
		if (t == 3){
			int x;
			cin >> x;
			while (x != 0 && st.size() != 0){
				ans--;
				set<int>::iterator it = st.begin();
				st.erase(it);
				x--;
			}
		}
		cout << ans << endl;
	}
	return 0;
}