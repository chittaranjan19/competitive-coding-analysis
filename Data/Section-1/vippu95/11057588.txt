#include<bits/stdc++.h>
 
using namespace std;
 
#define lli long long
#define pb push_back
#define mp make_pair
#define gc getchar_unlocked

#define mod 1000000007

const int limit = 30;
char grid[limit][limit];

bool startrow(int i,int j,int ii,int jj){
	for(int k=j;k<=jj;k++){
		if(grid[i][k]=='1')
			return false;
	}
	return true;
}

bool endrow(int i,int j,int ii,int jj){
	for(int k=j;k<=jj;k++){
		if(grid[ii][k]=='1')
			return false;
	}
	return true;
}

bool startcol(int i,int j,int ii,int jj){
	for(int k=i;k<=ii;k++){
		if(grid[k][j]=='1')
			return false;
	}
	return true;
}

bool endcol(int i,int j,int ii,int jj){
	for(int k=i;k<=ii;k++){
		if(grid[k][jj]=='1')
			return false;
	}
	return true;
}

int main(){
	int n,m;
	scanf("%d %d",&n,&m);
	int ans = 0;
	int loc = 0;
	for(int i=0;i<n;i++){
		scanf("%s",grid[i]);
	}
	
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			for(int ii=i;ii<n;ii++){
				for(int jj=j;jj<m;jj++){
					if(!startrow(i,j,ii,jj))
						continue;
					if(!endrow(i,j,ii,jj))
						continue;
					if(!startcol(i,j,ii,jj))
						continue;
					if(!endcol(i,j,ii,jj))
						continue;						
					
					int newp = 0;
					for(int k=i;k<=ii;k++){
						for(int kk=j;kk<=jj;kk++){
							if(grid[k][kk]=='0') newp++;
						}
					}
					ans = max(ans,newp);
				}
			}
		}
	}
	printf("%d\n",ans);
}
