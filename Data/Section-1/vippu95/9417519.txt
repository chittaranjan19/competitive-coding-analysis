//Coder: Vipin Singh
#include <algorithm>
#include <bitset>
#include <deque>
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

#define lli long long int
#define mp make_pair
#define pb push_back
const int limit=200005;
int deg[limit];
int sum[limit];
vector< pair<int,int> > ans;

int main(){
	int n;
	list<int> q;
	scanf("%d",&n);
	for(int i=0;i<n;i++){
		scanf("%d %d",&deg[i],&sum[i]);
		if(deg[i]==1)
			q.push_back(i);
	}
	while(!q.empty()){
		int node=q.front();
		q.pop_front();
		if(deg[node]==0)
			continue;
		int par = sum[node];
		ans.push_back(mp(node,par));
		deg[par]--;
		sum[par] = sum[par]^node;
		if(deg[par]==1)
			q.push_back(par);
		
	}
	cout<<ans.size()<<endl;
	for(int i=0;i<ans.size();i++){
		cout<<ans[i].first<<" "<<ans[i].second<<endl;
	}	
}
