/*
*Rainto96
*Beijing University of Posts and Telecommunications School of Software Engineering
*http://blog.csdn.net/u011775691
*/
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <cstring>
#include <string>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <climits>
using namespace std;
#define pb push_back
#define ALL(x) x.begin(),x.end()
#define VINT vector<int>
#define PII pair<int,int>
#define MP(x,y) make_pair((x),(y))
#define ll long long
#define ull unsigned long long
#define MEM0(x)  memset(x,0,sizeof(x))
#define MEM(x,val) memset((x),val,sizeof(x))
#define scan(x) scanf("%d",&(x))
#define scan2(x,y) scanf("%d%d",&(x),&(y))
#define scan3(x,y,z) scanf("%d%d%d",&(x),&(y),&(z))
#define scan4(x,y,z,k) scanf("%d%d%d%d",&(x),&(y),&(z),&(k))
#define Max(a,b) a=max(a,b)
#define Min(a,b) a=min(a,b)
#define fuck(x) cout<<#x<<" - "<<x<<endl
const int MAXN = 101111;
vector<int> G[MAXN];
int color[MAXN];
int bipartite(int u){
    for(int i = 0;i < G[u].size();i++){
        int v = G[u][i];
        if(color[v] == color[u]) return 0;
        if(!color[v]){
            color[v] = 3-color[u];
            if(!bipartite(v)) return 0;
        }
    }
    return 1;
}
int main(){
    //freopen("in.txt","r",stdin);
    int n,m;
    scan2(n,m);
    for(int i=0;i<m;i++){
        int u,v;scan2(u,v);
        G[u].pb(v);
        G[v].pb(u);
    }
    for(int i=1;i<=n;i++){
        if(color[i] == 0 && G[i].size()>0){
            color[i]=1;
            int res = bipartite(i);
            if( res == 0 ) {
                puts("-1");
                return 0;
            }
        }
    }
    vector<int> v[3];
    for(int i=1;i<=n;i++){
        if(color[i]){
            v[color[i]].pb(i);
        }
    }
    cout<<v[1].size()<<endl;
    for(int i=0;i<v[1].size();i++){
        cout<<v[1][i]<<" ";
    }
    cout<<endl;

    cout<<v[2].size()<<endl;
    for(int i=0;i<v[2].size();i++){
        cout<<v[2][i]<<" ";
    }
    cout<<endl;
    return 0;
}
