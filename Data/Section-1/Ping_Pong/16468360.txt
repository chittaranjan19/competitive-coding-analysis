#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int p = 239;
const int MAX_N = 1000000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

int main()
{
    //ifstream ifs("input.txt");
    //ofstream ofs("output.txt");
    //freopen("candies.in", "r", stdin);
    //freopen("candies.out", "w", stdout);
    //ios_base::sync_with_stdio(0);
    //n.tie(0);
    int n, m, k;
    scanf("%d %d %d", &n, &m, &k);
    int a[n][m];
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            scanf("%d", &a[i][j]);
    map<int, int> cnt[m];
    int ans = 0;
    vector<int> ans_arr(m, 0);
    int left = 0, right;
    for (right = 0; right < n; right++)
    {
        for (int j = 0; j < m; j++)
        {
            if (cnt[j].find(a[right][j]) == cnt[j].end())
                cnt[j][a[right][j]] = 0;
            cnt[j][a[right][j]]++;
        }
        while (left < n && left <= right)
        {
            int curr = 0;
            for (int j = 0; j < m; j++)
                curr += (--cnt[j].end())->first;
            if (curr <= k)
                break;
            for (int j = 0; j < m; j++)
            {
                cnt[j][a[left][j]]--;
                if (cnt[j][a[left][j]] == 0)
                    cnt[j].erase(a[left][j]);
            }
            left++;
        }
        if (right - left + 1 > ans)
        {
            ans = right - left + 1;
            for (int j = 0; j < m; j++)
                ans_arr[j] = (--cnt[j].end())->first;
        }
    }
    for (int j = 0; j < m; j++)
        printf("%d ", ans_arr[j]);
    return 0;
}
