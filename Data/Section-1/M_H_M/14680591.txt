//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 300 * 1000 + 100;
const int SQ = 450; 

int n, q;
int w[N];
ll ans[N];
vector <ll> ps[SQ + 1];
piii Q[N];

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> n;
	for(int i = 0; i < n; ++i)
		cin >> w[i];
	for(int i = 1; i <= min(SQ, n); ++i){
	}
	cin >> q;
	for(int i = 0; i < q; ++i){
		int a, b;
		cin >> a >> b;
		a --;
		Q[i] = MP(MP(b, a), i);
	}
	sort(Q, Q + q);
	int B = 0;
	for(int i = 0; i < q; ++i){
		int a = Q[i].X.Y;
		int b = Q[i].X.X;
		if(b != B){
			B = b;
			if(B <= SQ){
				for(int j = 0; j < B; ++j){
					ps[j].clear();
					ll sum = 0;
					for(int k = j; k < n; k += B){
						ps[j].PB(sum);
						sum += w[k];
					}
					ps[j].PB(sum);
				}
			}
		}
		ll sum = 0;
		if(b > SQ){
			while(a < n){
				sum += w[a];
				a += b;
			}
			ans[Q[i].Y] = sum;
			continue;
		}
		ans[Q[i].Y] = ps[a % b].back() - ps[a % b][a / b];
	}
	for(int i = 0; i < q; ++i)
		cout << ans[i] << "\n";
	return 0;
}
