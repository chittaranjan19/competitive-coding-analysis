import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class KuriyamaMirai {
    int T = 100;
    int[][] v;
    long[][][] sb;

    private KuriyamaMirai() throws IOException {
        BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
        String h = rd.readLine();
        h = rd.readLine();
        String[] q = h.split("\\s+");
        int n = q.length;
        v = new int[2][n];
        for(int i=0;i<n;i++) {
            v[0][i] = Integer.parseInt(q[i]);
        }
        v[1] = Arrays.copyOf(v[0], v[0].length);
        sb = new long[2][n/T+10][n/T+10];
        Arrays.sort(v[1]);
        h = rd.readLine();
        int m = Integer.parseInt(h);
        for(int j=0;j<m;j++) {
            h = rd.readLine();
            q = h.split("\\s+");
            int t = Integer.parseInt(q[0]);
            int a = Integer.parseInt(q[1]);
            int b = Integer.parseInt(q[2]);
            out(compute(t-1,a-1,b));
        }
    }

    private long compute(int type, int a, int b) {
        int len = b-a;
        long sum = 0;
        if(len < T) {
            sum = partSum(type,a,b);
        } else {
            int low;
            if(a % T == 0) {
                low = a/T;
            } else {
                low = (a+T)/T;
                sum += partSum(type,a, low*T);
            }
            int high = b/T;
            if(b % T != 0) {
                sum += partSum(type,high*T, b);
            }
            if(low < high) {
                sum += compute2(type, low, high);
            }
        }
        return sum;
    }

    private long partSum(int type, int a, int b) {
        long sum = 0;
        for(int i=a;i<b;i++) {
            sum += v[type][i];
        }
        return sum;
    }

    private long compute2(int type, int a, int b) {
        long s = 0;
        if(a != b) {
            s = sb[type][a][b];
            if(s == 0) {
                if(b-a > 1) {
                    s = compute2(type,a+1,b) + compute2(type,a,a+1);
                } else {
                    s = partSum(type,a*T,(a+1)*T);
                }

                sb[type][a][b] = s;
            }
        }
        return s;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new KuriyamaMirai();
    }
}
