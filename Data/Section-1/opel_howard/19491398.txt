#include <cstdio>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <cmath>
#include <climits>
#ifdef DEBUG
	#include <ctime>
#endif
using namespace std;

// template

// abbreviations
#define vi vector<int>
#define vl vector<ll>
#define vb vector<bool>
#define vs vector<string>
#define ii pair<int, int>
#define a first
#define b second
#define vii vector<ii>
#define mii map<ii>
#define vvi vector<vi>
#define vvl vector<vl>
#define que queue
#define pque priority_queue
#define stk stack
#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define pu push
#define po pop
#define mp make_pair
#define sz(var) ((int) var.size())
#define rep(it, n) for(int it = 0; it < n; ++it)
#define rep1(it, n) for(int it = 1; it <= n; ++it)
#define loop(it, from, to) for(int it = (from); it <= (to); ++it)
#define iter(it, cont) for(__typeof((cont).begin()) it = (cont).begin(); it != (cont).end(); ++it)
#define riter(it, cont) for(__typeof((cont).rbegin()) it = (cont).rbegin(); it != (cont).rend(); ++it)
#define all(cont) (cont).begin(), (cont).end()
#define memclr(var) memset(var, 0, sizeof(var))

typedef unsigned long long ull;
typedef long long ll;

const int INF = INT_MAX;
const int NINF = INT_MIN;
const ll INF_LL = LLONG_MAX;
const ll NINF_LL = LLONG_MIN;
const double PI = acos(-1.0);
const int MOD = 1e9+7;

#ifdef DEBUG
	#define debug(fmt, args...) printf("Line %d, in %s\t: " fmt, __LINE__, __FUNCTION__, ##args)
	#define rep_rt() printf("[Run time: %.3fs]\n", ((double) clock()) / CLOCKS_PER_SEC)
#else
	#define debug(...)
#endif

// end of template
ll d, k, a, b, t;

ll get_time (ll car_time) {
	return k * car_time * (a - b) + d * b + t * (car_time - 1);
}
bool check_pos(ll tot_time) {

	ll  ans_lb = 0, ans_ub = d / k;
	while (ans_lb < ans_ub) {
		ll m = (ans_lb + ans_ub) >> 1;
		if (get_time(m) <= tot_time) {
			ll w = d - m * k;
			if (w < 0)
				ans_ub = m - 1;
			else
				return true;
		} else {
			ans_lb = m + 1;
		}
	}
	return ((get_time(ans_lb) <= tot_time) and (d - ans_lb * k >= 0));
}

int main() {
#ifdef DEBUG
	freopen("702D.in", "r", stdin);
#endif
    
    scanf("%I64d %I64d %I64d %I64d %I64d", &d, &k, &a, &b, &t);

    ll ans_lb = 1, ans_ub = d * b;
    while (ans_lb < ans_ub) {
    	ll m = (ans_lb + ans_ub) >> 1;
    	if (!check_pos(m)) {
    		ans_lb = m + 1;
    	} else {
    		ans_ub = m;
    	}
    }
    cout << ans_lb << endl;

#ifdef DEBUG
    rep_rt();
#endif
    return 0;
}