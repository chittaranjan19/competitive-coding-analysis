#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <time.h>
#include <iostream>
#include <vector>
#include <string>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
using namespace std;

#define eps 1e-8
#define pi acos(-1.0)

long long n, k, i, j, x, y, cost, minv = 123456789012345LL;
vector <pair <long long, long long> > t, kar;
vector <vector <long long> > v;

int main()
{
    cin >> n >> k;
    for(i = 0; i < n; i++)
    {
        cin >> x >> y;
        if(y == 1)
            t.push_back(make_pair(x * 2, i + 1));
        else
            kar.push_back(make_pair(x * 2, i + 1));
    }
    sort(t.begin(), t.end());
    sort(kar.begin(), kar.end());
    v.resize(k);
    j = 0;
    if(t.size() > 0)
    {
        for(i = t.size() - 1; i >= 0 && j < k - 1; i--)
        {
            v[j++].push_back(t[i].second);
            cost += t[i].first / 2;
        }
        if(j == k - 1)
        {
            for(; i >= 0; i--)
            {
                if(minv > t[i].first)
                    minv = t[i].first;
                cost += t[i].first;
                v[j].push_back(t[i].second);
            }
            for(i = 0; i < kar.size(); i++)
            {
                if(minv > kar[i].first)
                    minv = kar[i].first;
                cost += kar[i].first;
                v[j].push_back(kar[i].second);
            }

            if(t.size() >= k)
                cost -= minv / 2;

            if(cost % 2 == 0)
                cout << cost / 2 << ".0" << endl;
            else
                cout << cost / 2 << ".5" << endl;
            for(i = 0; i < k; i++)
            {
                cout << v[i].size();
                for(j = 0; j < v[i].size(); j++)
                {
                    printf(" ");
                    cout << v[i][j];
                }
                printf("\n");
            }
            return 0;
        }
    }
    for(i = 0; i < kar.size() && j < k - 1; i++)
    {
        cost += kar[i].first;
        v[j++].push_back(kar[i].second);
    }
    for(; i < kar.size(); i++)
    {
        cost += kar[i].first;
        v[j].push_back(kar[i].second);
    }

    if(cost % 2 == 0)
        cout << cost / 2 << ".0" << endl;
    else
        cout << cost / 2 << ".5" << endl;
    for(i = 0; i < k; i++)
    {
        cout << v[i].size();
        for(j = 0; j < v[i].size(); j++)
        {
            printf(" ");
            cout << v[i][j];
        }
        printf("\n");
    }
    return 0;
}