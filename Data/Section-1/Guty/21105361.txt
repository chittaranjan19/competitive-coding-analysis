#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>
#include <valarray>

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 


#define forn(i,n) for(tint i=0;i<(tint)(n); i++)
#define forsn(i,s,n) for(tint i=(s);i<(tint)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl



using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint toNumber (string s)
{
	tint Number;
	if ( ! (istringstream(s) >> Number) )
		Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (tint number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}




int main()
{
	#ifdef ACMTUYO
		assert(freopen("entrada.in", "r", stdin));
	#endif
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	tint n,m;
	while (cin >> n >> m)
	{
		tint kn = 0,pn = 1,km = 0, pm = 1;
		while (pn <= n-1)
		{
			pn *= 7;
			kn++;
		}
		while (pm <= m-1)
		{
			pm *= 7;
			km++;
		}
		tint ans = 0;
		if (kn + km <= 7)
		{
			forn(i,n)
			forn(j,m)
			{
				set<tint> digitos;
				tint x = i, y = j, kkn = kn, kkm = km;
				while (x > 0)
				{
					digitos.insert(x % 7);
					x /= 7;
					kkn--;
				}
				while (y > 0)
				{
					digitos.insert(y % 7);
					y /= 7;
					kkm--;
				}
				forn(p,kkn+kkm)
					digitos.insert(0);
				tint r = digitos.size();
				ans += (r == kn+km);
				
			}
		}
		cout << ans << "\n";
		
	}
	
	
	return 0;
}



