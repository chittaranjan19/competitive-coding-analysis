#include <iostream>
#include <cstring>

using namespace std;

typedef long long ll;

ll dp[70][5];
int d[70];

ll dfs(int pos, int num, bool limit, bool m)
{
    if(!pos) return !num;
    if(num < 0) return 0;
    if(~dp[pos][num] && !limit && !m) return dp[pos][num];
    ll ret = 0;
    int upp = limit ? d[pos] : 1;
    for(int i = 0; i <= upp; ++i)
    {
        ret += dfs(pos - 1, num - (!i && m), limit && i == upp, m || i);
    }
    if(!limit && !m)
    {
        dp[pos][num] = ret;
    }
    return ret;
}

ll solve(ll x)
{
    int cnt = 0;
    while(x)
    {
        d[++cnt] = x & 1;
        x >>= 1;
    }
    return dfs(cnt, 1, true, 0);
}

int main()
{
    memset(dp, -1, sizeof(dp));
    ll a, b;
    while(cin >> a >> b)
    {
        cout << solve(b) - solve(a - 1) << endl;
    }
    return 0;
}
