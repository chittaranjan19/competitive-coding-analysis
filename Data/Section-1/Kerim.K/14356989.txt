#include <set>
#include <map>
#include <queue>
#include <stack>
#include <math.h>
#include <vector>
#include <stdio.h>
#include <fstream>
#include <iostream>
#include <string.h>
#include <limits.h>
#include <algorithm>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
//#include <bits/stdc++.h>

#define ff first
#define ss second
#define ll long long
#define pb push_back
#define mp make_pair
#define inf 1000000007
#define mod 1000000007
#define pii pair <int, int>
#define all(x) x.begin(), x.end()
//#define tr(i,c) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)

//using namespace __gnu_pbds;

using namespace std;

//template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

int n, m, ans;

int dp[30];
int cp[30];

string s1, s2;

bool tap()
{
	for (int i = 0; i < 26; i++)
		if (dp[i] > cp[i])
			return 0;
	return 1;
}

int main()
{
	cin >> s1 >> s2;
	
	int n = s1.length();
	int m = s2.length();
	
	if (m > n) {
		cout << "0";
		return 0;
	}
	
	for (int i = 0; i < m; i++) {
		cp[s2[i]-'a']++;
		if (s1[i] != '?')
			dp[s1[i]-'a']++;
	}
	
	ans += tap();
	
	for (int i = m; i < n; i++)
	{
		if (s1[i-m] != '?')
			dp[s1[i-m]-'a']--;
		
		if (s1[i] != '?')
			dp[s1[i]-'a']++;
		
		ans += tap();
	}
	
	cout << ans;
}
