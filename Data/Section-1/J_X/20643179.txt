#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <map>
#include <cmath>

using namespace std;

typedef long long ll;

const int maxn = 3000 + 5;
const ll INF = 1LL << 59;

ll dp[2][maxn];
int a[maxn], b[maxn];

int main()
{
    int n, cnt = 0;
    scanf("%d", &n);
    for(int i = 1; i <= n; ++i)
    {
        scanf("%d", a + i);
        a[i] -= i;
        b[cnt++] = a[i];
    }
    sort(b, b + cnt);
    cnt = unique(b, b + cnt) - b;
    int now = 0, nxt = 1;
    for(int i = 1; i <= n; ++i)
    {
        fill(dp[nxt], dp[nxt] + i, INF);
        ll mn = INF;
        for(int j = 0; j < cnt; ++j)
        {
            mn = min(mn, dp[now][j]);
            dp[nxt][j] = mn + abs(a[i] - b[j]);
        }
        swap(now, nxt);
    }
    printf("%I64d\n", *min_element(dp[now], dp[now] + cnt));
    return 0;
}
