#include <bits/stdc++.h>

using namespace std;

long long n,m,i,j,k,l,T,u,c=0,mod=1000000007,ifac[1000010],fac[1000010];

long long fastCalc(int a, int p){
	if(p==0) return 1;
	long long half = fastCalc(a,p/2);
	long long out = (half * half)%mod;
	if(p%2==0) return out;
	else return (out * a)%mod;
}

void fillFac(){
	fac[0]=fac[1] = 1;
	for(int i=2;i<1000005;i++){
		fac[i] = (fac[i-1] * i)%mod;
	}
}

void fillIFac(){
	ifac[0] = ifac[1] = 1;
	for(int i=2;i<1000005;i++){
		ifac[i] = (ifac[i-1] * fastCalc(i,mod-2)) % mod;
	}
}

long long nCr(int n, int r){
	long long temp = fac[n];
	temp *= ifac[n-r];
	temp%=mod;
	temp *= ifac[r];
	temp%=mod;
	return temp;
}

int main()
{
    fillFac();
    fillIFac();
    cin>>n;
    k=fastCalc(2,2*n+1)-1;
    for(i=n;i<2*n;i++)
    {
        l=(fastCalc(2,2*n+1-i)-2-(2*n-i)+mod)%mod;
        k=(k+mod-(l*nCr(i-1,n-1)*2)%mod)%mod;
    }
    cout<<k;
}
