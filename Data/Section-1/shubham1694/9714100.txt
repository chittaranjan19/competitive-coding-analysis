#include <bits/stdc++.h>

using namespace std;

#define MAX 30010
#define ll long long

vector<int> graph[MAX];
int arr[MAX];
bool visited[MAX];

void dfs(int root, int turn, bool *visited)
{
    if(turn==2){
        arr[root]++;
        return;
    }
    int i;
    visited[root]=true;
    for(i=0; i<graph[root].size(); i++){
        if(!visited[graph[root][i]])
            dfs(graph[root][i], turn+1, visited);
    }
}

int main()
{
    int n, m, i, j, u, v;
    ll ans=0;
    scanf("%d%d", &n, &m);
    for(i=0; i<m; i++){
        scanf("%d%d", &u, &v);
        graph[u].push_back(v);
    }
    for(i=0; i<n; i++){
        for(j=0; j<n; j++)
            arr[j]=0;
        memset(visited, false, sizeof(visited));
        dfs(i, 0, visited);
        for(j=0; j<n; j++){
            if(j!=i)
                ans=(ans+(arr[j]*(arr[j]-1))/2);
        }
    }
    cout << ans << endl;
    return 0;
}
