#include<bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define mp make_pair
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
const int inf = 1e9 + 5;
const int nax = 305;

int type[nax][nax];
vi col[nax];
int dp[nax][nax];
vector<pii> odw[nax*nax];
bool vis[nax];

int main() {
	int h, w, p;
	scanf("%d%d%d", &h, &w, &p);
	if(p == 1) {
		puts("0");
		return 0;
	}
	REP(y, h) REP(x, w) {
		scanf("%d", &type[x][y]);
		if(type[x][y] == 1) dp[x][y] = x + y;
		else dp[x][y] = inf;
		odw[type[x][y]].pb(mp(x,y));
	}
	RI(k, p - 1) {
		REP(i, max(w, h)) {
			col[i].clear();
			vis[i] = false;
		}
		for(pii p : odw[k])
			vis[p.second] = true;
		for(pii p : odw[k+1]) {
			int x = p.first;
			int y = p.second;
			col[x].pb(y);
		}
		// from left to right
		REP(y, h) {
			int best = inf;
			REP(x, w) {
				++best;
				if(type[x][y] == k)
					mini(best, dp[x][y]);
				for(int he : col[x])
					mini(dp[x][he], best + abs(he - y));
			}
			best = inf;
			FORD(x, w-1, 0) {
				++best;
				if(type[x][y] == k)
					mini(best, dp[x][y]);
				for(int he : col[x])
					mini(dp[x][he], best + abs(he - y));
			}
		}
	}
	REP(x, w) REP(y, h) if(type[x][y] == p) printf("%d\n", dp[x][y]);
	return 0;
}
