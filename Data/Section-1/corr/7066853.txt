#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>

#include<cmath>
#include<iostream>
#include<iomanip>
#include<fstream>

#include<string>
#include<utility>
#include<vector>
#include<list>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>

#define ii long long int
#define pi 2*acos(0.0)
#define eps 1e-9
#define mem(x,y) memset(x,y,sizeof(x))
#define all(x) x.begin(), x.end()
#define pb push_back
#define sz(a) (int)a.size()
#define inf 2147483640
#define mx 110

#define white 0
#define black 1
#define cantChoose 2

using namespace std;

const int debug= 0;

int n,m;
char board[mx][mx];

void fill();
int colorOption(int prev, int i, int j);

int main() {
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int i;

    while (cin>>n>>m) {
        for (i=0;i<n;++i) scanf("%s",board[i]);
        fill();
        for (i=0;i<n;++i) puts(board[i]);
    }

    return 0;
}

void fill() {
    char colors[] = {"WB"};
    int i,j,prev=white,option;
    for (i=0;i<n;++i) for (j=0;j<m;++j) {
        if (board[i][j]=='-') continue;
        option = colorOption(prev, i, j);
        if (option==cantChoose) prev = 1/0;
        board[i][j] = colors[option];
        //cout<<i<<","<<j<<" : "<<option<<" "<<colors[option]<<endl;
    }
}

int colorOption(int prev, int i, int j) {
    char ij_1, i_1j;
    if (!i) i_1j = '-';
    else i_1j = board[i-1][j];
    if (!j) ij_1 = '-';
    else ij_1 = board[i][j-1];

    if (i_1j=='-') {
        if (ij_1=='-') return prev;
        if (ij_1=='W') return black;
        return white;
    }
    else {
        if (ij_1=='-') ij_1 = i_1j;
        if (i_1j!=ij_1) return cantChoose;
        if (i_1j=='W') return black;
        return white;
    }
}
