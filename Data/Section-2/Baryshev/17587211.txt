#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
#include <fstream>
#include <tuple>
#include <iomanip>

#include <unordered_set>
#include <unordered_map>

using namespace std;

#define forn(i,n) for (int i = 0; i < int(n); i++)
#define ford(i,n) for (int i = int(n) - 1; i >= 0; i--)
#define fore(i,l,r) for (int i = int(l); i <= int(r); i++)
#define all(a) a.begin(), a.end()
#define sz(a) int(a.size())
#define mp make_pair
#define pb push_back
#define ft first
#define sc second

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pt;

const double pi = acos(-1.0);
const int INF = 1000000000;
const int MAX = 100007;
const int MAX2 = 2000000;
const int inf = (int) 1e9 + 5;
const long long mod =  1e9 + 7;
const int BASE = 10;
const int ST = 1000003;
const int CNT = 100;
const double eps=1e-9;
const long long base = 2204234849;
const long long l_inf = (long long) 4e18;
const int logn = 30;

set<string> v[MAX2];

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    //forn(i,n) scanf("%d", &name);
    //forn(i,m) scanf("%d", &name);
    //forn(i,n) forn(i,m) scanf("%d", &name);
    string s;
	cin >> s;
	int len = sz(s);

	set<string> otv;
	for (int i = len - 1; i > 4; i--) {
		string t = s.substr(i, 1);
		for (int j = i - 1; j >= i - 2 && j > 4; j--) {
			t = s[j] + t;
			if (v[i + 1].size() == 1 && !v[i + 1].count(t) || v[i + 1].size() > 1 || i + 1 >= len) {
				v[j].insert(t);
				otv.insert(t);
			}
		}
	}

	cout << otv.size() << '\n';
	for (auto it : otv) {
		cout << it << '\n';
	}

    return 0;
}