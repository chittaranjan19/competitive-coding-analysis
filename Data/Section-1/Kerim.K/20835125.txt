#include "bits/stdc++.h"
#define MAXN 300009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<ll,ll> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
pair<int,int> p=mp(27,31);
int dif[MAXN],arr[MAXN];
vector<int>adj[MAXN];
char s[MAXN];
int sub[MAXN];
ll mod(ll x){
	return (x%INF);
}
set<PII>st;
PII wow[MAXN];
void add(int nd,int pr){
	st.insert(wow[nd]);
	for(int i=0;i<int(adj[nd].size());i++){
		int to=adj[nd][i];
		if(to==pr)
			continue;
		add(to,nd);	
	}
}
int dfs1(int nd,int pr){
	sub[nd]=1;
	for(int i=0;i<int(adj[nd].size());i++){
		int to=adj[nd][i];
		if(to==pr)
			continue;
		sub[nd]+=dfs1(to,nd);	
	}
	return sub[nd];
}
void dfs(int nd,int pr,ll hash1,ll hash2){
	//~ cout<<nd<<endl;
	hash1=mod(hash1*p.ff+(s[nd]-'a'+1));
	hash2=mod(hash2*p.ss+(s[nd]-'a'+1));
	wow[nd]=mp(hash1,hash2);
	int mx=0,id=-1;
	for(int i=0;i<int(adj[nd].size());i++){
		int to=adj[nd][i];
		if(to==pr)
			continue;
		if(umax(mx,sub[to]))
			id=i;
	}vector<int>v;
	for(int i=0;i<int(adj[nd].size());i++){
		int to=adj[nd][i];
		if(to==pr or i==id)
			continue;
		dfs(to,nd,hash1,hash2);v.pb(to);
		st.clear();	
	}
	if(~id)
		dfs(adj[nd][id],nd,hash1,hash2);
	tr(it,v)
		add(*it,nd);	
	st.insert(mp(hash1,hash2));
	dif[nd]=arr[nd]+int(st.size());
}
int main(){
	#ifndef ONLINE_JUDGE
    freopen("file.in", "r", stdin);
	#endif
	int n;
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
		scanf("%d",arr+i);
	scanf("%s",s+1);
	for(int i=0;i<n-1;i++){
		int u,v;
		scanf("%d%d",&u,&v);
		adj[u].pb(v);
		adj[v].pb(u);
	}
	dfs1(1,-1);
	dfs(1,-1,0,0);
	int mx=-INT_MAX,cnt=0;
	for(int i=1;i<=n;i++){
		if(umax(mx,dif[i]))
			cnt=0;
		if(dif[i]==mx)
			cnt++;
	}
	printf("%d\n%d\n",mx,cnt);
	return 0;
}
