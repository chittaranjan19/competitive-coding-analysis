#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 
#define rank def1

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 100 * 1000 + 100;
const int LG = 20;

int n;
string s;
int rank[LG][N];
piii t[N];
pii l[N];
int par[N];
int sz[N];

int lcp(int x, int y){
	if(x == y) return n - x;
	int ans = 0;
	for(int i = LG; i --;){
		if(rank[i][x] == rank[i][y]){
			x += 1 << i;
			y += 1 << i;
			ans |= 1 << i;
		}
	}
	return ans;
}

int get_par(int x){
	if(par[x] == x) return x;
	return par[x] = get_par(par[x]);
}

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> s;
	n = SZ(s);
	for(int j = 0; j < n; ++j) sz[j] = 1, par[j] = j, rank[0][j] = s[j];
	for(int i = 1; i < LG; ++i){
		for(int j = 0; j < n; ++j)
			if(j + (1 << (i - 1)) < n)
				t[j] = {{rank[i - 1][j], rank[i - 1][j + (1 << (i - 1))]}, j};
			else
				t[j] = {{rank[i - 1][j], -1}, j};
		sort(t, t + n);
		rank[i][t[0].Y] =  1;
		for(int j = 1; j < n; ++j){
			if(t[j - 1].X == t[j].X)
				rank[i][t[j].Y] = rank[i][t[j - 1].Y];
			else
				rank[i][t[j].Y] = j + 1;
		}
	}
	for(int i = 0; i < n - 1; ++i)
		 l[i] = {lcp(t[i].Y, t[i + 1].Y), i};
	sort(l, l + n - 1);
	reverse(l, l + n - 1);
	ll ans = n * (n + 1) / 2;
	for(int i = 0; i < n - 1; ++i){
		int x = l[i].Y, y = l[i].Y + 1;
		x = get_par(x);
		y = get_par(y);
		ans += l[i].X * sz[x] * sz[y];
		par[y] = x;
		sz[x] += sz[y];
	}
	cout << ans << "\n";
	return 0;
}
