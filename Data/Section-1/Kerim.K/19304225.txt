#include "bits/stdc++.h"
#define MAXN 100009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
const int N=21;
char arr[N][N];
int c[N][N],cost[N],geany[N+9],cnt=0;
class alphabet{
	public:
	int sum,mx;
	alphabet(){sum=0;mx=0;}
	void naked(){
		sum=0;mx=0;
	}
}R[27];
const int NN=(1<<21);
int dp[NN],n,m,mask=0;
PII query[MAXN];
int rec(int x){
	if(!x)
		return 0;
	int &ret=dp[x];
	if(~ret)	
		return ret;ret=INF;
	for(int i=1;i<=n;i++)
		if(((1<<(i-1))&x))
			umin(ret,rec(x^(1<<(i-1)))+cost[i]);			
	for(int i=1;i<=cnt;i++)
		if((x&query[i].ff)){
			int bit=(x&query[i].ff);
			umin(ret,rec(x^bit)+query[i].ss);
		}
	return ret;		
}
int main(){
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			scanf(" %c",&arr[i][j]);
	for(int i=1;i<=n;i++){
		cost[i]=INF;
		for(int j=1;j<=m;j++){
			scanf("%d",&c[i][j]);
			umin(cost[i],c[i][j]);
		}		
	}
	for(int j=1;j<=m;j++){
		for(int i=0;i<26;i++){
			R[i].naked();
			geany[i]=0;
		}
		for(int i=1;i<=n;i++){
			geany[arr[i][j]-'a']|=(1<<(i-1));
			R[arr[i][j]-'a'].sum+=c[i][j];
			umax(R[arr[i][j]-'a'].mx,c[i][j]);
		}
		for(int i=0;i<26;i++){
			if(__builtin_popcount(geany[i])==1)
				mask|=geany[i];
			if(geany[i])
				query[++cnt]=mp(geany[i],R[i].sum-R[i].mx);
		}			
	}	
	//for(int i=1;i<=cnt;i++)
		//printf("%d %d\n",query[i].ff,query[i].ss);
	memset(dp,-1,sizeof(dp));
	printf("%d\n",rec(((1<<n)-1)^mask));
	return 0;
}/*
5 2
aa
aa
ab
bb
bb
1 100
100 100
1 1
100 100
100 1
*/
