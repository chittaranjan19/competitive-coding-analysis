var n,m,i,j,x,y,f:longint;
k,max:int64;
    a:array[1..50,1..50]of longint;
    b:array[1..50]of boolean;
    c:array[1..100000]of longint ;
  procedure dfs(x:longint);
    var i:longint;
      begin
        inc(k);
        b[x]:=true;
        for i:=1 to n do
          if (a[x,i]=1)and(not(b[i])) then dfs(i);
      end;

   procedure dfs1(x:longint);
    var i:longint;
      begin
        inc(k);
        inc(f);
        c[f]:=x;
        b[x]:=true;
        for i:=1 to n do
          if (a[x,i]=1)and(not(b[i])) then dfs1(i);
      end;

  begin
    read(n,m);
    fillchar(b,sizeof(b),false);
    for i:=1 to m do
      begin
        read(x,y);
        a[x,y]:=1;
        a[y,x]:=1;
      end;
    max:=0;
    f:=0;
    x:=0;
    for i:=1 to n do
      begin
        if not(b[i])then begin k:=0;dfs(i);end;
        if k>max then begin max:=k; x:=i;end;
      end;
        fillchar(b,sizeof(b),false);
    y:=x;
    dfs1(y);
    k:=0;
    for i:=1 to f-1 do
      for j:=i+1 to f do
        if a[c[i],c[j]]=1 then inc(k);
    max:=1;
    for i:=1 to k do
      max:=max*2;
    writeln(max);
  end.