//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 500 * 1000 + 100;
const int LG = 20;

int n = 4;
int q;
int par[LG][N];
int h[N];
int D;
pii d;

int lca(int x, int y){
	if(h[y] < h[x]) swap(x, y);
	for(int i = LG; i --;)
		if(par[i][y] != -1 && h[par[i][y]] >= h[x])
			y = par[i][y];
	if(x == y) return x;
	for(int i = LG; i --;)
		if(par[i][x] != par[i][y])
			x = par[i][x], y = par[i][y];
	return par[0][x];
}

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	memset(par, -1, sizeof par);
	par[0][1] = par[0][2] = par[0][3] = 0;
	h[1] = h[2] = h[3] = 1;
	d.X = 1; d.Y = 2; D = 2;
	cin >> q;
	for(int i = 0; i < q; ++i){
		int v; cin >> v; v --;
		h[n] = h[n + 1] = h[v] + 1;
		par[0][n] = par[0][n + 1] = v;
		for(int i = 1; i < LG; ++i){
			if(par[i - 1][n] != -1) par[i][n] = par[i - 1][par[i - 1][n]];
			if(par[i - 1][n + 1] != -1) par[i][n + 1] = par[i - 1][par[i - 1][n + 1]];
		}
		int tmp = h[n] + h[d.X] - 2 * h[lca(n, d.X)];
		int tmp2 = h[n] + h[d.Y] - 2 * h[lca(n, d.Y)];
		if(tmp >= tmp2 && tmp > D)
			D = tmp, d.Y = n;
		else if(tmp2 > tmp && tmp2 > D)
			D = tmp2, d.X = n;
		cout << D << "\n";

		n += 2;
	}
	return 0;
}
