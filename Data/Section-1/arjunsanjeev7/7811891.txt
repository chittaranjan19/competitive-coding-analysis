#include <bits/stdc++.h>

using namespace std;

LL marked[51];
set<LL> S[51];
LL m;

void DFS(int pos)
{
	marked[pos]=1; m++;
	set<LL>::iterator it;
	for(it=S[pos].begin();it!=S[pos].end();it++)
	{
		if(marked[*it]==0) DFS(*it);
	}
}

int main()
{
	LL n,i,x,y;
	cin>>n>>m;
	for(i=0;i<=n;i++) marked[i]=0;
	for(i=0;i<m;i++)
	{
		cin>>x>>y;
		if(S[x].find(y)==S[x].end()) S[x].insert(y);
		if(S[y].find(x)==S[y].end()) S[y].insert(x);
	}
	LL ans=1;
	while(1)
	{
		m=0;
		for(i=1;i<=n;i++) if(marked[i]==0) break;
		if(i==n+1) break;
		DFS(i);
		ans*=(LL)pow(2,m-1);
	}
	cout<<ans<<endl;
	return 0;
}