#include "bits/stdc++.h"
#define MAXN 100009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
//freopen("file.in","r",stdin);
//freopen("file.out","w",stdout);
int arr[MAXN];
class node{
	public:
	int mn,cnt;
	node(){mn=INF;cnt=0;}
}s[MAXN<<2],bos;
int lazy[MAXN];
node merge(node x,node y){
	node z;
	if(x.mn==y.mn)
		z.mn=x.mn,z.cnt=x.cnt+y.cnt;
	if(x.mn>y.mn)
		z.mn=y.mn,z.cnt=y.cnt;
	if(x.mn<y.mn)
		z.mn=x.mn,z.cnt=x.cnt;
	return z;	
}
void push(int nd){
	if(!lazy[nd])
		return;
	s[nd<<1].mn+=lazy[nd];	
	lazy[nd<<1]+=lazy[nd];	
	s[nd<<1|1].mn+=lazy[nd];	
	lazy[nd<<1|1]+=lazy[nd];
	lazy[nd]=0;	
}
node tap(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return bos;
	if(l<=x and y<=r)
		return s[nd];
	push(nd);int mid=(x+y)>>1;
	node i1=tap(l,r,nd<<1,x,mid);	
	node i2=tap(l,r,nd<<1|1,mid+1,y);	
	return merge(i1,i2);
}
void upd(int l,int r,int v,int nd,int x,int y){
	if(l>y or x>r)
		return;
	if(l<=x and y<=r){
		s[nd].mn+=v;
		lazy[nd]+=v;
		return;
	}
	push(nd);int mid=(x+y)>>1;
	upd(l,r,v,nd<<1,x,mid);
	upd(l,r,v,nd<<1|1,mid+1,y);
	s[nd]=merge(s[nd<<1|1],s[nd<<1]);
}
void build(int nd,int x,int y){
	if(x==y){
		s[nd].mn=0;s[nd].cnt=1;
		return;
	}
	int mid=(x+y)>>1;
	build(nd<<1,x,mid);
	build(nd<<1|1,mid+1,y);
	s[nd]=merge(s[nd<<1|1],s[nd<<1]);
}
int main(){
	int a,x,y;ll ans=0;
	scanf("%d",&a);
	for(int i=1;i<=a;i++)
		scanf("%d%d",&x,&y),arr[x]=y;
	build(1,1,a);	
	stack<PII>mx,mn;	
	for(int i=1;i<=a;i++){int pos=i;
		while(!mx.empty() and mx.top().ff<arr[i])
			upd(mx.top().ss,pos-1,-mx.top().ff,1,1,a),pos=mx.top().ss,mx.pop();
		upd(pos,i-1,arr[i],1,1,a);mx.push(mp(arr[i],pos));pos=i;
		while(!mn.empty() and mn.top().ff>arr[i])
			upd(mn.top().ss,pos-1,mn.top().ff,1,1,a),pos=mn.top().ss,mn.pop();
		upd(pos,i-1,-arr[i],1,1,a);mn.push(mp(arr[i],pos));
		node q=tap(1,i,1,1,a);
		if(q.mn==0)
			ans+=q.cnt;
		upd(1,i,-1,1,1,a);
	}	
	printf("%lld\n",ans);
	return 0;
}
