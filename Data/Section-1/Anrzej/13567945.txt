#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>

using namespace std;

#define ll long long
#define sc second
#define fs first
#define mp make_pair



int main()
{
	int t;
	cin >> t;
	while (t--){
		int n, k;
		cin >> n >> k;
		int dp[2000][5], sost[2000][5], tsost[2000][5];
		string s[10];
		for (int i = 0; i < 3; i++)
			cin >> s[i];
		memset(dp, 0, sizeof(dp));
		for (int i = 0; i < 3; i++){
			for (int j = 0; j < n; j++){
				if (s[i][j] == '.')
					sost[j][i] = 0;
				else
				if (s[i][j] == 's'){
					dp[j][i] = 1;
					sost[j][i] = 0;
				}
					else
						 sost[j][i] = 1;
			}
		}
		for (int j = 0; j < n-1; j++)
		{
			for (int i = 0; i < 3; i++){
				if (dp[j][i] == 1 && sost[j][i] != 1)
				{
					if (sost[j + 1][i] != 1)
						dp[j + 1][i] = 1;
					if (sost[j + 1][max(i - 1, 0)] != 1 && sost[j + 1][i] != 1)
						dp[j + 1][max(i - 1, 0)] = 1;
					if (sost[j + 1][max(i - 1, 0)] != 1 && sost[j + 1][i] != 1)
						dp[j + 1][min(i + 1, 2)] = 1;
				}
			}
			for (int i = 0; i < 3; i++){
				for (int j = 2; j < n; j++){
						tsost[j - 2][i] = sost[j][i];
				}
				for (int j = n - 2; j < n; j++)
					tsost[j][i] = 0;
			}
			for (int i = 0; i < 3; i++){
				for (int j = 0; j < n; j++){
					sost[j][i] = tsost[j][i];
				}
			}
		}
		bool ok = 0;
		for (int i = 0; i < 3; i++){
			ok |= (dp[n - 1][i] == 1) && (sost[n - 1][i] != 1);
		}
		if (ok)
			cout << "YES" << endl;
		else cout << "NO" << endl;
	}
	return 0;
}