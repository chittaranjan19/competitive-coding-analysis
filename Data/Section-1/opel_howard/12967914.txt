#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <string>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <cmath>
#include <iostream>
#include <fstream>
#include <sstream>
using namespace std;
// template

// abbreviations
#define vi vector <int>
#define ii pair <int, int>
#define a first
#define b second
#define vii vector <ii>
#define mii map <int, int>
#define que queue
#define pque priority_queue
#define stk stack
#define lsone(value) (value)&(-value)
#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define pu push
#define po pop
#define mp make_pair
#define loop(i, n) for(int i = 0; i < n; ++i)
#define loop1(i, n) for(int i = 1; i <= n; ++i)
#define reverse_iterate(a, b) for(__typeof(b.rend()) a = b.rbegin(); a != b.rend(); ++a)
#define iterate(a, b) for(__typeof(b.begin()) a = b.begin(); a != b.end(); ++a)
#define all(i) i.begin(), i.end()

typedef unsigned long long ull;
typedef long long ll;

// end of template

int main() {
    // freopen("550C.in", "r", stdin);
    
    string str;
    cin >> str;

    // prevDigit, prevMod
    vector<vector<ii> > dp(str.length(), vector<ii>(8, mp(-1, -1)));
    for (int it = 0; it < str.length(); ++it) {
    	int val = (str[it]-'0')%8;
    	int pow10 = 1;
    	for (int prevDigit = it-1; prevDigit >= 0; --prevDigit) {
    		for (int prevMod = 0; prevMod < 8; prevMod++) {
    			if (dp[prevDigit][prevMod].a != -1) {
    				dp[it][(prevMod*2+val)%8] = mp(prevDigit, prevMod);
    			}
    		}
    	}
    	dp[it][val] = mp(it, val);
    }

    for (int it = 0; it < str.length(); ++it) {
    	if (dp[it][0] == mp(-1, -1))
    		continue;
    	puts("YES");
    	string ans = "";
    	int a = it, b = 0;
    	while (a != dp[a][b].a) {
    		ans += str[a];
    		ii temp = dp[a][b];
    		a = temp.a, b = temp.b;
    	}
    	ans += str[a];
    	reverse(all(ans));
    	cout << ans << endl;
    	return 0;
    }
    puts("NO");

    return 0;
}