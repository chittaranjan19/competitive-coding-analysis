#include <bits/stdc++.h>

using namespace std;

#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define rep(it, v) for (auto it = (v).begin(); it != (v).end(); it++)
#define rwfile(f) freopen(f".in", "r", stdin); freopen(f".out", "w", stdout)
#define pb push_back
#define mpair make_pair
#define fi first
#define se second
#define dri(x) scanf("%d", &x)
#define drii(x, y) scanf("%d %d", &x, &y)
#define driii(x, y, z) scanf("%d %d %d", &x, &y, &z)
#define driiii(x, y, z, w) scanf("%d %d %d %d", &x, &y, &z, &w)
#define drl(x) scanf("%lld", &x)
#define drll(x, y) scanf("%lld %lld", &x, &y)
#define drlll(x, y, z) scanf("%lld %lld %lld", &x, &y, &z)
#define drllll(x, y, z, w) scanf("%lld %lld %lld %lld", &x, &y, &z, &w)

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

int N, Q;

int add (int x, int y) {
	return (x + y) % N;
}

void addeq (int &x, int y) {
	x = add(x, y);
}

int subtr (int x, int y) {
	x -= y;
	if (x < 0) {
		x += N;
	}
	return x;
}

int ans[int(1e6 + 10)];

int main() {
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	drii(N, Q);
	assert(N % 2 == 0);
	int p0 = 0, p1 = 0;
	int qt, x;
	for (int qi = 0; qi < Q; qi++) {
		dri(qt);
		if (qt == 1) {
			dri(x);
			x = (x + N) % N;
			addeq(p0, x);
			addeq(p1, x);
		} else {
			if (p0 % 2 == 0) {
				addeq(p0, 1);
				addeq(p1, N - 1);
			} else {
				addeq(p0, N - 1);
				addeq(p1, 1);
			}
		}
	}

	for (int i = 0; i < N; i++) {
		ans[add(i, (i % 2 == 0 ? p0 : p1))] = i;
	}

	for (int i = 0; i < N; i++) {
		printf("%d ", ans[i] + 1);
	}

	puts("");
}