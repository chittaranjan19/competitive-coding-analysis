#include<bits/stdc++.h>
using namespace std;
#define MAX 100005
#define ll long long int
int n;
ll mark[MAX];
ll dp[MAX];
int f(int pos, int score)
{
		if(pos >= n) return score;
		int save1,save2,save3;
		if(mark[vt[pos]] == 0) return f(pos+1,score);
		int scr1,scr2;
		save1 = mark[vt[pos]];
		save2 = mark[vt[pos]+1];
		save3 = mark[vt[pos]-1];
		mark[vt[pos]+1] = mark[vt[pos]-1] = 0;
		mark[vt[pos]] = 0;
		scr1 = f(pos+1,score+vt[pos]*save1);

		mark[vt[pos]] = save1;
		mark[vt[pos]+1] = save2;
		mark[vt[pos]-1] = save3;
		scr2 = f(pos+1,score);
		return max(scr1,scr2);
}
ll dps(int n)
{
		//dp[i] => solution when considered all indexes from 0 to i-1
		int i;
		dp[0] = 0;
		dp[1] = mark[1] * 1;
		for(i=2;i<=MAX-4;++i)
		{
				dp[i] = max(dp[i-2]+i*mark[i],dp[i-1]);
		}
		return dp[i-1];
		return 0;

}
int main()
{
		cin>>n;
		int i;
		int tmp;
		for(i=0;i<n;++i)
		{
				cin>>tmp;
				mark[tmp]++;
		}
		cout<<dps(n)<<endl;
}
