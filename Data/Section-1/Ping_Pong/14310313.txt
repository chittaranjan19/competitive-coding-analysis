#include <stdio.h>
#include <iostream>
#include <stdlib.h>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <string>
#include <math.h>

using namespace std;

int n, m;
vector<vector<int> > graph;
vector<int> cat;
vector<bool> used;

int dfs(int x, int cnt, int sum)
{
    used[x] = true;
    if (cat[x])
        cnt++;
    else
        cnt = 0;
    if (cnt > m)
        return sum;
    int s = 0, cnt1 = 0;
    for (int i = 0; i < graph[x].size(); i++)
        if (!used[graph[x][i]])
        {
            s += dfs(graph[x][i], cnt, sum);
            cnt1++;
        }
    if (cnt1 == 0)
        s++;
    return s;
}

int main()
{
    scanf("%d %d", &n, &m);
    for (int i = 0; i < n; i++)
    {
        cat.push_back(0);
        scanf("%d", &cat[i]);
    }
    vector<int> v;
    for (int i = 0; i < n; i++)
        graph.push_back(v);
    for (int i = 0; i < n; i++)
        used.push_back(false);
    int s, f;
    for (int i = 0; i < n - 1; i++)\
    {
        scanf("%d %d", &s, &f);
        graph[s - 1].push_back(f - 1);
        graph[f - 1].push_back(s - 1);
    }
    printf("%d", dfs(0, 0, 0));
    return 0;
}
