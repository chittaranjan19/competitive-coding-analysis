//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 500 * 1000 + 100;

set<int> s;
vector<int> g[N];
int n, m;
vector <int> c[N];
bool mark[N];
queue <int> q;

void bfs(int v, int x){
	q.push(v);
	while(!q.empty()){
		v = q.front();
		s.erase(v);
		c[x].PB(v);
		mark[v] = true;
		q.pop();
		int t = 0;
		for(auto u : s){
			while(t < SZ(g[v]) && g[v][t] < u) t ++;
			if(t < SZ(g[v]) && g[v][t] == u) continue;
			if(!mark[u]){
				mark[u] = true;
				q.push(u);
			}
		}
	}
}

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> n >> m;
	for(int i = 0; i < n; ++i) s.insert(i);
	for(int i = 0; i < m; ++i){
		int u, v;
		cin >> u >> v;
		u --; v --;
		g[u].PB(v);
		g[v].PB(u);
	}
	for(int i = 0; i < n; ++i)
		sort(g[i].begin(), g[i].end());
	int ans = 0;
	for(int v = 0; v < n; ++v){
		if(!mark[v]){
			bfs(v, ans);
			ans ++;
		}
	}
	cout << ans << "\n";
	for(int i = 0; i < ans; ++i){
		cout << SZ(c[i]) << " ";
		for(int j = 0; j < SZ(c[i]); ++j)
			cout << c[i][j] + 1 << " ";
		cout << "\n";
	}
	return 0;
}
