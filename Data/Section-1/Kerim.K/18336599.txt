#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"--------------"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define y1 LimakkamiL
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
char arr[509][509];
int S=0,n,k,sz[MAXN],vis[509][509];
int H[509][509],bear[MAXN],mx=0;
void dfs(int cm,int x,int y){
	if(x<1 or y<1 or x>n or y>n or arr[x][y]=='X' or vis[x][y])
		return;
	vis[x][y]=1;	
	sz[cm]++;H[x][y]=cm;
	dfs(cm,x+1,y);dfs(cm,x-1,y);	
	dfs(cm,x,y+1);dfs(cm,x,y-1);	
}
void rem(int x,int y,int z){
	for(int i=x;i<=y;i++)
		sz[H[i][z]]--;
}
void add(int x,int y,int z){
	for(int i=x;i<=y;i++)
		sz[H[i][z]]++;
}
int oper(int x,int y,int x1,int y1){
	vector<int>on;int res=0;
	for(int i=y;x-1>=1 and i<=y1;i++){
		int num=H[x-1][i];
		if(!bear[num] and num){
			res+=sz[num];
			bear[num]=1;
			on.pb(num);
		}
	}
	for(int i=y;x1+1<=n and i<=y1;i++){
		int num=H[x1+1][i];
		if(!bear[num] and num){
			res+=sz[num];
			bear[num]=1;
			on.pb(num);
		}
	}
	for(int i=x;y-1>=1 and i<=x1;i++){
		int num=H[i][y-1];
		if(!bear[num] and num){
			res+=sz[num];
			bear[num]=1;
			on.pb(num);
		}
	}
	for(int i=x;y1+1<=n and i<=x1;i++){
		int num=H[i][y1+1];
		if(!bear[num] and num){
			res+=sz[num];
			bear[num]=1;
			on.pb(num);
		}
	}
	tr(it,on)
		bear[*it]=0;
	return res;
}
int main(){
	scanf("%d%d",&n,&k);
	for(int i=1;i<=n;i++)
		for(int j=1;j<=n;j++)
			scanf(" %c",&arr[i][j]);
	for(int i=1;i<=n;i++)
		for(int j=1;j<=n;j++)
			if(!vis[i][j] and arr[i][j]=='.')
				dfs(++S,i,j);	
	for(int i=k;i<=n;i++){
		for(int j=1;j<k;j++)
			rem(i-k+1,i,j);int last=0;
		for(int j=k;j<=n;j++){
			rem(i-k+1,i,j);
			umax(mx,oper(i-k+1,j-k+1,i,j)+k*k);
			add(i-k+1,i,j-k+1);last=j-k+1;
		}
		for(int j=last+1;j<=n;j++)
			add(i-k+1,i,j);
	}
	printf("%d\n",mx);
	return 0;
}
