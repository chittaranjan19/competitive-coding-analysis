#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const long long INF = 123456789123456;

using namespace std;

long long dp[MAXN];
int c[MAXN], v[MAXN], a, b;
int n, q;
void xuly()
{
    FORE(i, 0, n) dp[i] = -INF;
    long long max1 = 0, max2 = 0, ans = -INF;

    FORE(i, 1, n){

        if (dp[c[i]] != -INF) dp[c[i]] = max(dp[c[i]], dp[c[i]] + 1LL * v[i] * a);
        dp[c[i]] = max(dp[c[i]], 1LL * v[i] * b);
        //if (i == 3) cout<<dp[c[i]]<<"wtf"<<endl;
        if (max1 != c[i]) dp[c[i]] = max(dp[c[i]], dp[max1] + 1LL * v[i] * b);
        else
        if (max2 != c[i]) dp[c[i]] = max(dp[c[i]], dp[max2] + 1LL * v[i] * b);
        //
        //if (i == 2) cout<<dp[c[i]]<<"wtf"<<endl;

        if (dp[max2] < dp[c[i]] && dp[c[i]] <= dp[max1] && c[i] != max1) max2 = c[i];
        else
        if (dp[max1] < dp[c[i]]) max2 = max1, max1 = c[i];
       // cout<<dp[c[i]]<<" "<<max1<<" "<<max2<<endl;
        ans = max(ans, dp[c[i]]);
    }
    cout << max(0LL, ans) << endl;
}
int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("BALLS.inp", "r", stdin);
    freopen("BALLS.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n >> q;
    FORE(i, 1, n) cin >> v[i];
    FORE(i, 1, n) cin >> c[i];
    while (q--){
        cin >> a >> b;
        xuly();
    }
    return 0;
}

