#include <cstdio>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <cmath>
#include <climits>
#ifdef DEBUG
	#include <ctime>
#endif
using namespace std;

// template

// abbreviations
#define vi vector<int>
#define vl vector<ll>
#define vb vector<bool>
#define vs vector<string>
#define ii pair<int, int>
#define a first
#define b second
#define vii vector<ii>
#define mii map<ii>
#define vvi vector<vi>
#define vvl vector<vl>
#define que queue
#define pque priority_queue
#define stk stack
#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define pu push
#define po pop
#define mp make_pair
#define sz(var) ((int) var.size())
#define rep(it, n) for(int it = 0; it < n; ++it)
#define dep(it, n) for(int it = n - 1; it >= 0; --it)
#define rep1(it, n) for(int it = 1; it <= n; ++it)
#define dep1(it, n) for(int it = n; it > 0; --it)
#define loop(it, from, to) for(int it = (from); it <= (to); ++it)
#define iter(it, cont) for(__typeof((cont).begin()) it = (cont).begin(); it != (cont).end(); ++it)
#define riter(it, cont) for(__typeof((cont).rbegin()) it = (cont).rbegin(); it != (cont).rend(); ++it)
#define all(cont) (cont).begin(), (cont).end()
#define rng(cont, n) cont, cont + n
#define memclr(var) memset(var, 0, sizeof(var))

typedef unsigned long long ull;
typedef long long ll;

const int INF = INT_MAX;
const int NINF = INT_MIN;
const ll INF_LL = LLONG_MAX;
const ll NINF_LL = LLONG_MIN;
const double PI = acos(-1.0);
const int MOD = 1e9 + 7;

#ifdef DEBUG
	#define debug(fmt, args...) printf("Line %d, in %s\t: " fmt, __LINE__, __FUNCTION__, ##args)
	#define rep_rt() printf("[Run time: %.3fs]\n", ((double) clock()) / CLOCKS_PER_SEC)
#else
	#define debug(...)
#endif

// end of template

#define MAX_X 3 * (int) (1e5)

vi app_notif[MAX_X + 1];
int app_notif_prev_read[MAX_X + 1];
bool has_read[MAX_X + 1];

int main() {
#ifdef DEBUG
	freopen("705C.in", "r", stdin);
#endif
    int n, q;
    scanf("%d %d", &n, &q);

    int prev_read = 0;
    int notif_id = 0;

    int new_notif = 0;
    while (q--) {
    	int ev;
    	scanf("%d", &ev);
    	int x;
    	switch(ev) {
    		case 1: {
    			scanf("%d", &x);
    			app_notif[x].pub(++notif_id);
    			has_read[notif_id] = false;
    			++new_notif;
    			break;
    		}
    		case 2: {
    			scanf("%d", &x);
    			// read all of app x
    			for (int idx = app_notif_prev_read[x]; idx < sz(app_notif[x]); ++idx) {
    				if (prev_read < app_notif[x][idx]) {
    					has_read[app_notif[x][idx]] = true;
    					--new_notif;
    				}
    			}
    			app_notif_prev_read[x] = sz(app_notif[x]) - 1;
    			break;
    		}
    		case 3: {
    			int t;
    			scanf("%d", &t);
    			for (int notif_idx = prev_read + 1; notif_idx <= t; ++notif_idx) {
    				if (!has_read[notif_idx]) {
    					has_read[notif_idx] = true;
    					new_notif--;
    				}
    			}
    			prev_read = max(prev_read, t);
    			break;
    		}
    	}
    	printf("%d\n", new_notif);
    }


#ifdef DEBUG
    rep_rt();
#endif
    return 0;
}