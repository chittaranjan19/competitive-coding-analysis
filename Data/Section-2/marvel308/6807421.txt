#include<stdio.h>
#include<algorithm>
using namespace std;
#define min(a,b) a<b?a:b
#define INF 1000000007
int a[100005]={0},b[100005]={0},n,m,val=INF,m1;
void dfs(int l,int h,int prev,int type)
{
    if(l>h)
        return ;
    int i,mid=(l+h)/2,ans=0;
    for(i=0;i<n;i++)
    {
        if(a[i]<mid)
            ans+=mid-a[i];
        //printf("a[%d]=%d ans=%d\n",i,a[i],ans);
    }
    for(i=0;i<m;i++)
    {
        if(b[i]>mid)
            ans+=b[i]-mid;
        //printf("b[%d]=%d ans=%d\n",i,b[i],ans);
    }
    //printf("l=%d h=%d mid=%d ans=%d\n",l,h,mid,ans);
    if(ans<val)
    {
        val=ans;
        m1=mid;
    }
    if(ans<prev)
    {
        dfs(l,mid,ans,1);
        dfs(mid+1,h,ans,2);
    }
    else
    {
        if(type==1)
            dfs(mid+1,h,ans,2);
        else
            dfs(l,mid,ans,1);
    }
}
int main()
{
    int i;
    scanf("%d%d",&n,&m);
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    sort(a,a+n);
    for(i=0;i<m;i++)
    {
        scanf("%d",&b[i]);
    }
    sort(b,b+m);
    if(a[0]>b[m-1])
    {
        printf("0\n");
        return 0;
    }
    int l=a[0],h=b[m-1],mid=0;
    dfs(l,h,INF,0);
    printf("%d\n",val,m1);
    return 0;
}
