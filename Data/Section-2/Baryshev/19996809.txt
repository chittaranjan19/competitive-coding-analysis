#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
#include <fstream>
#include <tuple>
#include <iomanip>
#include <time.h>
#include <stdlib.h>
#include <stdio.h>

using namespace std;

#define sz(a) (int(a.size()))
#define mp make_pair
#define pb push_back
#define ft first
#define sc second
#define g(a, b) get<a> (b)

typedef long long ll;
typedef long double ld;
typedef pair<long long, long long> pt;

const int MAX_K = 200010;
const int MAX_N = 200020;
const long long mod = 1e9 + 7;

int main(){
    #if 0
	freopen("division.in", "r", stdin);
	freopen("division.out", "w", stdout);
    #endif
    long long n, m, k;
    cin >> n;
    if (n * n % 2 != 0){
        cout << n * n / 2 << " " << n * n /2 + 1;
        return 0;
    }
    if ((long long)sqrt((n + 1) * (n + 1) - n * n) * (long long)sqrt((n + 1) * (n + 1) - n * n) == (n + 1) * (n + 1) - n * n){
        cout << n + 1 << " " << (long long)sqrt((n + 1) * (n + 1) - n * n);
        return 0;
    }
    if ((long long)(sqrt((n) * (n) - (n - 1) * (n - 1))) * (long long)(sqrt((n) * (n) - (n - 1) * (n - 1))) == (n) * (n) - (n - 1) * (n - 1)){
        cout << n - 1 << " " << (long long)sqrt((n) * (n) - (n - 1) * (n - 1)) ;
        return 0;
    }
    if ((long long)sqrt((n + 1) * (n + 1) + n * n) * (long long)sqrt((n + 1) * (n + 1) + n * n) == (n + 1) * (n + 1) + n * n){
        cout << n + 1 << " " << (long long)sqrt((n + 1) * (n + 1) + n * n);
        return 0;
    }
    if ((long long)(sqrt((n) * (n) + (n - 1) * (n - 1))) * (long long)(sqrt((n) * (n) + (n - 1) * (n - 1))) == (n) * (n) + (n - 1) * (n - 1)){
        cout << n - 1 << " " << (long long)sqrt((n) * (n) + (n - 1) * (n - 1)) ;
        return 0;
    }
    if ((long long)sqrt((n + 2) * (n + 2) - n * n) * (long long)sqrt((n + 2) * (n + 2) - n * n) == (n + 2) * (n + 2) - n * n){
        cout << n + 2 << " " << (long long)sqrt((n + 2) * (n + 2) - n * n);
        return 0;
    }
    if ((long long)(sqrt((n) * (n) - (n - 2) * (n - 2))) * (long long)(sqrt((n) * (n) - (n - 2) * (n - 2))) == (n) * (n) - (n - 2) * (n - 2)){
        cout << n - 2 << " " << (long long)sqrt((n) * (n) - (n - 2) * (n - 2)) ;
        return 0;
    }
    if ((long long)sqrt((n + 2) * (n + 2) + n * n) * (long long)sqrt((n + 2) * (n + 2) + n * n) == (n + 2) * (n + 2) + n * n){
            cout << n + 2 << " " << (long long)sqrt((n + 2) * (n + 2) + n * n);
            return 0;
        }
    if ((long long)(sqrt((n) * (n) + (n - 2) * (n - 2))) * (long long)(sqrt((n) * (n) + (n - 2) * (n - 2))) == (n) * (n) + (n - 2) * (n - 2)){
        cout << n - 2 << " " << (long long)sqrt((n) * (n) + (n - 2) * (n - 2)) ;
        return 0;
    }
    cout << -1;
return 0;
}
