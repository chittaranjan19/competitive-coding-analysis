#include<fstream>
#include<string.h>
#include<ctype.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<unordered_map>
#include<array>
#include<deque>
#include<unordered_set>
#include<set>
#include<math.h>
using namespace std;
multiset<int>st;
int n,k,a,b,c,nr,el,i;
char type[15];
int rez[1000010][2];
int main()
{
	cin >> n;
	nr = 1;
	for (k = 1; k <= n; k++)
	{
		cin >> type;
		if (strcmp(type, "insert") == 0)
		{
			cin >> el;
			rez[nr++][0] = 1;
			rez[nr-1][1] = el;
			st.insert(el);
		}
		if (strcmp(type, "removeMin") == 0)
		{
			rez[nr++][0] = 2;
			st.erase(st.begin());
		}
		if (strcmp(type, "getMin") == 0)
		{
			cin >> el;
			if (st.size() == 0)
			{
				rez[nr++][0] = 1;
				rez[nr - 1][1] = el;
				st.insert(el);
			}
			else
				if (el != *st.begin())
				{
					if (el < *st.begin())
					{
						rez[nr++][0] = 1;
						rez[nr - 1][1] = el;
						st.insert(el);
					}
					else
					{
						while (st.size() != 0&&el > *st.begin())
						{
							rez[nr++][0] = 2;
							if(st.size()!=0)
								st.erase(st.begin());
						}
						if (st.size()==0||el != *st.begin())
						{
							rez[nr++][0] = 1;
							rez[nr - 1][1] = el;
							st.insert(el);
						}
					}
				}
			rez[nr++][0] = 3;
			rez[nr - 1][1] = el;
			}
	}
	cout << nr - 1<<"\n";
	for (i = 1; i <= nr - 1; i++)
	{
		if (rez[i][0] == 1)
		{
			cout << "insert " << rez[i][1] << '\n';
		}
		if (rez[i][0] == 2)
		{
			cout << "removeMin\n";
		}
		if (rez[i][0] == 3)
		{
			cout << "getMin " << rez[i][1] << '\n';
		}
	}
	return 0;
}