#include <bits/stdc++.h>

#define mod 1000000007

using namespace std;

int n,a[200005],next=1,v[200005],p[200005];
long long sol=1;

long long pwr(int n, int p){
    if(p==0) return 1;
    if(p%2) return (n%mod)*pwr(n*n%mod,(p-1)/2)%mod;
    return pwr(n*n%mod,p/2)%mod;
}

void addsol(int n, bool cic){
    if(cic) sol=sol*(pwr(2,n)-2)%mod;
    else sol=sol*pwr(2,n)%mod;
}

int flt(int st, int nod){
    if(st==nod) return 0;
    else{
        p[st]=1;
        return 1+flt(a[st],nod);
    }
}

int cer(int cur, int nod){
    p[cur]=1;
    if(cur==nod) return 1;
    return 1+cer(a[cur],nod);
}

void dfs(int nod, int t){
    v[nod]=1;
    if(v[a[nod]] && !p[a[nod]]){
        addsol(flt(t,a[nod]),false);
        addsol(cer(a[nod],nod),true);
        while(v[next] && next<=n) next++;
        if(next>n) return;
        dfs(next, next);
    }
    else if(v[a[nod]]){
        addsol(nod-t+1,false);
        p[nod]=1;
        while(v[next] && next<=n) next++;
        if(next>n) return;
        dfs(next, next);
    }
    else{
        dfs(a[nod],t);
    }
}

int main()
{
    cin >> n;
    for(int i=1;i<=n;i++){
        cin >> a[i];
    }
    dfs(1,1);
    cout << sol;
}
