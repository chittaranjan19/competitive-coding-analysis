#include<bits/stdc++.h>
#define all(x) x.begin(),x.end()
using namespace std;

const int MAXN=1e5+17;
const int INF=1e9+17;

int seg[MAXN*4];
int fen[MAXN];
int dp[MAXN],past[MAXN],help[MAXN],a[MAXN],res[MAXN];
vector<pair<int,int>>q[MAXN];

void ins(int a,int b){for(a++;a<MAXN;a+=a&-a)fen[a]+=b;}
int fet(int a){int ans=0;for(a++;a>0;a-=a&-a)ans+=fen[a];return ans;}
void upd(int qp,int qv,int xl=0,int xr=MAXN,int id=0){
    if(qp<xl || qp>=xr)return;
    if(xr-xl==1){seg[id]=qv; return;}
    int mid=(xr+xl)/2;
    upd(qp,qv,xl,mid,2*id+1);
    upd(qp,qv,mid,xr,2*id+2);
    seg[id]=min(seg[2*id+1],seg[2*id+2]);
}
int get(int ql,int qr,int xl=0,int xr=MAXN,int id=0){
    if(ql<=xl && xr<=qr)return seg[id];
    if(qr<=xl || xr<=ql)return INF;
    int mid=(xl+xr)/2;
    return min(get(ql,qr,xl,mid,2*id+1),get(ql,qr,mid,xr,2*id+2));
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    int n;  cin>>n;
    fill(help,help+MAXN,-1);
    fill(seg,seg+MAXN*4,INF);
    for(int i=0;i<n;i++){
        cin>>a[i];
        past[i]=help[a[i]];
        if(past[i]==-1)dp[i]=0;
        else if(past[past[i]]==-1)dp[i]=0;
        else if(i-past[i] == past[i]-past[past[i]])dp[i]=dp[past[i]];
        else dp[i]=past[past[i]]+1;
        help[a[i]]=i;
    }
    int m;  cin>>m;
    for(int i=0;i<m;i++){
        int xl,xr;  cin>>xl>>xr;
        q[xr-1].push_back({xl-1,i});
    }
    for(int i=0;i<n;i++){
        if(past[i]!=-1)ins(past[i],-1);  ins(i,1);
        if(past[i]!=-1)upd(past[i],INF); upd(i,dp[i]);
        for(auto v:q[i]){
            int l=v.first,r=i;
            int id=v.second;
            res[id]=(get(l,r+1)>l)+fet(r)-fet(l-1);
        }
    }
    for(int i=0;i<m;i++)
        cout<<res[i]<<'\n';
}
