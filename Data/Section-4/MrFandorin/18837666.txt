#include <vector>
#include <iostream>
using namespace std;

#define pb push_back

int mark[100010], rcnt, root, ans = 0, v1, v2, n, m, clr;
vector <int> g[100010], vc[5];


inline void dfs(int v, int clr, int pr)
{
	if(v == root)
		rcnt++;
	if(rcnt == 5)
		return;
	if(mark[v] == 3 - clr)
	{
		//cout << v << "+++++++";
		ans = -1;
	}
	mark[v] = clr;
	vc[clr].pb(v);
	for(int i = 0; i < g[v].size(); i++)
	{	
		if(g[v][i] != pr) dfs(g[v][i], 3 - clr, v);	
	}
}



int main()
{
	cin >> n >> m;
	for(int i = 1; i <= m; i++)
	{
		cin >> v1 >> v2;
		g[v1].pb(v2);
		g[v2].pb(v1);
	}

	for(int i = 1; i <= n; i++)
	{
		if(!mark[i])
		{
			rcnt = 0;
			root = i;
			dfs(i, 1, i);
		}
	}

	if(ans == -1)
	{	cout << -1;
	 return 0;}
	for(int i = 1; i <= 2; i++)
	{
		cout << vc[i].size() << endl;
		for(int j = 0; j < vc[i].size(); j++)
			cout << vc[i][j] << " " ;

			cout << endl;
	}

	return 0;
}
