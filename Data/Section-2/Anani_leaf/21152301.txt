#include<bits/stdc++.h>
#define lowbit(x) ((x)&(-x))
#define Max(a,b) (a>b?a:b)
#define Min(a,b) (a>b?b:a)
#define INF 0x3f3f3f3f
#define rep(i,a,b) for(int i=a;i<(b);++i)
using namespace std;
typedef __int64 ll;
int const Max_N = 2000 + 50;
int N,M;
int arr[Max_N] = {0};
int cnt[Max_N] = {0};
queue<int>que;
int main()
{
	cin >> N >> M;
	int mi = N/M;
	int yuxu = (N - N/M * M);
	bool mp[Max_N] = {false}; 
	int tt = 0; 
	for (int i = 1; i <= N; ++i)
	{
		scanf("%d",arr+i);
		if(arr[i] <= M)
		{
			++cnt[arr[i]];
			if(cnt[arr[i]]>mi+1)
			{
				--cnt[arr[i]];
				que.push(i);
			}
			if(cnt[arr[i]] == mi+1)
			{
				++tt;
				if(tt>yuxu&&!mp[arr[i]])
				{
					--cnt[arr[i]];
					que.push(i);
				}
				else
				{
					if(mp[arr[i]]) --tt;
					 else mp[arr[i]]= true;
				}
			}
		} 
		else que.push(i);
	}
	int op = que.size();
	for (int i = 1; i <= M; ++i)
	{
		while(cnt[i]<mi)
		{
			++cnt[i];
			int t = que.front();
			que.pop();
			arr[t] = i;
		}
	}
	int i = 1;
	while(!que.empty())
	{
		int t = que.front();
		que.pop();
		while(cnt[i]==mi+1) ++i;
		++cnt[i];
		arr[t] = i;
		++i;
	}
	printf("%d %d\n",mi,op);
	printf("%d",arr[1]);
	for (int i = 2; i < N+1; ++i)
	{
		printf(" %d",arr[i]);
	}
	cout << endl; 
	return 0;
}
/*
7 7
1 3 2 2 2 2 1
7 2
1 3 2 2 2 2 1
4 3
1 2 3 2
4 1
1000000000 1 7 1000000000
*/
