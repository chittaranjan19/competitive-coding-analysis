#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <unordered_set>
#include <unordered_map>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl 

typedef long long tint;

using namespace std;

void imprimirVector (vector<bool> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}
		
bool isUpper(char s)
{
	return (s-'A' <= 26);	
}

int peso(char s)
{
	if (s == 'Q')
		return 9;
	if (s == 'R')
		return 5;
	if (s == 'B')
		return 3;
	if (s == 'N')
		return 3;
	if (s == 'P')
		return 1;
	else
		return 0;
}

int main()
{	
	int white = 0;
	int black = 0;
	forn(i,8)
	{
		string fila;
		cin >> fila;
		forn(j,8)
		{
			char pieza = fila[j];
			if (isUpper(pieza))
				white += peso(pieza);
			else
				black += peso(pieza-32);
		}
	}
	if (white > black)
		cout << "White" << endl;
	else if (black > white)
		cout << "Black" << endl;
	else
		cout << "Draw" << endl;

	return 0;
}
