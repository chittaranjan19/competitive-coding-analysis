#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <cmath>
#include <iostream>
#include <fstream>
#include <sstream>
#include <climits>
#include <ctime>
#include <cassert>
using namespace std;
// template

// abbreviations
#define vi vector<int>
#define vl vector<long long>
#define vb vector<bool>
#define vs vector<string>
#define ii pair<int, int>
#define a first
#define b second
#define vii vector<ii>
#define mii map<ii>
#define que queue
#define pque priority_queue
#define stk stack
#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define pu push
#define po pop
#define mp make_pair
#define loop(i, n) for(int i = 0; i < n; ++i)
#define loop1(i, n) for(int i = 1; i <= n; ++i)
#define reverse_iterate(a, b) for(__typeof((b).rend()) a = (b).rbegin(); a != (b).rend(); ++a)
#define iterate(a, b) for(__typeof((b).begin()) a = (b).begin(); a != (b).end(); ++a)
#define all(i) (i).begin(), (i).end()

typedef unsigned long long ull;
typedef long long ll;

const double PI = acos(-1);

#ifdef DEBUG
	#define debug(fmt, args...) printf("Line %d, in %s\t: " fmt, __LINE__, __FUNCTION__, args)
	#define GetTime() fprintf(stderr,"Running time: %.3lf second\n",((double)clock())/CLOCKS_PER_SEC)
#else
	#define debug(...) 
	#define GetTime() 
#endif

// end of template

int main() {
#ifdef DEBUG
	freopen("688E.in", "r", stdin);
#endif
    
    int n, k;
    scanf("%d %d", &n, &k);

    vector<vb> dp(k+1);
    for (int idx = 0; idx <= k; ++idx) {
    	dp[idx].resize(idx+1, false);
    }
    dp[0][0] = true;
    while (n--) {
    	int val;
    	scanf("%d", &val);
    	for (int i = k; i >= val; --i) {
    		int i_prev = i-val;
    		for (int j = 0; j <= i_prev; ++j) {
    			dp[i][j] = dp[i][j] or (dp[i_prev][j]);
    			dp[i][j+val] = dp[i][j+val] or (dp[i_prev][j]);
    		}
    	}
    }
    vi ans;
    for (int idx = 0; idx <= k; ++idx) {
    	if (dp[k][idx])
    		ans.pub(idx);
    }
    printf("%d\n", (int) ans.size());
    loop(it, (int) ans.size()) {
    	if (it)
    		printf(" ");
    	printf("%d", ans[it]);
    }
    printf("\n");

    return 0;
}