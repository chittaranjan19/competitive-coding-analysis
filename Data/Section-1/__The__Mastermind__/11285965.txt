program b;

uses math;

const
  tfi = '';//'547b.inp';
  tfo = '';//'547b.out';

var
  n,l : longint;
  f : array [1..200000,0..20] of longint;
  g : array [1..200000] of longint;

procedure enter;
  var i : longint;
  begin
    assign(input,tfi);
    reset(input);
    read(n);
    l := trunc(log2(n));
    for i := 1 to n do
      begin
        read(f[i,0]);
        g[1] := max(g[1],f[i,0]);
      end;
    close(input);
  end;

procedure init;
  var i,j : longint;
  begin
    for j := 1 to l do
      for i := 1 to n - (1 shl j) + 1 do
        f[i,j] := min(f[i,j-1],f[i+(1 shl (j-1)),j-1]);
  end;

function get(i,j : longint) : longint;
  var lg : longint;
  begin
    lg := trunc(log2(j - i + 1));
    exit(min(f[i,lg],f[j - (1 shl lg) + 1,lg]));
  end;

function value(x : longint) : longint;
  var i : longint;
  begin
    if g[x] <> 0 then exit(g[x]);
    for i := 1 to n - x + 1 do
      g[x] := max(g[x],get(i,i+x-1));
    exit(g[x]);
  end;

function find(x,p : longint) : longint;
  var l,r,mid : longint;
  begin
    l := p + 1;
    r := n;
    find := p;
    while l <= r do
      begin
        mid := (l + r) div 2;
        if value(mid) = x then
          begin
            find := mid;
            l := mid + 1;
          end
        else r := mid - 1;
      end;
  end;

procedure process;
  var p,l,r,mid : longint;
  begin
    p := 1;
    while p < n do
      p := find(g[p],p) + 1;
  end;

procedure print;
  var i : longint;
  begin
    assign(output,tfo);
    rewrite(output);
    //for i := 1 to n do write(value(i),' ');
    for i := 1 to n do
      begin
        if g[i] = 0 then g[i] := g[i-1];
        write(g[i],' ');
      end;
    close(output);
  end;

begin
  enter;
  init;
  process;
  print;
end.