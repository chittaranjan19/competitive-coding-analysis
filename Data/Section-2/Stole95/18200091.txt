
import java.io.*;
import java.util.ArrayList;
import java.util.HashMap;

public class Cetvrta {
	static int currI;
	static int currJ;
	
	public static void main(String[] args) throws IOException {
		BufferedReader bi = new BufferedReader(new InputStreamReader(System.in));
		
		String line = bi.readLine();
		
		String[] tmp = line.split("\\s+");
		
		int N = Integer.parseInt(tmp[0]);
		
		int M = Integer.parseInt(tmp[1]);
		
		int p = Integer.parseInt(tmp[2]);
		
		int[][] mat = new int[N][M];
		for(int i = 0 ; i < N ; i++){
			line = bi.readLine();
			tmp = line.split("\\s+");
			for(int j = 0 ; j < M ; j++){
				mat[i][j] = Integer.parseInt(tmp[j]);
			}
		}
		
		currI = 0;
		currJ = 0;
		
		int rez = 0;
		
		for(int i = 1 ; i <= p ; i++){
			int value = runBfs(mat, i);
			rez+=value;
		}
		System.out.println(rez);
		
	}
	
	public static int runBfs(int[][] mat, int target){
		ArrayList<String> queue = new ArrayList<>();
		String keyy = currI + " " + currJ;
		queue.add(currI + " " + currJ);
		HashMap<String, Integer> mapa = new HashMap<>();
		mapa.put(keyy, 0);
		if(mat[currI][currJ] == target) return 0;
		
		//System.out.println();
		
		while(!queue.isEmpty()){
			String curr = queue.remove(0);
			String[] tmp = curr.split(" ");
			int i = Integer.parseInt(tmp[0]);
			int j = Integer.parseInt(tmp[1]);
			
			if( (i+1) < mat.length ){
				String key = (i+1) + " " + j;
				if(!mapa.containsKey(key)){
					if(mat[i+1][j] == target){
						currI = i+1;
						currJ = j;
						return (mapa.get(curr) + 1);
					}
					else{
						
						mapa.put(key, (mapa.get(curr) + 1) );
						queue.add(key);
					}
				}
				
			}
			
			if( (i-1) >= 0 ){
				String key = (i-1) + " " + j;
				if(!mapa.containsKey(key)){
					if(mat[i-1][j] == target){
						currI = i-1;
						currJ = j;
						return (mapa.get(curr) + 1);
					}
					else{
						
						mapa.put(key, (mapa.get(curr) + 1));
						queue.add(key);
					}
				}
				
			}
			
			if( (j+1) < mat[0].length ){
				String key = i + " " + (1 +j);
				if(!mapa.containsKey(key)){
					if(mat[i][j+1] == target){
						currI = i;
						currJ = j+1;
						return (mapa.get(curr) + 1);
					}
					else{
						
						mapa.put(key, (mapa.get(curr) + 1));
						queue.add(key);
					}
				}
				
			}
			
			if( (j-1) >= 0 ){
				String key = i + " " + (j-1);
				if(!mapa.containsKey(key)){
					if(mat[i][j-1] == target){
						
						currI = i;
						currJ = j-1;
						return (mapa.get(curr) + 1);
					}
					else{
						
						mapa.put(key, (mapa.get(curr) + 1));
						queue.add(key);
					}
				}
				
			}
			
		}
		
		return 0;
	}
}
