#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int n,m,c,d;

struct temp
{
    int a,b,c,d;

    temp(int x,int y,int z,int xx)
    {
        a = x,b = y,c = z,d = xx;
    }
    temp()
    {

    }
}buns[11];

LL DP[11][1005];

LL solve(int ind,int left)
{
    if(ind == m + 1) return 0;
    LL &temp = DP[ind][left];
    if(temp != -1) return temp;
    for(int i=0;;i++)
    {
        if(buns[ind].b * i > buns[ind].a || i * buns[ind].c > left) break;
        temp = max(temp, solve(ind + 1,left - i * buns[ind].c) + i * buns[ind].d);
    }
    return temp;
}

int main()
{
    cin >> n >> m >> c >> d;
    buns[0] = temp(0,0,c,d);
    int x,y,z,xx;
    for(int i=1;i<=m;i++)
    {
        cin >> x >> y >> z >> xx;
        buns[i] = temp(x,y,z,xx);
    }
    setdp(DP);
    cout << solve(0,n);
    return 0;
}
