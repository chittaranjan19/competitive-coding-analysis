
/* Author:
    * Rohit Laddha */
#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <iostream>
#include <sstream>
#include <string>
#include <utility>
#include <vector>
#include <map>
#include <limits.h>
#include <math.h>
#include <cassert>
#include <ctime>
#include <queue>
#include <tr1/random>
#include <tr1/unordered_map>
using namespace std;
using namespace std::tr1;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define ALL(c) (c).begin(),(c).end()
#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;
#define N 1000010
bool prime[N]={false};
int main()
{
	int i,j,sq=sqrt(N);
	for(i=2;i<sq+1;i++)
	{
		if(prime[i]==false)
		{
			for(j=i*i;j<=N;j+=i)
			{
				prime[j]=true;
			}
		}
	}
	prime[0]=true;
	prime[1]=true;
//	cout << prime[7] << endl;
	int a,b,k;
	cin >> a>> b >>k;
	int cnt=0;
	for(int l=1;l<=b-a+1;l++){
		for(int x=a;x<=b+1-l;x++){
			cnt=0;
			for(j=x;j<=x+l-1;j++){
				if(prime[j]==false){
					cnt++;
				}
			}
			if(cnt>=k && x==b+1-l){
				cout << l << endl;
				return 0;
			}
			else if(cnt>=k)
				continue;
			else
				break;
		}
	}
	cout << "-1" << endl;
	return 0;
}

