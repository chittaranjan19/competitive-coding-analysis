#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
/*
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
ordered_set s;
*/
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN];
string rr[]={"popStack","popQueue","popFront"};
int main(){
	int a;
	cin>>a;
	queue<int>q;
	stack<int>s;
	deque<int>d;
	for(int i=0;i<a;i++)
		cin>>arr[i];
	//	wr
	for(int i=0;i<a;i++){
		if(arr[i]==0){
			vector<int>v;
			if(s.size()!=0)
				v.pb(0),s.pop();
			if(q.size()!=0)
				v.pb(1),q.pop();
			if(d.size()!=0)
				v.pb(2),d.pop_front();
			cout<<v.size()<<" ";
			for(int i=0;i<v.size();i++)
				cout<<rr[v[i]]<<" ";
			cout<<endl;				
		}
		else{
			if(s.size()==0)	
				s.push(arr[i]),cout<<"pushStack "<<endl;
			else if(q.size()==0)
				q.push(arr[i]),cout<<"pushQueue "<<endl;
			else
				d.push_front(arr[i]),cout<<"pushFront "<<endl;
		}
	}
	return 0;
}
