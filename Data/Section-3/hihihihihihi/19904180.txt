#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int inf=1000000000;
int cost[100005],dp[2][2];
char str[2][100005],tmpc[100005],tmpp[100005];

void change(char str[],char ans[])
{
   int len=strlen(str);
   for(int i=0;i<len;i++) ans[i]=str[len-i-1];
}

int main()
{
   int n,cur=1,pre,flag1,flag2,i;
   scanf("%d",&n);
   for(i=0;i<n;i++) scanf("%d",&cost[i]);
   scanf("%s",str[0]);
   memset(dp,0,sizeof(dp));
   dp[0][1]=cost[0];
   for(i=1;i<n;i++)
   {
      flag1=flag2=0;
      scanf("%s",str[cur]);
      pre=!cur;
      change(str[cur],tmpc);
      change(str[pre],tmpp);
      if(strcmp(str[pre],str[cur])<=0 && strcmp(tmpp,str[cur])<=0)
         dp[cur][0]=min(dp[pre][0],dp[pre][1]);
      else if(strcmp(str[pre],str[cur])<=0 && strcmp(tmpp,str[cur])>0)
         dp[cur][0]=dp[pre][0];
      else if(strcmp(str[pre],str[cur])>0 && strcmp(tmpp,str[cur])<=0)
         dp[cur][0]=dp[pre][1];
      else {flag1=1;dp[cur][0]=inf;}
      if(strcmp(str[pre],tmpc)<=0 && strcmp(tmpp,tmpc)<=0)
         dp[cur][1]=min(dp[pre][0],dp[pre][1])+cost[i];
      else if(strcmp(str[pre],tmpc)<=0 && strcmp(tmpp,tmpc)>0)
         dp[cur][1]=dp[pre][0]+cost[i];
      else if(strcmp(str[pre],tmpc)>0 && strcmp(tmpp,tmpc)<=0)
         dp[cur][1]=dp[pre][1]+cost[i];
      else {flag2=1;dp[cur][1]=inf;}
      if(flag1 && flag2)break;
      cur=pre;
   }
   if(flag1 && flag2)printf("-1\n");
   else printf("%d\n",min(dp[!cur][0],dp[!cur][1]));
   return 0;
}

