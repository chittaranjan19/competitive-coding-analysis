#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;


int dp[35][35][55];

int dfs(int n,int m,int k)
{
    if (k<=0 || n*m==k)
    {
        dp[n][m][k]=0;
        return dp[n][m][k];
    }
    if (dp[n][m][k]!=-1)
        return dp[n][m][k];
    else
    {
        dp[n][m][k]=0x3f3f3f3f;
        for (int i=1;i<=n;i++)
        {
            for (int j=0;j<=k;j++)
            {
                dp[n][m][k]=min(dp[n][m][k],dfs(i,m,j)+dfs(n-i,m,k-j) + m*m);
            }
        }
        for (int i=1;i<=m;i++)
        {
            for (int j=0;j<=k;j++)
            {
                dp[n][m][k]=min(dp[n][m][k],dfs(n,i,j)+dfs(n,m-i,k-j)+n*n);
            }
        }
        return dp[n][m][k];
    }
}

int main()
{
    int n,m,k;
    int T;
    scanf("%d",&T);
    while (T--)
    {
        memset(dp,-1,sizeof dp);
        scanf("%d %d %d",&n,&m,&k);
        {
            printf("%d\n",dfs(n,m,k));
        }
    }
    return 0;
}
