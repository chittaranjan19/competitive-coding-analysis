uses math;
var
  fam:array[1..100000]of string;
  a1,a2:array[1..100000]of longint;
  zn1,zn2:array[1..100000]of longint;
  flag:array[1..10000,1..2]of boolean;
  n,m:longint;
  i,j:longint;
  zn,reg,zakram:longint;
  c:char;
begin
  readln(n,m);
  for i:=1 to n do
    begin
      read(c);
      while c<>' ' do
        begin
          fam[i]:=fam[i]+c;
          read(c);
        end;
      readln(reg,zn);
      if zn1[reg]<zn2[reg] then
        begin
          if zn1[reg]<zn then
            begin
              zn1[reg]:=zn;
              a1[reg]:=i;
              flag[reg,1]:=false;
              continue;
            end;
          if zn1[reg]=zn then flag[reg,1]:=true;
          if zn2[reg]<zn then
            begin
              zn2[reg]:=zn;
              a2[reg]:=i;
              flag[reg,2]:=false;
              continue;
            end;
          if zn2[reg]=zn then flag[reg,2]:=true;
        end
      else
        begin
          if zn2[reg]<zn then
            begin
              zn2[reg]:=zn;
              a2[reg]:=i;
              flag[reg,2]:=false;
              continue;
            end;
          if zn2[reg]=zn then flag[reg,2]:=true;
          if zn1[reg]<zn then
            begin
              zn1[reg]:=zn;
              a1[reg]:=i;
              flag[reg,1]:=false;
              continue;
            end;
          if zn1[reg]=zn then flag[reg,1]:=true;
        end;
    end;
 
  for i:=1 to m do
    begin
      if flag[i,1] or flag[i,2] then writeln('?')
      else writeln(fam[a1[i]],' ',fam[a2[i]]);
    end;
    if(zakram =0)then zakram :=1;
end.