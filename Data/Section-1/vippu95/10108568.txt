#include <bits/stdc++.h>
using namespace std;

#define lli long long
#define pb push_back
#define mp make_pair
const int limit = 40005;
const int oo = numeric_limits<int>::max();
int dist[limit];
bool visited[limit];

int bfs(int n,int m){
	list<int> q;
	int child,par;
	q.push_back(n);
	
	for(int i=0;i<limit;i++){
		visited[i]=false;
		dist[i]=oo;
	}
	
	dist[n]=0;
		
	while(!q.empty()){
		par = q.front();
		q.pop_front();
		for(int i=0;i<2;i++){
			if(i==0)
				child=par-1;
			else
				child = 2*par;
				
			if(child >= limit || child <= 0) continue;
			
			dist[child] = min(dist[child],dist[par]+1);
			if(visited[child]) continue;
			q.push_back(child);
			visited[child]=true;
		}
	}
	return dist[m];
}

int main(){
	int n,m;
	int ans;
	scanf("%d %d",&n,&m);
	if(m<=n){
		ans = abs(n-m);
		printf("%d\n",ans);
		return 0;
	}
	ans = bfs(n,m);
	printf("%d\n",ans);
}
