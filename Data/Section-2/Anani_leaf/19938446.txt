#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<string>
#include<queue>
#include<vector>
#include<string>
#include<map>
#include<stack>
#include<cmath>
#define lowbit(x) ((x)&(-x))
#define Max(a,b) (a>b?a:b)
#define Min(a,b) (a>b?b:a)
#define lron(x)  ((x) << 1)
#define rson(x) ((x)<<1|1)
#define dad(x) ((x)>>1)
#define INF 0x3f3f3f3f
#define rep(i,a,b) for(int i=a;i<(b);++i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define pb push_back
#define de(x) cout << #x << "=" << x << endl
using namespace std;
typedef __int64 ll;
//typedef long long ll;
int const Max_N = 100005;
ll arr[Max_N] = {0};
ll dp[Max_N][2] = {0};
string s[Max_N][2];
int main()
{
	std::ios::sync_with_stdio(false);
	int N;
	cin >> N;
	for (int i = 0; i < N; ++i) cin >> arr[i];
	
	for  (int i = 0; i < N; ++i) 
	{
		cin >> s[i][0];
		s[i][1] = s[i][0];
		reverse(s[i][1].begin(),s[i][1].end());
	}
	
	fill(dp[0],dp[0]+N+2,1e16);
	fill(dp[1],dp[1]+N+2,1e16);
	dp[0][1] = arr[0];
	dp[0][0] = 0;
	for (int i = 1; i < N; ++i)
	{
		//cout << s[i][0] << ' ' << s[i-1][0] << endl; 
		if(s[i][0] >= s[i-1][0])
			dp[i][0] = Min(dp[i][0],dp[i-1][0]);
		if(s[i][0] >= s[i-1][1])
			dp[i][0] = Min(dp[i][0],dp[i-1][1]);
	
		if(s[i][1] >= s[i-1][0])
			dp[i][1] = Min(dp[i][1],dp[i-1][0]+arr[i]);
		if(s[i][1] >= s[i-1][1])
			dp[i][1] = Min(dp[i][1],dp[i-1][1]+arr[i]);
	}
	
	ll ans = Min(dp[N-1][0],dp[N-1][1]);
	cout << (ans >= 1e16?-1:ans) << endl;

	return 0;
}


