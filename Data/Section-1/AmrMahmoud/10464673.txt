#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <iomanip>
#include <set>
#include <fstream>
#include <numeric>
#include <stdexcept>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

map<LL, int> ss;
int arr[29];
int m;
LL s;
LL fact[19];
LL res = 0;

void solve(int ind, LL num)
{
  if(num > s) return;
  if(ind == m)
  {
    ss[num]++;
    return ;
  }
  solve(ind + 1, num);
  solve(ind + 1, num + arr[ind]);
  if(arr[ind] < 19)
    solve(ind + 1, num + fact[arr[ind]]);
}

void solve2(int ind, LL num)
{
  if(num > s) return;
  if(ind == m)
  {
    res+=ss[s - num];
    return ;
  }
  solve2(ind + 1, num);
  solve2(ind + 1, num + arr[ind]);
  if(arr[ind] < 19)
    solve2(ind + 1, num + fact[arr[ind]]);
}

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("mtf.in", "r", stdin);
  //freopen("mtf.out", "w", stdout);
  int n, k;
  cin >> n >> k >> s;
  for(int i=0;i<n;i++)
    cin >> arr[i];
  fact[0] = 1;
  for(int i=1;i<19;i++)
    fact[i] = fact[i - 1] * 1LL * i;
  m = n / 2;
  solve(0, 0);
  m = n;
  solve2(n / 2, 0);
  cout << res;
  return 0;
}
