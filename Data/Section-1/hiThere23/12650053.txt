#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 201000
#define maxC 1000000007
#define mp make_pair
#define F first
#define S second
#define p2 pair<int, int>
#define pb push_back

using namespace std;
int n, s, b = 0, se = 0;
struct querry
{
    int d, p, q;
};
querry q[mn], buy[mn], sel[mn];

bool comp(querry a, querry b)
{
    if (a.d != b.d)
        return (a.d == 0);
    return a.p < b.p;
}

void setup ()
{
    cin >> n >> s;
    char c;
    FOR (i, 1, n)
    {
        cin >> c >> q[i].p >> q[i].q;
        q[i].d = (c == 'S');
    }
    sort(q + 1, q + n + 1, comp);
}

void xuly ()
{
    FOR (i, 1, n)
    if (q[i].d == 0)
    {
        if (q[i].p == q[i - 1].p)
            buy[b].q += q[i].q;
        else
            buy[++ b] = q[i];
    }
    else
    {
        if (q[i - 1].d && q[i].p == q[i - 1].p)
            sel[se].q += q[i].q;
        else
            sel[++ se] = q[i];
    }
    FORD (i, min(s, se), 1)
    cout << "S " << sel[i].p << " " << sel[i].q << "\n";
    FORD (i, b, b - min(s, b) + 1)
    cout << "B " << buy[i].p << " " << buy[i].q << "\n";
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
