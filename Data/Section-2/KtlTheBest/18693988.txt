#include <bits/stdc++.h>
using namespace std;

int n, m;

bool u1[7], u2[7], ok;
stack <int> ans1, ans2, cop1, cop2;
long long int sz1, sz2, ans, ans4, sz, cnt1[7], d[12][7], d1[12][7], ara[10], arb[10], cnt[7], a[10], b[10], szx, szy;

void rec(int lvl){
	//cerr << lvl << '\n';
	//cerr << lvl << '\n';
	if(lvl == szx + szy){
		for(int i = 0; i < 7; ++ i){
			if(cnt[i] > 1){
				return;
			}
		}
		for(int i = 0; i < szx; ++ i){
			if(a[i] > ara[i]){
				return;
			}
			if(a[i] < ara[i]){
				break;
			}
		}
		for(int i = 0; i < szy; ++ i){
			if(b[i] > arb[i]){
				return;
			}
			if(b[i] < arb[i]){
				break;
			}
		}
		//for(int i = 0; i < 7; i ++){
		//	cout << cnt[i] << ' ';
		//}
		/*cout << '\n';
		for(int i = 0; i < szx; ++ i){
			cout << a[i] << ' ';
		}
		cout << '\n';
		for(int i = 0; i < szy; ++ i){
			cout << b[i] << ' ';
		}
		cout << '\n';*/
		ans ++;
		return;
	}
	for(int i = 0; i < 7; ++ i){
		if(lvl >= szx){
			b[lvl - szx] = i;
		} else {
		    a[lvl] = i;
		}
		cnt[i] ++;
		rec(lvl + 1);
		cnt[i] --;
	}
}

int main(){
	cin >> n >> m;
	int a = n;
	n --;
	m --;
	while(m){
		ans2.push(m % 7);
		m /= 7;
	}
	while(n){
		ans1.push(n % 7);
		n /= 7;
	}
	int sz1 = ans1.size();
	int sz2 = ans2.size();
	int b = m;
	if(sz1 + sz2 > 7){
		cout << 0;
		return 0;
	}
	while(ans1.size()){
		ara[szx ++] = ans1.top();
		ans1.pop();
	}
	while(ans2.size()){
		arb[szy ++] = ans2.top();
		ans2.pop();
	}
	/*for(int i = 0; i < szx; ++ i){
		cout << ara[i] << ' ';
	}
	cout << '\n';
	for(int i = 0; i < szy; ++ i){
		cout << arb[i] << ' ';
	}
	cout << '\n';*/
	rec(0);
	cout << ans;
	return 0;
}