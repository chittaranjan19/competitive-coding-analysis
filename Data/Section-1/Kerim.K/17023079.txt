#include<bits/stdc++.h>
#define MAXN 200009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN],Q[MAXN],vis[MAXN],n,k,ans[MAXN];
int rec(int x){
	if(x==n){
		vis[x]=(1&(abs(arr[x]*2)<=k+k));
		return Q[x]=(arr[x]+arr[x]);
	}
	int ret=rec(x+1);
	vis[x]=(1^(abs(ret)>k+k));
	ret=(abs(ret)<=k+k)*((ret+arr[x])*2);
	return Q[x]=ret;
}
int inv(int x){
	if(x<=0)
		return abs(x);
	return -x;	
}
int main(){
	scanf("%d%d",&n,&k);n++;
	for(int i=1;i<=n;i++)
		scanf("%d",arr+i);
	rec(1);int t=0,res=0,polynomial=n;
	for(int i=1;i<=n;i++){
		if(vis[i+1])
			ans[i]=abs(inv(Q[i+1])+inv(t));	 
		int last=t;	
		t=(t+arr[i])/2;
		if(t*2!=last+arr[i]){
			polynomial=i;
			break;
		}
	}
	for(int i=1;i<n;i++)
		if(ans[i]<=k and i<=polynomial)
			++res;		
	res+=(ans[n]!=0);		
	printf("%d\n",res);
	return 0;
}