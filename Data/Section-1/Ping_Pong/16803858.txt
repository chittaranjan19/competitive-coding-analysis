#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

#define ll long long
#define ld long double

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int p = 239;
const int MAX_N = 10;
const long double pi = 3.1415926535897932384626;
const long double eps = 1e-6;

int main()
{
    //ifstream ifs("input.txt");
    //ofstream ofs("output.txt");
    //freopen("candies.in", "r", stdin);
    //freopen("candies.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n, k;
    cin >> n >> k;
    string s;
    cin >> s;
    int m = s.size();
    int dp[m + n + 1];
    for (int i = 0; i <= n + m; i++)
        dp[i] = 1;
    int last[k];
    for (int i = 0; i < k; i++)
        last[i] = 0;
    for (int i = 0; i < m; i++)
    {
        if (last[s[i] - 'a'] != 0)
            dp[i + 1] = (dp[i] * 2 % MOD - dp[last[s[i] - 'a'] - 1] + MOD) % MOD;
        else
            dp[i + 1] = dp[i] * 2 % MOD;
        last[s[i] - 'a'] = i + 1;
    }
    for (int i = m; i < m + n; i++)
    {
        int mi = inf, num = 0;
        for (int j = 0; j < k; j++)
        {
            if (last[j] < mi)
            {
                mi = last[j];
                num = j;
            }
        }
        if (last[num] != 0)
            dp[i + 1] = (dp[i] * 2 % MOD - dp[last[num] - 1] + MOD) % MOD;
        else
            dp[i + 1] = dp[i] * 2 % MOD;
        last[num] = i + 1;
    }
    cout << dp[m + n];
    return 0;
}
