import java.io.*;
import java.util.*;
import java.math.*;


public class Main{
	//static final String FileName = "test";

	void solve() throws IOException{
		int n = nextInt();
		int m = nextInt();
		int K = nextInt();
		boolean[][] a = new boolean[n][m];
		for (int i=0; i<n; i++) {
			char[] s = br.readLine().toCharArray();
			for (int j=0; j<m; j++) a[i][j] = s[j]=='*';
		}
		int sz = Math.min(n, m)/2;
		for (int k=1; k<=sz; k++)
			for (int x=k; x<n-k; x++)
				for (int y=k; y<m-k; y++) {
					if (a[x][y] && a[x+k][y] && a[x-k][y] && a[x][y+k] && a[x][y-k]) {
						K--;
						if (K==0) {
							out.println((x+1)+" "+(y+1));
							out.println((x+1-k)+" "+(y+1));
							out.println((x+1+k)+" "+(y+1));
							out.println((x+1)+" "+(y+1-k));
							out.println((x+1)+" "+(y+1+k));
							return;
						}
					}
				}
		out.println(-1);
					
	}
	static final int inf = 1000000000;
	BufferedReader br;
	StringTokenizer st;
	PrintWriter out;
	
	public void run() {
		try {
			//br = new BufferedReader(new FileReader(FileName+".in"));
			//out = new PrintWriter(FileName+".out");
			br = new BufferedReader(new InputStreamReader(System.in));
			out = new PrintWriter(System.out);	
			//br = new BufferedReader(new FileReader("input.txt"));
			//out = new PrintWriter("output.txt");
			solve();
			br.close();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

	String next() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			String s = br.readLine();
			if (s == null)
				return null;
			st = new StringTokenizer(s);
		}
		return st.nextToken();
	}
	
	double nextDouble() throws IOException {
		return Double.parseDouble(next());
	}
	
	int nextInt() throws IOException {
		return Integer.parseInt(next());
	}

	long nextLong() throws IOException {
		return Long.parseLong(next());
	}

	public static void main(String[] args) {
		new Main().run();
	}
}
