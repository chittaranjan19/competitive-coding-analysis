#include "bits/stdc++.h"
#define MAXN 100009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
const int N=104;
ll ans[N][N],tmp[N][N],dp[65][N][N],sum[N][N],pw[N];
ll mod(ll x){
	return (x%INF);
}
map<ll,int>cnt;
int main(){
	#ifndef ONLINE_JUDGE
    freopen("file.in", "r", stdin);
	#endif	
	pw[0]=1;
	for(int i=1;i<=60;i++)
		pw[i]=pw[i-1]*2LL;
	ll n,x;
	int m;
	scanf("%d%lld",&m,&n);
	vector<ll>v;v.pb(-1);
	for(int i=1;i<=m;i++){
		scanf("%lld",&x);
		if(!cnt[x])
			v.pb(x);
		cnt[x]++;
	}
	sort(all(v));m=v.size()-1;
	for(int i=1;i<=m;i++)
		dp[0][i][i]=cnt[v[i]];
	for(int i=1;i<=60;i++){
		memset(sum,0,sizeof sum);
		for(int j=1;j<=m;j++)
			for(int k=1;k<=m;k++)
				for(int l=1;l<=m;l++)
					if((__builtin_popcount(v[l]^v[j]))%3==0)
						sum[k][j]=mod(sum[k][j]+dp[i-1][l][k]);
		for(int j=1;j<=m;j++)				
			for(int k=1;k<=m;k++)
				for(int l=1;l<=m;l++)
					dp[i][j][k]=mod(dp[i][j][k]+mod(dp[i-1][j][l]*sum[k][l]));			
	}bool flag=0;	
	for(int i=60;i>=0;i--){
		if(n<pw[i])
			continue;n-=pw[i];
		if(!flag){flag=1;
			for(int j=1;j<=m;j++)
				for(int k=1;k<=m;k++)
					ans[j][k]=dp[i][j][k];
		}
		else{
			for(int j=1;j<=m;j++)
				for(int k=1;k<=m;k++)
					tmp[j][k]=ans[j][k],ans[j][k]=0,sum[j][k]=0;
			for(int j=1;j<=m;j++)
				for(int k=1;k<=m;k++)
					for(int l=1;l<=m;l++)
						if((__builtin_popcount(v[l]^v[j]))%3==0)
							sum[k][j]=mod(sum[k][j]+dp[i][l][k]);
			for(int j=1;j<=m;j++)
				for(int k=1;k<=m;k++)
					for(int l=1;l<=m;l++)
						ans[j][k]=mod(ans[j][k]+mod(tmp[j][l]*sum[k][l]));
		}
	}
	ll res=0;	
	for(int j=1;j<=m;j++)
		for(int k=1;k<=m;k++)
			res=mod(res+ans[j][k]);
	printf("%lld\n",res);
	return 0;
}
