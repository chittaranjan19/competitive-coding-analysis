#include <bits/stdc++.h>
using namespace std;
const int maxn = 2222;
int n, x[maxn], y[maxn];
long long s1[maxn], s2[maxn], b[maxn];

bool judge(long long x, long long y) {
	for(int i = 3; i <= n + 2; i++) {
		if(s1[i] > x && s2[i] > y) return false; 
	}
	return true;
}
int main() {
	scanf("%d", &n);
	for(int i = 1; i <= n + 2; i++) {
		scanf("%d%d", &x[i], &y[i]);
	}
	for(int i = 1; i <= n + 2; i++) {
		s1[i] = (long long)(x[i] - x[1]) * (x[i] - x[1]) + (long long)(y[i] - y[1]) * (y[i] - y[1]);
		s2[i] = (long long)(x[i] - x[2]) * (x[i] - x[2]) + (long long)(y[i] - y[2]) * (y[i] - y[2]);
		b[i] = s2[i];
	}
	sort(b + 1, b + n + 2 + 1);
	long long ans = LLONG_MAX;
	for(int i = 1; i <= n + 2; i++) {
		int l = 1, r = n + 2, p;
		while(l <= r) {
			int mid = (l + r) >> 1;
			if(judge(s1[i], b[mid])) {
				p = mid;
				r = mid - 1;
			} else {
				l = mid + 1;
			}
		}
		ans = min(ans, s1[i] + b[p]);
	}
	printf("%I64d\n", ans);
	return 0;
}
