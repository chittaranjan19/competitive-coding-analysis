#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair

using namespace std;

string input[105];
char arr[105][105];

int dx[] = {0 , 0 , 1 , -1};
int dy[] = {1, -1 , 0 , 0};
bool visited[105][105];
int n,m;

void dfs(int i,int j,int color)
{
    if(visited[i][j])
        return;
    visited[i][j] = true;
    if(color)
        arr[i][j] = 'W';
    else arr[i][j] = 'B';
    for(int k=0;k<4;k++)
    {
        if(i+dx[k] >=0 && j+dy[k] >=0 && i+dx[k] <n && j+dy[k]<m && input[i+dx[k]][j+dy[k]] == '.')
            dfs(i+dx[k],j+dy[k],1-color);
    }
}

int main()
{
    cin >> n >> m;
    for(int i=0;i<n;i++)
        cin >> input[i];
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            arr[i][j] = '-';
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            if(input[i][j] == '.' && !visited[i][j])
                dfs(i,j,0);
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
            printf("%c",arr[i][j]);
        printf("\n");
    }
    return 0;
}
