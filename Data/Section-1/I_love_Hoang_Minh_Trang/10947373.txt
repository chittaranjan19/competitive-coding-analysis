
const   maxn    =500+3;
        maxm    =500+3;
        inf     =trunc(1e9)+7;
        fi      ='540C.inp';
        fo      ='540C.out';

type    data    =record
        x,y:longint;
        end;
        arr1    =array[0..maxn,0..maxm] of longint;
        arr2    =array[0..maxn*maxm*123] of data;
        arr3    =array[0..maxn,0..maxn] of data;
        arr4    =array[0..maxn,0..maxm] of boolean;

var     n, m    :longint;
        r1,c1,r2,c2:longint;
        a       :arr1;
        vet     :arr3;
        dx      :array[1..4] of longint=(-1,0,1,0);
        dy      :array[1..4] of longint=(0,1,0,-1);
        free    :Arr4;
        ok      :boolean;
        Q       :arr2;
        QQ      :arr2;
        VVet    :arr3;
function inRange(x,y:longint):boolean;
begin
        if (x>0) and (x<=n) and (y>0) and (y<=m) then exit(true);
        exit(false);
end;

function timchutrinh(a:arr1;x0,y0:longint):boolean;
var     i, j    :longint;
        x,y,u,v:longint;
        front,rear:longint;
begin
        front:=1;rear:=1;
        QQ[1].x:=x0;QQ[1].y:=y0;
        fillchar(vvet,sizeof(vvet),0);
        repeat
                u:=Qq[front].x;
                v:=Qq[front].y;
                inc(front);
                for i:=1 to 4 do
                begin
                        x:=u+dx[i];
                        y:=v+dy[i];
                        if inrange(x,y) and (vvet[x,y].x=0) and (vvet[x,y].y=0) and (x=x0) and (y=y0) and (x<>vet[u,v].x) and (y<>vet[u,v].y)
                                then exit(true);
                        if inrange(x,y) and (vvet[x,y].x=0) and (vvet[x,y].y=0) and (a[x,y]<>1) then
                        begin
                                inc(rear);
                                Qq[rear].x:=x;
                                Qq[rear].y:=y;
                        end;
                end;
        until front>rear;
end;

procedure update;
var     i, j, x, y, u, v        :longint;
        b       :arr1;
begin
        x:=r2;
        y:=c2;
        if a[x,y]=1 then
        begin
                writeln('YES');
                halt;
        end;
        b:=a;
        while (x<>r1) and (y<>c1) do
        begin
                b[x,y]:=1;
                u:=vet[x,y].x;
                v:=vet[x,y].y;
                x:=u;
                y:=v;
        end;
        if timchutrinh(b,r2,c2) then
        begin
                writeln('YES');
                halt;
        end;
end;
procedure xuly;
var //    Q   :arr2;
        top :longint;
        x,y,u,v:longint;
        i, j    :longint;
        front,rear:longint;
//        vet     :arr3;
begin
        front:=1;rear:=1;
        Q[1].x:=r1;
        Q[1].y:=c1;
        fillchar(vet,sizeof(vet),0);
        repeat
                u:=Q[front].x;
                v:=Q[front].y;
                inc(front);
                if (u=r2) and (v=c2) then update;
                for i:=1 to 4 do
                begin
                        x:=u+dx[i];
                        y:=v+dy[i];
                        if inrange(x,y) and (vet[x,y].x=0) and (vet[x,y].y=0) and
                        ( (a[x,y]<>1) or ((a[x,y]=1) and (x=r2) and (y=c2)))then
                        begin
                                inc(rear);
                                Q[rear].x:=x;
                                Q[rear].y:=y;
                                vet[x,y].x:=u;
                                vet[x,y].y:=v;
                        end;
                end;
        until front>rear;
        writeln('NO');
end;

procedure run;
var     i, j    :longint;
        ch :char;
begin
        assign(input,fi);assign(output,fo);
        reset(input);rewrite(output);
        readln(n, m);
        for i:=1 to n do
        begin
                for j:=1 to m do
                begin
                        read(ch);
                        if ch='.' then a[i,j]:=0 else a[i,j]:=1;
                end;
                readln;
        end;
        readln(r1,c1);
        readln(r2,c2);
        xuly;
        close(input);close(output);
end;

begin
        run;
end.