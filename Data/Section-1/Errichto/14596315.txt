#include<bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define mp make_pair
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
const int inf = 1e9 + 5;
const int nax = 55;

int k;

map<vi, bool> memo;

bool f(vi w) {
	sort(w.begin(), w.end());
	if(w.empty()) return false;
	if(memo.count(w)) return memo[w];
	int n = sz(w);
	REP(i, n) {
		w[i]--;
		vi w2;
		for(int a : w) if(a) w2.pb(a);
		w[i]++;
		if(!f(w2)) return memo[w] = true;
	}
	REP(i, n) if(w[i] % 2 == 0) {
		vi w2;
		REP(j, n) if(j != i) w2.pb(w[j]);
		REP(_, k) w2.pb(w[i] / 2);
		if(!f(w2)) return memo[w] = true;
	}
	return memo[w] = false;
}

/*int heur(int a, int b, int c, int d) {
	int li = 9;
	while(a >= li) a -= 2;
	while(b >= li) b -= 2;
	while(c >= li) c -= 2;
	while(d >= li) d -= 2;
	if(a == b) return f(vi{c, d});
	if(a == c) return f(vi{b, d});
	if(b == c) return f(vi{a, d});
	if(a == d) return f(vi{c, d});
	if(c == d) return f(vi{a,b});
	return f(vi{a,b,c,d});
}

int ans[nax][nax][nax][nax];*/

int main() {
	//srand(42);
	int n;
	scanf("%d%d", &n, &k);
	k = k % 2;
	vi w;
	while(n--) {
		int a;
		scanf("%d", &a);
		//a = rand() % (1000 * 1000 * 1000);
		int li = 9;
		if(a >= li) a -= 2 * ((a - li) / 2);
		w.pb(a);
	}
	sort(w.begin(), w.end());
	vi w2;
	for(int a : w) {
		if(!w2.empty() && w2.back() == a) w2.pop_back();
		else w2.pb(a);
	}
	puts(f(w2) ? "Kevin" : "Nicky");
	
	//RI(i, n) printf("%d", (int) f(vi{i})); puts("");
	/*RI(a, n) RI(b, a) RI(c, b) RI(d, c) ans[a][b][c][d] = f(vi{a,b,c,d});
	memo.clear();
	
	while(k >= 2) k -= 2;
	RI(a, n) RI(b, a) RI(c, b) RI(d, c) assert(ans[a][b][c][d] == heur(a, b, c, d));
	*/return 0;
}
