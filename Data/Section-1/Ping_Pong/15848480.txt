#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int P = 239;
const int MAX_N = 200000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

int main()
{
    //ifstream ifs("input.in");
    //ofstream ofs("output.out");
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin >> n;
    int a[n];
    for (int i = 0; i < n; i++)
        cin >> a[i];
    int pref[n], suff[n];
    pref[0] = 1;
    for (int i = 1; i < n; i++)
        if (a[i] > a[i - 1])
            pref[i] = pref[i - 1] + 1;
        else
            pref[i] = 1;
    suff[n - 1] = 1;
    for (int i = n - 2; i >= 0; i--)
        if (a[i] < a[i + 1])
            suff[i] = suff[i + 1] + 1;
        else
            suff[i] = 1;
    int ans = 0;
    ans = max(ans, suff[1] + 1);
    ans = max(ans, pref[n - 2] + 1);
    for (int i = 1; i < n - 1; i++)
        if (a[i + 1] - a[i - 1] >= 2)
            ans = max(ans, pref[i - 1] + suff[i + 1] + 1);
    cout << ans;
    return 0;
}
