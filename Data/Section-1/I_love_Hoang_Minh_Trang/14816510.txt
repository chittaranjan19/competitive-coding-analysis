#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;
void add(int &a, int b)
{
    a += b;
    if (a >= INF) a -= INF;
}

int f[MAXN];
struct data{
    int l, r;
    bool operator<(const data &op) const
    {
        return r < op.r;
    }
} a[MAXN];
int n, m;
int s[MAXN];
int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("101B.inp", "r", stdin);
    freopen("101B.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n >> m;
    FORE(i, 1, m) cin >> a[i].l >> a[i].r;
    sort(a + 1, a + m + 1);
    f[0] = 1;
    //FORE(i, 1, n) cout << a[i].l << "? " << a[i].r << endl;
    FORE(i, 1, m){
        bool ok = 1;
        if (a[i].l == 0) f[i] = 1;
        int d = 1, c = i - 1, g, fin = -1;
        while (d <= c){
            g = (d + c) / 2;
            if (a[g].r >= a[i].l){
                fin = g;
                c = g - 1;
            }
            else d = g + 1;
        }
        if (fin == -1){
            ok = 0;
        }
        int dau = fin;
        int cuoi = i - 1;
        if (ok) add(f[i], (s[cuoi] - s[dau - 1] + INF) % INF);
        s[i] = (s[i - 1] + f[i]) % INF;
        //cout<<i<<":"<<dau<<" "<<cuoi<<endl;
    }

    //FORE(i, 1, n) cout << f[i]<<" " ; cout<<endl;
    int ans = 0;
    FORE(i, 1, m) if (a[i].r == n) add(ans, f[i]);
    cout << ans;
    return 0;
}

