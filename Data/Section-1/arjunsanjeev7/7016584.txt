// K-Multiple Free Set

#include <algorithm>
#include <bits/stdc++.h>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

int main()
{
	set<int> S;
	int n,k,i,num,x;
	cin>>n>>k;
	for(i=0;i<n;i++)
	{
		cin>>num;
		S.insert(num);
	}
	set<int> ans;
	set<int>::iterator it;
	for(it=S.begin();it!=S.end();it++)
	{
		x=*it;
		if(x%k==0)
		{
			if(ans.size()==0 || ans.find(x)!=ans.end())
			{
				ans.insert(x);
			}
		}
		else ans.insert(x);
	}
	cout<<ans.size()<<endl;
	return 0;
}
