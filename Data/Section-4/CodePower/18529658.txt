/*
fun main(args : Array<String>) {
    val (a, x, y) = readLine()!!.split(' ').map(String::toInt)
    if (x<a && x>0 && y<a && y>0) print(0)
    else if (x>a || x<0 || y>a || y<0) print(2)
    else print(1)
}
*/

/*
fun main(args : Array<String>) {

    val n = readLine()!!.split(' ').map(String::toInt)

    val Name = Array(5000, {"0"})
    val Height = Array(5000, {0})

    var i = 0
    while (i < n[0]) {
        val (name, height) = readLine()!!.split(' ')

        Name.set(i, name)
        Height.set(i, height.toInt())

        i++
    }

    i = 0
    while (i<n[0]-1) {
        var j = 0
        while (j < n[0]-1) {
            if (Height[j] > Height[j + 1]) {
                var tmp = Height[j]
                Height[j] = Height[j + 1]
                Height[j + 1] = tmp

                var tmp2 = Name[j]
                Name[j] = Name[j + 1]
                Name[j + 1] = tmp2
            }
            j++
        }
        i++
    }

    i = 0
    while (i<n[0]) {
        var name = Name[i]
        println("$name")
        i++
    }
}
*/

/*
fun main(args : Array<String>) {
    var Number = Array<Boolean>(2001, {false})

    var n = readLine()!!.split(' ').map(String::toInt)
    var i = 0
    while (i<n[0]) {
        Number[n[i+1]+1000] = true
        i++
    }

    n = readLine()!!.split(' ').map(String::toInt)
    i = 0
    while (i<n[0]) {
        if (Number[n[i+1]+1000])
            Number[n[i + 1] + 1000] = false
        else
            Number[n[i + 1] + 1000] = true
        i++
    }

    var qty = 0
    i = 0
    while (i<2001) {
        if (Number[i])
            qty++
        i++
    }

    print(qty.toString()+" ")
    i = 0
    while (i<2001) {
        if (Number[i])
            print((i-1000).toString()+" ")
        i++
    }
}
*/

/*
fun main(args : Array<String>) {
    var n = readLine()!!.split(' ').map(String::toInt)
    var i = 0
    while (i<n[0]) {
        var (n,m,p) = readLine()!!.split(' ').map(String::toInt)
        var f = false

        if (n>m) {
            var t = n
            n = m
            m = t
        }

        var a = 1
        while (a<=m) {
            if (p%a==0 && p/a <= n)
                f = true
            a++
        }

        if (f) println("Yes")
        else println("No")

        i++
    }

}
*/

/*
fun main(args : Array<String>) {
    var str = readLine()
    var newStr = ""

    var start = true
    var space = false

    var i = 0
    while (i<str!!.length) {
        if (str[i]!=' ') {
            if (str[i]=='.') {
                start = true
                if (space) newStr = newStr.substring(0,newStr!!.length-1)
                newStr += ". "
                space = true
            }
            else if (str[i]==',') {
                if (space) newStr = newStr.substring(0,newStr!!.length-1)
                newStr += ", "
                space = true
            }
            else {
                if (str[i]>='a' && str[i]<='z' && start)
                    newStr += ('A' + str[i].toInt() - 'a').toChar()
                else if (str[i]>='A' && str[i]<='Z' && !start)
                    newStr += ('a' + str[i].toInt() - 'A').toChar()
                else newStr += str[i]
                start = false
                space = false
            }
        }
        else {
            if (!start) {
                if (!space) newStr += " "
                space = true
            }
        }
        i++
    }

    i = newStr!!.length-1
    while (i>0) {
        if (newStr[i]==' ') {
            newStr = newStr.substring(0, newStr!!.length-1)
            i--
        }
        else break
    }

    print(newStr)
}
*/


fun main(argv : Array<String>) {
    var N = readLine()
    var d = 0
    var b = 1

    var period = ""
    var i = 2
    var j = 0
    var k = 0
    var period_pos = 0
    var pre_period = ""

    while (i<N!!.length-1) {
        if (N[i]=='(') period_pos = i
        else if (period_pos>0) {
            period += N[i]
            d += 9*Math.pow(10.toDouble(), k.toDouble()).toInt()
            k++
        }
        else {
            pre_period += N[i]
            b *= 10
            j++
        }
        i++
    }

    if (pre_period.length==0) pre_period = "0"

    var m = pre_period.toInt() * d + period.toInt();
    var n = b * d

    i = n
    while (i>1) {
        if (m%i==0 && n%i==0) {
            m /= i
            n /= i
        }
        else i--
    }

    println(m.toString()+"/"+n.toString())
}