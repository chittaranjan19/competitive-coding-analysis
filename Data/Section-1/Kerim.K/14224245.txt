#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define lgN 18
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,char> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int P[MAXN][lgN+9],lvl[MAXN],ds[MAXN],ans;
vector<PII>adj[MAXN];
char f[MAXN],lasta,lastb;
int tap(int g){
	if(ds[g]==g)
		return g;
	return ds[g]=tap(ds[g]);	
}
void dfs(int nd,int pr){
	lvl[nd]=lvl[pr]+1;
	P[nd][0]=pr;
	for(int i=0;i<adj[nd].size();i++){
		int to=adj[nd][i].ff,c=adj[nd][i].ss;
		if(to==pr)
			continue;
		f[to]=c;
		if(f[to]==f[nd])
			ds[tap(to)]=tap(nd);
		dfs(to,nd);
	}
}
void build(){
	for(int i=1;i<MAXN;i++)
		for(int j=1;j<=lgN;j++)
			if(P[i][j-1]>0)
				P[i][j]=P[P[i][j-1]][j-1];
}
void get(int nah,int z,int x){
	if(f[tap(z)]==f[P[tap(z)][0]])
		ds[tap(z)]=tap(P[tap(z)][0]);
	while(tap(z)!=tap(x)){
		ans++;
		if(nah==1)
			lasta=f[tap(z)];
		else
			lastb=f[tap(z)];	
		z=P[tap(z)][0];
		if(f[tap(z)]==f[P[tap(z)][0]])
			ds[tap(z)]=tap(P[tap(z)][0]);
	}
	if(z!=x){
		ans++;
		if(nah==1)
			lasta=f[z];
		else
			lastb=f[z];	
	}
}
int LCA(int x,int y){
	if(lvl[x]<lvl[y])
		swap(x,y);
	for(int i=lgN;i>=0;i--)
		if(lvl[x]-(1<<i)>=lvl[y])
			x=P[x][i];
	if(x==y)
		return x;			
	for(int i=lgN;i>=0;i--)
		if(P[x][i]>0 and P[x][i]!=P[y][i])
			x=P[x][i],y=P[y][i];
	return P[x][0];					
	
	
}
int main(){
	int t;
	cin>>t;
	while(t--){
		memset(P,0,sizeof(P));
		for(int i=0;i<MAXN;i++)
			lvl[i]=0,ds[i]=0,adj[i].resize(0),f[i]='#';
		int n;
		cin>>n;
		for(int i=0;i<n-1;i++){
			int u,v;char w;
			cin>>u>>v>>w;
			adj[u].pb(mp(v,w));
			adj[v].pb(mp(u,w));
			ds[i+1]=i+1;	
		}
		ds[n]=n;
		dfs(1,0);
		build();
		int m;
		cin>>m;
		while(m--){
			int type,a,b;
			char ww;
			cin>>type>>a>>b;
			if(type==1){
				int q=LCA(a,b);
				ans=0;
				if(q==a and q==b){
					cout<<ans<<endl;	
					continue;
				}
				if(q==a){
					lasta='$';
					get(2,b,q);	
				}
				else if(q==b){
					lastb='$';
					get(1,a,q);	
				}
				else{
					lasta=f[a];
					lastb=f[b];
					get(1,a,q);get(2,b,q);
				}
				if(lasta==lastb)
					ans--;
				cout<<ans<<endl;	
			}
			else{
				cin>>ww;
				if(P[a][0]==b){
					f[a]=ww;
					if(f[a]==f[b])
						ds[tap(a)]=tap(b);
					else
						ds[tap(a)]=tap(a);
				}
				else{
					f[b]=ww;	
					if(f[b]==f[a])
						ds[tap(b)]=tap(a);
					else
						ds[tap(b)]=tap(b);	
				}
			}
		}
	}
	return 0;
}
/*
1
7
1 2 a
1 3 a
2 4 a
2 5 b 
5 6 b
6 7 z
100
1 3 1
*/