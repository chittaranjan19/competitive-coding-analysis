import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.PriorityQueue;
import java.util.StringTokenizer;
import java.util.Vector;

public class Main implements Runnable {
    int calc(boolean[] a) {
        int n = a.length;
        int b1 = 0, b2 = 0;
        for (int i=0; i<n; i+=2) {
            b1 += a[i] ? 1 : 0;
        }
        for (int i=1; i<n; i+=2) {
            b2 += a[i] ? 0 : 1;
        }

        return Math.max(b1, b2);
    }

    void solve() throws IOException {
        int n = nextInt();
        boolean[] f = new boolean[n];
        String s = next();
        for (int i = 0; i < n; i++) {
            f[i] = s.charAt(i) == 'b';
        }
        int res = calc(f);
        for (int i = 0; i < n; i++) f[i] ^= true;
        res = Math.min(res, calc(f));
        out.print(res);
    }

    BufferedReader br;
    StringTokenizer st;
    PrintWriter out;

    public void run() {
        try {
            br = new BufferedReader(new InputStreamReader(System.in));
            out = new PrintWriter(System.out);

            solve();
            br.close();
            out.close();
        } catch (Exception e) {
            e.printStackTrace();
            System.exit(123);
        }
    }

    String next() throws IOException {
        while (st == null || !st.hasMoreTokens()) {
            String s = br.readLine();
            if (s == null)
                return null;
            st = new StringTokenizer(s);
        }
        return st.nextToken();
    }

    double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static void main(String[] args) {
        new Thread(new Main()).start();
    }
}
