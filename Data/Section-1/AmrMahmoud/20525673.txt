#include <bits/stdc++.h>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

double p[105];
double DP[105][105][130];
bool v[105][105][130];
int n, x;

double solve(int ind, int taken, int curr)
{
  if(taken < 0) return 0;
  if(ind == x + 1) return taken == 0 && curr == 0;
  double &temp = DP[ind][taken][curr];
  if(v[ind][taken][curr]) return temp;
  v[ind][taken][curr] = true;
  temp = solve(ind + 1, taken, curr) + solve(ind + 1, taken - 1, curr ^ ind) * p[ind];
  return temp;
}

double power(double a, int b)
{
  if(b == 0) return 1;
  double tmp = power(a, b / 2);
  tmp *= tmp;
  if(b & 1) tmp *= a;
  return tmp;
}

int main()
{
  cin >> n >> x;
  for(int i=0;i<=x;i++)
    scanf("%lf", &p[i]);
  double tmp = 0, sum = 0;
  for(int i=0;i<=x;i++)
    sum += p[i] * p[i];
  for(int i=min(x+1, n);i>=0;i--)
    if((n - i) % 2 == 0)
      tmp += solve(0, i, 0) * power(sum, (n - i) / 2);
  printf("%.15lf", 1 - tmp);
  return 0;
}
