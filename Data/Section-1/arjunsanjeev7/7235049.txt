#include <bits/stdc++.h>

using namespace std;

typedef long long int LL;

int arr[1000][1000],ans=1000000000,n;
string path;

int T(int n)
{
	int ret=0;
	while(n%2==0) {ret++; n/=2;}
	return ret;
}

int F(int n)
{
	int ret=0;
	while(n%5==0) {ret++; n/=5;}
	return ret;
}

void recurse(int r, int c, int two, int five, string p)
{
	int x;
	if(r==n || c==n) return;
	if(r==n-1 && c==n-1) 
	{
		two+=T(arr[r][c]);
		five+=F(arr[r][c]);
		x=min(two,five);
		if(x<ans) {ans=x; path=p;}
		return;
	}
	if(r!=n-1) recurse(r+1,c,two+T(arr[r][c]),five+F(arr[r][c]),p+'D');
	if(c!=n-1) recurse(r,c+1,two+T(arr[r][c]),five+F(arr[r][c]),p+'R');
}

int main()
{
	int i,j,num,x;
	cin>>n;
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			cin>>num;
			x=num;
			while(x%2==0) x/=2;
			while(x%5==0) x/=5;
			arr[i][j]=num/x;
		}
	}
	recurse(0,0,0,0,"");
	cout<<ans<<endl<<path<<endl;
	return 0;
}