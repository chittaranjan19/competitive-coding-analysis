#include <bits/stdc++.h>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int arr[1005];

int main()
{
  int n;
  scanf("%d", &n);
  string s;
  cin >> s;
  int curr = 0, mini = 0, last = 0, lh = 0;
  for(int i=0;i<n - 1;i++)
  {
    if(i && s[i] == 'L' && s[i - 1] == 'R')
    {
      arr[last] = lh - mini + 1;
      for(int j=last;j<i;j++)
      {
        arr[j + 1] = arr[j];
        if(s[j] == 'R') arr[j + 1]++;
        else if(s[j] == 'L') arr[j + 1]--;
      }
      mini = 0;
      curr = 0;
      lh = 0;
      last = i + 1;
    }
    else if(i && s[i] == 'R' && s[i - 1] == 'L')
    {
      arr[last] = lh - mini + 1;
      for(int j=last;j<i;j++)
      {
        arr[j + 1] = arr[j];
        if(s[j] == 'R') arr[j + 1]++;
        else if(s[j] == 'L') arr[j + 1]--;
      }
      curr = curr - mini;
      mini = 0;
      last = i + 1;
      curr++;
      lh = curr;
    }
    else if(s[i] == 'L') curr--;
    else if(s[i] == 'R') curr++;
    mini = min(mini, curr);
  }
  arr[last] = lh - mini + 1;
  for(int j=last;j<n - 1;j++)
  {
    arr[j + 1] = arr[j];
    if(s[j] == 'R') arr[j + 1]++;
    else if(s[j] == 'L') arr[j + 1]--;
  }
  for(int i=0;i<n;i++)
    printf("%d ", arr[i]);
  return 0;
}
