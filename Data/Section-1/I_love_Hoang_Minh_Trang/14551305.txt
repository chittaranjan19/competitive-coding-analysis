#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;
int f[MAXN][2];
int n, a[MAXN], b[MAXN], c[MAXN];
int duyet(int i, int k)
{
    if (i == n){
        if (k == 0) return a[i];
        else return b[i];
    }
    if (f[i][k] > -1) return f[i][k];
    int &res = f[i][k];
    res = 0;
    if (k == 0){
        res = max(res, duyet(i + 1, 1) + a[i]);
        res = max(res, duyet(i + 1, 0) + b[i]);
    }
    else{
        res = max(res, duyet(i + 1, 1) + b[i]);
        res = max(res, duyet(i + 1, 0) + c[i]);
    }
    return res;
}
int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("358D.inp", "r", stdin);
    freopen("358D.out", "w", stdout);
    #endif //MIKELHPDATKE
    memset(f, -1, sizeof(f));
    cin >> n;
    FORE(i, 1, n) cin >> a[i];
    FORE(i, 1, n) cin >> b[i];
    FORE(i, 1, n) cin >> c[i];
    cout << duyet(1, 0);
    return 0;
}

