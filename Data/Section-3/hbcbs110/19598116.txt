#include<iostream>
using namespace std;
struct Point
{
    int x,y;
    Point(){}
    Point(int _x,int _y)
    {
        x=_x;y=_y;
    }
    Point operator - (const Point b) const
    {
        return Point(x-b.x,y-b.y);
    }
    int operator * (const Point b) const
    {
        return x*b.x+y*b.y;
    }
    int operator ^ (const Point b) const
    {
        return x*b.y-y*b.x;
    }
};
bool jdg(Point a,Point b,Point c)
{
    if((a^b)==0) return 0;
    if((a*b)==0) return 1;
    if((b*c)==0) return 1;
    if((c*a)==0) return 1;
    return 0;
}
int srch(Point a,Point b,Point c)
{
    Point t;
    t=Point(a.x+1,a.y);
    if(jdg(t-b,b-c,c-t)) return 1;
    t=Point(a.x-1,a.y);
    if(jdg(t-b,b-c,c-t)) return 1;
    t=Point(a.x,a.y+1);
    if(jdg(t-b,b-c,c-t)) return 1;
    t=Point(a.x,a.y-1);
    if(jdg(t-b,b-c,c-t)) return 1;
    return 0;
}
int main()
{
    Point a,b,c;
    int i,aa;
    cin>>a.x>>a.y;
    cin>>b.x>>b.y;
    cin>>c.x>>c.y;
    if(jdg(a-b,b-c,c-a)) cout<<"RIGHT\n";
    else{
        aa=0;
        aa=max(aa,srch(a,b,c));
        aa=max(aa,srch(b,c,a));
        aa=max(aa,srch(c,a,b));
        if(aa) cout<<"ALMOST\n";
        else cout<<"NEITHER\n";
    }
    return 0;
}
