#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
typedef  long long int LL;

using namespace std;
int n,k;
const int N = 10000+5;
const int INF = ~0U>>1;
struct P
{
    LL x,y;
    bool f= 0;
    P(int x,int y ): x(x),y(y){}
    P(){}
    bool  operator < (const P & b) const
    {
        return x*y < b.x*b.y;
    }

    LL area()
    {
        return x*y;
    }
}a[N];

int main()
{
    while(scanf("%d",&n)==1)
    {
        for(int i = 0 ; i < n ; i++)
        {
            LL x,y;
            scanf("%I64d%I64d",&x,&y);
            if(x >y)
            {
                swap(x,y);
                a[i].f = 1;
            }
                a[i] = P(x,y);
        }
        sort(a,a+n);

        LL res = -INF;
        P p;
        for(int i = n - 1 ; i >= 0 ; i-- )
        {
            P t = a[i];
            for(int j = i+1 ; j < n ; j++)
            {
                t.x = min(t.x,a[j].x);
                t.y = min(t.y,a[j].y);
            }
//printf("tx:%I64d,ty:%I64d\n",t.x,t.y);
            if(t.area()*(n-i) > res)
            {
                p = t;
                res = t.area()*(n-i);
            }
        }

        printf("%I64d\n",res);
        printf("%I64d %I64d\n",p.x,p.y);
    }

    return 0;
}
