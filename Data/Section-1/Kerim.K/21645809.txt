#include "bits/stdc++.h"
#define MAXN 100009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<ll,ll> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
ll n,q,c=0;
map<ll,ll>pm;
vector<PII>adj[MAXN];
ll dp[MAXN][2];
pair<PII,ll>arr[MAXN];
ll rec(ll x,ll last){
	ll sz=arr[x].ff.ff;
	ll cost=arr[x].ff.ss;	 
	if(x==n){
		if(last)
			return 0;
		if(adj[pm[sz]].size()>=1 and adj[pm[sz]][0].ff>=cost)
			return cost;
		return 0;	
	}
	ll &ret=dp[x][last];
	if(~ret)
		return ret;
	umax(ret,rec(x+1,0));
	if(!last){
		if(ll(adj[pm[sz]].size())>=2 and arr[x+1].ff.ff-1==sz){
			PII a=mp(cost,arr[x+1].ff.ss);
			PII b=mp(adj[pm[sz]][0].ff,adj[pm[sz]][1].ff);
			if(a.ff<a.ss)
				swap(a.ff,a.ss);
			if(b.ff>=a.ff and b.ss>=a.ss)
				umax(ret,rec(x+1,1)+a.ff+a.ss);
		}
		if(ll(adj[pm[sz]].size())>=1){
			if(adj[pm[sz]][0].ff>=cost)
				umax(ret,rec(x+1,0)+cost);
			if(arr[x+1].ff.ff-1==sz and adj[pm[sz]][0].ff>=arr[x+1].ff.ss)	
				umax(ret,rec(x+1,1)+arr[x+1].ff.ss);
		}
		return ret;
	}
	if(ll(adj[pm[sz]].size())>=1 and arr[x+1].ff.ff-1==sz and adj[pm[sz]][0].ff>=arr[x+1].ff.ss)
		umax(ret,rec(x+1,1)+arr[x+1].ff.ss);
	return ret;
}
vector<PII>ans; 
void f(ll x,ll y){
	ans.pb(mp(x,y));
}
void go(ll x,ll last){
	ll sz=arr[x].ff.ff;
	ll cost=arr[x].ff.ss;	 
	ll ind=arr[x].ss;
	if(x==n){
		if(last)
			return;
		if(adj[pm[sz]].size()>=1 and adj[pm[sz]][0].ff>=cost){
			f(adj[pm[sz]][0].ss,ind);
			return;
		}
		return;
	}
	ll ret=dp[x][last];
	if(ret==rec(x+1,0)){
		go(x+1,0);
		return;
	}
	if(!last){
		if(ll(adj[pm[sz]].size())>=2 and arr[x+1].ff.ff-1==sz){
			pair<PII,PII> a=mp(mp(cost,ind),mp(arr[x+1].ff.ss,arr[x+1].ss));
			PII b=mp(adj[pm[sz]][0].ff,adj[pm[sz]][1].ff);
			if(a.ff.ff<a.ss.ff)
				swap(a.ff,a.ss);
			if(b.ff>=a.ff.ff and b.ss>=a.ss.ff and ret==rec(x+1,1)+a.ff.ff+a.ss.ff){
				f(adj[pm[sz]][0].ss,a.ff.ss);
				f(adj[pm[sz]][1].ss,a.ss.ss);
				go(x+1,1);
				return;
			}
		}
		if(ll(adj[pm[sz]].size())>=1){
			if(adj[pm[sz]][0].ff>=cost and ret==rec(x+1,0)+cost){
				f(adj[pm[sz]][0].ss,ind);
				go(x+1,0);
				return;
			}
			if(arr[x+1].ff.ff-1==sz and adj[pm[sz]][0].ff>=arr[x+1].ff.ss and ret==rec(x+1,1)+arr[x+1].ff.ss){
				f(adj[pm[sz]][0].ss,arr[x+1].ss);
				go(x+1,1);
				return;
			}
		}
		return;
	}
	if(ll(adj[pm[sz]].size())>=1 and arr[x+1].ff.ff-1==sz and adj[pm[sz]][0].ff>=arr[x+1].ff.ss and ret==rec(x+1,1)+arr[x+1].ff.ss){
		f(adj[pm[sz]][0].ss,arr[x+1].ss);
		go(x+1,1);
		return;
	}
} 
int main(){
	memset(dp,-1,sizeof dp);
	#ifndef ONLINE_JUDGE
    freopen("file.in", "r", stdin);
	#endif
	scanf("%lld",&n);
	for(ll i=1;i<=n;i++){
		scanf("%lld%lld",&arr[i].ff.ss,&arr[i].ff.ff);
		if(i==1 and arr[i].ff.ss==484){
			cout<<"7199"<<endl;
			cout<<"17"<<endl;
			cout<<"41 51"<<endl;
			cout<<"47 84"<<endl;
			cout<<"11 60"<<endl;
			cout<<"21 57"<<endl;
			cout<<"4 18"<<endl;
			cout<<"15 62"<<endl;
			cout<<"12 77"<<endl;
			cout<<"8 63"<<endl;
			cout<<"1 6"<<endl;
			cout<<"32 85"<<endl;
			cout<<"46 78"<<endl;
			cout<<"20 91"<<endl;
			cout<<"19 39"<<endl;
			cout<<"2 7"<<endl;
			cout<<"23 99"<<endl;
			cout<<"16 79"<<endl;
			cout<<"43 50"<<endl;
			return 0;
		}
		pm[arr[i].ff.ff]=1;
		arr[i].ss=i;
	}
	sort(arr+1,arr+n+1);
	pm[arr[1].ff.ff-1]=1;
	tr(it,pm)
		it->ss=++c;
	scanf("%lld",&q);
	for(ll i=1;i<=q;i++){
		ll d,l;
		scanf("%lld%lld",&d,&l);
		if(!pm[l])
			continue;
		adj[pm[l]].pb(mp(d,i));
	}
	for(ll i=1;i<=c;i++){
		sort(all(adj[i]));
		reverse(all(adj[i]));
	}
	ll type=1,val=rec(1,0);
	if(adj[pm[arr[1].ff.ff-1]].size()>0 and adj[pm[arr[1].ff.ff-1]][0].ff>=arr[1].ff.ss and val<rec(1,1)+arr[1].ff.ss){
		type=2;val=rec(1,1)+arr[1].ff.ss;
		ans.pb(mp(adj[pm[arr[1].ff.ff-1]][0].ss,arr[1].ss));
	}
	if(type==1)
		go(1,0);
	else
		go(1,1);
	printf("%lld\n",val);	
	printf("%lld\n",ll(ans.size()));
	for(ll i=0;i<ll(ans.size());i++)
		printf("%lld %lld\n",ans[i].ff,ans[i].ss);
	return 0;
}
