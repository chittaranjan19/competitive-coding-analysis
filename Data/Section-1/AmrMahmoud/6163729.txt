#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define PI acos(-1.0)
#define LL long long

using namespace std;

int mini[27][27],price=0;

void floydwarshall()
{
    for(int k = 0; k < 26; k++)
        for(int i = 0; i < 26; i++)
            for(int j = 0; j < 26; j++)
                if(mini[i][j] > mini[i][k] + mini[k][j] && mini[k][j] != -1 && mini[i][k] != -1)
                    mini[i][j] = mini[i][k] + mini[k][j];
    for(int i = 0;i < 26; i++)
        mini[i][i] = 0;
}

int main()
{
    string a,b;
    cin >> a >> b;
    int n,z;
    char x,y;
    scanf("%d",&n);
    getchar();
    for(int i=0;i<26;i++)
        for(int j=0;j<26;j++)
            mini[i][j] = -1;
    for(int i=0;i<n;i++)
    {
        scanf("%c %c",&x,&y);
        scanf("%d",&z);
        getchar();
        if(mini[x-'a'][y-'a'] == -1)
            mini[x-'a'][y-'a'] = z;
        else mini[x-'a'][y-'a'] = min(z,mini[x-'a'][y-'a']);
    }
    if(a.size() != b.size())
    {
        printf("-1");
        return 0;
    }
    floydwarshall();
    for(int i=0;i<a.size();i++)
        if(a[i] != b[i])
        {
            char res;
            int mi=INF_MAX,temp;
            for(int j = 0;j < 26;j++)
            {
                if(mini[a[i]-'a'][j] == -1 || mini[b[i]-'a'][j] == -1)
                    continue;
                temp = mini[a[i]-'a'][j] + mini[b[i]-'a'][j];
                if(temp < mi)
                {
                    mi = temp;
                    res = 'a' + j;
                }
            }
            if(mi == INF_MAX)
            {
                printf("-1");
                return 0;
            }
            price+=mi;
            a[i] = res;
        }
    cout << price << endl << a;
    return 0;
}