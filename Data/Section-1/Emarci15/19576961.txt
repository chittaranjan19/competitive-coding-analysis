#include <iostream>

using namespace std;

long long kci[1000001];

int maxN(int k, long long m) {
    long long b = m*k;

    int n(0);
    kci[0] = kci[k] = 1;
    for(int i=1; i<=k/2; i++) kci[i] = kci[k-i] = (kci[i-1]<1000000000ll) ? ((kci[i-1]*(k+1ll-i))/i) : 1000000000ll;

    for(int i=0; i<=k; i++) {
        int p = min(kci[i],(i)?(b/i):1000000000ll);
        n += p;
        b -= p*i;
    }

    return n;
}

int T;
int n,m;

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(NULL);

    for(cin >> T; T--;) {
        cin >> n >> m;

        int lb(0),ub(1000000);
        while(lb<ub) {
            int f((lb+ub)/2);

            if(maxN(f,m)>=n) {
                ub = f;
            } else lb = f+1;
        }

        cout << lb << endl;
    }

    return 0;
}
