#include <iostream>

using namespace std;

long long kci[1000001];

bool maxN(int k, long long m, int N) {
    long long b = m*k;

    long long n(0);
    kci[0] = 1;
    int j(0);
    for(int i=1; (i<=k-i) && (kci[i-1]<1000000000ll); i++,j++) kci[i] = (kci[i-1]<1000000000ll) ? ((kci[i-1]*(k+1ll-i))/i) : 1000000000ll;

    for(int i=0; i<=k; i++) {
        long long kchoosei = (i<=j) ? (kci[i]) : (((k-i)<=j) ? (kci[k-i]) : (1000000000ll));
        long long p = min(kchoosei,(i)?(b/i):1000000000ll);
        if(!p) break;
        n += p;
        b -= p*i;
        if(n>=N) return 1;
    }

    return 0;
}

int T;
int n,m;

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(NULL);

    for(cin >> T; T--;) {
        cin >> n >> m;

        int lb(0),ub(1000000000);
        while(lb<ub) {
            int f((lb+ub)/2);

            if(maxN(f,m,n)) {
                ub = f;
            } else lb = f+1;
        }

        cout << lb << endl;
    }

    return 0;
}
