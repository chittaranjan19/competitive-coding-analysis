# include <iostream>
# include <cstdlib>
# include <cstdio>
# include <cmath>
# include <algorithm>

using namespace std;

typedef long long int lli;

const int N = 200000;
lli m, A, d[N], sum, n, cf, cm, p, res, ans, val, answer, x, y, z;

struct elem
{
    lli x, i;
}a[N];

bool cmp1 (elem a, elem b)
{
    return a.x < b.x;
}

bool cmp2 (elem a, elem b)
{
    return a.i < b.i;
}

lli f (lli l, lli r)
{
    return l > 0 ? d[r] - d[l - 1] : d[r];
}

lli bs (lli L, lli R, lli m)
{
    lli M, res, ans;
    while (L <= R)
    {
        M = (L + R) / 2ll;
        res = (M + 1ll) * a[M].x - f (0ll, M);
        if (res <= m)
        {
            ans = M;
            L = M + 1ll;
        }
        else
            R = M - 1ll;
    }
    return ans;
}

int main ()
{
    cin >> n >> A >> cf >> cm >> m;

    for (int i = 0; i < n; ++i)
    {
        cin >> a[i].x;
        a[i].i = i;
    }

    sort (a, a + n, cmp1);

    d[0] = a[0].x;
    for (int i = 1; i < n; ++i)
        d[i] = d[i - 1] + a[i].x;

    if (n * A <= m + d[n - 1])
    {
        cout << A * cm + n * cf << "\n";
        for (int i = 0; i < n; ++i)
            cout << A << " ";
        cout << "\n";
        return 0;
    }

    while (n > p && a[n - p - 1].x == A) ++p;

    for (int i = p; i < n; ++i)
    {
        sum = i * A - f (n - i, n - 1ll);
        if (sum > m) break;
        sum = m - sum;
        res = bs (0ll, n - i - 1ll, sum);
        val = min (A - a[res].x, (sum - a[res].x * (res + 1ll) + f (0ll, res)) / (res + 1));
        ans = cm * (a[res].x + val) + i * cf;
        if (ans > answer)
        {
            answer = ans;
            x = res;
            y = val;
            z = i;
        }
    }

    for (int i = 0; i <= x; ++i)
        a[i].x = a[x].x + y;

    for (int i = n - z; i < n; ++i)
        a[i].x = A;

    sort (a, a + n, cmp2);

    cout << answer << "\n";

    for (int i = 0; i < n; ++i)
        cout << a[i].x << " ";

    cout << "\n";

    return 0;
}


