#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 505;
const int INF = 1e9 + 7;

using namespace std;
int m, n;
int a[MAXN][MAXN];
char ch;
int R[MAXN][MAXN], D[MAXN][MAXN];

int calc(int x1, int y1, int x2, int y2)
{
    int ans = 0;
    FORE(x, x1, x2) ans += R[x][y2] - R[x][y1];
    FORE(y, y1, y2) ans += D[x2][y] - D[x1][y];
    return ans;
}

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("C.inp", "r", stdin);
    freopen("C.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> m >> n;
    FORE(i, 1, m) FORE(j, 1, n){
        cin >> ch;
        if (ch == '.') a[i][j] = 0; else a[i][j] = 1;
    }
    //cout<<"wtf"<<endl;
    //FORE(i, 1, m) FORE(j, 1, n) cout << a[i][j]<<(j == n ? "\n" : " ");
    FORE(i, 1, m){
        int d = (a[i][1] == 0 ? 1 : 0);
        R[i][1] = 0;
        FORE(k, 2, n){
            if (a[i][k] == 0) d++; else d = 0;
            //if (i == 2 && j == 1 && k == 2) cout << d<<"wtff"<<k - j<<endl;
            R[i][k] = R[i][k - 1] + (d >= 2);
        }
    }
    FORE(j, 1, n){
        int d = (a[1][j] == 0 ? 1 : 0);
        D[1][j]= 0;
        FORE(k, 2, m){
            if (a[k][j] == 0) d++; else d = 0;
            D[k][j] = D[k - 1][j] + (d >= 2);
        }
    }

    int q;
    cin >> q;
    while (q--){
        int x1, y1, x2, y2;
        cin >> x1 >> y1 >> x2 >> y2;
        cout << calc(x1, y1, x2, y2) << endl;
    }
    return 0;
}

