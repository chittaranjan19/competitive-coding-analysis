#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<string>
#include<queue>
#include<vector>
#include<map>
#define lowbit(x) ((x)&(-x))
#define Max(a,b) (a>b?a:b)
#define Min(a,b) (a>b?b:a)
#define lron(x)  ((x) << 1)
#define rson(x) ((x)<<1|1)
#define dad(x) ((x)>>1)
#define INF 0x3f3f3f3f
#define rep(i,a,b) for(int i=a;i<(b);++i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define pb push_back
#define de(x) cout << #x << "=" << x << endl
using namespace std;
typedef __int64 ll;
int const Max_N = 1e5+5;
ll arr[Max_N] = {0};
ll pow[33] = {1};
void  init()
{
	memset(arr,INF,sizeof(INF));
	for(int i = 1; i < 33; i++)
	{
		pow[i] = pow[i-1]*2;
		//	cout << i << ' ' << pow[i] << endl;
	}
}
int main()
{
	init();
	int N;
	scanf("%d",&N);
	for (int i = 0; i < N; i++)
	{
		scanf("%I64d",arr+i);
	}
	sort(arr,arr+N);
	int t1 = 0;
	int t2 = t1;
	while(pow[t2] < arr[N-1]*2) t2++;

	int cnt = 0;
	for (int i = 0; i < N; i++)
	{
		while(pow[t1]<arr[i]*2)t1++;
		int j = t1;
		while(j<t2+1)
		{
			ll num = pow[j] - arr[i];
			int tt1 = upper_bound(arr,arr+N,num) - arr;
			int tt2 = lower_bound(arr,arr+N,num) - arr;
			
			cnt += tt1 - Max(tt2,i+1);
			j++; 
		}
	}
	printf("%d\n",cnt);
	return 0;
}

