#include <iostream>

using namespace std;

long long m,h,a,x,y;
long long t[2][1000000];
long long p[2];

long long a1,a2;

void sol(int ti) {
    int tt = 0;
    for(;;) {
        if(t[ti][h] != -1) {
            p[ti] = t[ti][h];
            return;
        }
        t[ti][h] = tt++;

        h = (h*x + y) % m;
    }
}

long long gcd(long long aa, long long bb) {
    if(aa<bb) swap(aa,bb);
    if(!bb) return aa;
    return gcd(bb,aa%bb);
}

int main()
{

    cin >> m;
    fill(&t[0][0],&t[0][m],-1ll);
    fill(&t[1][0],&t[1][m],-1ll);
    cin >> h >> a;
    cin >> x >> y;
    a1 = a;
    sol(0);
    cin >> h >> a;
    cin >> x >> y;
    a2 = a;
    sol(1);

    if( (t[0][a1] < 0) || (t[1][a2] < 0) ) {
        cout << -1 << endl;
        return 0;
    }

    long long p1 = t[0][a1] - p[0];
    long long p2 = t[1][a2] - p[1];

    if((p[0]>0) || (p[1]>0)) return 101;

    if(t[0][a1] < p[0]) {
        if(t[1][a2] < p[1]) {
            if(t[0][a1] == t[1][a2]) {
                cout << t[0][a1] << endl;
            } else cout << -1 << endl;
            return 0;
        } else {
            if((t[0][a1]>=p[1]) && (!((t[0][a1]-p[1])%p2))) {
                cout << t[0][a1] << endl;
            } else cout << -1 << endl;
            return 0;
        }
    }
    if(t[1][a2] < p[1]) {
        if((t[1][a2]>=p[0]) && (!((t[1][a2]-p[0])%p1))) {
            cout << t[1][a2] << endl;
        } else cout << -1 << endl;
        return 0;
    }

    long long ggcd = gcd(t[0][a1],t[1][a2]);

    long long sol = (t[0][a1]*t[1][a2])/ggcd;

    cout << sol << endl;

    return 0;
}
