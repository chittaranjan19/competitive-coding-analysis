#include <iostream>

using namespace std;

int n;
int m,k;

int dp[5001][5000][2];

int a[5001];

int mk(int mm, int kk) {
    return (((mm-1)*k) + kk);
}

int ddp(int nn, int mm, int kk, bool cont) {
    if(!(mm && kk)) return 0;
    return dp[nn][mk(mm,kk)][cont];
}

int main()
{
    cin >> n >> m >> k;

    for(int i=1; i<=n; i++) {
        cin >> a[i];
    }

    int sol = 0;
    for(int i=1; i<=n; i++) {
        sol = 0;
        for(int j=1; j<=min(m,n); j++) {
            int mm = j;
            for(int l=1; l<=min(k,n); l++) {
                int kk = l;
                dp[i][mk(j,l)][0] = max(dp[i-1][mk(mm,kk)][0], dp[i-1][mk(mm,kk)][0]);
                dp[i][mk(j,l)][1] = a[i]+max(ddp(i-1,mm-1,kk,1), ddp(i-1,mm-1,kk-1,0));
                sol = max(sol,max(dp[i][mk(j,l)][0],dp[i][mk(j,l)][1]));
            }
        }
    }

    cout << sol << endl;

    return 0;
}
