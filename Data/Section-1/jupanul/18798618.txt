#include <queue>
#include <vector>
#include <set>

#include <algorithm>
#include <fstream>
#include <iostream>
using namespace std;
const int MAX_N = 505;

int a[MAX_N];
bool dp[MAX_N][MAX_N];
vector<int> g[MAX_N];

int main() {
    int n, k;
    cin >> n >> k;
    for (int i = 1; i <= n; ++ i) {
        cin >> a[i];
    }
    for (int i = 0; i <= k; ++ i) {
        dp[0][0] = 1;
    }
    for (int i = 1; i <= n; ++ i) {
        for (int j = k - a[i]; j >= 0; -- j) {
            for (int sum2 = 0; sum2 <= j; sum2 += 1) {
                if (dp[j][sum2]) {
                    dp[j + a[i]][sum2 + a[i]] = true;
                    dp[j + a[i]][sum2] = true;
                }
            }
        }
    }
    vector<int> v;
    for (int i = 0; i <= k; ++ i) {
        if (dp[k][i]) {
            v.push_back(i);   
        }
    }
    bool space = false;
    cout << v.size() << "\n";
    for (auto x : v) {
        if (space) {
            cout << " ";
        } else {
            space = true;
        }
        cout << x;
    }
    return 0;
}