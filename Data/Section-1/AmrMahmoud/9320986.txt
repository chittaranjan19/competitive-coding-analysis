#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int arr[305];
bool can[305][305];
bool v[305];
int ind[305];
vector<vector<int> > graph(305);

int dfs(int node, int s)
{
    if(v[node] || node < s) return 2000;
    v[node] = 1;
    int temp = ind[node];
    int res = temp;
    for(int i=0;i<graph[temp].size();i++)
    {
        res = min(res, dfs(arr[graph[temp][i]], s));
    }
    return res;
}
vector<int> swapper;
bool dfs2(int node, int dis, int in)
{
    if(v[node] || arr[node] < arr[in]) return 0;
    v[node] = 1;
    if(node == dis){
            swapper.push_back(node);
        return 1;}
    for(int i=0;i<graph[node].size();i++)
    {
        if(dfs2(graph[node][i], dis, in))
            {
                swapper.push_back(node);
                return 1;
            }
    }
    return 0;
}

int main()
{
    ios_base::sync_with_stdio(0);
    int n;
    cin >> n;
    for(int i=0;i<n;i++)
        cin >> arr[i], ind[arr[i]] = i;
    string s;
    for(int i=0;i<n;i++)
    {
        cin >> s;
        for(int j=0;j<s.size();j++)
        {
            if(s[j] == '1')
                can[i][j] = 1,graph[i].pb(j);
        }
    }
    for(int i=0;i<n;i++)
    {
        swapper.clear();
        setzero(v);
        int t = dfs(i + 1, i + 1);
        setzero(v);
        dfs2(ind[i+1], t, ind[i+1]);
        for(int j=swapper.size()-1;j>0;j--)
            swap(arr[swapper[j]], arr[swapper[j-1]]);
        for(int j=0;j<n;j++)
            ind[arr[j]] = j;
       // for(int i=0;i<n;i++)
       // cout << arr[i] << " ";
       // cout << endl;
    }
    for(int i=0;i<n;i++)
        cout << arr[i] << " ";
    return 0;
}
