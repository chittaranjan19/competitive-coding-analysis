#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 2e5 + 10, lg = 20;
ll mod = 1e9 + 7;

ll gcd(ll a, ll b) {
	return b ? gcd(b, a % b) : a;
}

ll _gcd(ll a, ll b, ll & x, ll & y) {
	if (a == 0) {
		x = 0; y = 1;
		return b;
	}
	ll _x1, _y1;
	ll d = _gcd(b%a, a, _x1, _y1);
	x = _y1 - (b / a) * _x1;
	y = _x1;
	return d;
}

ll binpow(ll a, ll n) {
	ll res = 1;
	while (n) {
		if (n & 1)
			res *= a;
		a *= a;
		n >>= 1;
		a %= mod;
		res %= mod;
	}
	return res;
}

ll n, m;

map<char, int > del[N];
int ans[N];

int main()
{
	cin >> n;
	string s;
	cin >> s;


	set<char> st;
	set<char>::iterator it;
	for (int i = 0; i < n; i++){
		st.insert(s[i]);
	}
	for (int i = 0; i < n; i++){
		for (it = st.begin(); it != st.end(); it++){
			del[i][*it] = 1e9;
		}
	}

	map<char, int> prv;
	for (it = st.begin(); it != st.end(); it++)
		prv[*it] = -1e9;

	for (int i = 0; i < n; i++){
		char c = s[i];
		prv[c] = i;
		int mx = 0;
		for (it = st.begin(); it != st.end(); it++){
			del[i][*it] = min(del[i][*it], abs(i - prv[*it]) + 1);
			mx = max(mx, del[i][*it]);
		}
	}
	int ans = n;
	for (it = st.begin(); it != st.end(); it++)
		prv[*it] = +1e9;
	for (int i = 0; i < n; i++){
		char c = s[i];
		prv[c] = i;
		int mx = 0;
		for (it = st.begin(); it != st.end(); it++){
			del[i][*it] = min(del[i][*it], abs(i - prv[*it]) + 1);
			mx = max(mx, del[i][*it]);
		}
		ans = min(ans, mx);
	}

	cout << ans;
	return 0;
}