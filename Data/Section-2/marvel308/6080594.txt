#include<stdio.h>
#include<vector>
#include<queue>

using namespace std;
#define pp pair<int,int>;
struct A
{
    int a,b;
};
class priortise
{
public:
    bool operator()(const struct A& x,struct A& y)
    {
        return x.b>y.b;
    }
};
int main()
{
    priority_queue<struct A, vector<struct A > ,priortise > q;
    int n,k,i,dist[100005]={0},child[100050]={0};
    scanf("%d%d",&n,&k);
    for(i=1;i<=n;i++)
    {
        int d;
        scanf("%d",&d);
        struct A temp;
        temp.a=i;
        temp.b=d;
        q.push(temp);
        dist[i]=d;
    }
    int edge=0;
    queue<int> qu;
    vector<int > v[100050];
    while(!q.empty())
    {
        struct A temp=q.top();
        q.pop();
        int x=temp.a;
        int y=temp.b;
        qu.push(x);
        if(y!=0)
        {
            if(child[qu.front()]==k)
                qu.pop();
            v[qu.front()].push_back(x);
            child[qu.front()]++;
            if(child[qu.front()]>k||dist[qu.front()]<=dist[x])
            {
                printf("-1\n");
                return 0;
            }

            edge++;
            //printf("%d %d\n",qu.front(),x);
        }
    }
    if(edge==0)
    {
        printf("-1");
        return 0;
    }
    printf("%d\n",edge);
    for(i=1;i<=n;i++)
    {
        for(int j=0;j<v[i].size();j++)
        {
            printf("%d %d\n",i,v[i][j]);
        }
    }
    return 0;
}
