#include <iostream>
#include <vector>
#include <queue>

using namespace std;

int n,m,o,p,f,d,count = 0;
char arr[1001][1001];
int dis[1001][1001];
bool mark[1001][1001];
int dx[4]={0,0,-1,1};
int dy[4]={-1,1,0,0};
queue <pair <int ,int> > q;
pair <int ,int> tmp;

bool isav(int x,int y){
    return ( 0 <= x && x < n && 0 <= y && y < m );
}

void bfs(int x,int y){
    int l,k;
    dis[x][y] = 0;
    tmp.first = x;
    tmp.second = y;
    q.push(tmp);
    while(!q.empty()){
        for(int i=0;i<4;i++){
            l=x+dx[i];
            k=y+dy[i];
            if(isav(l,k) && dis[l][k] == -1 && arr[q.front().first][q.front().second] != 'T'){
                dis[l][k] = dis[q.front().first][q.front().second] + 1;
                tmp.first = l;
                tmp.second = k;
                q.push(tmp);
            }
        }
        q.pop();
    }
}

int main(){
    cin >> n >> m;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            cin >> arr[i][j];
            dis[i][j]=-1;
            if(arr[i][j] == 'E'){
                o=i;
                p=j;
            }
            if(arr[i][j] == 'S'){
                f=i;
                d=j;
            }
        }
    }
    bfs(o,p);
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(arr[i][j] != 'T' && arr[i][j] != 'E' && arr[i][j] != 'S' && dis[i][j] <= dis[f][d]){
                count += arr[i][j]-'0';
            }
        }
    }
    cout << count << endl;
    return 0;
}
