#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <unordered_set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int MAX_N = 1000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

int main()
{
	//ifstream ifs("input.in");
	//ofstream ofs("output.out");
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int n, p;
	cin >> n;
	int s = 0;
	map<int, int> m;
	vector<pair<int, int> > ans;
	for (int i = 0; i < n; i++)
	{
		cin >> p;
		if (m.find(p) != m.end())
		{
			ans.push_back(make_pair(s, i));
			m.clear();
			s = i + 1;
		}
		else
			m[p] = 1;
	}
	if (s < n)
	{
		if (ans.size() == 0)
		{
			cout << -1;
			return 0;
		}
		else
			ans[ans.size() - 1].second = n - 1;
	}
	cout << ans.size() << endl;
	for (int i = 0; i < ans.size(); i++)
		cout << ans[i].first + 1 << " " << ans[i].second + 1 << endl;
	return 0;
}