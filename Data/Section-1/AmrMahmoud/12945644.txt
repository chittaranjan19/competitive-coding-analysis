#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int gcd(int a, int b)
{
  if(!b) return a;
  return gcd(b, a % b);
}

struct point_a
{
  int x, y, ind, g;

  point_a(int a,int b, int c): x(a), y(b), ind(c)
  {
    g = x - y;
  };

  point_a(){};

  bool operator < (const point_a &tmp) const
  {
    if(g == tmp.g)
    {
      if(x == tmp.x) return y < tmp.y;
      return x < tmp.x;
    }
    return g < tmp.g;
  }
};

struct point_b
{
  int x, y, ind, g;

  point_b(int a,int b, int c): x(a), y(b), ind(c)
  {
    g = y - x;
  };

  point_b(){};

  bool operator < (const point_b &tmp) const
  {
    if(g == tmp.g)
    {
      if(x == tmp.x) return y < tmp.y;
      return x < tmp.x;
    }
    return g < tmp.g;
  }
};


int n;
point_a arr[1000005];
point_b arr2[1000005];

int main()
{
  int x, y;
  scanf("%d", &n);
  for(int i=0;i<n;i++)
  {
    scanf("%d %d", &x, &y);
    arr[i] = point_a(x, y, i + 1);
    arr2[i] = point_b(x, y, i + 1);
  }
  sort(arr, arr + n);
  LL res = 0;
  for(int i=1;i<n;i++)
  {
    res += abs(arr[i].x - arr[i - 1].x);
    res += abs(arr[i].y - arr[i - 1].y);
  }
  if(res > 2500000000LL)
  {
    sort(arr2, arr2 + n);
    for(int i=0;i<n;i++)
      printf("%d ", arr2[i].ind);
    return 0;
  }
  for(int i=0;i<n;i++)
    printf("%d ", arr[i].ind);
  return 0;
}
