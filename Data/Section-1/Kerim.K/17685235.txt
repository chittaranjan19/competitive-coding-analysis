#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN];
int n,b,k,x,h;
struct matris{
	int m[109];
	void init(){
		memset(m,0,sizeof(m));	
	}
	void mul(matris g,matris f){
		for(int i=0;i<x;i++)
			for(int j=0;j<x;j++)
				m[(i*10+j)%x]=(m[(i*10+j)%x]+(g.m[i]*f.m[j]*1LL)%INF)%INF;		
	}
}tmp;
matris bmod(matris f,int z){
	matris ret;
	ret.init();
	if(!z)
		return ret;
	if(z==1)
		return f;	
	matris aux=bmod(f,z/2);
	ret.mul(aux,aux);
	if(z&1){
		matris rec=ret;
		ret.init();
		ret.mul(rec,f);
	}
	return ret;		
}
int main(){
	scanf("%d%d%d%d",&n,&b,&k,&x);
	tmp.init();
	for(int i=1;i<=n;i++){
		scanf("%d",&h);
		tmp.m[h%x]++;
	}
	printf("%d\n",bmod(tmp,b).m[k]);
	return 0;
}
//LooK aT mY COde ONlinE +_+
