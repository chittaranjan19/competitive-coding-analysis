#include <iostream>
#include <vector>
#include <cstdio>
using namespace std;

int n, r[1000010], s[1000010];
bool ans[1000010], used[1000010], us[1000010];
vector < pair <int, int> > vt[1000010];
pair <int, int> wt[1000010];



inline void dfs_s(int v)
{
	//cout << "---" << v << endl;
	if(vt[v].size() == 1 && v != 1)
	{
		s[v] = 1;
		return;
	}
	for(int i = 0; i < vt[v].size(); i++)
	{
		if(us[vt[v][i].first] != 1)
		{
			us[vt[v][i].first] = 1;
			dfs_s(vt[v][i].first);
			s[v] += s[vt[v][i].first];
		}
	}
}




inline void dfs(int v)
{
	//cout << "---" << v << endl;
	if(wt[v].first > r[v])
	{
		//cout << v << endl;
		//cout << r[v] << " " << wt[v].first << endl;
		ans[v] = 1;	
		return;
	}

	for(int i = 0; i < vt[v].size(); i++)
	{
		if(used[vt[v][i].first] == 0)
		{
			used[vt[v][i].first] = 1;
			if(wt[v].first > 0)
			{
				if(wt[v].first + vt[v][i].second > 0)
				{
					wt[vt[v][i].first].first = wt[v].first + vt[v][i].second;
			    	//wt[vt[i].first].second = wt[v].second;
				}
				else
				{
					wt[vt[v][i].first].first = 0;
					//wt[vt[i].first].second = vt[i].first;
				}
			}
			else
			{
				if(vt[v][i].second > 0)
				{
					wt[vt[v][i].first].first = vt[v][i].second;
		    		//wt[vt[i].first].second = v;
				}
				else
				{
					wt[vt[v][i].first].first = 0;
					//wt[vt[i].first].second = vt[i].first;
				}
			}

			dfs(vt[v][i].first);
		}
	}
}



int main()
{
	//freopen("c.in", "r", stdin);
	//freopen("c.out", "w", stdout);
	cin >> n;                                	
	for(int i = 1; i <= n; i++)
	{
	    s[i] = 1;
		cin >> r[i];
	}
	

	int to, w;
	pair <int, int> p;
	for(int i = 2; i <= n; i++)
	{
		cin >> to >> w;
		p.first = to;
		p.second = w;
		vt[i].push_back(p);
		p.first = i; 
		vt[to].push_back(p);
	}
	wt[1].first = 0;
	wt[1].second = 1;
	used[1] = 1;
	us[1] = 1;
	dfs_s(1);
	//for(int i = 1; i <= n; i++)
	//	cout << s[i] << "+++" << endl;


	dfs(1);
	int cnt = 0;
	for(int i = 1; i <= n; i++)
	{
		if(ans[i] == 1)
		{
			cnt += s[i];
			//cout << i << endl;
		}
	}

	cout << cnt;



	return 0;
}
