#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

vector<int> g[100005];
int cnt[100005], DP[100005];

int main()
{
  //freopen("aerodynamics.in", "r", stdin);
  //freopen("aerodynamics.out", "w", stdout);
  int n, m, x, y;
  cin >> n >> m;
  for(int i=0;i<m;i++)
  {
    scanf("%d %d", &x, &y);
    x--, y--;
    cnt[x]++, cnt[y]++;
    g[x].pb(y);
    g[y].pb(x);
  }
  LL res = 0;
  for(int i=0;i<n;i++)
  {
    DP[i] = 1;
    for(int j=0;j<g[i].size();j++)
    {
      x = g[i][j];
      if(x >= i) continue;
      DP[i] = max(DP[i], DP[x] + 1);
    }
    res = max(res, DP[i] * 1LL * cnt[i]);
  }
  cout << res;
  return 0;
}
