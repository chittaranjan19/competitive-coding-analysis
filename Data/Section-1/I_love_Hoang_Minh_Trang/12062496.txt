const   maxn    =trunc(1e5)*2;

type    arr1    =array[0..maxn] of longint;
        arr2    =array[0..maxn,0..30] of longint;

var     n       :longint;
        a       :arr1;
        x       :arr2;
        top     :arr1;
        i  ,j , k    :longint;
        y       :arr1;
        tmp     :longint;
        ans     :longint;
        ok      :boolean;
         sum    :longint;

begin
        readln(n);
        for i:=1 to n do read(a[i]);
        for i:=1 to n do
        begin
                tmp:=a[i];
                top[i]:=0;
                while tmp>0 do
                begin
                        inc(top[i]);
                        x[i,top[i]]:=tmp mod 2;
                        tmp:=tmp div 2;
                end;
                for j:=1 to top[i] do y[j]:=x[i,top[i]-j+1];
                for j:=1 to top[i] do x[i,j]:=y[j];
        end;
        {
        for i:=1 to n do
        begin
                for j:=1 to top[i] do write(x[i,j]);
                writeln;
        end;
        }
        ans:=12345678;
        for k:=1 to 30 do
        begin
                ok:=true;

                for i:=2 to n do
                        if not ok then break else
                        for j:=1 to k do
                                if x[i,j]<>x[i-1,j] then
                                begin
                                        ok:=false;
                                        break;

                             end;
                if ok then
                begin
                        sum:=0;
                        for i:=1 to n do
                                inc(sum,abs(top[i]-k));
                        if sum<ans then ans:=sum;
                end;
        end;
        writeln(ans);
end.