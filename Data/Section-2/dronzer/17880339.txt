#include <bits/stdc++.h>

#define forn(i, n) for (int i = 0; i < int(n); i++)
#define lli long long
#define mp make_pair
#define pi pair<int,int>
#define pli pair<lli,lli>
#define pb push_back
#define x first
#define y second
#define si(n) scanf("%d",&n)
#define slli(n) scanf("%lld",&n);
#define ss(n) scanf("%s",n);

const double EPS = 1e-24;
const lli mod = 1000000007ll;
const lli mod1 = 1000000009ll;
const lli mod2 = 1100000009ll;
const double PI = 3.14159265359;
int INF = 2147483645;
lli INFINF = 9223372036854775807;

template <class T>T Max2(T a,T b){return a<b?b:a;}
template <class T>T Min2(T a,T b){return a<b?a:b;}
template <class T>T Max3(T a,T b,T c){return Max2(Max2(a,b),c);}
template <class T>T Min3(T a,T b,T c){return Min2(Min2(a,b),c);}
template <class T>T Max4(T a,T b,T c,T d){return Max2(Max2(a,b),Max2(c,d));}
template <class T>T Min4(T a,T b,T c,T d){return Min2(Min2(a,b),Max2(c,d));}

using namespace std;
lli bit_count(lli _x){lli _ret=0;while(_x){if(_x%2==1)_ret++;_x/=2;}return _ret;}
lli bit(lli _mask,lli _i){return (_mask&(1<<_i))==0?0:1;}
lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}
lli add(lli a,lli b,lli m){lli x=a+b;while(x>=m)x-=m;return x;}
lli sub(lli a,lli b,lli m){lli x=a-b;while(x<0)x+=m;return x;}
lli mul(lli a,lli b,lli m){lli x=a*b;x%=m;return x;}

pi operator - (pi A,pi B) { return mp(A.x-B.x,A.y-B.y); }
lli operator * (pi A,pi B) { return A.x*B.y-A.y*B.x; }
typedef vector< int > vi;
typedef vector< vi > vvi;
int main()
{
ios::sync_with_stdio(false);	
cin.tie(NULL);
char s[100];
int flg=0;
int p=1,m=0,a,b,n=0;
cin.getline(s,100);
int l = strlen(s);
for(int i=0;i<l;i++){
	if(s[i] == '+')
		p++;
	else if(s[i] == '-')
		m++;
}
int u=1,j=1;
while(s[l-j] - '0' < 10 && s[l-j] >= '0'){
	n+=(s[l-j]-'0')*u;
	u*=10;
	j++;
}
for(int i=n;i<=n*p;i++){
		if(i - n >= m && (i-n) <= m*n)
		{
			flg = 1;
			a = i;
			b = i-n;
			break;
		}
	}
vi pos(p,1),neg(m,1);
if(flg == 1){
	a -= p;
	 j=0; 
	while(j<p && a>0){
		if(a > n-1){
			pos[j] = n;
			a -= n-1;
			j++;
		}
		else{
			pos[j] += a;
			a = 0;
		}
	}
	b -= m;
	j = 0;
	while(j<m && b>0){
		if(b > n-1){
			neg[j] = n;
			b -= n-1;
			j++;
		}
		else{
			neg[j] += b;
			b = 0;
		}
	}/*
forn(i,p) cout<<pos[i]<<" ";
forn(i,m) cout<<neg[i]<<" ";*/
cout<<"Possible"<<endl;
j = 1;
int k =0; 
cout<<pos[0]<<" ";
for(int i =2;i<l;i++){
	if(s[i] == '?'){
	if(s[i-2] == '+' ){
		cout<<pos[j];
		j++;
	}
	else {
		cout<<neg[k];
		k++;
	}
}
else
	cout<<s[i];
}
}
else
	cout<<"Impossible";
}
  
           
