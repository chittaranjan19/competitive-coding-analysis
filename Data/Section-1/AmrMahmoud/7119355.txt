#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

LL arr[100005];

LL power(LL a, LL b)
{
    if(b == 0)
        return 1;
    if(b == 1)
        return a;
    if(b % 2 == 0)
    {
        LL temp = power(a,b/2) % mod;
        return (temp * temp) % mod;
    }
    return (a * power(a,b-1)%mod) % mod;
}

int main()
{
    LL n,x;
    cin >> n >> x;
    LL sum = 0,res=0;
    for(int i=0;i<n;i++)
        scanf("%I64d",&arr[i]),sum+=arr[i];
    for(int i=0;i<n;i++)
        arr[i] = sum - arr[i];
    LL a = INF_LL;
    for(int i=0;i<n;i++)
        a = min(a,arr[i]);
    res+=a;
    sum-= a;
    for(int i=0;i<n;i++)
        arr[i]-=a;
    while(sum != 0)
    {
        LL b = 0,temp = x,counter=1;
        bool start = false,unzero = false;
        for(int i=0;i<n;i++)
        {
            if(arr[i] == 0)
            {
                b++;
                if(start)
                    arr[i] = -1;
                else start = true;
            }
            if(arr[i] > 0)
                unzero = true;
        }
        if(!unzero)
        {
            counter = 0;
            while(b % x == 0)
                counter++,b/=x;
            res+=min(counter,sum);
            break;
        }
        while(temp < b)
            temp*=x,counter++;
        if(temp != b)
            break;
        bool fail = false;
        for(int i=0;i<n;i++)
        {
            if(arr[i] > 0)
            {
                arr[i]-=counter;
                if(arr[i] < 0)
                {
                    fail = true;
                    break;
                }
            }
        }
        if(fail)
            break;
        if(sum < counter)
        {
            res+= sum;
            break;
        }
        sum-=counter;
        res+=counter;
    }
    printf("%I64d",power(x,res));
    return 0;
}