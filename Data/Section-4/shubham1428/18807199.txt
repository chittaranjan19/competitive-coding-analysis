#include <bits/stdc++.h>
using namespace std;
vector<int>v[100005];
int colorArr[100005],n;
bool isBipartite(int src)
{
    for (int i = 0; i <=100004; ++i)
        colorArr[i] = -1;
    colorArr[src] = 1;
    queue <int> q;
    q.push(src);
    while (!q.empty())
    {
        int u = q.front();
        q.pop();
        for (int i = 0; i < v[u].size();i++)
        {
            if (colorArr[v[u][i]] == -1)
            {
                colorArr[v[u][i]] = 1 - colorArr[u];
                q.push(v[u][i]);
            }
            else if (colorArr[v[u][i]] == colorArr[u])
                return false;
        }
    }
    return true;
}
int main()
{
    int n,m,i,a,b;
    scanf("%d%d",&n,&m);
	for(i=1;i<=m;i++)
	{
		scanf("%d%d",&a,&b);
		v[a].push_back(b);
		v[b].push_back(a);
	}
	//cout<<isBipartite(a)<<endl; 
    	if(isBipartite(a))
	{
        int one=0,two=0;
                for(i=1;i<=n;i++)
                {
                       
                                if(colorArr[i]==1)one++;
                                else if(!colorArr[i])two++;
                }
                printf("%d\n",one);
                for(i=1;i<=n;i++)
                        if(colorArr[i]==1)
                                printf("%d ",i);
                printf("\n%d\n",two);
                for(i=1;i<=n;i++)
                        if(colorArr[i]==0)
                                printf("%d ",i);
                printf("\n");

	}
	else printf("-1\n");
    return 0;
}
