#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define lgN 16
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int suf[lgN][MAXN],c[MAXN],sorted[MAXN],n,k,arr[MAXN],dp[MAXN],from[MAXN],way[MAXN];
PII C[MAXN];
string gr,tre[MAXN];
char s[MAXN];
bool cmp(int x,int y){
	return (C[x]<C[y]);
}
int f1(int l,int r,int ind){
	while(l<r){
		int mid=(l+r)>>1;
		if(sorted[mid]+ind-1<=n and s[sorted[mid]+ind-1]>=gr[ind])
			r=mid;
		else
			l=mid+1;	
	}
	if(sorted[l]+ind-1<=n and s[sorted[l]+ind-1]>=gr[ind])
		return l;
	return -1;	
}
int f2(int l,int r,int ind){
	while(l+1<r){
		int mid=(l+r)>>1;
		if(sorted[mid]+ind-1<=n and s[sorted[mid]+ind-1]<=gr[ind])
			l=mid;
		else
			r=mid-1;	
	}
	if(sorted[r]+ind-1<=n and s[sorted[r]+ind-1]<=gr[ind])
		l=r;
	if(sorted[l]+ind-1<=n and s[sorted[l]+ind-1]<=gr[ind])	
		return l;
	return -1;		
}
vector<int>adj[MAXN];
int main(){
	scanf("%d",&n);
	scanf("%s",s+1);
	scanf("%d",&k);
	for(int i=1;i<=n;i++)	
		suf[0][i]=s[i]-'a'+1;
	int lg=log2(n);
	for(int j=1;j<=lg;j++){
		for(int i=1;i<=n;i++){
			if(i+(1<<j-1)<=n)
				C[i]=mp(suf[j-1][i],suf[j-1][i+(1<<j-1)]);
			else
				C[i]=mp(suf[j-1][i],-1);
			c[i]=i;		
		}
		sort(c+1,c+n+1,cmp);
		for(int i=1;i<=n;i++)
			suf[j][c[i]]=suf[j][c[i-1]]+(C[c[i]]!=C[c[i-1]]);
	}
	for(int i=1;i<=n;i++)
		sorted[suf[lg][i]]=i;	
	for(int i=1;i<=k;i++){
		cin>>gr;
		tre[i]=gr;
		int sz=gr.size(),low=1,high=n;
		for(int j=0;j<sz;j++)
			if(gr[j]>='A' and gr[j]<='Z')
				gr[j]=char(int(gr[j])+32);
		reverse(all(gr));
		gr="#"+gr;	
		for(int j=1;j<=sz;j++){
			int st=f1(low,high,j);
			int en=f2(low,high,j);
			if(st==-1 or en==-1){
				low=INF;
				break;
			}
			low=st,high=en;
		}
		for(int j=low;j<=high;j++)
			adj[sorted[j]].pb(i);
		arr[i]=sz;	
	}
	dp[n+1]=1;
	from[n+1]=-1;
	for(int i=n;i>=1;i--)
		for(int j=0;j<adj[i].size();j++){
			if(dp[i+arr[adj[i][j]]]>=1){
				dp[i]=dp[i+arr[adj[i][j]]]+1;
				from[i]=i+arr[adj[i][j]];
				way[i]=adj[i][j];
				break;
			}
		}
	int nd=1;	
	while(nd!=-1){
		cout<<tre[way[nd]];
		printf(" ");
		nd=from[nd];
	}
	return 0;
}
