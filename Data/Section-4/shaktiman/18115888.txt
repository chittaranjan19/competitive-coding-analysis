#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef vector<int> vi;

#define TRACE

#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif
#define MOD  1000009
ll powmod(ll a,ll b)
{
    if(b==0)return 1;
    ll x=powmod(a,b/2);
    ll y=(x*x)%MOD;
    if(b%2)
        return (a*y)%MOD;
    return y;
}
struct sort_pred {
    bool operator()(const std::pair<int,int> &left, const std::pair<int,int> &right) 
    { 
        return left.second > right.second; 
    }
};
void optimise()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}
int main()
{
    int n,foo,f1,f2=0,flag=0;
    cin >> n;
    std::vector<int> a(100009),s(100009);
    for(int i=0;i<n;i++)
    {
        cin >> foo;
        a[i]=foo;
        s[i]=foo;
    }
    sort(s.begin(),s.begin()+n);
    for(int i=0;i<n;i++)
    {
        if((flag==0)&&(a[i]!=s[i]))
        {
            flag=1;
            f1=i;
        }
        else
        {
            //trace3(a[i],s[i],i);
            if(((i < n-1) && (a[i]==s[i]) && (a[i+1]==s[i+1])&& (a[i-1]!=s[i-1]) ))
            {
                f2=i-1;
                break;
            }
            else if((i==n-1)&&(a[i]!=s[i]))
            {
                f2=i;
                break;
            }
        }

    }
    trace2(f1,f2);
    if(flag==0)
    {
        cout <<"yes" << '\n';
        cout << "1 1"<<'\n';
    }
    else
    {
        if(f2==0)
        {
            flag=0;
            for(int i=0;i<n;i++)
            {
                if(a[i]!=s[n-1-i])
                {
                    flag=1;
                    break;
                }
            }
            if(flag==0)
            {
                cout << "yes" <<'\n';
                cout << "1 "<<n<<'\n';
            }
            else
            {
                cout << "no" <<'\n';
            }
        }
        else
        {
            sort(a.begin()+f1,a.begin()+f2+1);
            for(int i=0;i<n;i++)
            {
                trace3(a[i],s[i],i);
            }
            flag=0;
            for(int i=0;i<n;i++)
            {
                if(a[i]!=s[i])
                {
                    flag=1;
                    break;
                }
            }
            if(flag==0)
            {
                cout << "yes" <<'\n';
                cout << f1+1<<" "<<f2+1<<'\n';
            }
            else
            {
                cout << "no" <<'\n';
            }
        }
    }
    return 0;
}