#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair

using namespace std;

LL DP[1005][1005][2];
string path[1005][1005];

int main()
{
    int n;
    cin >> n;
    int arr[n+2][n+2];
    for(int i=1;i<=n;i++)
        for(int j=1;j<=n;j++)
            scanf("%d",&arr[i][j]);
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=n;j++)
        {
            int counter1=0,counter2=0;
            while(arr[i][j] % 2 == 0)
                counter1++,arr[i][j]/=2;
            while(arr[i][j] % 5 == 0)
                counter2++,arr[i][j]/=5;
            DP[i][j][0] = counter1;
            DP[i][j][1] = counter2;
            if(i == 1 && j == 1)
                continue;
            if(i == 1 || (j != 1 && min(DP[i][j][0] + DP[i][j-1][0],DP[i][j][1] + DP[i][j-1][1]) < min(DP[i][j][0] + DP[i-1][j][0],DP[i][j][1] + DP[i-1][j][1])))
                DP[i][j][0] += DP[i][j-1][0],DP[i][j][1] += DP[i][j-1][1],path[i][j] = path[i][j-1] + "R";
            else DP[i][j][0] += DP[i-1][j][0],DP[i][j][1] += DP[i-1][j][1],path[i][j] = path[i-1][j] + "D";
        }
    }
    cout << min(DP[n][n][0],DP[n][n][1]) << endl << path[n][n];
    return 0;
}