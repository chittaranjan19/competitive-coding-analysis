{$N+}
const   maxn    =trunc(1e5)*5;
        base    =0.00000000001;
type    arr1    =array[0..maxn] of int64;

var     n, w    :int64;
        a       :arr1;
        i       :longint;
        s1, s2  :int64;
        tg      :int64;
        d,c,g   :Extended;
        ans     :Extended;
        ok      :boolean;
        sum     :extended;
procedure QS(l,r:longint);
var     i, j    :longint;
        x, tg   :int64;
begin
        i:=l;j:=r;
        x:=a[l+random(r-l+1)];
        repeat
                while a[i]<x do inc(i);
                while a[j]>x do dec(j);
                if i<=j then
                begin
                        tg:=a[i];a[i]:=a[j];a[j]:=tg;
                        inc(i);dec(j);
                end;
        until i>j;
        if l<j then QS(l,j);
        if i<r then QS(i,r);
end;
begin
        readln(n, w);
        for i:=1 to 2*n do read(a[i]);

        QS(1,n*2);
        //for i:=1 to 2*n do write(a[i],' ');writeln;
        for i:=1 to n*2 do
                if i<=n then s1:=a[i] else s2:=a[i];
        if s1>s2 then
        begin
                tg:=s1;
                s1:=s2;
                s2:=tg;
        end;
        d:=0;c:=w;
        while d<=c do
        begin
                g:=(d+c+base)/2;
                sum:=0;
                ok:=true;
                if ok then
                for i:=1 to 2*n do
                begin
                        if i<=n then sum:=sum+g else sum:=sum+g*2;
                        if i<=n then
                        if g>a[i] then
                        begin
                                ok:=false;
                                break;
                        end else
                        else
                        if g*2>a[i] then
                        begin
                                ok:=false;
                                break;
                        end;
                end;
                if sum>w then ok:=false;
                if ok then
                begin
                        d:=g+base;
                        ans:=g;
                end else c:=g-base;
        end;
        ans:=ans*n+ans*n*2;
        if trunc(ans+1)-trunc(ans+0.1)=0 then ans:=trunc(ans+0.1);
        writeln(ans:0:6);
end.
