Const Fi='';//'C.INP';
      Fo='';//'C.OUT';
      maxN=100001;
Var   B,D,Head,S:Array[0..maxN]Of Longint;
      ss:Array[1..2,0..maxN]Of Longint;
      A:Array[0..2*maxN]Of Longint;
      Free:Array[0..maxN]OF Boolean;
      n,m,Top,Bot,Res:Longint;
Procedure Enter;
Var i,u,v:Longint;
  Begin
    Readln(n,m);
    For i:=1 to n do
      Read(B[i]);
    Fillchar(Head,Sizeof(Head),0);
    For i:=1 to n-1 do
      Begin
          Readln(u,v);
          Inc(Head[u]);Inc(Head[v]);
          ss[1,i]:=u;ss[2,i]:=v;
      End;
    For i:=2 to n+1 do
      Head[i]:=Head[i-1]+Head[i];
    For i:=1 to n-1 do
      Begin
        u:=ss[1,i];v:=ss[2,i];
        A[Head[u]]:=v;A[Head[v]]:=u;
        Dec(Head[u]);Dec(Head[v]);
      End;
  End;
Procedure Push(v:Longint);
  Begin
    Inc(Top);
    S[Top]:=v;
  End;
Function  Pop:Longint;
  Begin
    Pop:=S[Bot];
    Inc(Bot);
  End;
Procedure BFS;
Var u,v,i:Longint;
  Begin
    Fillchar(Free,Sizeof(Free),True);
    Res:=0;
    Top:=0;Bot:=1;
    Push(1);D[1]:=B[1];
    Repeat
        u:=Pop;
        If (u<>1)and(D[u]<=m) then
          Inc(Res);
          //Writeln(u,' ',D[u],' ',Head[u],' ',Head[u+1]);
        Free[u]:=False;
        For i:=Head[u]+1 to Head[u+1] do
          If Free[A[i]] then
            Begin
              v:=A[i];
              Push(v);
              D[v]:=D[u]+B[v];
            End;
    Until Top<Bot;
    Writeln(Res);
 End;
Begin
  Assign(Input,Fi);Reset(Input);
  Assign(Output,Fo);Rewrite(Output);
  Enter;
  BFS;
  Close(Input);Close(Output);
End.