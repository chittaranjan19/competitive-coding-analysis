#include <bits/stdc++.h>

#define fr for(i=0;i<n;i++)
#define st first
#define nd second
#define pb push_back
#define PB pop_back()
#define sqr(a) (((a) * (a)))
#define mp make_pair

using namespace std;

typedef long long int LL;
typedef pair<int,int> pii;
typedef pair<LL,LL> pLL;
typedef vector<int> vi;

LL n,w,m,i,j,k,l,u,v;
LL a[10010],dp[110][110],z[110];
bool a1[110],a2[110],t=0;
pLL ap;
set<string> p[110][110],s7;
set<string>::iterator it;
string s1,s2,s3,s;

void zalgo(string s);

pLL minn(pLL r)
{
    if(t==1){
    if(!p[r.st+1][r.nd].empty() or !p[r.st][r.nd+1].empty())
    {
        if(!p[r.st+1][r.nd].empty() and !p[r.st][r.nd+1].empty())
        {
             u=dp[r.st+1][r.nd];
             v=dp[r.st][r.nd+1];
            if(u==v){for(it=p[r.st+1][r.nd].begin();it!=p[r.st+1][r.nd].end();++it){string s=*it;s+=s1[r.st];p[r.st+1][r.nd+1].insert(s);}
                     for(it=p[r.st][r.nd+1].begin();it!=p[r.st][r.nd+1].end();++it){string s=*it;s+=s1[r.st];p[r.st+1][r.nd+1].insert(s);}}
            else if(u<v){for(it=p[r.st][r.nd+1].begin();it!=p[r.st][r.nd+1].end();++it){string s=*it;s+=s1[r.st];p[r.st+1][r.nd+1].insert(s);}}
            else{for(it=p[r.st+1][r.nd].begin();it!=p[r.st+1][r.nd].end();++it){string s=*it;s+=s1[r.st];p[r.st+1][r.nd+1].insert(s);}}
        }
        else if(!p[r.st][r.nd+1].empty()){for(it=p[r.st][r.nd+1].begin();it!=p[r.st][r.nd+1].end();++it){string s=*it;s+=s1[r.st];p[r.st+1][r.nd+1].insert(s);}}
        else {for(it=p[r.st+1][r.nd].begin();it!=p[r.st+1][r.nd].end();++it){string s=*it;s+=s1[r.st];p[r.st+1][r.nd+1].insert(s);}}
    }
    else{string s;s+=s1[r.st];p[r.st+1][r.nd+1].insert(s);}
    t=0;
    }
    else{
    if(!p[r.st+1][r.nd].empty() or !p[r.st][r.nd+1].empty())
    {
        if(!p[r.st+1][r.nd].empty() and !p[r.st][r.nd+1].empty())
        {
            u=dp[r.st+1][r.nd];
            v=dp[r.st][r.nd+1];
            if(u==v){for(it=p[r.st+1][r.nd].begin();it!=p[r.st+1][r.nd].end();++it){string s=*it;p[r.st+1][r.nd+1].insert(s);}
                     for(it=p[r.st][r.nd+1].begin();it!=p[r.st][r.nd+1].end();++it){string s=*it;p[r.st+1][r.nd+1].insert(s);}}
            else if(u<v){for(it=p[r.st][r.nd+1].begin();it!=p[r.st][r.nd+1].end();++it){string s=*it;p[r.st+1][r.nd+1].insert(s);}}
            else{for(it=p[r.st+1][r.nd].begin();it!=p[r.st+1][r.nd].end();++it){string s=*it;p[r.st+1][r.nd+1].insert(s);}}
        }
        else if(!p[r.st][r.nd+1].empty()){for(it=p[r.st][r.nd+1].begin();it!=p[r.st][r.nd+1].end();++it){string s=*it;p[r.st+1][r.nd+1].insert(s);}}
        else {for(it=p[r.st+1][r.nd].begin();it!=p[r.st+1][r.nd].end();++it){string s=*it;p[r.st+1][r.nd+1].insert(s);}}
    }

    }
}

void zalgo(string s)
{
    int L = 0, R = 0;
for (int i = 1; i < n; i++) {
  if (i > R) {
    L = R = i;
    while (R < n && s[R-L] == s[R]) R++;
    z[i] = R-L; R--;
  } else {
    int k = i-L;
    if (z[k] < R-i+1) z[i] = z[k];
    else {
      L = i;
      while (R < n && s[R-L] == s[R]) R++;
      z[i] = R-L; R--;
    }
  }
}
}

int main ()
{
    cin>>s1>>s2>>s3;
    if(s1.length()>s2.length())swap(s1,s2);
    k=s1.length();n=s2.length();
    for(i=0;i<k;i++)
    {
        if(s1[i]==s2[i] and a1[i]==0 and a2[i]==0){a1[i]=1;a2[i]=1;dp[i+1][i+1]=max(dp[i][i+1],dp[i+1][i])+1;t=1;minn(mp(i,i));}else{dp[i+1][i+1]=max(dp[i][i+1],dp[i+1][i]);minn(mp(i,i));}
        for(j=i+1;j<n;j++){if(s1[i]==s2[j] and a1[i]==0 and a2[j]==0){a1[i]=1;a2[j]=1;dp[i+1][j+1]=max(dp[i][j+1],dp[i+1][j])+1;t=1;minn(mp(i,j));}else{dp[i+1][j+1]=max(dp[i][j+1],dp[i+1][j]);minn(mp(i,j));}}
        for(j=i+1;j<k;j++){if(s1[j]==s2[i] and a1[j]==0 and a2[i]==0){a1[j]=1;a2[i]=1;dp[j+1][i+1]=max(dp[j][i+1],dp[j+1][i])+1;t=1;minn(mp(j,i));}else{dp[j+1][i+1]=max(dp[j][i+1],dp[j+1][i]);minn(mp(j,i));}}
    }

    m=dp[k][n];
    s7=p[k][n];
    n=m;m=s3.length();n+=m+1;
    for(it=s7.begin();it!=s7.end();++it){t=0;string s=*it;string s2=s3;s2+='1';s2+=s;zalgo(s2);fr{if(z[i]==m)t=1;}if(t==0){cout<<s;return 0;}fr{z[i]=0;}}
}
