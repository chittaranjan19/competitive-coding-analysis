#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <ctime>

using namespace std;

#define ll long long
#define sc second
#define fs first
#define mp make_pair

const int N = 1e5 + 10;
template<class T> T sqr(T x) { return x*x; }

set<int> g[1000];
int n, m;
int ans[1000];
bool ok = 1;

void color(int i, int j, int k)
{
	bool lok = 0;
	for (int _i = 0; _i <= 2; _i++){
		for (int _j = 0; _j <= 2; _j++){
			for (int _k = 0; _k <= 2; _k++){
				if (lok) continue;
				if (ans[i] != -1 && ans[i] != _i) continue;
				if (ans[j] != -1 && ans[j] != _j) continue;
				if (ans[k] != -1 && ans[k] != _k) continue;
				if (g[i].count(j) && abs(_i - _j) > 1) continue;
				if (!g[i].count(j) && abs(_i - _j) != 2) continue;
				if (g[i].count(k) && abs(_i - _k) > 1) continue;
				if (!g[i].count(k) && abs(_i - _k) != 2) continue;
				if (g[j].count(k) && abs(_j - _k) > 1) continue;
				if (!g[j].count(k) && abs(_j - _k) != 2) continue;
				ans[i] = _i;
				ans[j] = _j;
				ans[k] = _k;
				lok = 1;
			}
		}
	}
	ok &= lok;
}

int main()
{
	cin >> n >> m;
	for (int i = 0; i < m; i++){
		int u, v;
		cin >> u >> v;
		g[v].insert(u);
		g[u].insert(v);
	}
	if (n == 1)
	{
		cout << "Yes" << endl << 'a';
		return 0;
	}
	if (n == 2)
	{
		cout << "Yes" << endl;
		if (m == 1) cout << "aa";
		else cout << "ac";
		return 0;
	}
	memset(ans, -1, sizeof(ans));
	for (int i = 1; i <= n; i++){
		for (int j = i + 1; j <= n; j++){
			for (int k = j + 1; k <= n; k++){
				color(i, j, k);
			}
		}
	}
	if (!ok){
		cout << "No";
		return 0;
	}
	cout << "Yes" << endl;
	for (int i = 1; i <= n; i++)
		cout << char('a' + ans[i]);
	return 0;
}