#include<stdio.h>
#include<math.h>
#include<string.h>
#include<iostream>
#include<algorithm>
#include<map>
#define FOR(i,n) for(i=0;i<(n);i++)
#define CLR(a) memset(a,0,sizeof(a))
#define CIN(a) scanf("%d",&a)
using namespace std;
class node
{
public:
    int a[5];
    node(){a[0]=a[1]=a[2]=a[3]=a[4]=0;}
    bool operator<(const node& n)const
    {
        if(a[0]!=n.a[0])return a[0]<n.a[0];
        else if(a[1]!=n.a[1])return a[1]<n.a[1];
        else if(a[2]!=n.a[2])return a[2]<n.a[2];
        else if(a[3]!=n.a[3])return a[3]<n.a[3];
        else return a[4]<n.a[4];
    }
};
int a[5];
map<node,int> M[2];
int main()
{
    int ans=0,ii=0,n,m,k,i;
    node ansn;
    scanf("%d%d%d",&n,&m,&k);
    while(n--)
    {
        node no;
        for(i=0;i<m;i++)
        {
            scanf("%d",&no.a[i]);
        }
        M[1-ii].clear();
        if(M[ii].count(no)==0)
        {
            M[1-ii][no]=1;
            if(1>ans)
            {
                ansn=no;
            }
            ans=max(ans,1);
        }
        map<node,int>::iterator it;
        node n2;
        for(it=M[ii].begin();it!=M[ii].end();it++)
        {
            int sum=0;
            for(i=0;i<m;i++)
            {
                n2.a[i]=max(it->first.a[i],no.a[i]);
                sum+=n2.a[i];
            }
            if(sum<=k)
            {
                M[1-ii][n2]=it->second+1;
                if(M[1-ii][n2]>ans)
                {
                    ansn=n2;
                }
                ans=max(ans,M[1-ii][n2]);
            }
        }
        ii=1-ii;
    }
    for(i=0;i<m;i++)
    {
        if(i!=0) printf(" ");
        printf("%d",ansn.a[i]);
    }
    printf("\n");
    return 0;
}
