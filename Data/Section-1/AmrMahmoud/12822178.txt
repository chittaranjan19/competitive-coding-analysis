#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

LL DP[21][11][11][5][5];

LL solve(int ind, int up, int down, int b, int bb)
{
  if(ind == 0) return (up == 0 && down == 0);
  if(up < 0 || down < 0) return 0;
  LL &temp = DP[ind][up][down][b][bb];
  if(temp != -1) return temp;
  temp = 0;
  for(int i=1;i<=4;i++)
  {
    if(b == i) continue;
    if(bb == 0) temp += solve(ind - 1, up, down, i, b);
    else temp += solve(ind - 1, up - (b > i && b > bb), down - (b < i && b < bb), i, b);
  }
  return temp;
}

int main()
{
  //freopen("approximation.in", "r", stdin);
  //freopen("approximation.out", "w", stdout);
  int n, t;
  setdp(DP);
  scanf("%d %d", &n, &t);
  printf("%I64d", solve(n, t, t - 1, 0, 0));
  return 0;
}
