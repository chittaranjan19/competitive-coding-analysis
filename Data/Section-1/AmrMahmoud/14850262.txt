#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int arr[100005], nxt[100005], prev[100005], diff[100005];

int main()
{
  int n, q, x, y;
  scanf("%d %d", &n, &q);
  for(int i=0;i<n;i++)
    scanf("%d", &arr[i]);
  stack<pair<int, int> > s;
  for(int i=1;i<n;i++)
  {
    diff[i] = abs(arr[i] - arr[i - 1]);
    while(!s.empty() && s.top().f < diff[i])
    {
      x = s.top().s;
      s.pop();
      nxt[x] = i;
    }
    s.push(mp(diff[i], i));
  }
  while(!s.empty())
  {
    x = s.top().s;
    s.pop();
    nxt[x] = n;
  }
  for(int i=n-1;i>0;i--)
  {
    while(!s.empty() && s.top().f <= diff[i])
    {
      x = s.top().s;
      s.pop();
      prev[x] = i;
    }
    s.push(mp(diff[i], i));
  }
  while(!s.empty())
  {
    x = s.top().s;
    s.pop();
    prev[x] = -1;
  }
  while(q--)
  {
    scanf("%d %d", &x, &y);
    y--;
    LL res = 0;
    for(int i=x;i<=y;i++)
      res += (min(y + 1, nxt[i]) - i) * 1LL * (i - max(x - 1, prev[i])) * diff[i];
    printf("%I64d\n", res);
  }
  return 0;
}
