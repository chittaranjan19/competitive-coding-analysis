#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define lg(x) ceil(log2(x))
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
//#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
//using namespace __gnu_pbds;
//typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>asd;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int vis[MAXN],rr[MAXN],h[MAXN];
//asd s;
int main(){
	int a,b,x,d=0;
	cin>>a>>b;
	for(int i=0;i<a;i++){
		cin>>x;
		if(vis[x])
			d=1;
		vis[x]++;	
		h[x]=i+1;
	}
	for(int i=0;i<b;i++){
		cin>>rr[i];
		if(!vis[rr[i]]){
			cout<<"Impossible"<<endl;
			return 0;
		}
		vis[rr[i]]--;
	}
	if(d){
		cout<<"Ambiguity"<<endl;
		return 0;
	}
	cout<<"Possible"<<endl;
	for(int i=0;i<a;i++){
		cout<<h[rr[i]]<<" ";
	}
	return 0;
}
