const   maxn    =trunc(1e5)*2;

type    arr1    =array[0..maxn] of longint;

var     n, m    :longint;
        a       :Arr1;
        b       :arr1;
        i       :longint;
        d,c,g,find:longint;
        sum     :int64;

function ok(k:longint):boolean;
var     i       :longint;
        p       :longint;
        j       :longint;
        x       :longint;
        s       :int64;
begin
        for i:=1 to n do b[i]:=a[i];
        s:=sum;
        p:=n;
        for i:=1 to m do
        begin
                x:=k;
                while (p>0) and (b[p]=0) do dec(p);
                if p>0 then
                begin
                        if x<p then exit(false);
                        dec(x,p);
                        while (p>0) and (x>=b[p]) do
                                begin
                                        dec(x,b[p]);
                                        dec(s,b[p]);
                                        b[p]:=0;
                                        dec(p);
                                end;
                        if (p>0) then
                                begin
                                        dec(b[p],x);
                                        dec(s,x);
                                end;
                end;
        end;
        exit(s=0);
end;

begin
        readln(n, m);
        sum:=0;
        for i:=1 to n do
        begin
                read(a[i]);
                inc(sum,a[i]);
        end;

        d:=0;c:=trunc(1e9);find:=0;
        while d<=c do
        begin
                g:=(d+c) shr 1;
                if ok(g) then
                begin
                        find:=g;
                        c:=g-1;
                end else d:=g+1;
        end;
        writeln(find);
end.