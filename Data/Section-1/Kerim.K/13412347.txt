#include <cstdlib>
#include <iostream>
#include <iomanip>
#include <stdio.h>
#include <set>
#include <vector>
#include <map>
#include <cmath>
#include <algorithm>
#include <memory.h>
#include <string>
#include <sstream>

using namespace std;

const int N = 333333;

int n, m, i, ii, e, j;
int kg[N], g[N][4], c[N], cnt[N];
set < pair <int, int> > s;

int main() {
  srand(time(NULL));
  scanf("%d %d", &n, &m);
  for (i=1;i<=n;i++) kg[i] = 0;
  for (i=1;i<=m;i++) {
    int ss, ff;
    scanf("%d %d", &ss, &ff);
    g[ss][kg[ss]++] = ff;
    g[ff][kg[ff]++] = ss;
  }
  while (1) {
    for (i=1;i<=n;i++) c[i] = cnt[i] = 0;
    s.clear();
    for (i=1;i<=n;i++) s.insert(make_pair(-cnt[i], i));
    while (!s.empty()) {
      int who = (*(s.begin())).second, cur[7];
      s.erase(s.begin());
      cur[0] = cur[1] = cur[2] = 0;
      for (j=0;j<kg[who];j++) cur[c[g[who][j]]]++;
      if (cur[1] < cur[2]) c[who] = 1; 
      else if (cur[2] < cur[1]) c[who] = 2; 
      else if (rand() & 1) c[who] = 1;
      else c[who] = 2;
      for (j=0;j<kg[who];j++)
        if (c[g[who][j]] == 0) {
          int z = g[who][j];
          s.erase(make_pair(cnt[z], z));
          cnt[z]++;
          s.insert(make_pair(cnt[z], z));
        }
    }
    int bad = 0;
    for (i=1;i<=n;i++) {
      int qw = 0;
      for (j=0;j<kg[i];j++)
        if (c[g[i][j]] == c[i]) qw++;
      if (qw > 1) bad = 1;
    }
    if (!bad) break;
  }
  for (i=1;i<=n;i++) printf("%d", c[i]-1);
  printf("\n");
  return 0;
}
