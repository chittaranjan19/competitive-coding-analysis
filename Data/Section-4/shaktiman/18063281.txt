#include<bits/stdc++.h>
using namespace std;
#define TRACE

#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif
struct sort_pred {
    bool operator()(const std::pair<int,int> &left, const std::pair<int,int> &right) 
    { 
        return left.second < right.second; 
    }
};
//sort(v,v+n,sort_pred())
bool myfunction (int i,int j) { return (i>j); }
void optimise()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}
int main()
{
	int n,ans;
	cin >> n;
	vector <int> a(109);
	vector <long long int> s(109);
	for(int i=0;i<n;i++)
	{
		cin >> a[i];
	}
	sort(a.begin(),a.begin()+n);
	s[0]=a[0];
	for(int i=1;i<n;i++)
	{
		s[i]=a[i]+s[i-1];
	}
	long long int  search=(s[n-1]/2);
	//bin_srch(0,n-1,s[n-1]/2,s)
	trace1(search);
	for(int i=0;i<n;i++)
		trace1(s[i]);
	for(int i=n-1,j=0;i>=0;i--,j++)
	{
		if(s[i]<=search)
		{
			ans=j+1;
			break;
		}
	}
	cout << ans <<'\n';
	return 0;
}