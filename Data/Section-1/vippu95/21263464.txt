#include<bits/stdc++.h>
using namespace std;

#define lli long long
#define pb push_back
#define mp make_pair
#define gc getchar_unlocked
#define DEBUG(x) cout<<">value ("<<#x<<") : "<<x<<endl;
#define mod 1000000007

const int lmt = 10000000;

lli power(lli a,lli b){
    lli id = 1;
    while(b>0){
        if(b&1LL)
            id = ( (id%mod)*(a%mod) )%mod;
        a = ( (a%mod)*(a%mod) )%mod;
        b=b>>1LL;
    }
    return id;
}

lli brute(lli n,lli m){
    lli ans  = 0;
    for(int i=1;i<=m;i++){
        ans += (n%i);
        ans %= mod;
    }
    return ans;
}

lli getAPSum(lli a,lli n,lli d){
    lli ans = 2LL*a;
    ans %= mod;
    lli loc = (((n-1LL)%mod)+mod)%mod;
    loc = (loc*d)%mod;
    ans += loc;
    ans = ((ans%mod)+mod)%mod;
    ans = (ans*n)%mod;
    ans *= power(2,mod-2);
    ans %= mod;
    return ans;
}

int main(){
    lli n,m;
    cin>>n>>m;
    lli cur = m;
    lli ans = 0;
    if(m>n){
        ans += (m-n)*n;
        ans %= mod;
        cur = n;
    }
    while(cur>lmt){
        lli d = n/cur;
        lli a = n%cur;
        lli nn = cur-(n/(d+1));
        ans += getAPSum(a,nn,d);
        ans %= mod;
        //cout<<d<<" "<<a<<" "<<nn<<" "<<cur<<" "<<ans<<endl;
        cur = n/(d+1);
    }
    ans += brute(n,cur);
    ans %= mod;
    printf("%lld\n",ans);
    return 0;
}
