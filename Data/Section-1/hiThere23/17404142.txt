#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 200005
#define maxC 1000000007
#define base 100007
#define mp make_pair
#define F first
#define S second

using namespace std;
int n, m, t[mn];
char cT[mn], cS[mn];
long long ans = 0, lT[mn], lS[mn];

void setup()
{
    cin >> n >> m;
    int r = 0;
    FOR(i, 1, n)
    {
        r ++;
        cin >> lS[r] >> cS[r] >> cS[r];
        if (cS[r] == cS[r - 1])
        {
            lS[r - 1] += lS[r];
            r --;
        }
    }
    n = r;
    r = 0;
    FOR(i, 1, m)
    {
        r ++;
        cin >> lT[r] >> cT[r] >> cT[r];
        if (cT[r] == cT[r - 1])
        {
            lT[r - 1] += lT[r];
            r --;
        }
    }
    m = r;
}

void chuanbi()
{
    int pos = t[1] = 0;
    FOR(i, 2, m - 2)
    {
        pos ++;
        while(pos)
        {
            if (cT[i + 1] == cT[pos + 1] && lT[i + 1] == lT[pos + 1])
                break;
            pos = t[pos];
        }
        t[i] = pos;
    }
}

void check()
{
    int pos = 0;
    FOR(i, 2, n - 1)
    {
        pos ++;
        while(pos)
        {
            if(cT[pos + 1] == cS[i] && lT[pos + 1] == lS[i])
                break;
            pos = t[pos];
        }
        if (pos == m - 2)
        {
            int aft = i + 1;
            int pre = aft - m + 1;
            ans += (cS[pre] == cT[1] && cS[aft] == cT[m] && lS[pre] >= lT[1] && lS[aft] >= lT[m]);
            pos = t[pos];
        }
    }
    cout << ans;
}

void xuly ()
{
    if (m == 1)
    {
        FOR(i, 1, n)
        if (cS[i] == cT[1] && lS[i] >= lT[1])
            ans += lS[i] - lT[1] + 1;
        cout << ans;
        return;
    }
    if (m == 2)
    {
        FOR(i, 1, n - 1)
        ans += (cS[i] == cT[1] && lS[i] >= lT[1] && cS[i + 1] == cT[2] && lS[i + 1] >= lT[2]);
        cout << ans;
        return;
    }
    chuanbi();
    check();
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
