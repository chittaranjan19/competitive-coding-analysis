#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define mod1 1000000007LL
#define mod2 1000000009LL
#define mul 97LL
struct Hash{
    ll h1,h2;
};
char s1[100005];
char s2[100005];
Hash h1[100005];
Hash h2[100005];
void hashit(Hash* hash, char* s, int n){
    ll tmp1=0;
    ll tmp2=0;
    for(int i=0;i<n;++i){
        tmp1*=mul;
        tmp2*=mul;
        tmp1+=s[i];
        tmp2+=s[i];
        tmp1%=mod1;
        tmp2%=mod2;
        hash[i].h1=tmp1;
        hash[i].h2=tmp2;
    }
}
ll pot[100005][2];
int n1, n2;
bool check(Hash* hashes, int len, int n){
    ll target1=hashes[len-1].h1, target2=hashes[len-1].h2;
    for(int j=len;j<n;j+=len){
        ll tmphash1=hashes[j+len-1].h1-hashes[j-1].h1*pot[len][0];
        ll tmphash2=hashes[j+len-1].h2-hashes[j-1].h2*pot[len][1];
        tmphash1=((tmphash1%mod1)+mod1)%mod1;
        tmphash2=((tmphash2%mod2)+mod2)%mod2;
        if(tmphash1!=target1||tmphash2!=target2)
            return false;
    }
    return true;
}
int main(){
    scanf("%s",s1);
    scanf("%s",s2);
    n1=strlen(s1);
    n2=strlen(s2);
    hashit(h1,s1,n1);
    hashit(h2,s2,n2);
    pot[0][0]=pot[0][1]=1;
    for(int i=1;i<100005;++i){
        pot[i][0]=(pot[i-1][0]*mul)%mod1;
        pot[i][1]=(pot[i-1][1]*mul)%mod2;
    }
    int ans=0;
    for(int i=0;i<n1;++i){
        int len=i+1;
        if(n1%len||n2%len) continue;
        if( check(h1,len,n1)&&
            check(h2,len,n2)) ++ans;
    }
    cout<<ans<<endl;
}