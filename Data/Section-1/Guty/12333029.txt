#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int main()
{
	int maxN = 1001;
	int n;
	cin >> n;
	vector<int> t (maxN,0);
	forn(i,n)
	{
		int aux;
		cin >> aux;
		t[aux]++;
	}
	vector<int> partial (maxN);
	partial[1] = t[1];
	forsn(i,2,maxN)
		partial[i] = partial[i-1] + t[i];
	int T;
	cin >> T;
	int maxi = 0;
	forn(i,maxN-T-2)
		maxi = max(maxi,partial[T+1+i] - partial[i]);
	cout << maxi << endl;
	return 0;
}

