#include <iostream>

using namespace std;

const int maxn = 100 + 10;

char a[maxn][maxn];
int n,m;
int h[4]={0 , 0 , 1 , -1};
int e[4]={1 , -1 , 0 , 0};


bool isvalidpos(int x , int y){
    return 0 <= x && x < n && 0 <= y && y<m;
}

bool neighbor(int x , int y){
    int l,k;
    for(int i = 0; i < 4; ++i){
        l = x + h[i];
        k = y  + e[i];
        if(!isvalidpos(l,k))
            continue;
        else if(a[l][k] == 'B')
            return false;
    }
    return true;
}

void draw(int x , int y){
    int l = m - x, k = n - y;
    if(l <= k){
        for(int i = x; i < m; ++i){
            for(int j = y; j < y+m-x; ++j){
                a[j][i] = 'A';
            }
        }
        for(int i = x; i < m; ++i){
            if(neighbor(y + l , i))
                a[y+l][i] = 'B';
            else
                a[y+l][i] = 'C';
        }
        if(!(x >= m || y + l + 1 >= n )){
            draw(x  , y  + l + 1);
        }
    }
    else{
        for(int i = x; i < x+n-y; ++i){
            for(int j = y; j < n; ++j){
                a[j][i] = 'A';
            }
        }
        for(int i = y; i < n; ++i){
            if(neighbor(i , x + k))
                a[i][x+k] = 'B';
            else
                a[i][x+k] = 'C';
        }
        if(!(x + k + 1 >= m || y >= n)){
            draw(x + k + 1, y);
        }
    }
}

int main(){
    cin >> n >> m;
    draw(0,0);
    for(int i = 0; i < n; ++i){
        for(int j = 0; j < m; ++j){
            cout << a[i][j];
        }
        cout << endl;
    }
}
