using namespace std;
#include<bits/stdc++.h>
#define FOR(i, a, b) for (int i = a; i < b; i++)
#define FORE(i, a, b) for (int i = a; i <= b; i++)
#define FORD(i, a, b) for (int i = a; i >= b; i--)
const int MAXN = 5*1e5;
const int INF = 1e9 + 7;

int n;
typedef pair<int, int> ii;
ii a[5];
int main()
{
    ios::sync_with_stdio(false); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("A.inp", "r", stdin);
    freopen("A.out", "w", stdout);
    #endif // ONLINE_JUDGE
    //MIKELHPDATKE;
    cin >> n;
    FORE(i, 1, n) cin >> a[i].first >> a[i].second;

    if (n == 1){
        cout<<-1;

        return 0;
    }
    if (n == 2){
        if (a[1].first == a[2].first || a[1].second == a[2].second){
            cout<<-1;
            //cout<<"wtf"<<endl;
            return 0;
        }
        sort(a + 1, a + n + 1);
        cout<<abs(a[1].first - a[2].first) * abs(a[1].second - a[2].second);
    }
    if (n == 3){
        sort(a + 1, a + n + 1);
        //FORE(i, 1, 3) cout<<a[i].first<<" "<<a[i].second<<endl;
        bool ok = 1;
        if (a[1].first != a[2].first || (a[2].second != a[3].second && a[1].second != a[3].second)){
            ok = 0;
        }
        if (!ok){
        sort(a + 1, a + n + 1, greater<ii>());
        //FORE(i, 1, 3) cout<<a[i].first<<" "<<a[i].second<<endl;
        if (a[1].first != a[2].first || (a[2].second != a[3].second && a[1].second != a[3].second)){
            cout<<-1;
            //cout<<(a[2].second != a[3].second && a[1].second != a[3].second)<<"wt"<<endl;
            return 0;
        }
        }
        cout<<abs(a[1].second - a[2].second) * abs(a[2].first - a[3].first);
    }
    if (n == 4){
        sort(a + 1, a + n + 1);
        swap(a[3], a[4]);
        if (a[1].first != a[2].first || a[2].second != a[3].second || a[3].first != a[4].first || a[4].second != a[1].second){
            cout<<-1;
            //cout<<"wtf"<<endl;
            return 0;
        }
        cout<<abs(a[1].second - a[2].second) * abs(a[2].first - a[3].first);
    }
    return 0;
}
