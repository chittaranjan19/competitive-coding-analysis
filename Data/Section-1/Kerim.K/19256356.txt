#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define db 	cout << "*****" << endl;
#define Max 200009
#define pb push_back
#define pp pop_back
#define ff first
#define ss second
#define mk make_pair
#define MOD 1000000007
#define tr(i, c) for(__typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)

typedef long long lld;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> omar;

int n;
int A[Max];
vector <int> v[Max];

bool vis[Max];

void dfs( int nw){
	if( vis[nw] == 1 ) return ;
	vis[nw] = 1;
	
	for( int i=0;i<int(v[nw].size());i++)
		dfs( v[nw][i] );
		
}
vector < int > a,b;

int main(){
	
	cin >> n;
	for( int i=1;i<=n;i++){
		scanf("%d" , &A[i]);
		
		v[i].pb(A[i]);
		v[A[i]].pb(i);
		
	}
	int con=0;
	int cic=0;
	
	for( int i=1;i<=n;i++){
		if( A[i] == i ){
			
			con++;
			
			a.pb(i);
			
			dfs(i);	
		
		}	
	}
	for( int i=1;i<=n;i++)
		if( vis[i] == 0 ){
			cic++;
			b.pb(i);
			dfs(i);	
		}
		
	int ans = cic + con;
	if( con > 0 ) ans--;
	
	cout << ans << endl;
	
	if( con > 0 ){
		for( int i=1;i<int(a.size());i++)
			A[a[i]]=a[0];	
		for( int i=0;i<int(b.size());i++)
			A[b[i]]=a[0];	
	}
	else{
		
		int par = 0;
		int last=0;
		
		for( int i=1;i<=n;i++){
			if( v[i].size() >= last ){
				
				par = i ;
				last = v[i].size();
				
			}
		}
		for( int i=0;i<int(b.size());i++)
			A[b[i]]=par;	
	}
	for( int i=1;i<=n;i++)
		printf("%d " ,A[i]);
			
	return 0;
}
