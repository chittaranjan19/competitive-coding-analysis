#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <iomanip>
#include <set>
#include <fstream>
#include <numeric>
#include <stdexcept>
#include <cassert>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int fail[1000005];
bool match[1000005];
int power[1000005];

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("assignment.in", "r", stdin);
  //freopen("assignment.out", "w", stdout);
  int n, m, x;
  string p;
  cin >> n >> m >> p;
  for(int i=0;i<m;i++)
  {
    cin >> x;
    match[--x] = true;
  }
  string res = "";
  int ind = -1;
  for(int i=0;i<n;i++)
  {
    if(match[i]) ind = 0;
    if(ind == -1) res+='?';
    else
    {
      res+=p[ind];
      ind++;
      if(ind == p.size()) ind = -1;
    }
  }
  int k = 0;
  for(int j=1;j<p.size();j++)
  {
    while(k > 0 && p[k] != p[j])
      k = fail[k-1];
    if(p[k] == p[j]) k++;
    fail[j] = k;
  }
  k = 0;
  int cnt = 0;
  for(int i=0;i<n;i++)
  {
    while(k > 0 && p[k] != res[i])
      k = fail[k-1];
    if(p[k] == res[i]) k++;
    if(k == p.size())
    {
      cnt++;
      if(!match[i - p.size() + 1])
      {
        cout << "0";
        return 0;
      }
    }
  }
  if(cnt != m)
  {
    cout << "0";
    return 0;
  }
  int ans = 1, lastind = -1;
  power[0] = 1;
  for(int i=1;i<=n;i++)
    power[i] = (power[i - 1] * 1LL * 26) % mod;
  cnt = 0;
  for(int i=0;i<n;i++)
    if(res[i] == '?')
      cnt++;
  cout << power[cnt];
  return 0;
}
