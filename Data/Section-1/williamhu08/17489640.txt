#include <bits/stdc++.h>

using namespace std;

#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define rep(it, v) for (auto it = (v).begin(); it != (v).end(); it++)
#define rwfile(f) freopen(f".in", "r", stdin); freopen(f".out", "w", stdout)
#define pb push_back
#define mpair make_pair
#define fi first
#define se second
#define dri(x) scanf("%d", &x)
#define drii(x, y) scanf("%d %d", &x, &y)
#define driii(x, y, z) scanf("%d %d %d", &x, &y, &z)
#define driiii(x, y, z, w) scanf("%d %d %d %d", &x, &y, &z, &w)
#define drl(x) scanf("%lld", &x)
#define drll(x, y) scanf("%lld %lld", &x, &y)
#define drlll(x, y, z) scanf("%lld %lld %lld", &x, &y, &z)
#define drllll(x, y, z, w) scanf("%lld %lld %lld %lld", &x, &y, &z, &w)

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
const int MAXN = 1e5 + 10;

int N;
double arrx[MAXN], arrn[MAXN];

pair<double, double> solve (double d1, double d2) {
	//pq = d1, (1-p)(1-q)=d2
	d2 = d1 - d2 + 1;
	double dis = sqrt(d2 * d2 - 4 * d1);
	return mpair((d2 - dis) / 2, (d2 + dis) / 2);
}

double ans1[MAXN], ans2[MAXN];

int main() {
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	dri(N);
	for (int i = 1; i <= N; i++) {
		scanf("%lf", &arrx[i]);
		arrx[i] += arrx[i - 1];
	}
	for (int i = 1; i <= N; i++) {
		scanf("%lf", &arrn[i]);
	}
	for (int i = N; i >= 1; i--) {
		arrn[i] += arrn[i + 1];
	}

	double pa = 0, pb = 0;
	for (int i = 1; i <= N; i++) {
		//i = max, i + 1 = min
		auto pr = solve(arrx[i], arrn[i + 1]);
		ans1[i] = pr.fi - pa;
		ans2[i] = pr.se - pb;
		pa = pr.fi;
		pb = pr.se;
	}

	for (int i = 1; i <= N; i++) {
		printf("%.6lf ", ans1[i]);
	}
	puts("");
	for (int i = 1; i <= N; i++) {
		printf("%.6lf ", ans2[i]);
	}
	puts("");
}