#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair

using namespace std;

int counter[10],required[10],sol[10];

int main()
{
    int n,k;
    string input;
    cin >> n >> k >> input;
    for(int i=0;i<n;i++)
        counter[input[i]-'0']++;
    for(int i=0;i<10;i++)
        if(counter[i]>=k)
        {
            cout << 0 << endl << input;
            return 0;
        }
    int cost=0,mincost=INF_MAX,minind=0,curr;
    for(int i=0;i<10;i++)
    {
        cost=0,curr=counter[i];
        for(int j=0;j<10;j++)
            required[j]=0;
        for(int j=1;j<10;j++)
        {
            if(i+j < 10)
            {
                required[i+j] = min(counter[i+j],k-curr);
                curr+=required[i+j];
                cost+=j * required[i+j];
            }
            if(i-j > -1)
            {
                required[i-j] = min(counter[i-j],k-curr);
                curr+=required[i-j];
                cost+=j * required[i-j];
            }
            if(curr == k)
                break;
        }
        if(curr >= k && mincost > cost)
        {
            mincost = cost,minind = i;
            for(int j=0;j<10;j++)
                sol[j]=required[j];
        }
    }
    for(int i=n-1;i>=0;i--)
        if(sol[input[i]-'0'])
            sol[input[i]-'0']--,input[i]='0'+minind;
    cout << mincost << endl << input;
    return 0;
}