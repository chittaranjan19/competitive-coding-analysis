#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>

using namespace std;

#define ll long long
#define sc second
#define fs first
#define mp make_pair

int n, a[1000000], b[1000000], mn[1000000];


int main()
{
	cin >> n;
	a[0] = 0, a[n + 1] = 0;
	for (int i = 0; i < n; i++)
		scanf_s("%d", &a[i+1]);
	int a0 = a[1], an = a[n];
	int ans = 0, maxch = 0;
	mn[1] = mn[n] = 1;
	for (int i = 2; i <= n; i++){
		if (a[i] == 1 && a[i - 2] == 1 && a[i-1] != 1){
			if (b[i - 2] == 0)
				b[i - 2] = 1;
			b[i] = b[i - 2] + 1;
			//ans = max(ans, b[i]);
		}
		if (a[i] == 1 && (a[i - 1] == 1 || a[i + 1] == 1))
			mn[i] = 1;
	}
	int s = -1, e = -1;
	for (int i = 1; i <= n; i+=2){
		if (b[i] && s == -1){
			s = i;
			continue;
		}
		if (b[i] && s != -1)
			e = i;
		if (!b[i] && e != -1)
		{
			bool m = 1;
			m &= (mn[s] || mn[e]);
			for (int j = s; j <= e; j++)
				a[j] = 0;
			if (m == 0){
				ans = max(ans, b[e]);
			}
			else{
				if (mn[s] && mn[e]){
					ans = max(ans, (e - s) / 2);
					for (int j = s; j <= e; j++)
						a[j] = 1;
					continue;
				}
				if (mn[s]){
					ans = max(ans, b[e]);
					for (int j = s; j < s + b[e]; j++)
						a[j] = 1;
					continue;
				}
				if (mn[e]){
					ans = max(ans, b[e]);
					for (int j = e; j > e - b[e]; j--)
						a[j] = 1;
					continue;
				}
			}
			s = -1, e = -1;
		}
	}
	bool m = 1;
	m &= (mn[s] || mn[e]);
	for (int j = s; j <= e; j++)
		a[j] = 0;
	if (m == 0){
		ans = max(ans, b[e]);
	}
	else{
		if (mn[s] && mn[e]){
			ans = max(ans, (e - s) / 2);
			for (int j = s; j <= e; j++)
				a[j] = 1;
		}
		if (mn[s] && !mn[e]){
			ans = max(ans, b[e]);
			for (int j = s; j < s + b[e]; j++)
				a[j] = 1;
		}
		if (mn[e] && !mn[s]){
			ans = max(ans, b[e]);
			for (int j = e; j > e - b[e]; j--)
				a[j] = 1;
		}
	}
	for (int i = 2; i <= n; i += 2){
		if (b[i] && s == -1){
			s = i;
			continue;
		}
		if (b[i] && s != -1)
			e = i;
		if (!b[i] && e != -1)
		{
			bool m = 1;
			m &= (mn[s] || mn[e]);
			for (int j = s; j <= e; j++)
				a[j] = 0;
			if (m == 0){
				ans = max(ans, b[e]);
			}
			else{
				if (mn[s] && mn[e]){
					ans = max(ans, (e - s) / 2);
					for (int j = s; j <= e; j++)
						a[j] = 1;
					continue;
				}
				if (mn[s]){
					ans = max(ans, b[e]);
					for (int j = s; j < s + b[e]; j++)
						a[j] = 1;
					continue;
				}
				if (mn[e]){
					ans = max(ans, b[e]);
					for (int j = e; j > e - b[e]; j--)
						a[j] = 1;
					continue;
				}
			}
			s = -1, e = -1;
		}
	}
	m = 1;
	m &= (mn[s] || mn[e]);
	for (int j = s; j <= e; j++)
		a[j] = 0;
	if (m == 0){
		ans = max(ans, b[e]);
	}
	else{
		if (mn[s] && mn[e]){
			ans = max(ans, (e - s) / 2);
			for (int j = s; j <= e; j++)
				a[j] = 1;
		}
		if (mn[s] && !mn[e]){
			ans = max(ans, b[e]);
			for (int j = s; j < s + b[e]; j++)
				a[j] = 1;
		}
		if (mn[e] && !mn[s]){
			ans = max(ans, b[e]);
			for (int j = e; j > e - b[e]; j--)
				a[j] = 1;
		}
	}
	cout << ans << endl;
	cout << a0 << ' ';
	for (int i = 2; i < n; i++)
		printf("%d ", a[i]);
	cout << an;
	return 0;
}