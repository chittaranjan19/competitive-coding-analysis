#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 4100
#define maxC 1000000007
#define task "CANDIES"
#define pb push_back

using namespace std;
int n, m, ans = maxC, k[mn][mn], mark[mn];
vector <int> g[mn];

void setup ()
{
    int x, y;
    cin >> n >> m;
    FOR(i, 1, m)
    {
        cin >> x >> y;
        g[x].pb(y);
        g[y].pb(x);
        k[x][y] = k[y][x] = 1;
    }
}

void dfs(int u, int p)
{
    mark[u] = 1;
    FOR (i, 0, int(g[u].size()) - 1)
    {
        int v = g[u][i];
        if (v == p)
            continue;
        if (mark[v] && k[p][u])
            ans = min(ans, int(g[u].size()) + int(g[v].size()) + int(g[p].size()) - 6);
        if (!mark[v])
        dfs(v, u);
    }
}

void xuly ()
{
    FOR (i, 1, n)
    if (!mark[i])
        dfs(i, 0);
    if (ans == maxC)
        cout << -1;
    else
        cout << ans;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
