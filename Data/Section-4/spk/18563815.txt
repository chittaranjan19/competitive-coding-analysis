#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>
#include<queue>
#include<set>
#include<stack>

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define scantype int
#define min(a,b) a<b?a:b
#define max(a,b) a>b?a:b
#define lli long long int

lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}

using namespace std;

void scan(scantype &x);

vector<pair<int,int> > edge[100002];
int val[100002],res=1,gmax=0,flag=0;

void dfs(int s,int dist,int lmax)
{
    lmax = lmax + dist;
    if(lmax<0) lmax=0;
    if(gmax<lmax) gmax=lmax,flag=1;

    if(gmax>val[s] && flag)
    {
        //cout << "At " << s << " " << gmax << endl;
       return;
    }
    flag=0;
    res++;
    for(int i=0;i<edge[s].size();i++)
    {
        dfs(edge[s][i].first,edge[s][i].second,lmax);
    }
}


int main(void)
{
  int n;
  cin>> n;


  for(int i=1;i<=n;i++) scan(val[i]);

  for(int i=2;i<=n;i++)
  {
      int y,c;
      scan(y);
      scan(c);
      edge[y].pb({i,c});
  }

  for(int i=0;i<edge[1].size();i++)
    dfs(edge[1][i].first,edge[1][i].second,0);

  cout << n-res;

  return 0;
}









void scan(scantype &x)
{
    /*register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}*/

    register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
