#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;

int a[100005], b[100005], c[100005];
int dp[100005][2];
int n;

int solve(int i,  int k){
        if (i == n && k == 0) return a[n];
        if (i == n && k == 1) return b[n];
        if (dp[i][k] != -1) return dp[i][k];

        int &res = dp[i][k];
        if (k == 0){
                dp[i][0] = max(solve(i+1, k) + b[i], solve(i+1, 1) + a[i]);
        }
        else {
                dp[i][k] = max(solve(i+1,0) + c[i], solve(i+1,k)+b[i]);
        }
        return res;
}
int main()
{
        memset(dp,-1,sizeof(dp));
      
        cin >> n;
        for(int i = 1; i <= n; i++)
                cin >> a[i];
        for(int i = 1; i <= n; i++)
                cin >> b[i];
        for(int i = 1; i <= n; i++)
                cin >> c[i];
        
        int res = solve(1,0);
        cout << res << endl;
}
