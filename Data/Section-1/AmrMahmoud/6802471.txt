#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair

using namespace std;

int arr[100005];
vector<int> even,odd;
vector<vector<int> > res;
int main()
{
    int n,k,p;
    cin >> n >> k >> p;
    for(int i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);
        if(arr[i] & 1)
            odd.push_back(arr[i]);
        else even.push_back(arr[i]);
    }
    int x=0,y=0;
    bool fail = false;
    for(int i=0;i<k;i++)
    {
        vector<int> temp;
        if(i > p-1)
        {
            if(y != odd.size())
                temp.push_back(odd[y++]);
            else
            {
                fail = true;
                break;
            }
        }
        else
        {
            if(x != even.size())
                temp.push_back(even[x++]);
            else if(y < odd.size() - 1)
                temp.push_back(odd[y++]), temp.push_back(odd[y++]);
            else
            {
                fail = true;
                break;
            }
        }
        res.push_back(temp);
    }
    if(fail)
    {
        cout << "NO";
        return 0;
    }
    while(x != even.size())
    {
        res[0].push_back(even[x++]);
    }
    if(y != odd.size())
    {
        if((odd.size() - y) & 1)
        {
            cout << "NO";
            return 0;
        }
        while(y != odd.size())
            res[0].pb(odd[y++]);
    }
    cout << "YES" << endl;
    for(int i=0;i<k;i++)
    {
        printf("%d ",res[i].size());
        for(int j=0;j<res[i].size();j++)
            printf("%d ",res[i][j]);
        printf("\n");
    }
    return 0;
}
