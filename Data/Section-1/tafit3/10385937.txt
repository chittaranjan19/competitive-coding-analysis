import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class ProblemE {
    private static final long INF = 123456789123456L;
    BufferedReader rd;

    private ProblemE() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        long k = longarr()[1];
        long[] a = longarr();
        int q = pint();
        for(int i=0;i<q;i++) {
            long x = plong();
            long min = INF;
            for(long b: a) {
                for(int j=1;j<=k;j++) {
                    long rest = x-b*j;
                    if(rest == 0) {
                        min = Math.min(min, j);
                    } else if(rest > 0 && j<k) {
                        for(int m=1;m<=k-j;m++) {
                            if(rest % m == 0) {
                                long y = rest/m;
                                if(Arrays.binarySearch(a, y) >= 0) {
                                    min = Math.min(min, j + m);
                                }
                            }
                        }
                    }
                }
            }
            if(min == INF) {
                out(-1);
            } else {
                out(min);
            }
        }
    }

    private int pint() throws IOException {
        return pint(rd.readLine());
    }

    private int pint(String s) {
        return Integer.parseInt(s);
    }

    private long plong() throws IOException {
        return plong(rd.readLine());
    }

    private long plong(String s) {
        return Long.parseLong(s);
    }



    private long[] longarr() throws IOException {
        return longarr(rd.readLine());
    }

    private long[] longarr(String s) {
        String[] q = split(s);
        int n = q.length;
        long[] a = new long[n];
        for(int i=0;i<n;i++) {
            a[i] = Long.parseLong(q[i]);
        }
        return a;
    }

    private String[] split(String s) {
        int n = s.length();
        int sp = 0;
        for(int i=0;i<n;i++) {
            if(s.charAt(i)==' ') {
                sp++;
            }
        }
        String[] res = new String[sp+1];
        int last = 0;
        int x = 0;
        for(int i=0;i<n;i++) {
            char c = s.charAt(i);
            if(c == ' ') {
                res[x++] = s.substring(last,i);
                last = i+1;
            }
        }
        res[x] = s.substring(last,n);
        return res;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemE();
    }
}
