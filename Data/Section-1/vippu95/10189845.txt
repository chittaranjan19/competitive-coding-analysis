#include<bits/stdc++.h>
using namespace std;
 
#define lli long long int
#define pb push_back
const lli limit = 100005;
const lli upto = 10001;

lli a[limit];
vector<lli> primes;
bool check[upto];

void seive(){
	for(lli i=2;i<upto;i++){
		if(!check[i]){
			primes.pb(i);
			for(lli j=2*i;j<upto;j+=i)
				check[j]=true;
		}
	}
	return;	
}

lli cube(lli n){
	lli ans = n*n*n;
	return ans;
}

bool solve(lli n){
	lli ans = 1;
	int sz = primes.size();
	for(int i=0;i<sz;i++){
		if(cube(primes[i]) > n) break;
		lli p = primes[i];
		int cnt = 0;
		while(n%p==0){
			cnt++;
			n=n/p;
		}
		ans *= (cnt+1LL);
		if(ans > 3) return false;
	}
	if(ans > 3) return false;
	if(n!=1LL){
		lli p = sqrt(n);
		if(p*p == n){
			ans *= 3;
		}
		else{
			ans *= 4;
		}
	}
	if(ans != 3) return false;
	return true;
}

int main(){
	int n;
	seive();
	//cout<<primes.size();
	scanf("%d",&n);
	for(int i=0;i<n;i++)
		scanf("%I64d",&a[i]);
	
	for(int i=0;i<n;i++){
		bool res = solve(a[i]);
		if(res)
			printf("YES\n");
		else
			printf("NO\n");
		
	}
}
