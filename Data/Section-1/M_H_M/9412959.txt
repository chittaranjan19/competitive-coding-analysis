#include <iostream>
#include <vector>

using namespace std;

const int maxn= 100 * 1000;

int n,a[maxn],b[maxn],c[maxn],d[maxn];
vector <pair <int , int> > vec;
int sum;
pair<int , int> tmp;

void dfs(int k){
    unsigned char f=c[k];
    unsigned char g=b[k];
    int t = (int)f^g;
    tmp.first = t;tmp.second = k;
    vec.push_back(tmp);
    sum++;

    f = c[k];
    g = t;
    c[k] = (int)f^g;

    f = c[t];
    g = k;
    c[t] = (int)f^g;
    
    d[k]--;
    d[t]--;
    
    if(d[t] == 1)
        dfs(t);
}

int main(){
    cin >> n;
    for(int i = 0; i < n; ++i){
        cin >> a[i] >> b[i];
        d[i] = a[i];
    }
    for(int i = 0; i < n; ++i){
        if(d[i] == 1){
            dfs(i);
        }
    }
    cout << sum << endl;
    for(int i = 0; i < sum; ++i)
        cout << vec[i].first << " " << vec[i].second << endl;
    return 0;
}