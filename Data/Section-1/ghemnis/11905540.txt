#include <bits/stdc++.h>

#define fr for(i=0;i<n;i++)
#define st first
#define nd second
#define pb push_back
#define PB pop_back()
#define sqr(a) (((a) * (a)))
#define mp make_pair

using namespace std;

typedef long long int LL;
typedef pair<int,int> pii;
typedef vector<int> vi;

class node
{
	public :
		vi near;
};

bool df[3025][4]={0};

int n,m,i,j,k,l,T;
char a[55][55];
node p[3025];

void dfs(int i,int j)
{
    df[i][j]=1;
    vi v=p[i].near;
    for(int k=0;k<v.size();k++)
    {
        if(df[v[k]][j]==0)dfs(v[k],j);
    }
}

int main ()
{
    scanf("%d %d",&n,&m);
    fr
    {
        scanf("%s",&a[i]);
    }
    fr
    {
        if(a[i][0]==a[i][1])p[i*m].near.pb(i*m+1);
        for(j=1;j<m-1;j++)
        {
            if(a[i][j]==a[i][j+1])p[i*m+j].near.pb(i*m+j+1);
            if(a[i][j]==a[i][j-1])p[i*m+j].near.pb(i*m+j-1);
        }
        if(a[i][m-2]==a[i][m-1])p[i*m+m-1].near.pb(i*m+m-2);
    }

    for(i=0;i<m;i++)
    {
        if(a[0][i]==a[1][i])p[0*m+i].near.pb(i*m+1);
        for(j=1;j<n-1;j++)
        {
            if(a[j][i]==a[j][i+1])p[j*m+i].near.pb((j+1)*m+i);
            if(a[j][i]==a[j][i-1])p[j*m+i].near.pb((j-1)*m+i);
        }
        if(a[m-2][i]==a[m-1][i])p[(m-1)*m+i].near.pb((m-2)*m+i);
    }

    for(i=0;i<n*m;i++)
    {
        for(j=0;j<3025;j++){df[j][0]=0;df[j][1]=0;df[j][2]=0;df[j][3]=0;}
        df[i][0]=1;df[i][1]=1;df[i][2]=1;df[i][3]=1;
        vi v=p[i].near;
        for(int j=0;j<v.size();j++)
        {
            dfs(v[j],j);
        }
        for(int l=0;l<n*m;l++)
        {
            if(l!=i){if(df[l][0]+df[l][1]+df[l][2]+df[l][3]>1){cout<<"YES";return 0;}}
        }
    }
    cout<<"NO";
}
