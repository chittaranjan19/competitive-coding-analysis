#include <iostream>
#include <list>

using namespace std;

int n,m;

list<int> h[200000];
int anc[200000];

int x,y;

int dfs(int k, bool sz) {
    if(h[k].empty()) return 1;

    if(sz) {
        int ret = 0;
        for(int i:h[k]) ret += dfs(i,!sz);
        return ret;
    } else {
        int ret = m+1;
        for(int i:h[k]) ret = min(ret,dfs(i,!sz));
        return ret;
    }
}

int main()
{
    ios::sync_with_stdio(0);

    cin >> n;

    for(int i=0; i<n-1; i++) {
        cin >> x >> y;
        x--; y--;
        h[x].push_back(y);
        anc[y] = x;
    }

    for(int i=0; i<n; i++) m += h[i].empty();

    int ans1 = dfs(0,0);
    int ans2 = dfs(0,1);

    cout << ((m+1)-ans1) << " " << ans2 << endl;

    return 0;
}
