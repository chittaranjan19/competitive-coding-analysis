#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;
typedef vector<vector<ll> > matrix;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 1000010;

ll ft[maxn];
int n, dp[maxn], arr[maxn];

int mult(int a, int b)
{
	ll ret = a;
	ret = (ret*b)%mod;
	a = ret;
	return a;
}

void update(int idx, int val)
{
	while(idx<maxn){
		ft[idx] = (ft[idx] + val)%mod;
		idx += (idx&(-idx));
	}
}

int query(int idx)
{
	int ret = 0;
	while(idx > 0){
		ret = (ret + ft[idx])%mod;
		idx -= (idx&(-idx));
	}
	return ret;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int i, j, ans = 0;
	scanf("%d", &n);
	for(i=1; i<=n; i++){
		scanf("%d", &arr[i]);
		int sum = (query(arr[i]) + 1)%mod;
		int sub = (query(arr[i]) - query(arr[i]-1) + mod)%mod;
		dp[i] = mult(sum, arr[i]);
		dp[i] = (dp[i] - sub + mod)%mod;
		update(arr[i], dp[i]);
		ans = (ans + dp[i])%mod;
	}
	printf("%d\n", ans);
	return 0;
}
