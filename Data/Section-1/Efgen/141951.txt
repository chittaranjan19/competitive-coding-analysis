import java.io.*;
import java.util.*;
import java.math.*;

public class Task {
	// static final String FileName = "test";


	void solve() throws IOException {
		char[] s1 = next().toCharArray();
		char[] s2 = next().toCharArray();
		int n = nextInt();
		int sz = 26;
		int[][] a = new int[sz][sz];
		for (int[] aa:a) Arrays.fill(aa, inf);
		for (int i=0; i<sz; i++) a[i][i] = 0;
		while (n-->0) {
			int c1 = next().charAt(0)-'a';
			int c2 = next().charAt(0)-'a';
			a[c2][c1] = a[c1][c2] = Math.min(a[c1][c2], nextInt());			
		}
		
		if (s1.length==s2.length) {
			int len = s1.length;
			char[] res = new char[len];
			long w = 0;
			for (int i=0; i<len; i++) {
				int c1 = s1[i]-'a';
				int c2 = s2[i]-'a';
				int min = inf;
				int cc = -1;
				for (int c=0; c<sz; c++) {
					if (a[c1][c]+a[c2][c]<min) {
						min = a[c1][c]+a[c2][c];
						cc = c;
					}
				}
				if (min<inf) { res[i] = (char)(cc+'a'); w+=min; } else {
					out.print(-1);
					return;
				}
			}
			out.println(w);
			for (char cc:res) out.print(cc);
			return;
		}
		out.print(-1);
	}
	
	


	static final int inf = 1000000000;
	BufferedReader br;
	StringTokenizer st;
	PrintWriter out;
	
	public void run() {
		try {
			// br = new BufferedReader(new FileReader(FileName+".in"));
			// out = new PrintWriter(FileName+".out");
			br = new BufferedReader(new InputStreamReader(System.in));
			out = new PrintWriter(System.out);
			//br = new BufferedReader(new FileReader("input.txt"));
			//out = new PrintWriter("output.txt");
			solve();
			br.close();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

	String next() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			String s = br.readLine();
			if (s == null)
				return null;
			st = new StringTokenizer(s);
		}
		return st.nextToken();
	}

	double nextDouble() throws IOException {
		return Double.parseDouble(next());
	}

	int nextInt() throws IOException {
		return Integer.parseInt(next());
	}

	long nextLong() throws IOException {
		return Long.parseLong(next());
	}

	public static void main(String[] args) {	
		new Task().run();
	
	}
}



