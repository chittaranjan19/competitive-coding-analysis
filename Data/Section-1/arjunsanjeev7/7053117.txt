// Milking Cows

#include <algorithm>
#include <bits/stdc++.h>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

int main()
{
	long long int n,left=0,right=0,Lptr,Rptr,ans=0,i;
	cin>>n;
	long long int R[n+1],L[n+1],flag[n],arr[n];
	R[0]=0;
	L[n-1]=0;
	for(i=0;i<n;i++)
	{
		cin>>arr[i];
		if(arr[i]==0)
		{
			left++;
			R[i+1]=R[i];
		}
		else 
		{
			right++;
			R[i+1]=R[i]+1;
		}
		flag[i]=0;
	}
	for(i=n-1;i>0;i--)
	{
		if(arr[i]==0) L[i-1]=L[i]+1;
		else L[i-1]=L[i];
	}
	Lptr=n-1;
	Rptr=0;
	int x=0,y=0;
	while(left!=0 || right!=0)
	{
		while(left>right)
		{x++;
			while(arr[Lptr]!=0 || flag[Lptr]!=0) Lptr--;
			flag[Lptr]=1;
			ans+=(R[Lptr]>=y)?(R[Lptr]-y):(0);
			left--;
		}
		while(left<=right)
		{y++;
			if(right==0) {int f=1; break;}
			while(arr[Rptr]!=1 || flag[Rptr]!=0) Rptr++;
			flag[Rptr]=1;
			ans+=(L[Rptr]>=x)?(L[Rptr]-x):(0);
			right--;
		}
	}
	cout<<ans<<endl;
	return 0;
}