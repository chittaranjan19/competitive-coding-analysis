/*

┏┛┻━━━┛┻┓
┃｜｜｜｜｜｜｜┃
┃　　　━　　　┃
┃　┳┛　┗┳　┃
┃　　　　　　　┃
┃　　　┻　　　┃
┃　　　　　　　┃
┗━┓　　　┏━┛
　　┃　　　┃　　
　　┃　　　┃　　
　　┃　　　┃　 　
　　┃　　　┃
　　┃　　　┗━━━┓
　　┃world_finals! ┃
　　┃感觉自己萌萌哒┃
　　┗┓┓┏━┳┓┏┛
　　　┃┫┫　┃┫┫
　　　┗┻┛　┗┻┛
*/

#include <cstdio>
#include <iostream>
#include <cstring>
#include <string>
#include <algorithm>
#include <cctype>
#include <stack>
#include <map>
#include <set>
#include <iomanip>
#include <cstdlib>
#include <queue>
#include <ctime>
#include <cmath>
using namespace std;
typedef long long ll;
const int maxn=505;
int a[maxn],dp[maxn][maxn];
const int inf=100000000;
int main()
{
   int n;
   while(scanf("%d",&n)!=EOF)
   {
       for(int i=1;i<=n;i++) scanf("%d",&a[i]);
       for(int i=0;i<maxn;i++)
        for(int j=0;j<maxn;j++)
            dp[i][j]=inf;

       for(int i=1;i<=n;i++) dp[i][i]=1;

       for(int w=1;w<n;w++)
           for(int i=1;i+w<=n;i++)
           {
               int j=i+w;
               if(w==1)
               {
                   if(a[i]==a[j]) dp[i][j]=1;
                   else dp[i][j]=2;
               }
               else
               {
                   if(a[i]==a[j]) dp[i][j]=min(dp[i][j],dp[i+1][j-1]);
                   else
                   {
                       for(int k=i;k<j;k++)
                        dp[i][j]=min(dp[i][j],dp[i][k]+dp[k+1][j]);
                   }
               }
           }
        cout<<dp[1][n]<<endl;
   }
    return 0;
}