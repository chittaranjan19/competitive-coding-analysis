#include<bits/stdc++.h>
#define MAXN 200009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define ff first
#define cs(x,y) cout<<"Case "<<y<<": "<<x<<endl;
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
char rr[]={'a', 'e', 'i', 'o', 'u'};
int pv[MAXN],pc[MAXN],mx,n;
string a;
vector<int>s;
int calc(int k){
	int b=0;
	for(int i=k;i<=n;i++){
		if(pv[i]-pv[i-k]>=0)
			b++;
	return b;
}
int binary_search(int h,int st,int en){
	while(st<en){
		int mid=(st+en)>>1;
		if(pv[h]>=pv[s[mid]])
			en=mid;
		else
			st=mid+1;	
	}
	mx=max(mx,h-s[st]);
}
int main(){
	cin>>a;
	n=a.size();
	for(int i=1;i<=n;i++){
		a[i-1]=tolower(a[i-1]);
		int d=0;
		for(int j=0;j<5;j++)
			if(a[i-1]==rr[j])
				d=1;
		if(d)pv[i]=-1;	
		else pv[i]=2;
		pv[i]+=pv[i-1];			
	}
	s.pb(0);
	for(int i=1;i<=n;i++){
		if(pv[i]>=pv[s.back()])
			binary_search(i,0,s.size()-1);
		if(pv[i]<pv[s.back()])
			s.pb(i);
	}
	if(mx==0)
		cout<<"No solution"<<endl;
	else	
		cout<<mx<<" "<<calc(mx)<<endl;
	return 0;
}