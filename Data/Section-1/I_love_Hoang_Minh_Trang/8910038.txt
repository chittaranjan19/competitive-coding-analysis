const   fi      ='';
        fo      ='';
        maxN    =1000;

var     n       :longint;
        a       :array[1..maxN] of longint;
        l       :longint;
procedure QS(l,r:longint);
var     i, j, x, tg:longint;
begin
        i:=l;j:=r;x:=a[(i+j) div 2];
        repeat
                while a[i]<x do inc(i);
                while a[j]>x do dec(j);
                if i<=j then
                        begin
                                tg:=a[i];a[i]:=a[j];a[j]:=tg;
                                inc(i);
                                dec(j);
                        end;
        until i>j;
        if l<j then QS(l,j);
        if i<r then QS(i,r);
end;

function ok(x:real):boolean;
var     i       :longint;
begin
        ok:=true;
        if x<a[1] then exit(false);
        if a[n]+x<l then exit(false);
        for i:=1 to n-1 do
                if a[i]+x*2<a[i+1] then exit(false);
end;

procedure xuly;
var     d, c,g,ans:real;
        tmp     :real;
        dem     :longint;
begin
        QS(1,n);
        d:=0;c:=trunc(1e9);
        ans:=0;
        tmp:=0.0000000001;
        dem:=0;

        while d<=c do
                begin
                        g:=(d+c)/2;
                        inc(dem);
                        if ok(g) then
                                begin
                                        ans:=g;
                                        c:=g-tmp;
                                end
                        else d:=g+tmp;
                end;
        writeln(ans:0:9);
       // writeln(demy);
end;

procedure run;
var     i :longint;
begin
        assign(input,fi);assign(output,fo);
        reset(input);rewrite(output);
        readln(n, l);
        for i:=1 to n do read(a[i]);
        xuly;
        close(input);close(output);

end;
begin
        run;
end.
