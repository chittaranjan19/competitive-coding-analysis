#include <iostream>
#include <cstdio>
#include <ctime>
#include <cstdlib>
#include <vector>
#include <string>
#include <fstream>
#include <algorithm>
#include <cstring>
#include <bitset>
#include <cstring>
#include <deque>

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector< ii > vii;
///////////////////////////////UTIL/////////////////////////////////
#define ALL(x) (x).begin(),x.end()
#define CLEAR0(v) memset(v, 0, sizeof(v))
#define CLEAR(v, x) memset(v, x, sizeof(v))
#define COPY(a, b) memcpy(a, b, sizeof(a))
#define CMP(a, b) memcmp(a, b, sizeof(a))
#define REP(i,n) for(int i = 0; i<n; i++)
#define REPP(i,a,n) for(int i = a; i<n; i++)
#define REPD(i,n) for(int i = n-1; i>-1; i--)
#define REPDP(i,a,n) for(int i = n-1; i>=a; i--)
#define MOD 1000000007LL
#define PI 3.1415926535897932384626
#define MAX_PRIME 11111

int n, b;
ii a[210000];
ii o[210000];

int main(){
	scanf(" %d %d ", &n, &b);
	REP(i, n){
		scanf(" %d %d ", &a[i].first, &a[i].second);
		a[i].second += a[i].first;
	}
	deque<int> ft; ft.push_back(a[0].second);
	REPP(i, 1, n){
		if(ft.size() == b+1 && ft.front() > a[i].first) a[i].second = -1;
		else{
			a[i].second += max(0, ft.back() - a[i].first);
			ft.push_back(a[i].second);
			if(ft.size() > b+1) ft.pop_front();
		}		
	}
	printf("%d", a[0].second);
	REPP(i, 1, n) printf(" %d", a[i].second);
	printf("\n");
}


