#include <iostream>
#include <cstdio>
#include <ctime>
#include <cstdlib>
#include <vector>
#include <string>
#include <fstream>
#include <algorithm>
#include <cstring>
#include <bitset>
#include <cstring>

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector< ii > vii;
///////////////////////////////UTIL/////////////////////////////////
#define ALL(x) (x).begin(),x.end()
#define CLEAR0(v) memset(v, 0, sizeof(v))
#define CLEAR(v, x) memset(v, x, sizeof(v))
#define COPY(a, b) memcpy(a, b, sizeof(a))
#define CMP(a, b) memcmp(a, b, sizeof(a))
#define REP(i,n) for(int i = 0; i<n; i++)
#define REPP(i,a,n) for(int i = a; i<n; i++)
#define REPD(i,n) for(int i = n-1; i>-1; i--)
#define REPDP(i,a,n) for(int i = n-1; i>=a; i--)
#define MOD 1000000007LL
#define PI 3.1415926535897932384626
#define MAX_PRIME 11111
#define INF 1000000000

int twos[1111111];
int fives[1111111];
int ans[1111111];
int n;

int main(){
	twos[1] = fives[1] = 0;
	REP(i, 1001000) ans[i] = INF;
	for(int i = 2; min(twos[i-1], fives[i-1]) <= 101000; i++){
		int two = 0, five = 0;
		int x = i;
		int mn =  min(twos[i-1], fives[i-1]);
		ans[mn] = min(ans[mn], i-1);
		
		while((x%2) == 0){ x /= 2; two++; }
		while((x%5) == 0){ x /= 5; five++; }
		twos[i] = two + twos[i-1];
		fives[i] = five + fives[i-1];	
		
	}
	while(cin >> n){
		int l = n, r = n+1;
		if(ans[l] == INF){
			cout << "0\n";
		}
		else{
			while(ans[r] == INF) r++;
			int k = ans[r] - ans[l];
			cout << k << endl;
			REPP(i, ans[l], ans[r]){
				if(i != ans[l]) cout << " ";
				cout << i;
			}
			cout << endl;
		}
	}
}


