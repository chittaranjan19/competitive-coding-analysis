#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
// #include <multimap>
#include <utility>
#define MAXN 100010
#define INF 0x7FFFFFFF
#define msg(a) cout<<#a<<" : "<<a<<endl;
typedef long long int LL;
using namespace std;

int v[MAXN];
LL SA[MAXN];
map <int, int> M;
map <int, int>::iterator it;

multimap <LL, short> MM;
multimap <LL, short>::iterator it1;

void mostrars(){
	for( map <int, int>::iterator it = M.begin(); it!=M.end(); it++ ){
		cout<<"("<<(*it).first<<", "<<(*it).second<<")"<<endl;
	}
}

int main(){
	int n, e, a, b, c, d, L, R;
	v[0] = SA[0] = 0;
	
	cin>>n;
	for(int i=1; i<=n; i++) cin>>v[i], SA[i]=v[i]+SA[i-1];

	M[1] = n; MM.insert(make_pair(SA[n], 1));
	for(int i=1; i<=n; i++){
		cin>>e;
		it = M.upper_bound( e ); it--;
		L = (*it).first; R = (*it).second;
		it1 = MM.find( SA[R] - SA[L-1] );
		a = L; b = e-1;
		c = e+1; d = R;

		MM.erase(it1);
		// MMg(a);MMg(b);MMg(c);MMg(d);
		if( a<=b && c<=d ){
			M[a] = b; M[c] = d;
			MM.insert(make_pair(SA[b]-SA[a-1], 1));
			MM.insert(make_pair(SA[d]-SA[c-1], 1)); 
		}else{
			if( a<=b ) { M[a] = b; MM.insert( make_pair(SA[b]-SA[a-1], 1) ); }
			else
				if( c<=d ) {M.erase(it); M[c] = d; MM.insert( make_pair(SA[d]-SA[c-1], 1) );}
		}
		// mostrars();
		if( MM.size()==0 ) cout<<"0\n";
		else{
			it1 = MM.end(); it1--; cout<<(*it1).first<<endl;
		}

	}
	return 0;
}
