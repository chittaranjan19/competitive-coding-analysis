#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <queue> 
#define N 210
#define ll long long
#define MIN 1e-9
#define eps 1e-7 
#define pi acos(-1)
using namespace std;
struct node
{
	int u, v;
	friend bool operator < (node a, node b)
	{
		if (a.u == b.u)	return a.v < b.v;
		return a.u < b.u;
	}
}edge[200005];
int n, m, ans[100005], deg[100005];
int main()
{
#ifndef ONLINE_JUDGE
	freopen("1.txt", "r", stdin);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0);
	int i, j, k, t, tt;
	cin >> n >> m;
	memset(deg, 0, sizeof(deg));
	for(i = 0; i < m; i++)
	{
		cin >> t >> tt;
		if (t > tt)
		{
			t = t + tt;
			tt = t - tt;
			t = t - tt;
		}
		deg[t]++;
		deg[tt]++;
		edge[i].u = t;
		edge[i].v = tt;
	}
	sort(edge, edge+m);
	for (i = 1; i <= n; i++)	ans[i] = 1;
	for (i = 0; i < m; i++)
		ans[edge[i].v] = max(ans[edge[i].v], ans[edge[i].u]+1);
//	for (i = 1; i <= n; i++)	cout << i << "  " << ans[i] << "  " << deg[i] << endl;
	for (i = 1; i <= n; i++)	ans[i] *= deg[i];
	t = 0;
	for (i = 1; i <= n; i++)	t = max(t, ans[i]);
	cout << t << endl;
	return 0;
}
