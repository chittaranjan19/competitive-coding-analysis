#include <bits/stdc++.h>

#define f first
#define s second
#define mp make_pair
#define rank    something_which_is_supposed_to_be_rank
#define left    something_which_is_supposed_to_be_left
#define right   something_which_is_supposed_to_be_right

using namespace std;

typedef unsigned int uint;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

struct beacon {
    int a, b;

    beacon(){};

    beacon(int _a, int _b) {
        a = _a, b = _b;
    };
};

bool operator<(beacon cur, beacon other) {
    return cur.a < other.a;
}

const int N = 1e5 + 1, INF = 2e6 + 179;

int n, d[N], ans = N;
beacon beacons[N];

int find(int l, int r, int x) {
    for (int m; l + 1 < r; ) {
        m = (l + r) >> 1;
        if (beacons[m].a < x) {
            l = m;
        } else {
            r = m;
        }
    }
    return l;
}

int main() {
    cin.sync_with_stdio(0);
    cin.tie(0);
    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> beacons[i].a >> beacons[i].b;
    }
    beacons[n] = {-INF, 0};
    sort(beacons, beacons + n + 1);
    for (int i = 1; i <= n; ++i) {
        int j = find(0, i, beacons[i].a - beacons[i].b);
        d[i] = d[j] + i - 1 - j;
        // cerr << d[i] << " " << j << "\n";
        ans = min(ans, n - i + d[i]);
    }
    cout << ans << "\n";
    cerr << "Time elapsed: " << (ld) clock() / CLOCKS_PER_SEC << "\n";
    return 0;
}