#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 100005
#define maxC 1000000007
#define pb push_back
#define F first
#define S second
#define mp make_pair
#define belong(x) ((x + sqt - 1) / sqt)

using namespace std;
int n, sqt, num[mn][320], t[mn], q[mn];
int tim[mn], job[mn], allTime[mn];
map<int, int> mapTime, mapVal;

void setup()
{
    cin >> n;
    sqt = sqrt(n);
    int r = 0;
    FOR(i, 1, n)
    {
        cin >> t[i] >> tim[i] >> job[i];
        allTime[i] = tim[i];
        if (!mapVal[job[i]])
            mapVal[job[i]] = ++ r;
        job[i] = mapVal[job[i]];
    }
    sort(allTime + 1, allTime + n + 1);
    r = 0;
    FOR(i, 1, n)
    if (allTime[i] != allTime[i - 1])
        mapTime[allTime[i]] = ++ r;
}

void xuly()
{
    FOR(i, 1, n)
    {
        tim[i] = mapTime[tim[i]];
        int group = belong(tim[i]);
        if (t[i] == 1)
        {
            num[job[i]][group] ++;
            q[tim[i]] = job[i];
        }
        if (t[i] == 2)
        {
            num[job[i]][group] --;
            q[tim[i]] = - job[i];
        }
        if (t[i] == 3)
        {
            int ans = 0;
            FOR(j, 1, group - 1)
                ans += num[job[i]][j];
            FOR(j, sqt * (group - 1) + 1, tim[i] - 1)
            if (abs(q[j]) == job[i])
                ans += (q[j] < 0? -1 : 1);
            cout << ans << '\n';
        }
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
