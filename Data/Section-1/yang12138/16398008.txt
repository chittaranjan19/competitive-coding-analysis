/*
    ━━━━━┒
    ┓┏┓┏┓┃让老子先跳！
    ┛┗┛┗┛┃＼○／
    ┓┏┓┏┓┃ //
    ┛┗┛┗┛┃ノ)
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┃┃┃┃┃┃
    ┻┻┻┻┻┻
*/
#include <cstdio>
#include <iostream>
#include <cstring>
#include <string>
#include <algorithm>
#include <cctype>
#include <stack>
#include <map>
#include <set>
#include <iomanip>
#include <cstdlib>
#include <queue>
#include <ctime>
#include <cmath>
using namespace std;
typedef long long ll;
char a[100001][1001],son[100001][1001],text[10001];
int ok,n,m;
void dfs(int now,char ans[20005])
{
    if(now==n)
    {
        printf("%s\n",ans);
        ok=1;
        return ;
    }
    for(int i=0;i<m&&!ok;i++)
    {
        char temp[1001];
        int l=strlen(son[i]);
        for(int j=0;j<l&&now+j<n;j++) temp[j]=text[now+j];
        temp[l]='\0';
        if(strcmp(temp,son[i])==0)
        {
            char ss[2005];
            strcpy(ss,a[i]);
            strcat(ss," ");
            strcat(ans,ss);
            dfs(now+l,ans);
        }
    }
}
int main()
{
    ok=0;
    scanf("%d%s%d",&n,text,&m);
    for(int i=0;i<m;i++)
    {
        scanf("%s",a[i]);
        strcpy(son[i],a[i]);
        int l=strlen(son[i]);
        for(int j=0;j<l;j++) son[i][j]=tolower(son[i][j]);
        reverse(son[i],son[i]+l);
    }
    char ans[20005]="\0";
    dfs(0,ans);
    return 0;
}
