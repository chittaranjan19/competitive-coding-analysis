#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 2005
#define maxC 1000000007
#define pb push_back
#define F first
#define S second
#define mp make_pair
#define mid ((l + r) >> 1)
#define lc (id << 1)
#define rc (lc + 1)

using namespace std;
int n, m, a[mn], b[mn], num[mn], fin[mn];
stack<int> need;

void setup()
{
    cin >> n >> m;
    FOR(i, 1, n)
    {
        cin >> a[i];
        b[i] = min(a[i], m + 1);
        num[b[i]] ++;
    }
    FOR(i, 1, m + 1)
        fin[i] = num[i];
}

bool ok(int x)
{
    int dem = 0;
    FOR(i, 1, m)
        dem += num[i] - x;
    dem += num[m + 1];
    return (dem >= 0);
}

void xuly()
{
    int l = 0, r = n + 1;
    while(r - l > 1)
    {
        if (ok(mid))
            l = mid;
        else
            r = mid;
    }
    cout << l << ' ';
    FOR(i, 1, m)
    if (num[i] < l)
        need.push(i);
    int change = 0;
    FOR(i, 1, n)
    if ((num[b[i]] > l || b[i] > m) && need.size())
    {
        num[b[i]] --;
        a[i] = need.top();
        if (++ num[a[i]] == l)
            need.pop();
        change ++;
    }
    cout << change << '\n';
    FOR(i, 1, n)
        cout << a[i] << ' ';

}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
