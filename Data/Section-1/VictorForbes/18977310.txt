#include <bits/stdc++.h>

#define PI 3.14159265358979323846
#define INF_1 0x3f // 0011 1111
#define INF_2 0x7f // 0111 1111

#define N 65537

using namespace std;

typedef unsigned long long ull;
typedef unsigned int ui;
typedef long long ll;

struct Vertex{
	int index, deg, s;

	bool operator < (Vertex b) const{
		return b.deg < deg;
	}
};

vector <int> g[N];
priority_queue <Vertex> pq;
int n, m;

int main(void){
	int i, j, deg, s;
	Vertex cur;
	
	scanf("%d", &n);

	for (i = 0; i < n; i++){
		scanf("%d%d", &deg, &s);

		cur.index = i;
		cur.deg = deg;
		cur.s = s;

		pq.push(cur);

		m += deg;
	}

	m /= 2;

	while (!pq.empty()){
		cur = pq.top();
		pq.pop();

		if (cur.deg - g[cur.index].size() == 1){
			for (j = 0; j < (int)g[cur.index].size(); j++){
				cur.s = cur.s ^ g[cur.index][j];
			}

			g[cur.index].push_back(cur.s);
			g[cur.s].push_back(cur.index);
		}
	}

	printf("%d\n", m);

	for (i = 0; i < n; i++){
		for (j = 0; j < (int)g[i].size(); j++){
			if (i < g[i][j]){
				printf("%d %d\n", i, g[i][j]);
			}
		}
	}

	return 0;
}