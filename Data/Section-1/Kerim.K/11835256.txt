/*
PROG:kerim
LANG:C++
*/
#include<bits/stdc++.h>
#define MAXN 200009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define ff first
#define ss second
#define all(x) (x.begin(),x.end())
#define pb(x) push_back(x)
#define ppb() pop_back()
#define all(x) (x.begin(),x.end())
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<ll,ll> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
vector< pair<PII,ll> >v;
multiset<PII>s;
ll n,m,x[MAXN],le,y[MAXN],ans[MAXN];
PII ld(ll k)
{return *s.lower_bound(mp(k,-1));}
int main()
{
	cin>>n>>m;
	for(int i=0;i<n;i++)
		cin>>x[i]>>y[i];
	for(int i=1;i<n;i++)
		v.pb(mp(mp(y[i]-x[i-1],x[i]-y[i-1]),i));
	for(int i=0;i<m;i++)
		cin>>le,s.insert(mp(le,i+1));	
	sort(v.begin(),v.end());		
	for(int i=0;i<v.size();i++)
	{
		PII cap=ld(v[i].ff.ss);
		if(cap==*s.end() || cap.ff>v[i].ff.ff)
			{cout<<"No\n";return 0;}
		ans[v[i].ss]=cap.ss;
		s.erase(cap);
	}
	cout<<"Yes\n";
	for(int i=1;i<n;i++)
		cout<<ans[i]<<" ";
	return 0;
}
