#include<bits/stdc++.h>
using namespace std;

#define int long long

const int MAXN=6000;
const int MOD=1e9+7;

int n;
int size;
int sz[MAXN],p[MAXN],h[MAXN];
vector<int> ver[MAXN];
bitset<MAXN> dp[MAXN],res;
inline void solve(int v)
{
	dp[v][0]=true;
    for(int i=0;i<size;i++)
        dp[v]|=dp[v]<<h[i];
    res|=dp[v];
}

void dfs(int v, int par=0){
	sz[v]=1;
	p[v]=par;
	for(auto u:ver[v])
		if(u!=par){
			dfs(u,v);
			sz[v]+=sz[u];
		}
}


main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin>>n;
	for(int i=1;i<n;i++){
		int x,y;
		cin>>x>>y;
		ver[x].push_back(y);
		ver[y].push_back(x);
	}
	dfs(1);
	for(int i=1;i<=n;i++){
		size=0;
		h[size++]=n-sz[i];
		for(auto u:ver[i])
			if(u!=p[i])
				h[size++]=sz[u];
		solve(i);
	}
	int ans=0;
	for(int i=1;i<n-1;i++)ans+=res[i];
	cout<<ans<<'\n';
	for(int i=1;i<n-1;i++)
		if(res[i])cout<<i<<' '<<n-i-1<<'\n';
}
