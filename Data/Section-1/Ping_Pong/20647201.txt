#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

#define ll long long
#define ld long double

using namespace std;

const ll inf = (ll)2 * 1e9;
const ll MOD = (ll)1e9 + 7;
const ll P = 239;
const ll MAX_N = 500000;
const ll ABC = 2;
const long double pi = 3.1415926535897932384626;
const long double eps = 1e-6;

string f(ll x)
{
    string res = "";
    for (ll i = 0; i < 18; i++)
    {
        res += (char)(x % 2 + '0');
        x /= 10;
    }
    reverse(res.begin(), res.end());
    return res;
}

string f(string s)
{
    string res = "";
    for (ll i = 0; i < 18 - s.size(); i++)
        res += '0';
    return res + s;
}

ll nv = 1;
vector<vector<ll> > go(1, vector<ll> (ABC, -1));
vector<ll> cnt(1, 0);

ll add_str(string s)
{
    ll curr = 0;
    for (ll c : s)
    {
        c -= '0';
        if (go[curr][c] == -1)
        {
            go[curr][c] = nv++;
            go.push_back(vector<ll> (ABC, -1));
            cnt.push_back(0);
        }
        curr = go[curr][c];
    }
    return curr;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    ll n;
    cin >> n;
    for (ll i = 0; i < n; i++)
    {
        char c;
        cin >> c;
        if (c == '+')
        {
            ll x;
            cin >> x;
            cnt[add_str(f(x))]++;
        }
        else if (c == '-')
        {
            ll x;
            cin >> x;
            cnt[add_str(f(x))]--;
        }
        else
        {
            string s;
            cin >> s;
            cout << cnt[add_str(f(s))] << endl;
        }
    }
    return 0;
}