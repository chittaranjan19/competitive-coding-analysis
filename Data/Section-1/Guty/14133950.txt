#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int toNumber (string s)
{
	int Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (int number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}




int main()
{
	ios_base::sync_with_stdio(0);
	tint n;
	cin >> n;
	vector<tint> a (n);
	tint suma = 0;
	forn(i,n)
	{
		cin >> a[i];
		suma += a[i];
	}
	tint total = a[n-1];
	if (suma % 3 != 0 or n < 3)
	{
		cout << 0 << endl;
		return 0;
	}
	

	vector<tint> dp (n);
	if (total == suma/3)
		dp[n-1] = 1;
	else
		dp[n-1] = 0;
	forn(i,n-1)
	{
		total += a[n-i-2];
		if (total == suma/3)
			dp[n-i-2]++;
		dp[n-i-2] += dp[n-i-1];
	}
	//imprimirVector(dp);
	total = a[0];
	tint ans = 0;
	forsn(i,1,n-1)
	{
		total += a[i];
		if(total == suma/3)
			ans += dp[i+1];
	}
	
	cout << ans << endl;
	return 0;
}



