#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 4001;

int dp[801][maxn], cost[maxn][maxn], arr[maxn][maxn], pref[maxn][maxn];

void solve(int curk, int l, int r, int left, int right)
{
	if(l>r)
		return;
	int mid = (l+r)>>1;
	int i, curcost, opt_idx, mincost = mod;
	for(i=left; i<=min(mid, right); i++){
		curcost = dp[curk-1][i-1] + cost[i][mid];
		if(curcost<mincost){
			mincost = curcost;
			opt_idx = i;
		}
	}
	dp[curk][mid] = mincost;
	solve(curk, l, mid-1, left, opt_idx);
	solve(curk, mid+1, r, opt_idx, right);
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int i, j, n, k;
	scanf("%d%d", &n, &k);
	for(i=1; i<=n; i++){
		for(j=1; j<=n; j++){
			scanf("%d", &arr[i][j]);
			pref[i][j] = pref[i][j-1] + arr[i][j];
		}
	}
	for(i=1; i<=n; i++){
		for(j=1; j<=n-i+1; j++)
			cost[j][j+i-1] = pref[j][j+i-1] - pref[j][j] + cost[j+1][j+i-1];
	}
	for(i=1; i<=n; i++)
		dp[1][i] = cost[1][i];
	for(i=2; i<=k; i++)
		solve(i, 1, n, 1, n);
	printf("%d\n", dp[k][n]);
	return 0;
}
