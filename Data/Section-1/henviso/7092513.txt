#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <stack>
#include <algorithm>
#include <cctype>
#include <vector>
#include <queue>
#include <tr1/unordered_map>
#include <cmath>
#include <map>
#include <bitset>
#include <set>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int,int> ii;
///////////////////////////////UTIL/////////////////////////////////
#define ALL(x) (x).begin(),x.end()
#define CLEAR0(v) memset(v, 0, sizeof(v))
#define CLEAR(v, x) memset(v, x, sizeof(v))
#define INRANGE0(x, n) ((x) > -1 && (x) < n)
#define INRANGE(x, a, b) ((x) >= a && (x) <= b)
#define COPY(a, b) memcpy(a, b, sizeof(a))
#define CMP(a, b) memcmp(a, b, sizeof(a))
#define REP(i,n) for(int i = 0; i<n; i++)
#define REPP(i,a,n) for(int i = a; i<n; i++)
#define REPD(i,n) for(int i = n-1; i>-1; i--)
#define REPDP(i,a,n) for(int i = n-1; i>=a; i--)
#define pb push_back
#define pf push_front
#define sz size()
#define mp make_pair
/////////////////////////////NUMERICAL//////////////////////////////
#define INCMOD(a,b,c) (((a)+b)%c)
#define DECMOD(a,b,c) (((a)+c-b)%c)
#define ROUNDINT(a) (int)((double)(a) + 0.5)
#define INF 0x3f3f3f3f
#define EPS 1e-11
/////////////////////////////BITWISE////////////////////////////////
#define CHECK(S, j) (S & (1 << j))
#define CHECKFIRST(S) (S & (-S))  //PRECISA DE UMA TABELA PARA TRANSFORMAR EM INDICE
#define SET(S, j) S |= (1 << j)
#define SETALL(S, j) S = (1 << j)-1  //J PRIMEIROS
#define UNSET(S, j) S &= ~(1 << j)
#define TOOGLE(S, j) S ^= (1 << j)
///////////////////////////////64 BITS//////////////////////////////
#define LCHECK(S, j) (S & (1ULL << j))
#define LSET(S, j) S |= (1ULL << j)
#define LSETALL(S, j) S = (1ULL << j)-1ULL  //J PRIMEIROS
#define LUNSET(S, j) S &= ~(1ULL << j)
#define LTOOGLE(S, j) S ^= (1ULL << j)
//scanf(" %d ", &t);

ii a[1000000];
int n;
int ls[1000000];
int le[1000000];

int main(){
    cin >> n;
    REP(i, n){
        cin >> a[i].first;
        a[i].second = i;
    }
    int ans = 1;
    
    sort(a, a+n);
    CLEAR0(ls);
    CLEAR0(le);
    ls[n-1] = 1;
    for(int i = n-2; i>=0; i--){
        if(a[i].first < a[i+1].first && a[i].second == (a[i+1].second-1)) ls[i] = ls[i+1]+1;
        else ls[i] = 1;
    }
    le[0] = 1;
    for(int i = 1; i<n; i++){
        if(a[i-1].first < a[i].first && a[i-1].second == (a[i].second-1)) le[i] = le[i-1]+1;
        else le[i] = 1;
    }
    REP(i, n){
        int x = a[i].second;
        if(x > 0) ans = max(ans, ls[i]+1);
        if(x < n-1) ans = max(ans, le[i]+1);
        if(i + 1 < n && (a[i+1].second - x) == 2 && (a[i+1].first - a[i].first) > 1) ans = max(ans, 1+le[i]+ls[i+1]);
    }
    cout << ans << endl;
}
