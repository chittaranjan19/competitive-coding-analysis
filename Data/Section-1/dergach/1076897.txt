#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <iostream>
#include <vector>
#include <string>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
using namespace std;

#define eps 1e-8

int N, i, j, xa, ya, xb, yb, x[1005], y[1005], r[1005], cnt, d;

int main()
{
    cin >> xa >> ya >> xb >> yb;
    cin >> N;
    for(i = 0; i < N; i++)
        scanf("%d %d %d", &x[i], &y[i], &r[i]);

    for(i = min(xa, xb); i <= max(xa, xb); i++)
    {
        for(j = 0; j < N; j++)
        {
            d = (i - x[j]) * (i - x[j]) + (ya - y[j]) * (ya - y[j]);
            if(d <= r[j] * r[j])
                break;
        }
        if(j == N)
            cnt++;
    }

    for(i = min(xa, xb); i <= max(xa, xb); i++)
    {
        for(j = 0; j < N; j++)
        {
            d = (i - x[j]) * (i - x[j]) + (yb - y[j]) * (yb - y[j]);
            if(d <= r[j] * r[j])
                break;
        }
        if(j == N)
            cnt++;
    }

    for(i = min(ya, yb) + 1; i < max(ya, yb); i++)
    {
        for(j = 0; j < N; j++)
        {
            d = (xa - x[j]) * (xa - x[j]) + (i - y[j]) * (i - y[j]);
            if(d <= r[j] * r[j])
                break;
        }
        if(j == N)
            cnt++;
    }

    for(i = min(ya, yb) + 1; i < max(ya, yb); i++)
    {
        for(j = 0; j < N; j++)
        {
            d = (xb - x[j]) * (xb - x[j]) + (i - y[j]) * (i - y[j]);
            if(d <= r[j] * r[j])
                break;
        }
        if(j == N)
            cnt++;
    }

    printf("%d\n", cnt);
    return 0;
}