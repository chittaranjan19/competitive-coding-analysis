#include <iostream>
#include <cstdio>
#include <ctime>
#include <cstdlib>
#include <vector>
#include <string>
#include <fstream>
#include <algorithm>
#include <cstring>
#include <bitset>
#include <cstring>
#include <set>
#include <map>

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector< ii > vii;
///////////////////////////////UTIL/////////////////////////////////
#define ALL(x) (x).begin(),x.end()
#define CLEAR0(v) memset(v, 0, sizeof(v))
#define CLEAR(v, x) memset(v, x, sizeof(v))
#define COPY(a, b) memcpy(a, b, sizeof(a))
#define CMP(a, b) memcmp(a, b, sizeof(a))
#define REP(i,n) for(int i = 0; i<n; i++)
#define REPP(i,a,n) for(int i = a; i<n; i++)
#define REPD(i,n) for(int i = n-1; i>-1; i--)
#define REPDP(i,a,n) for(int i = n-1; i>=a; i--)
#define MOD 1000000007LL
#define PI 3.1415926535897932384626
#define MAX_PRIME 11111
#define INF 1000000000

int n;
map<int, int> cnt;

int main(){
	while(cin >> n){
		cnt.clear();
		int x;
		REP(i, n){
			cin >> x;
			cnt[x]++;
		}
		int ANS = 2;
		//if(cnt.count(0)) ANS = max(ANS, cnt[0]);
		for(map<int, int>::iterator it = cnt.begin(); it != cnt.end(); it++){
			for(map<int, int>::iterator jt = cnt.begin(); jt != cnt.end(); jt++){
				int x = jt->first, y = it->first;
				if(x == y && it->second < 2) continue;
				int fx = 1, fy = 1;
				int ans = 2;
				map<int, int> used;
				used[x]++;
				used[y]++;
				int z = fx*x + fy*y;
				//cout << " X " << x << " Y " << y << " Z " << z << endl;
				while(cnt.count(z) && cnt[z] > used[z]){
					used[z]++;
					ans++;
					int aux = fx;
					fx += fy;
					fy = aux;
					z = fx*x + fy*y;
					//cout << " X " << x << " Y " << y << " Z " << z << endl;
				}
				ANS = max(ANS, ans);
			}
		}
		cout << ANS << endl;
		
	}
}


