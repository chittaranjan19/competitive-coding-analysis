#include <cstdio>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <cmath>
#include <climits>
#ifdef DEBUG
	#include <ctime>
#endif
using namespace std;

// template

// abbreviations
#define vi vector<int>
#define vl vector<ll>
#define vb vector<bool>
#define vs vector<string>
#define ii pair<int, int>
#define a first
#define b second
#define vii vector<ii>
#define mii map<ii>
#define vvi vector<vi>
#define vvl vector<vl>
#define que queue
#define pque priority_queue
#define stk stack
#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define pu push
#define po pop
#define mp make_pair
#define sz(var) ((int) var.size())
#define rep(it, n) for(int it = 0; it < n; ++it)
#define rep1(it, n) for(int it = 1; it <= n; ++it)
#define loop(it, from, to) for(int it = (from); it <= (to); ++it)
#define iter(it, cont) for(__typeof((cont).begin()) it = (cont).begin(); it != (cont).end(); ++it)
#define riter(it, cont) for(__typeof((cont).rbegin()) it = (cont).rbegin(); it != (cont).rend(); ++it)
#define all(cont) (cont).begin(), (cont).end()
#define memclr(var) memset(var, 0, sizeof(var))

typedef unsigned long long ull;
typedef long long ll;

const int INF = INT_MAX;
const int NINF = INT_MIN;
const ll INF_LL = LLONG_MAX;
const ll NINF_LL = LLONG_MIN;
const double PI = acos(-1.0);
const int MOD = 1e9+7;

#ifdef DEBUG
	#define debug(fmt, args...) printf("Line %d, in %s\t: " fmt, __LINE__, __FUNCTION__, ##args)
	#define rep_rt() printf("[Run time: %.3fs]\n", ((double)clock())/CLOCKS_PER_SEC)
#else
	#define debug(...)
#endif

// end of template

int main() {
#ifdef DEBUG
	freopen("701C.in", "r", stdin);
#endif
    
    int n;
    cin >> n;
    string str;
    cin >> str;

    string unq_str = str;
    sort(all(unq_str));
    unq_str.resize(unique(all(unq_str)) - unq_str.begin());

    int ans = INF;

    vi exist_c(256, 0);
    int unq_c = 0;
    for (int i = 0, j = 0; j < n;) {
    	debug("%d\n", i);
    	while (unq_c != sz(unq_str)) {
    		if (j == n)
    			break;

    		char c = str[j++];
    		if (!exist_c[c])
    			unq_c++;
    		exist_c[c]++;
    	}
    	debug("%d %d\n", unq_c, sz(unq_str));
    	while (unq_c == sz(unq_str)) {
    		ans = min(ans, j - i);
    		char c = str[i++];
    		exist_c[c]--;
    		if (!exist_c[c])
    			unq_c--;
    	}
    }
    printf("%d\n", ans);

#ifdef DEBUG
    rep_rt();
#endif
    return 0;
}