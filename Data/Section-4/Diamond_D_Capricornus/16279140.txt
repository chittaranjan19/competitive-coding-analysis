Const Fi='';//'342E.INP';
      Fo='';//'342E.OUT';
      maxN=200001;
Var   n,m,nA,Mm,Log:Longint;
      s:Array[1..2,0..maxN]Of Longint;
      Head,A,Dp,P,Q,F,D,Dad:Array[0..maxN]Of Longint;
      Free,Ok:Array[0..maxN]Of Boolean;
      B:Array[0..maxN,0..32]Of Longint;
Procedure Enter;
Var i,u,v:Longint;
  Begin
    Readln(n,m);
    Fillchar(Head,Sizeof(Head),0);
    For i:=1 to n-1 do
      Begin
        Readln(u,v);
        Inc(Head[u]);Inc(Head[v]);
        s[1,i]:=u;s[2,i]:=v;
      End;
    For i:=2 to n+1 do
      Head[i]:=Head[i-1]+Head[i];
    For i:=1 to n-1 do
      Begin
        u:=s[1,i];v:=s[2,i];
        A[Head[u]]:=v;A[Head[v]]:=u;
        Dec(Head[u]);Dec(Head[v]);
      End;
  End;
Procedure Go(u:Longint);
Var i,v:Longint;
  Begin
    Free[u]:=False;
    For i:=Head[u]+1 to Head[u+1] do
      If Free[A[i]] then
        Begin
          v:=A[i];
          D[v]:=D[u]+1;
          Dad[v]:=u;
          Go(v);
        End;
  End;
Procedure Creat;
Var i,J:Longint;
  Begin
    Log:=Trunc(Ln(n)/Ln(2)+1);
    For i:=1 to n do
      B[i,0]:=Dad[i];
    For i:=1 to n do
      For J:=1 to Log do
        B[i,J]:=B[B[i,J-1],J-1];
  End;
Function  GetBit(x,i:Longint):Longint;
  Begin
    GetBit:=(x shr i) and 1;
  End;
Function  Min(a,b:Longint):Longint;
  Begin
    If a<b then Min:=a
    Else
      Min:=b;
  End;
Function LCA(u,v:Longint):Longint;
Var i,Bit:Longint;
  Begin
    If D[u]<D[v] then
      Exit(LCA(v,u));
    i:=D[u]-D[v];
    For Bit:=0 to Log do
      If GetBit(i,Bit)=1 then
        u:=B[u,Bit];
    If u=v then Exit(u);
    For i:=Log downto 0 do
      If B[u,i]<>B[v,i] then
        Begin
          u:=B[u,i];
          v:=B[v,i];
        End
      Else
        LCA:=B[u,i];
  End;
Procedure BFS;
Var i,u,v,Bot,Top:Longint;
  Begin
    Fillchar(Ok,Sizeof(Ok),True);
    For i:=1 to nA do
      Begin
        Q[i]:=P[i];
        Ok[Q[i]]:=False;
        F[P[i]]:=0;
      End;
    Bot:=1;Top:=nA;
    Repeat
      u:=Q[Bot];
      Inc(Bot);
      For i:=Head[u]+1 to Head[u+1] do
        If Ok[A[i]] then
          Begin
            v:=A[i];
            Ok[v]:=False;
            F[v]:=F[u]+1;
            Dp[v]:=Min(Dp[v],F[v]);
            Inc(Top);
            Q[Top]:=v;
          End;
    Until Bot>Top;
  End;
Function  Dis(u,v:Longint):Longint;
  Begin
    Dis:=D[u]+D[v]-2*D[LCA(u,v)];
  End;
Procedure Main;
Var i,J,k,u:Longint;
  Begin
    D[1]:=0;
    Fillchar(Free,Sizeof(Free),True);
    Go(1);
    Creat;
    Mm:=Trunc(Sqrt(n));
    For i:=1 to n do
      Dp[i]:=n+1;
    Fillchar(Free,Sizeof(Free),True);
    Free[1]:=False;
    Na:=1;
    P[1]:=1;
    For i:=1 to m do
      Begin
        Readln(k,u);
        If k=1 then
          Begin
            If Free[u] then
              Begin Inc(Na);P[Na]:=u;Free[u]:=False; End;
          End
        Else
          Begin
            For J:=1 to Na do
              Dp[u]:=Min(Dp[u],Dis(P[J],u));
            Writeln(Dp[u]);
          End;
        If nA=Mm then
          Begin
            BFS;
            nA:=0;
          End;
      End;
  End;
Begin
  Assign(Input,Fi);Reset(Input);
  Assign(Output,Fo);Rewrite(Output);
  Enter;
  Main;
  Close(Input);Close(Output);
End.