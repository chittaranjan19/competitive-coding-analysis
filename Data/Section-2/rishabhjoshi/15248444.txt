#include <iostream>
using namespace std;
#define mod 1000000007
#define ll long long

ll arr[300000][2];

ll fastermod(ll factor,ll power,ll modulus)
{
    ll result = 1;
    while(power > 0)
    {
        if (power % 2 == 1)
        {
            result = (result*factor) % modulus;
            power = power-1;
        }
        power = power/2;
        factor = (factor*factor)%modulus;
    }
    return result;
}

int main() 
{
    ios_base::sync_with_stdio(0);
    ll m;
    cin>>m;
    //cout<<m;
    ll p;
    int i=0, t;
    for(i=0, t=0; t<m; t++)
    {
        cin>>p;
        //cout<<p<<"\t";
        bool flag=false;
        for(int j=0; j<i; j++)
        {
        //  cout<<j<<i<<" "<<arr[j][0]<<" " <<p<<"\n";
            if((arr[j][0]-p) == 0) 
            {   
        //      cout<<"no";
                arr[j][1]++;
                flag=true;
                break;
            }
        }
        //cout<<"here"<<i;
        if(flag==true) continue;
        
        
        //cout<<"@@";
        arr[i][0] = p;
        arr[i][1] = 2;
        i++;
        //cout<<"done";
// t is no of vals, i is unique vals
    }
    int arrlen = i;
    //for(int j=0; j<arrlen; j++)
    //{
//      cout<<arr[j][0]<<" "<<arr[j][1]<<"\n";
//  }
    ll prod=1;
    for(int j=0; j<arrlen; j++)
    {
        prod*=arr[j][1];
        prod%=mod;
    }
    ll temppwr, pwr;
    ll ans = 1;
    for(int j=0; j<arrlen; j++)
    {
        temppwr = prod/arr[j][1];
        int x = arr[j][1] - 1;
        pwr = temppwr * (x*(x+1))/2;
        ans *= fastermod(arr[j][0], pwr, mod);
    }
    cout<<ans;
    return 0;
}