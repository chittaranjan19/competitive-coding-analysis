using namespace std;
#include<bits/stdc++.h>
#define FOR(i, a, b) for (int i = a; i < b; i++)
#define FORE(i, a, b) for (int i = a; i <= b; i++)
#define FORD(i, a, b) for (int i = a; i >= b; i--)
const int MAXN = 5*1e5;
const int INF = 1e9 + 7;

int dd[MAXN];
int pos[MAXN];
vector< int > v;
string s;
int n;
struct data{
    bool odd;
    char ch;
    int sl;
    bool operator<(const data &op) const
    {
        if (odd != op.odd) return odd<op.odd;
        else return ch < op.ch;
    }
} a[MAXN];
int m = 0;
int main()
{
    ios::sync_with_stdio(false); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("C.inp", "r", stdin);
    freopen("C.out", "w", stdout);
    #endif // ONLINE_JUDGE
    //MIKELHPDATKE;
    cin >> s;
    n = s.size();
    s ='=' + s;
    FORE(i, 1, n) dd[s[i] - 'a']++;
    FORD(i, n, 1) pos[s[i] - 'a'] = i;
    FORE(i, 0, 25) if (dd[i] % 2 == 1) v.push_back(i);
    //FOR(i, 0, v.size()) cout<<v[i]<<" ";cout<<endl;
    FOR(i, v.size() / 2, v.size()){
        int j = v.size() - i - 1;
        //cout<<v[i]<<" "<<v[j]<<endl;
        dd[v[i]]--;
        dd[v[j]]++;
    }
    FORE(i, 0, 25) if (dd[i] > 0){
        //cout<<i<<"wtf"<<endl;
        a[++m].ch = i + 'a';
        a[m].odd = (dd[i] % 2 == 1);
        a[m].sl = dd[i];
    }
    sort(a + 1, a + m + 1);
   // FORE(i, 1, m) cout<<a[i].ch<<" "<<a[i].sl<<" "<<a[i].odd<<endl;
    string ans = s;
    int d = 0;
    FORE(i, 1, m) FORE(j, 1, a[i].sl / 2){
        ans[++d] = a[i].ch, ans[n - d + 1] = a[i].ch;
        //cout<<d<<" "<<n -d + 1<<endl;
    }
    if (a[m].odd) ans[(n + 1) / 2] = a[m].ch;
    ans.erase(0, 1);
    cout << ans;
    return 0;
}
