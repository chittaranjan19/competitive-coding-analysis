#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;
string a, b, z;
int m, n, l;
int f[101][101][101][2], vet[101][101][101][2];

int duyet(int len, int i, int j, bool diff)
{
    if (f[len][i][j][diff] > -1) return f[len][i][j][diff];
    if (i == m + 1 && j == n + 1){
        //cout<<len<<" "<<i<<" "<<j<<" "<<diff<<endl;
        if (diff) return len;
        else return 0;
    }
    int ans = 0;
    if (i <= m && j <= n && a[i] == b[j]) ans = max(ans,
                max( ( (diff == 1) ? (len + 1) : 0),
                    duyet(len + 1, i + 1, j + 1, diff | (len + 1 > l || a[i] != z[len + 1]) )));

    if (i <= m) ans = max(ans, max( (diff == 1 ? len : 0), duyet(len, i + 1, j, diff)));
    if (j <= n) ans = max(ans, max( (diff == 1 ? len : 0), duyet(len, i, j + 1, diff)));
    f[len][i][j][diff] = ans;
    if (i <= m && ans == max( (diff == 1 ? len : 0), f[len][i + 1][j][diff])) vet[len][i][j][diff] = 0;
    else
    if (j <= n && ans == max( (diff == 1 ? len : 0), f[len][i][j + 1][diff])) vet[len][i][j][diff] = 1;
    else
    if (i <= m && j <= n && ans == max( ( (diff == 1) ? (len + 1) : 0),
                    f[len + 1][i + 1][j + 1][diff | (len + 1 > l || a[i] != z[len + 1])])) vet[len][i][j][diff] = 2;
    return ans;
}

string res = "";
void trace(int len, int i, int j, int diff)
{
    //cout<<len<<" "<<i<<" "<<j<<" "<<diff<<endl;
    if (i == m + 1 && j == n + 1) return;
    if (vet[len][i][j][diff] == 2){
        res += a[i];
        trace(len + 1, i + 1, j + 1, diff | (len + 1 > l || a[i] != z[len + 1]) );
    }
    else
    if (vet[len][i][j][diff] == 0){
        trace(len, i + 1, j, diff);
    }
    else
    if (vet[len][i][j][diff] == 1){
        trace(len, i, j + 1, diff);
    }
}

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("346B.inp", "r", stdin);
    freopen("346B.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> a >> b >> z;
    m = a.size(); n = b.size(); l = z.size();
    a = '=' + a;
    b = '=' + b;
    z = '=' + z;
    memset(f, -1, sizeof(f));
    memset(vet, -1, sizeof(vet));
    //cout << duyet(0, 1, 1, 0);
    int ans = duyet(0, 1, 1, 0);
    if (ans == 0){
        cout<<0;
        return 0;
    }
    //cout<<ans<<endl;
    trace(0, 1, 1, 0);
    cout<<res;
    return 0;
}

