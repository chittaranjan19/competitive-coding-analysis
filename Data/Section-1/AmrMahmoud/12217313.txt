#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

char s[105][105];
int arr[105];
int cnt[105];
bool v[105];

int main()
{
  //freopen("immetric.in", "r", stdin);
  //freopen("immetric.out", "w", stdout);
  int n, res;
  scanf("%d", &n);
  res = n;
  for(int i=0;i<n;i++)
  {
    scanf("%s", s[i]);
    for(int j=0;j<n;j++)
      if(s[i][j] == '1')
        cnt[j]++;
    v[i] = true;
  }
  for(int i=0;i<n;i++)
    scanf("%d", &arr[i]);
  while(1)
  {
    int ch = -1;
    for(int i=0;ch == -1 && i<n;i++)
      if(arr[i] == cnt[i])
        ch = i;
    if(ch == -1) break;
    int sel = -1, mini = -INF;
    for(int i=0;i<n;i++)
    {
      if(!v[i] || s[i][ch] == '0') continue;
      int c = 0;
      for(int j=0;j<n;j++)
      {
        if(s[i][j] == '1')
        {
          if(cnt[j] == 1 && !arr[j]) c = -INF;
          else if(cnt[j] > arr[j])
            c--;
        }
      }
      if(c > mini)
      {
        mini = c;
        sel = i;
      }
    }
    if(sel == -1)
    {
      printf("PANIC!");
      return 0;
    }
    res--;
    v[sel] = false;
    for(int i=0;i<n;i++)
      if(s[sel][i] == '1')
        cnt[i]--;
  }
  printf("%d\n", res);
  for(int i=0;i<n;i++)
    if(v[i])
      printf("%d ", i + 1);
  return 0;
}