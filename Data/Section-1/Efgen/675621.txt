import java.io.*;
import java.util.*;
import java.math.*;

public class Main implements Runnable {
	
	int type(String s) {
		
		if (s.endsWith("etr")) return 0;
		if (s.endsWith("etra")) return 1;
		if (s.endsWith("initis")) return 2;
		if (s.endsWith("inites")) return 3;
		if (s.endsWith("lios")) return 4;
		if (s.endsWith("liala")) return 5;
		return -1;
	}
	void solve() throws IOException {
		StringTokenizer st = new StringTokenizer(br.readLine());
		Vector<Integer> t = new Vector<Integer>();
		while (st.hasMoreElements()) {
			t.add(type(st.nextToken()));
		}
		boolean ok = true;
		for (int x:t) if (x<0) ok = false;
		if (t.size()>1 && ok) {
			int req = t.elementAt(0)%2;
			for (int x:t) ok &= x%2==req;
			int state = 0;
			for (int x:t)
				if (state==0) {
					if (x<2) state = 1;
					if (x==2 || x==3) state = -1;
				} else
				if (state==1) {
					if (x<2 || x>3) state = -1; else state = 2;
				} else
				if (state==2) {
					if (x<2 || x>3) state = -1;
				}
			ok &= state > 0;
		}
		if (ok) out.println("YES"); else out.println("NO");
		
		
		
	}

	BufferedReader br;
	StringTokenizer st;
	PrintWriter out;

	public void run() {
		try {
			br = new BufferedReader(new InputStreamReader(System.in));
			out = new PrintWriter(System.out);
			// br = new BufferedReader(new FileReader("input.txt"));
			// out = new PrintWriter("output.txt");
			solve();
			br.close();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
			System.exit(123);
		}
	}

	String next() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			String s = br.readLine();
			if (s == null)
				return null;
			st = new StringTokenizer(s,", \t");
		}
		return st.nextToken();
	}

	double nextDouble() throws IOException {
		return Double.parseDouble(next());
	}

	int nextInt() throws IOException {
		return Integer.parseInt(next());
	}

	long nextLong() throws IOException {
		return Long.parseLong(next());
	}

	public static void main(String[] args) {
		new Thread(new Main()).start();
	}
}
