// This amazing code is by Eric Sunli Chen.
#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <string>
#include <utility>
#include <vector>
using namespace std;
template<typename T> void get_int(T &x)
{
	char t=getchar();
	bool neg=false;
	x=0;
	for(; (t>'9'||t<'0')&&t!='-'; t=getchar());
	if(t=='-')neg=true,t=getchar();
	for(; t<='9'&&t>='0'; t=getchar())x=x*10+t-'0';
	if(neg)x=-x;
}
template<typename T> void print_int(T x)
{
	if(x<0)putchar('-'),x=-x;
	short a[20]= {},sz=0;
	while(x>0)a[sz++]=x%10,x/=10;
	if(sz==0)putchar('0');
	for(int i=sz-1; i>=0; i--)putchar('0'+a[i]);
}
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define get1(a) get_int(a)
#define get2(a,b) get1(a),get1(b)
#define get3(a,b,c) get1(a),get2(b,c)
#define printendl(a) print_int(a),puts("")
typedef long long LL;
typedef unsigned long long uLL;
typedef pair<int,int> pii;
const int inf=0x3f3f3f3f;
const LL Linf=1ll<<61;
const double pi=acos(-1.0);

template<typename T> inline void updmax(T &x,const T y){if(x<y)x=y;}
template<typename T> inline void updmin(T &x,const T y){if(x>y)x=y;}

int s,t,ds,dt,n,m;
int f[200111];
pii e[400111];
vector<pii> ans,arb;
int tos[200111],tot[200111],st;
int gf(int x){return x==f[x]?x:f[x]=gf(f[x]);}
int main()
{
	get2(n,m);
	for(int i=1;i<=m;i++)get2(e[i].ff,e[i].ss);
	get2(s,t);get2(ds,dt);
	for(int i=1;i<=n;i++)f[i]=i;
	for(int i=1;i<=m;i++)
	{
		if(e[i].ff==s||e[i].ff==t||e[i].ss==s||e[i].ss==t)continue;
		if(gf(e[i].ff)==gf(e[i].ss))continue;
		ans.pb(e[i]);
		f[gf(e[i].ff)]=gf(e[i].ss);
	}
	for(int i=1;i<=m;i++)
	{
		if(e[i].ff==s||e[i].ff==t||e[i].ss==s||e[i].ss==t)
		{
			if(e[i].ss==s||e[i].ss==t)swap(e[i].ff,e[i].ss);
			if(e[i].ss==s||e[i].ss==t)st=1;
			else if(e[i].ff==s)
				tos[gf(e[i].ss)]=e[i].ss;
			else tot[gf(e[i].ss)]=e[i].ss;
		}
	}
	for(int i=1;i<=n;i++)
	{
		if(f[i]!=i||i==s||i==t)continue;
		if(tos[i]&&tot[i])arb.pb(mp(tos[i],tot[i]));
		else if(tos[i])
		{
			ds--;
			ans.pb(mp(s,tos[i]));
		}
		else
		{
			dt--;
			ans.pb(mp(tot[i],t));
		}
	}
	if(ds<=0||dt<=0||ds+dt+st<(int)arb.size()+1){puts("No");return 0;}
	ds--;dt--;
	if(st&&(int)arb.size()==0)
	{
		ans.pb(mp(s,t));
		for(int i=0;i<ds&&i<(int)arb.size();i++)ans.pb(mp(s,arb[i].ff));
		for(int i=ds;i<(int)arb.size();i++)ans.pb(mp(t,arb[i].ss));
	}
	else
	{
		ans.pb(mp(s,arb[0].ff));
		ans.pb(mp(t,arb[0].ss));
		for(int i=1;i<=ds&&i<(int)arb.size();i++)ans.pb(mp(s,arb[i].ff));
		for(int i=ds+1;i<(int)arb.size();i++)ans.pb(mp(t,arb[i].ss));
	}
	puts("Yes");
	for(int i=0;i<(int)ans.size();i++)printf("%d %d\n",ans[i].ff,ans[i].ss);
	return 0;
}