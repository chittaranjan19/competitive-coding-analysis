#include <bits/stdc++.h>

#define ll long long
#define ld long double

using namespace std;

const ll inf = (ll)1e9;
const int MOD = (int)1e9 + 7;
const ll N = 100000;
const ll MIN_V = -(1LL << 31);
const ll MAX_V = (1LL << 31) - 1;
const ld eps = 1e-6;

int main()
{
    //freopen("students-free.in", "r", stdin);
    //freopen("students-free.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin >> n;
    string s;
    cin >> s;
    int dp[n + 1][2];
    for (int i = 0; i <= n; i++)
    {
        dp[i][0] = inf;
        dp[i][1] = inf;
    }
    dp[0][0] = 0;
    dp[0][1] = 0;
    if (s[0] == 'r')
    {
        dp[1][0] = 0;
        dp[1][1] = 1;
    }
    else
    {
        dp[1][0] = 1;
        dp[1][1] = 0;
    }
    for (int i = 2; i <= n; i++)
        if (s[i - 1] == 'r')
        {
            dp[i][0] = dp[i - 1][1];
            dp[i][1] = dp[i - 1][0] + 1;
            if (s[i - 2] == 'b')
                dp[i][1] = min(dp[i][1], dp[i - 2][1] + 1);
            else
                dp[i][1] = min(dp[i][1], dp[i - 2][1] + 2);
        }
        else
        {
            dp[i][1] = dp[i - 1][0];
            dp[i][0] = dp[i - 1][1] + 1;
            if (s[i - 2] == 'r')
                dp[i][0] = min(dp[i][0], dp[i - 2][0] + 1);
            else
                dp[i][0]= min(dp[i][0], dp[i - 2][0] + 2);
        }
    cout << min(dp[n][0], dp[n][1]);
    return 0;
}
