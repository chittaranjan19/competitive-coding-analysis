#include <iostream>

using namespace std;

#define ll long long
#define pb push_back
#define fs first
#define sc second

const ll base = (ll)1e9 + 7;

ll n, c0, c1;
ll can = 0;


ll nums(long x){
    if (x <= can * 2)
        return 1;
    return (x - can*2 + 1);
}

ll f(long x){
    if (x <= can * 2){
        ll _c1 = 1 + (x > can);
        if (x > can){
            return 2 * c1 + c0*(x - 1 - can);
        }

        return c1 + c0*(x - 1);
    }
    return nums(x) * 2 * c1 + nums(x) * c0 * (x - 1 - can);
}

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    cin >> n >> c0 >> c1;
    if (n == 1){
        cout << min(c1, c0) << endl;
        return 0;
    }
    if (n == 2){
        cout << min(c0, c1) + max(c1, c0) << endl;
        return 0;
    }
    ll cur = 2;
    ll ans = 0;
    ll m = 0;

    if (c0 == c1){
        ll alr = 0;
        bool ok = 1;
        ll _n = n;
        while (n != 0){
            ll j = 0;
            while ((1ll << j) <= n)
                j++;
            if (_n == n)
                ok = n == (1ll << (j - 1));
            ans += (ok?(j-1):j)*(1ll << (j-1));
            n -= (1ll << (j-1));
        }
        cout << ans*(c1 + c0)/2;
        return 0;
    }

    if (c0 > c1){
        swap(c0, c1);
    }
    if (c0 == 0){
        cout << c1 * n << endl;
        return 0;
    }

    if (n == 3){
        cout << 4 * c0 + 2 * c1 << endl;
        return 0;
    }
    if (n == 4){
        cout << 4 * (c1 + c0) << endl;
        return 0;
    }

    can = c1 / c0 + bool(c1 % c0);

    if (n  <= can){
        cout << c1 * n + (n * (n-1))/2 * c0;
        return 0;
    }

    while (m + nums(cur) < n){
        ans += f(cur);
        m += nums(cur);
        cur += 1;
    }
    ll ost = n - m;
    ans += ost * 2 * c1 + ost * c0 * (cur - 1 - can);
    cout << ans << endl;
    return 0;
}
