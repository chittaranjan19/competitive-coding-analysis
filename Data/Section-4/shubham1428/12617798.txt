#include<bits/stdc++.h>
using namespace std;
long n;
long root=447,arr[200005];
typedef struct
{
	long x,y,id;
	long long ans;
}nod;
nod qu[200005];
long l = 1,r=1,cnt[1000005]={0};
long long ans=0;
bool comp(nod a,nod b)
{
	return (a.x/root == b.x/root)?(a.y < b.y):(a.x/root < b.x/root);
}
void add(long pos)
{
	ans-=cnt[arr[pos]]*cnt[arr[pos]]*arr[pos];
  	cnt[arr[pos]]++;
  	ans+=cnt[arr[pos]]*cnt[arr[pos]]*arr[pos];
}
void remove(long pos)
{
	ans-=cnt[arr[pos]]*cnt[arr[pos]]*arr[pos];
  	cnt[arr[pos]]--;
  	ans+=cnt[arr[pos]]*cnt[arr[pos]]*arr[pos];
}
int main()
{
	long n,q,i,temp,temp1;
	scanf("%I32d%I32d",&n,&q);
	for(i=1;i<=n;i++)
		scanf("%I32d",&arr[i]);
	for(i=0;i<q;i++)
	{
		scanf("%I32d%I32d",&temp,&temp1);
		qu[i].x=temp;qu[i].y=temp1;
		qu[i].id=i;
	}
	sort(qu,qu+q,comp);
	for(i=0;i<q;i++)
  	{
		while (l < qu[i].x)
		{
    			remove(l);
    			l++;
		}
  		while (l > qu[i].x)
		{
    			add(l-1);
    			l--;
		}
  		while (r <= qu[i].y)
    		{
			add(r);
    			r++;
		}
  		while (r > qu[i].y+1)
    		{
			remove(r-1);
    			r--;
		}
		qu[qu[i].id].ans=ans;
	}
	for(i=0;i<q;i++)
		printf("%I64d\n",qu[i].ans);
	return 0;
}
