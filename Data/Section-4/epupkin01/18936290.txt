#include <iostream>
#include <climits>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(b, 0, sizeof(arr)); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // getchar(), gets()
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); n - amount; pair
#include <iomanip>      // setw(4), setfill('.'), setprecision(2)
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#include <memory>       // shared_ptr<>, uniqu_ptr<>
#include <iterator>     // ostream_iterator<int, char> out_iter(cout, " ");
#include <set>
#include <map>
#include <list>
#include <queue>
#include <functional>   // function
#define SRT srand(int(time(0)))

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
ld pi = 3.14159265358979323846;
int ten[8] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};
inline void eatline() { while (getchar() != '\n'); }

typedef map<int, int> Map;
typedef Map::iterator mIter;
typedef pair<int, int> Pair;
typedef set<int> Set;
typedef Set::iterator sIter;
typedef multimap<int, int> mMap;
typedef mMap::iterator mmIter;
typedef multiset<int> mSet;
typedef mSet::iterator msIter;
typedef list<int> List;
typedef List::iterator lIter;
typedef deque<int> Deque;
typedef Deque::iterator dIter;

bool a[4][3];
int n;
string s;
Set w, h;

int main()
{
    cin >> n >> s;
    
    for (int i = 0; i < n; ++i)
    {
        int c = s[i] - '0';
        if (c == 0)
            a[3][1] = true;
        else if (c > 6)
            a[2][c - 7] = true;
        else if (c > 3)
            a[1][c - 4] = true;
        else
            a[0][c - 1] = true;
    }
    
    for (int i = 0; i < 4; ++i)
        for (int j = 0; j < 3; ++j)
            if (a[i][j])
                w.insert(j), h.insert(i);
    
    int dw = *(--w.end()) - *w.begin(), dh = *(--h.end()) - *h.begin();
    
    if (dh == 3)
        cout << "YES\n";
    else if (dw == 2 && dh == 2)
    {
        if (a[3][1] || (!a[2][0] && a[2][1] && !a[2][2]))
            cout << "NO\n";
        else
            cout << "YES\n";
    }
    else
        cout << "NO\n";
    
    return 0;
}