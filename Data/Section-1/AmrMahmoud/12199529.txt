#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

pair<int, int> x[200005];
pair<int, int> y[200005];
int b1 = 31, m1 = mod;
int b2 = 37, m2 = mod + 2;
map<pair<int, int>, int> m;

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("immetric.in", "r", stdin);
  //freopen("immetric.out", "w", stdout);
  string s1, s2;
  cin >> s1 >> s2;
  int n = s1.size();
  int k = n, tmp = 0;
  while(k % 2 == 0) k/=2, tmp++;
  string mm1 = s1;
  string mm2 = s2;
  sort(mm1.begin(), mm1.end());
  sort(mm2.begin(), mm2.end());
  if(mm1 != mm2)
  {
    cout << "NO";
    return 0;
  }
  for(int i=0;i<n;i+=k)
  {
    int h1 = 0, h2 = 0;
    for(int j=i;j<i+k;j++)
    {
      h1 = ((h1 * 1LL * b1) + s1[j] - 'a') % m1;
      h2 = ((h2 * 1LL * b2) + s1[j] - 'a') % m2;
    }
    x[i/k] = mp(h1, h2);
  }
  for(int i=0;i<n;i+=k)
  {
    int h1 = 0, h2 = 0;
    for(int j=i;j<i+k;j++)
    {
      h1 = ((h1 * 1LL * b1) + s2[j] - 'a') % m1;
      h2 = ((h2 * 1LL * b2) + s2[j] - 'a') % m2;
    }
    y[i/k] = mp(h1, h2);
  }
  bool test = true;
  k = n;
  for(int i=0;i<tmp-1 && test;i++)
  {
    for(int j=0;j<k;j+=2)
    {
      if(x[j] > x[j + 1]) swap(x[j], x[j + 1]);
      x[j/2].f = ((x[j].f * 1LL * b1) + x[j+1].f) % m1;
      x[j/2].s = ((x[j].s * 1LL * b2) + x[j+1].s) % m2;
      m[x[j/2]]++;
    }
    for(int j=0;j<k && test;j+=2)
    {
      if(y[j] > y[j + 1]) swap(y[j], y[j + 1]);
      y[j/2].f = ((y[j].f * 1LL * b1) + y[j+1].f) % m1;
      y[j/2].s = ((y[j].s * 1LL * b2) + y[j+1].s) % m2;
      if(m.find(y[j/2]) != m.end())
      {
        m[y[j/2]]--;
        if(m[y[j/2]] == 0) m.erase(y[j/2]);
      }
      else test = false;
    }
    b1 = (b1 * 1LL * b1) % m1;
    b2 = (b2 * 1LL * b2) % m2;
    k /= 2;
  }
  if(test) cout << "YES";
  else cout << "NO";
  return 0;
}
