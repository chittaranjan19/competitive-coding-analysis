#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;

char a[100][100];
int n, m;

void dfs(int x, int y, int c, int lx, int ly)
{
    if (a[x][y] == 'S' && c == 1)
        return;
    if (x > 0 && a[x - 1][y] != '.' && (x - 1 != lx || y != ly))
    {
        cout << "U";
        dfs(x - 1, y, (a[x - 1][y] == 'S' ? 1 : 0), x, y);
        return;
    }
    if (x < n - 1 && a[x + 1][y] != '.' && (x + 1 != lx || y != ly))
    {
        cout << "D";
        dfs(x + 1, y, (a[x + 1][y] == 'S' ? 1 : 0), x, y);
        return;
    }
    if (y > 0 && a[x][y - 1] != '.' && (x != lx || y - 1 != ly))
    {
        cout << "L";
        dfs(x, y - 1, (a[x][y - 1] == 'S' ? 1 : 0), x, y);
        return;
    }
    if (y < m - 1 && a[x][y + 1] != '.' && (x != lx || y + 1 != ly))
    {
        cout << "R";
        dfs(x, y + 1, (a[x][y + 1] == 'S' ? 1 : 0), x, y);
        return;
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int x, y;
    cin >> n >> m;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
        {
            cin >> a[i][j];
            if (a[i][j] == 'S')
            {
                x = i;
                y = j;
            }
        }
    dfs(x, y, 0, -1, -1);
    return 0;
}
