//#include <fstream>
#include <map>
#include <cmath>
#include <queue>
#include <stack>
#include <string>
#include <vector>
#include <iomanip>
#include <iostream>
#include <algorithm>

#define P_ M_PI
#define ff first
#define ss second
#define maxn 100009
#define ll long long
#define pb push_back
#define INF 1000000009
#define ppb() pop_back()
#define pii pair <int , int>
#define mp(x,y) make_pair(x,y)
#define all(x) x.begin(),x.end()
#define LLINF 1000000000000000009
using namespace std;
//ifstream cin("file.in");
//ofstream cout("file.out");
int a, b, c, type, x, y;
pii d[maxn], g[maxn];
vector <pair <int, pii> > v, v1;
int h[5009][5009];
int main()
{
 	//srand( (unsigned)time( NULL ) );
	//int randomNumber = rand() % 10 + 1;
	cin >> a >> b >> c;
	
	for(int i = 1; i <= a; i++)
	{
		cin >> type >> x >> y;
		if(type == 1)
			d[x] = mp(i, y);
		if(type == 2)
			g[x] = mp(i, y);	
	}
	for(int i = 1; i <= 5000; i++)
	{
		if(d[i].ff > 0)
			v.pb(mp(d[i].ff, mp(i, d[i].ss)));
		if(g[i].ff > 0)
			v1.pb(mp(g[i].ff, mp(i, g[i].ss)));	
	}
	for(int i = 0; i < max(v1.size(), v.size()); i++)
	{
		if(i < v.size())
		{
			if(i < v1.size())
			{
				if(v1[i].ff > v[i].ff)
				{
					for(int j = 1; j <= b; j++)
						h[v[i].ss.ff][j] = v[i].ss.ss;
					for(int j = 1; j <= a; j++)
						h[j][v1[i].ss.ff] = v1[i].ss.ss;	
				}
				else
				{
					for(int j = 1; j <= a; j++)
						h[j][v1[i].ss.ff] = v1[i].ss.ss;
					for(int j = 1; j <= b; j++)
						h[v[i].ss.ff][j] = v[i].ss.ss;
				}
			}
			else
				for(int j = 1; j <= b; j++)
					h[v[i].ss.ff][j] = v[i].ss.ss;
		}
		else
			for(int j = 1; j <= a; j++)
				h[j][v1[i].ss.ff] = v1[i].ss.ss;
	}
	for(int i = 1; i <= a; i++)
	{
		for(int j = 1; j <= b; j++)
			cout << h[i][j] << ' ';
		cout << endl;	
	}
return 0;
}

