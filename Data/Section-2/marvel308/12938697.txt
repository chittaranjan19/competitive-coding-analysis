#include<stdio.h>
#include<vector>
#include<map>
#include<algorithm>
using namespace std;
#define pp pair<int,int>
vector<int> G[100005],T[100005];
int p[100005]={0},id=0,cnt=0;
bool visited[100005]={false};
int index[100005]={0};

void dfs(int u)
{
    visited[u]=true;
    cnt++;
    G[id].push_back(u);
    if(!visited[p[u]])
        dfs(p[u]);
}
int main()
{
    int n,i;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        scanf("%d",&p[i]);
    }
    for(i=1;i<=n;i++)
    {
        if(visited[i]==false)
        {
            cnt=0;
            dfs(i);
            id++;
        }
    }
    if(id!=2)
    {
        printf("NO\n");
        return 0;
    }
    else
    {
        if(G[0].size()==G[1].size())
        {
            printf("YES\n");
            int si=G[0].size(),i;
            for(i=1;i<si;i++)
            {
                printf("%d %d\n",G[0][i-1],G[0][i]);
            }
            for(i=0;i<si;i++)
            {
                printf("%d %d\n",G[0][i],G[1][i]);
            }
        }
        else
        {
            printf("NO\n");
            return 0;
        }
    }
    return 0;
}
