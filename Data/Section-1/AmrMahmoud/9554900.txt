#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setDP(a) memset(a,-1,sizeof(a))

using namespace std;

class trie
{
    public: trie* child[26];
    public: bool isLeaf;

    public :trie()
    {
        memset( child , 0 , sizeof(child) );
        isLeaf = false ;
    };
};

int main()
{
    ios_base::sync_with_stdio(0);
    string input, s;
    int k;
    cin >> input >> s >> k;
    trie *a;
    a = new trie();
    int res = 0;
    for(int i=0;i<input.size();i++)
    {
        int temp = 0;
        trie *p = a;
        for(int j=i;j<input.size();j++)
        {
            temp += 1 - (s[input[j] - 'a'] - '0');
            if(temp > k) break;
            if(p->child[input[j] - 'a'] == 0)
                p->child[input[j] - 'a'] = new trie();
            p = p->child[input[j] - 'a'];
            if(!p->isLeaf)
                p->isLeaf = 1, res++;
        }
    }
    cout << res;
    return 0;
}
