#include <algorithm>
#include <iostream>
#include <map>
#include <set>
#include <vector>

using namespace std;

int m, k;
set<int> people;
map<int,set<int> > friends;
vector<int> tmp, result;

int main() {
    cin >> m >> k;
    for (int i = 0, a, b; i < m; ++i) {
        cin >> a >> b;
        people.insert(a);
        people.insert(b);
        friends[a].insert(b);
        friends[b].insert(a);
    }
    for (int id1 : people) {
        result.clear();
        for (int id2 : people) {
            if (id1 != id2 && friends[id1].find(id2) == friends[id1].end()) {
                tmp.clear();
                set_intersection(friends[id1].begin(), friends[id1].end(), friends[id2].begin(), friends[id2].end(), back_inserter(tmp));
                if (100 * tmp.size() >= k * friends[id1].size()) {
                    result.push_back(id2);
                }
            }
        }
        cout << id1 << ": " << result.size() << " ";
        for (int &id2 : result) {
            cout << id2 << " ";
        }
        cout << "\n";
    }
    return 0;
}