#include <string>
#include <algorithm>
#include <math.h>
#include <vector>
#include <queue>
#include <stack>
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <set>
#include <cstring>

#define ll long long
#define ull unsigned long long
#define mp make_pair

using namespace std;
string s;
ll n, m;
pair<ll, ll> r;
pair< pair<ll, ll>, int> rr[200000];
multiset< pair<ll, int> > ms;
int good[200000];
bool used[200000];

int main()
{
    cin >> n >> m;
    memset(good, -1, n);
    ll l0, r0;
    scanf("%I64d%I64d", &l0, &r0);
    for (int i = 1; i < n; i++)
    {
        ll l, r;
        scanf("%I64d%I64d", &l, &r);
        rr[i - 1] = mp(mp(l - r0, r - l0), i - 1);
        r0 = r; l0 = l;
    }
    for (int i = 0; i < m; i++)
    {
        ll l;
        scanf("%I64d", &l);
        ms.insert(mp(l, i));
    }
    sort(rr, rr + n - 1);
    for (int i = n-2; i > -1; i--)
    {
        ll l, r;
        multiset<pair<ll, int> >::iterator low;
        low = upper_bound(ms.begin(), ms.end(), mp(rr[i].first.second, 1000000000));
        if (ms.size() == 0 || low == ms.begin())
        {
            cout << "No";
            return 0;
        }
        low--;
        if ( (low->first >= rr[i].first.first) )
        {
            good[rr[i].second] = low->second + 1;
            ms.erase(low);
        }
        else
        {
            cout << "No";
            return 0;
        }
    }
    for (int i = 0; i < n - 1; i++)
    {
        if (good[i] == -1)
        {
            cout << "NO";
            return 0;
        }
    }
    cout << "Yes" << endl;
    for (int i = 0; i < n - 1; i++)
    {
        printf("%d ", good[i]);
    }
    return 0;
}