#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef vector<int> vi;

#define TRACE

#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif
#define MOD  10000009
ll powmod(ll a,ll b)
{
    if(b==0)return 1;
    ll x=powmod(a,b/2);
    ll y=(x*x)%MOD;
    if(b%2)
        return (a*y)%MOD;
    return y;
}
ll  gcd ( ll a, ll b )
{
  ll c;
  while ( a != 0 ) {
     c = a; a = b%a;  b = c;
  }
  return b;
}
struct sort_pred {
    bool operator()(const std::pair<int,int> &left, const std::pair<int,int> &right) 
    { 
        return left.second < right.second; 
    }
};
int MAX(int a,int b,int c)
{
  return max(max(a,b),c);
}
int main()
{
    
    int x,y,a,b,c,step=1;
    cin >> x >> y;
    int minstep=x+1;
    std::vector<int>sw(3);
    a=x;b=x;c=max((x/3),y);
    for(int c1=max((x/3),y)-1;c1<=max(y,x/2)+1;c1++)
    {
      step=1;
      a=x;b=x;c=c1;
      while(MAX(a,b,c)!=y)
      {

          sw[0]=a;sw[1]=b;sw[2]=c;
          sort(sw.begin(),sw.end());
          //trace3(sw[0],sw[1],sw[2]);
          sw[2]=sw[1]-sw[0]+1;
          if(sw[2] < y)
            sw[2]=y;
          step+=1;
          a=sw[0];b=sw[1];c=sw[2];
          //trace3(a,b,c); 
      }
      trace2(c1,step);
      if(minstep > step)
        minstep=step;
    }
    cout << minstep << endl;
    return 0;
}