#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
#include <fstream>
#include <tuple>
#include <iomanip>
#include <time.h>
#include <stdlib.h>
#include <stdio.h>

using namespace std;

#define sz(a) (int(a.size()))
#define mp make_pair
#define pb push_back
#define ft first
#define sc second
#define g(a, b) get<a> (b)

typedef long long ll;
typedef long double ld;
typedef pair<long long, long long> pt;

const long long mod = 1e9 + 7;
const int MAX_N = 2e5 + 2;
ll q[MAX_N];
ll use[MAX_N] = {0, };
long long ans[MAX_N];
 ll w[MAX_N][4] = {0, };
 ll t = 1;

void dfs(int n){
    use[n] = t;
    if (!use[q[n]]){
        w[q[n]][0] = w[n][0] + 1;
        w[q[n]][1] = n;
        dfs(q[n]);
    }
    else if (use[q[n]] == t){
        w[n][2] = 1;
        w[n][0] = w[n][0] - w[q[n]][0] + 1;
    }
}

int main(){
    ll e[MAX_N];
    e[1] = 1;
    for (int i = 2; i < 1e5; i++){
        e[i] = (e[i - 1] * 2 ) % mod;
    }
    ans[1] = 0;
    ll n;
    cin >> n;
    for (int i = 1 ; i <= n; i++)
        cin >> q[i];
    for (int i = 1; i <= n; i++){
        if (!use[i]){
            w[i][0] = 1;
            dfs(i);
            t++;
        }
    }
    ll kol = 0;
    for (int i = 2; i <= n; i++){
        if (w[i][2] > 0)
            kol += w[i][0];
    }
    ll kol1 = n - kol;
    ll ans = e[kol1 + 1];

    for (int i = 2; i <= n; i++){
        if (w[i][2] > 0){
            ll kol2 = e[w[i][0] + 1];
            kol2-=2;
            ans = (ans * kol2) % mod;
        }
    }
    cout << ans;
return 0;
}
