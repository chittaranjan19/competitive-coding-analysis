#include<bits/stdc++.h>
#define MAXN 200009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
ll arr[MAXN],L[MAXN],R[MAXN],s[MAXN<<2],t[MAXN<<2],n,c,k;
map<int,int>pm;
void upd(int p,int nd,int x,int y){
	if(x==y){
		s[nd]++;
		return;	
	}
	int mid=(x+y)>>1;
	if(p<=mid)
		upd(p,nd<<1,x,mid);
	else
		upd(p,nd<<1|1,mid+1,y);
	s[nd]=s[nd<<1]+s[nd<<1|1];		
}
void poz(int p,int nd,int x,int y){
	if(x==y){
		s[nd]--;
		return;	
	}
	int mid=(x+y)>>1;
	if(p<=mid)
		poz(p,nd<<1,x,mid);
	else
		poz(p,nd<<1|1,mid+1,y);
	s[nd]=s[nd<<1]+s[nd<<1|1];		
}
ll tap(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return 0;
	if(l<=x and y<=r)
		return s[nd];
	int mid=(x+y)>>1;		
	ll i1=tap(l,r,nd<<1,x,mid);
	ll i2=tap(l,r,nd<<1|1,mid+1,y);
	return i1+i2;
}
ll tp(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return 0;
	if(l<=x and y<=r)
		return t[nd];
	int mid=(x+y)>>1;		
	ll i1=tp(l,r,nd<<1,x,mid);
	ll i2=tp(l,r,nd<<1|1,mid+1,y);
	return i1+i2;
}
void gos(int p,int nd,int x,int y){
	if(x==y){
		t[nd]++;
		return;	
	}
	int mid=(x+y)>>1;
	if(p<=mid)
		gos(p,nd<<1,x,mid);
	else
		gos(p,nd<<1|1,mid+1,y);
	t[nd]=t[nd<<1]+t[nd<<1|1];		
}
int main(){
	scanf("%lld%lld",&n,&k);
	for(int i=1;i<=n;i++)
		scanf("%lld",arr+i),pm[arr[i]]=true;
	tr(it,pm)
		pm[it->ff]=++c;
	ll inv=0,ans=0,pnt=2;
	for(int i=n;i>=1;i--){
		L[i]=tap(1,pm[arr[i]]-1,1,1,c),upd(pm[arr[i]],1,1,c);
		if(i>0)
			inv+=L[i];
	}
	memset(s,0,sizeof(s));	
	for(int i=1;i<=n;i++)
		R[i]=tap(pm[arr[i]]+1,c,1,1,c),upd(pm[arr[i]],1,1,c);
//	show();
	poz(pm[arr[1]],1,1,c);
	for(ll i=1;i<n;i++){
		while(pnt<=i){
			poz(pm[arr[pnt]],1,1,c);
			inv-=((L[pnt])+tp(pm[arr[pnt]]+1,c,1,1,c));
			pnt++;
		}
		gos(pm[arr[i]],1,1,c);
		inv+=(R[i])+tap(1,pm[arr[i]]-1,1,1,c);
		while(pnt<=n and inv>k){
			poz(pm[arr[pnt]],1,1,c);
			inv-=(L[pnt]+tp(pm[arr[pnt]]+1,c,1,1,c));
			pnt++;
		}
		if(pnt>n)
			break;
		ans+=n-pnt+1LL;		
	//	cout<<pnt<<endl;	
	}			
	printf("%lld\n",ans);
	return 0;
}
