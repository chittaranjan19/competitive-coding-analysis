// Vineet Mehta---
#include <bits/stdc++.h>
#define forn(i, n) for(int i = 0; i < int(n); i++)
#define form(i,b) for(int i=1;i<=b;i++)
#define lli long long
#define mp make_pair
#define pi pair<int,int>
#define pli pair<lli,lli>
#define pb push_back
#define x first
#define y second
#define sl(x) scanf("%I64d",&x)
#define pl(x) printf("%I64d\n",x)
#define sf(x) sort(x.begin(),x.end(),func)
#define s(x) sort(x.begin(),x.end())
#define all(v) v.begin(),v.end()
#define r(v) {reverse(all(v));}
#define endl "\n"

int INF = (int)1e9;
int debug = 0;

using namespace std;

typedef vector< int > vi;
typedef vector< vi > vvi;

int parent[5010][5010];
int dp[5010][5010];
int main()
{
int n,t,m;
cin>>n>>m>>t;
vector< pi > gr[n+1];
forn(i,m){
	int u,o,r;
	cin>>u>>o>>r;
	gr[u].pb(mp(o,r));
}
for(int i=1;i<=n;i++)
     for(int j=1;j<=n;j++)
          dp[i][j] = INF;
dp[1][1] = 0;
parent[1][1] = -1;
stack<int> s,q;
int sz,j,it;
s.push(1);
for(int i=1;i<n;i++){
	while(!s.empty()){
	j = s.top();
	s.pop();
	//cout<<j<<endl;
	for(pi k: gr[j]){
		it = k.x;
		if(dp[it][i+1] > dp[j][i]+k.y){
		dp[it][i+1] = dp[j][i]+k.y;
		parent[it][i+1] = j;
		}
		if(dp[it][i+1]<=t)	q.push(it);
		if(it == n && dp[it][i+1]<=t) sz = i+1;
	}
}
	while(!q.empty()){ s.push(q.top());q.pop();}
}
cout<<sz<<endl;
int cur = n;
vi ans;

while(cur!=-1){
	ans.pb(cur);
	//cout<<cur<<endl;
	cur = parent[cur][sz];
	sz--;
}
reverse(all(ans));
for(int it:ans) cout<<it<<" ";
return 0;
}
        
