using namespace std;
#include<bits/stdc++.h>
#define db          double
#define ll          long long
#define ull         unsigned long long
#define vi          vector<int>
#define vl          vector<long>
#define vll         vector<ll>
#define pi          pair<int,int>
#define pl          pair<long,long>
#define pll         pair<ll,ll>
#define pb          push_back
#define pf          printf
#define sf          scanf
#define mii         map<int,int>
#define mll         map<ll,ll>
#define II          ({int a; sf("%d",&a); a;})
#define IL          ({long a; sf("%ld",&a); a;})
#define ILL         ({ll a; sf("%lld",&a); a;})
#define ID          ({db a; sf("%lf",&a); a;})
#define IF          ({float a; sf("%f",&a); a;})
#define IC          ({char a; sf("%c",&a); a;})
#define FRI(a,b,c)  for(int i=a;   i<=b; i+=c)
#define FRL(a,b,c)  for(long i=a;  i<=b; i+=c)
#define FRLL(a,b,c) for(ll i=a;    i<=b; i+=c)
#define all(V)      V.begin(),V.end()
#define in          freopen("in.txt","r",stdin)
#define out         freopen("out.txt","w",stdout)
#define PI          2*acos(0.0)
#define mod         1000000007
#define INF         1<<29
#define endl        '\n'
int main()
{
//    ios_base::sync_with_stdio(false);cin.tie(0);
    ll n=ILL;
//    cin>>n;
    vector<pair<ll,ll> > V;
    ll ai[n+1],bi[n+1];
    for(ll i=0; i<n; i++)
    {
        ll x=ILL,y=ILL;
        ai[i]=x,bi[i]=y;
        if(x>=y)
            V.pb(make_pair(x,y));
        else
            V.pb(make_pair(y,x));
    }
    vector<pair<ll,ll> >ans;
    sort(all(V));
    ll a_i[n+1],b_i[n+1];
    for(ll i=0; i<n; i++)
    {
        ll mini=INF;
        for(ll j=i; j<n; j++)
            mini=min(mini,V[j].second);
        a_i[i]=V[i].first,b_i[i]=mini;
        ans.pb(make_pair(V[i].first*mini*(n-i),i));
//        cout<<V[i].first<<endl<<mini<<" "<<n-i<<endl;;
    }
    sort(all(ans));
    cout<<ans[ans.size()-1].first<<endl;
    cout<<a_i[ans[ans.size()-1].second]<<" "<<b_i[ans[ans.size()-1].second];
    return 0;
}
