#include <iostream>
#include <cmath>

using namespace std;

int d[1005][105], v1, v2, tot, m;

int dp(int v, int t)
{
    if(d[v][t])
        return d[v][t];
    if(t == 1)
        return 0;
    else
    {
        int k = -20;
        for(int j = -m; j <= m; ++j)
            if(v + j >= 1 && m * (tot - t + 1) >= abs(v + j - v2) && m * (t - 1) >= abs(v + j - v1) && dp(v + j, t - 1) != 0)
                k = j;
        if(k != -20)
        d[v][t] = v + dp(v + k, t - 1);
    }
    return d[v][t];
}

int main()
{
    cin >> v1 >> v2 >> tot >> m;
    int ans = v1;
    int v = v1;
    for(int i = 2; i <= tot; i++)
    {
        int k = -20;
        for(int j = -m; j <= m; ++j)
            if(v + j >= 1 && m * (i - 1) >= abs(v + j - v1) && m * (tot - i) >= abs(v + j - v2))
                k = j;
        v = v + k;
        ans += v;
    }
    cout << ans<< endl;
    return 0;
}
