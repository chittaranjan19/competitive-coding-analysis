#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 55;

double graph[maxn][maxn], adj[maxn][maxn];
int visited[maxn], parent[maxn], n, m;
double x;

bool bfs()
{
	int i, cur;
	for(i=1; i<=n; i++){
		visited[i] = 0;
		parent[i] = 0;
	}
	queue<int> q;
	q.push(1);
	visited[1] = 1;
	while(!q.empty()){
		cur = q.front();
		q.pop();
		for(i=1; i<=n; i++){
			if(!visited[i] && graph[cur][i]>0){
				parent[i] = cur;
				visited[i] = 1;
				q.push(i);
			}
		}
	}
	return visited[n];
}

int check(double val)
{	
	int i, j, cur, p;
	double minval, flow = 0;
	for(i=1; i<=n; i++){
		for(j=1; j<=n; j++)
			graph[i][j] = floor(adj[i][j]/val);
	}
	while(bfs()){
		cur = n;
		minval = 1e15;
		while(cur!=1){
			p = parent[cur];
			minval = min(minval, graph[p][cur]);
			cur = p;
		}
		flow+=minval;
		cur = n;
		while(cur!=1){
			p = parent[cur];
			graph[p][cur]-=minval;
			graph[cur][p]+=minval;
			cur = p;
		}
	}
	if(flow>=x)
		return 1;
	return 0;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int i, j, a, b, c;
	double lo, mid, hi, ans;
	scanf("%d%d%lf", &n, &m, &x);
	for(i=1; i<=m; i++){
		scanf("%d%d%d", &a, &b, &c);
		adj[a][b] = c;
	}
	lo = 0, hi = 1e15;
	for(i=0; i<500; i++){
		mid = (lo+hi)/2.0;
		if(check(mid))
			ans = lo = mid;
		else
			hi = mid;
	}
	printf("%.10lf\n", ans*x);
	return 0;
}
