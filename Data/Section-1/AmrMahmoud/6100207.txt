#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits.h>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define pi acos(-1.0)
#define LL long long

using namespace std;

int edges[105];
stack<int> dfs;
bool graph[105][105]={false};

int main()
{
    int n,m,x,y;
    cin >> n >> m;
    for(int i=0;i<m;i++)
    {
        scanf("%d %d",&x,&y);
        edges[x]++,edges[y]++;
        graph[x][y]=true;
    }
    for(int i=1;i<=n;i++)
        if(edges[i] == 1)
            dfs.push(i);
    int groups=0;
    while(!dfs.empty())
    {
        int temp = dfs.top();
        dfs.pop();
        for(int i=1;i<=n;i++)
            if(graph[i][temp] || graph[temp][i])
            {
                graph[i][temp]=false,graph[i][temp]=false;
                edges[i]--,edges[temp]--;
                break;
            }
        if(dfs.empty())
        {
            groups++;
            for(int i=1;i<=n;i++)
                if(edges[i] == 1)
                    dfs.push(i);
        }
    }
    cout << groups;
    return 0;
}