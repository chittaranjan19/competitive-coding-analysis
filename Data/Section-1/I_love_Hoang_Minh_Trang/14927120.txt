#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 + 1;
const int INF = 1e9 + 7;

using namespace std;
int n, m, k;
struct data{
    int l, r, c;
    bool operator<(const data &op) const
    {
        if (l != op.l) return l < op.r;
        else if (r != op.r) return r < op.r;
        else return c < op.c;
    }
} a[MAXN];
long long f[2][301][301];
void mmin(long long &a, long long b)
{
    if (a > b) a = b;
}

int cur, next;
int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("313D.inp", "r", stdin);
    freopen("313D.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n >> m >> k;
    FORE(i, 1, m) cin >> a[i].l >> a[i].r >> a[i].c;
    sort(a + 1, a + m + 1);
    FORE(i, 0, 1) FORE(j, 0, 300) FORE(x, 0, 300) f[i][j][x] = 123456789123456LL;
    f[0][0][0] = 0;
    next = 0; cur = 1;
    long long ans = 123456789123456LL;
    FOR(i, 0, m){
        next ^= 1; cur ^= 1;
        FORE(last, 0, n) FORE(len, 0, n) if (f[cur][last][len] != 123456789123456LL){
            int l = a[i + 1].l, r = a[i + 1].r, w = a[i + 1].c;
            mmin(f[next][last][len], f[cur][last][len]);
            if (len >= k) mmin(ans, f[next][last][len]);
            if (r <= last) continue;
            mmin(f[next][r][len + r - max(last + 1, l) + 1], f[cur][last][len] + w);
            if (len >= k) mmin(ans, f[next][r][len + r - max(last + 1, l) + 1]);
        }
    }
    cout << (ans == 123456789123456LL ? -1 : ans);
    return 0;
}

