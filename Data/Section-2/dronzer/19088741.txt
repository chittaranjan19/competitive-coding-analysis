#include<bits/stdc++.h>

#define forn(i, n) for(int i = 0; i < int(n); i++)
#define form(i,a,b) for(int i=a;i<b;i++)
using namespace std;
int a[1000001];
int Arr[1000001];
void initialize( int N)
{
    for(int i = 0;i<N;i++)
		Arr[ i ] = i ;
}
int root(int i)
{
    while(Arr[ i ] != i)        
    {
     i = Arr[ i ];
    }
    i = Arr[Arr[Arr[i]]];
    return i;
};

void unio(int A ,int B)
{
    int root_A = root( A);       
    int root_B = root( B);  
    Arr[ root_A ] = root_B ;      
}
int main(){
	int n,m;
	cin>>n>>m;
	forn(i,n){cin>>a[i];}
	int c,d;
	initialize(n);
	forn(i,m){
	cin>>c>>d;
	if(c!=d)
		unio(c,d);
	}
	vector< int> gr[n];
	forn(i,n) {
		Arr[i] = root(i);
		gr[Arr[i]].push_back(i);
	}
vector<int>::iterator it;
	forn(i,n){
	if(gr[i].size()>0){
	vector<int> d;
	for(it = gr[i].begin();it<gr[i].end();it++) {
		d.push_back(a[*it]);
		//cout<<*it<<" ";
		}
	sort(d.begin(),d.end());
	reverse(d.begin(),d.end());
	int j=0;
	for(it = gr[i].begin();it<gr[i].end();it++) {
		a[*it] = d[j];
		j++;
	}
	}
	}
	forn(i,n) cout<<a[i]<<" ";
}
