#include <set>
#include <map>
#include <queue>
#include <stack>
#include <math.h>
#include <vector>
#include <stdio.h>
#include <fstream>
#include <iostream>
#include <string.h>
#include <limits.h>
#include <algorithm>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
//#include <bits/stdc++.h>

#define ff first
#define ss second
#define ll long long
#define pb push_back
#define mp make_pair
#define inf 1000000007
#define mod 1000000007
#define pii pair <int, int>
#define all(x) x.begin(), x.end()
//#define tr(i,c) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)

//using namespace __gnu_pbds;

using namespace std;

//template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

int n, m;

ll ans = inf;

int v[505][505];

int vis[1000005];

int main()
{
	cin >> n >> m;
	
	for (int i = 1; i <= n; i++)
		for (int h = 1; h <= m; h++)
			cin >> v[i][h];
	
	for (int i = 3; i <= 1000000; i+=2)
		if (!vis[i])
			for (int h = i*3; h <= 1000000; h+=i*2)
				vis[h] = 1;
	
	vis[1] = 1;
	
	int pr = 0;
	for (int i = 1000000; i >= 1; i--)
	{
		if (!vis[i] && (i%2 == 1 || i == 2))
			pr = i;
		
		vis[i] = pr;
	}
	
	for (int i = 1; i <= n; i++) {
		ll j = 0;
		for (int h = 1; h <= m; h++)
			j += vis[v[i][h]] - v[i][h];
		ans = min(ans, j);
	}
	
	for (int i = 1; i <= m; i++) {
		ll j = 0;
		for (int h = 1; h <= n; h++)
			j += vis[v[h][i]] - v[h][i];
		ans = min(ans, j);
	}
	
	cout << ans;
}
