#include <bits/stdc++.h>

using namespace std;

#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define rep(it, v) for (auto it = (v).begin(); it != (v).end(); it++)
#define dbg(x) cerr << #x << " = " << x << endl

typedef long long ll;
typedef pair<int, int> pii;
const int MAXN = 105;

int N, M;
int want[MAXN][MAXN];
int val[MAXN][MAXN];

bool modify() {
	int maxsum = 0, xm, ym;
	for (int i = N; i >= 1; i--) {
		for (int j = M; j >= 1; j--) {
			if (want[i][j] != val[i][j]) {
				if (maxsum < i + j) {
					maxsum = i + j;
					xm = i;
					ym = j;
				}
			}
		}
	}
	if (maxsum == 0) {
		return false;
	}
	//otherwise return true
	int fac = want[xm][ym] - val[xm][ym];
	// debug("xm = %d, ym = %d, fac = %d\n", xm, ym, fac);
	for (int i = 1; i <= xm; i++) {
		for (int j = 1; j <= ym; j++) {
			val[i][j] += fac;
		}
	}
	return true;
}

int main() {
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	scanf("%d %d\n", &N, &M);
	for (int i = 1; i <= N; i++) {
		for (int j = 1; j <= M; j++) {
			want[i][j] = (getchar() == 'B' ? -1 : 1);
		}
		getchar();
	}
	//choose one with minimum i + j
	int ans = 0;
	while (modify()) ans++;
	printf("%d\n", ans);
}