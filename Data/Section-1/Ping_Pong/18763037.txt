#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

#define ll long long
#define ld long double

using namespace std;

const int inf = (int)2 * 1e8;
const ll MOD = (ll)1e9 + 7;
const int P = 239;
const int MAX_N = 500000;
const long double pi = 3.1415926535897932384626;
const long double eps = 1e-6;

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin >> n;
    vector<pair<string, int> > ans;
    map<int, int> curr;
    for (int i = 0; i < n; i++)
    {
        string s;
        int x;
        cin >> s;
        if (s[0] == 'i')
        {
            cin >> x;
            curr[x]++;
            ans.push_back(make_pair(s, x));
        }
        else if (s[0] == 'r')
        {
            if (curr.size() == 0)
            {
                curr[17]++;
                ans.push_back(make_pair("insert", 17));
            }
            ans.push_back(make_pair(s, curr.begin()->first));
            curr.begin()->second--;
            if (curr.begin()->second == 0)
                curr.erase(curr.begin()->first);
        }
        else
        {
            cin >> x;
            while (curr.size() > 0 && curr.begin()->first < x)
            {
                ans.push_back(make_pair("removeMin", curr.begin()->first));
                curr.begin()->second--;
                if (curr.begin()->second == 0)
                    curr.erase(curr.begin()->first);
            }
            if (curr.size() == 0 || curr.begin()->first > x)
            {
                curr[x]++;
                ans.push_back(make_pair("insert", x));
            }
            ans.push_back(make_pair("getMin", x));
        }
    }
    cout << ans.size() << endl;
    for (int i = 0; i < ans.size(); i++)
        if (ans[i].first[0] != 'r')
            cout << ans[i].first << " " << ans[i].second << endl;
        else
            cout << ans[i].first << endl;
    return 0;
}
