import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProblemA_nonRecursive {
    BufferedReader rd;

    private ProblemA_nonRecursive() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int n = pint();
        for(int i=0;i<n;i++) {
            long[] c = longarr();
            long a = c[0];
            long b = c[1];
            long res = 0;
            while(b != 0) {
                if(Long.bitCount(b+1) == 1) {
                    res += b;
                    b = 0;
                } else {
                    long x = Long.highestOneBit(a);
                    long y = Long.highestOneBit(b);
                    if(x < y) {
                        res += y-1;
                        b = 0;
                    } else {
                        res += x;
                        a -= x;
                        b -= x;
                    }
                }
            }
            out(res);
        }
    }

    private int pint() throws IOException {
        return pint(rd.readLine());
    }

    private int pint(String s) {
        return Integer.parseInt(s);
    }

    private long[] longarr() throws IOException {
        return longarr(rd.readLine());
    }

    private long[] longarr(String s) {
        String[] q = s.split(" ");
        int n = q.length;
        long[] a = new long[n];
        for(int i=0;i<n;i++) {
            a[i] = Long.parseLong(q[i]);
        }
        return a;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemA_nonRecursive();
    }
}
