#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e6 * 5;
const int INF = 1e9 + 7;

using namespace std;
int n, k;
struct data{
    int x, type;
    bool operator <(const data &op) const
    {
        return (x != op.x ? x < op.x : type > op.type);
    }
};
data a[MAXN];
int m = 0;
int f[MAXN];

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("D.inp", "r", stdin);
    freopen("D.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n >> k;
    FORE(i, 1, n){
        int l, r;
        cin >> l >> r;
        a[++m].x = l;
        a[m].type = 1;

        a[++m].x = r;
        a[m].type = -1;
    }
    sort(a + 1, a + m + 1);
    vector< pair<int, int> > ans;
    int d = 0, last = 0;
    FORE(i, 1, m){
        d += a[i].type;
        f[i] = d;
    }
    int i = 1;
    //FORE(i, 1, m) cout << a[i].x << " ";cout<<endl;
    //FORE(i, 1, m) cout << f[i] << " ";cout<<endl;
    while (i <= m){
        if (f[i] < k){
            i++;
            continue;
        }
        int j = i;
        while (j < m && f[j + 1] >= k) j++;
        ans.push_back(make_pair(a[i].x, a[j + 1].x));
        i = j + 1;
    }
    cout << ans.size() << endl;
    FOR(i, 0, ans.size()) cout << ans[i].first <<" "<< ans[i].second << endl;
    return 0;
}

