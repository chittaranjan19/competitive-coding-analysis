#include <bits/stdc++.h>

using namespace std;

const int maxn = 1e5 + 5;

struct edge
{
    int to, next;

    edge(int to = 0, int next = 0) : to(to), next(next) {}
} G[maxn << 1];
int head[maxn], tot, dfn[maxn], clk;

void init()
{
    memset(head, -1, sizeof(head));
    tot = clk = 0;
}

void addedge(int u, int v)
{
    G[tot] = edge(v, head[u]);
    head[u] = tot++;
    G[tot] = edge(u, head[v]);
    head[v] = tot++;
}

bool dfs(int u, int fa)
{
    dfn[u] = ++clk;
    for(int i = head[u]; ~i; i = G[i].next)
    {
        int v = G[i].to;
        if(v == fa) continue;
        if(dfn[v] || dfs(v, u)) return true;
    }
    return false;
}

int main()
{
    int n, m, ans = 0;
    scanf("%d%d", &n, &m);
    init();
    for(int i = 0; i < m; ++i)
    {
        int u, v;
        scanf("%d%d", &u, &v);
        addedge(u, v);
    }
    for(int i = 1; i <= n; ++i) if(!dfn[i] && !dfs(i, 0)) ++ans;
    printf("%d\n", ans);
    return 0;
}
