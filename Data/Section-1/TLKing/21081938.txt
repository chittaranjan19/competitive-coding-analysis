#include<bits/stdc++.h>
using namespace std;
int a[100005],b[100005];
long long qs[100005];
int p[2][100005];
multiset<long long> ms;
multiset<long long>::iterator it;
int _find(int x,int op)
{
    if(x==p[op][x]) return x;
    return p[op][x]=_find(p[op][x],op);
}
int main()
{
    int n,i,l,r;
    long long sm=0;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
        scanf("%d",&a[i]);
    for(i=1;i<=n;i++)
        scanf("%d",&b[i]);
    for(i=1;i<=n;i++)
        sm+=a[i],qs[i]=sm,p[0][i]=i-1,p[1][i]=i+1;
    p[0][1]=1;
    p[1][n]=n;

    ms.insert(qs[n]);
    for(i=1;i<n;i++)
    {
        l=_find(b[i],0);
        r=_find(b[i],1);

        it=ms.find(qs[r]-qs[l-1]);
        ms.erase(it);

        ms.insert(qs[b[i]-1]-qs[l-1]);
        ms.insert(qs[r]-qs[b[i]]);
        p[0][b[i]+1]=b[i]+1;
        p[1][b[i]-1]=b[i]-1;
        it=ms.end();
        it--;
        printf("%I64d\n",*it);
    }
    printf("0\n");

}
