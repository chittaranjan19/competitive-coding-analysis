uses    math;
const   fi      ='';
        fo      ='';
        oo      =2000;

var     f       :text;
        n, k    :longint;
        a       :array[1..oo] of longint;
        ans     :longint;
procedure QS(l, h:longint);
var     i, j, x, tmp    :longint;
begin
        i:=l;
        j:=h;
        x:=a[(i+j) div 2];
        repeat
                while a[i]<x do inc(i);
                while a[j]>x do dec(j);
                if i<=j then
                        begin
                                tmp:=a[i];
                                a[i]:=a[j];
                                a[j]:=tmp;
                                inc(i);
                                dec(j);
                        end;
        until  i>j;
        if L<j then QS(L,j);
        if i<H then QS(i, H);
end;

Procedure nhap;
var     i :longint;

begin
        assign(f, fi);
        reset(f);
        readln(f, n, k);
        for i:=1 to n do
                read(f, a[i]);
        close(f);
end;

Procedure xuly;
var     i, j, mx :longint;
begin
        i:=1;
        ans:=0;
        QS(1,n);
        repeat
                mx:=a[i];
                for j:=i to min(i+k-1,n) do mx:=max(a[j],mx);
              //    writeln(i,' ',i+k-1,' ',mx);
                i:=i+k;
                ans:=ans+(mx-1)*2;
        until i>n;
end;
Procedure xuat;
begin
        assign(f, fo);
        rewrite(f);
        write(f, ans);
        close(f);
end;

BEGIN
        nhap;
        xuly;
        xuat;
END.
