#include<stdio.h>
#include<queue>
#include<vector>
using namespace std;
#define max(a,b) (a>b?a:b)
class priortise
{
public:
    bool operator()(const int &x,const int &y)
    {
        return x<y;
    }
};
int a[1005][1005]={0};
int main()
{
    int n,m,k,p,i,j,row[1005]={0},col[1005]={0};
    scanf("%d%d%d%d",&n,&m,&k,&p);
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            scanf("%d",&a[i][j]);
            row[i]+=a[i][j];
            col[j]+=a[i][j];
        }
    }
    priority_queue<int , vector<int> ,priortise > q1,q2;
    for(i=0;i<n;i++)
    {
        q1.push(row[i]);
    }
    int sumR[1005]={0},sumC[1005]={0};
    for(i=1;i<=k;i++)
    {
        int temp=q1.top();
        q1.pop();
        sumR[i]=sumR[i-1]+temp;
        q1.push(temp-m*p);
        //printf("%d ",sumR[i]);
    }
    //printf("\n\n");
    for(i=0;i<m;i++)
        q2.push(col[i]);
    for(i=1;i<=k;i++)
    {
        int temp=q2.top();
        q2.pop();
        sumC[i]=sumC[i-1]+temp;
        q2.push(temp-n*p);
        //printf("%d ",sumC[i]);
    }
    //printf("\n\n");
    int ans=-1000000000;
    for(i=0;i<=k;i++)
    {
        ans=max(ans,sumR[i]+sumC[k-i]-i*(k-i)*p);
    }
    printf("%d\n",ans);
    return 0;
}
