/*
*Rainto96
*Beijing University of Posts and Telecommunications School of Software Engineering
*http://blog.csdn.net/u011775691
*/
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <cstring>
#include <string>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <climits>
#include <unordered_map>
#include <unordered_set>
using namespace std;
#define pb push_back
#define ALL(x) x.begin(),x.end()
#define VINT vector<int>
#define PII pair<int,int>
#define MP(x,y) make_pair((x),(y))
#define ll long long
#define ull unsigned long long
#define MEM(x,y) memset(x,y,sizeof(x))
#define scand(x) scanf("%d",&x)
#define Max(a,b) a=max(a,b)
#define Min(a,b) a=min(a,b)
const ll LLMAX=0x7fffffffffffffffLL;
int main(){
        #ifndef ONLINE_JUDGE
                freopen("in.txt","r",stdin);
        #endif // ONLINE_JUDGE
        int n,k;
        scanf("%d%d",&n,&k);
        unordered_map<int,int> ump;
        for(int i=1;i<=n;i++){
                int x;scand(x);
                for(int j=0;j<=k;j++){
                        ump[x*j]=j;
                }
        }
        int q;scand(q);
        while(q--){
                int money;scand(money);
                int ans=INT_MAX;
                for(const auto& pr : ump){
                        int billN=pr.second;
                        int used=pr.first;
                        int left=money-used;
                        if(ump.find(left)!=ump.end()){
                                int num=ump[left];
                                if(billN+num<=k){
                                        ans=min(ans,billN+ump[left]);
                                }
                        }
                }
                if(ans==INT_MAX){
                        puts("-1");
                }else
                        printf("%d\n",ans);
        }
        return 0;
}
