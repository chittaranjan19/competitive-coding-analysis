#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>
#include<queue>
#include<set>
#include<stack>

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define scantype int
#define lli long long int
#define N 100003

lli powermod(lli _a,lli _b){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a);_b/=2;_a=(_a*_a);}return _r;}

using namespace std;

void scan(scantype &x);

lli n,x,y,cost=0,big,one=1,two=2;
map<lli,lli> dp,dp1;

lli solve(lli tn)
{
    if(dp.find(tn)!=dp.end())
       return dp[tn];

    if(tn>n)  return big;
    if(tn==n) return (lli)0;

    dp[tn] = min(x+solve(tn+one),y+solve(two*tn));

    return dp[tn];
}

lli solve1(lli tn)
{
    if(tn>n) return big;
    if(dp1[tn])return dp1[tn];

    if(tn>1)
         dp1[tn] = min(dp[tn],x+y+solve1((tn-one)*two));

    return dp1[tn];
}
int main(void)
{
  big =99999999999999999;

  cin>>n>>x>>y;
  dp[n]=0;

  solve(1);

  for(int i=(n/2)+1;i>0;i--)
  {
      dp[i] = min(dp[i],x+y+dp[i*two]);
  }

  cout<<dp[1]+x;
  return 0;
}









void scan(scantype &x)
{
    /*register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}*/

    register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
