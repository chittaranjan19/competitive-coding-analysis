#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <time.h>
#include <iostream>
#include <vector>
#include <string>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
using namespace std;

#define eps 1e-8
/*
long long cnt;
int a[100005], i, j, k, n, d;

int main()
{
    scanf("%d %d", &n, &d);
    for(i = 0; i < n; i++)
        scanf("%d", &a[i]);
    for(i = 0; i < n - 2; i++)
    {
        k = a[i] + d;
        j = lower_bound(a, a + n, k) - a;
        if(a[j] > k || j == n) j--;
        if(j - i - 1 > 0)
            cnt += (long long)(j - i) * (j - i - 1) / 2;
    }
    cout << cnt << endl;
    return 0;
}*/

int n, i, j, k, m1, m2;
int a[105], q[105], p[105], tmp[105];
bool ok;

int main()
{
    scanf("%d %d", &n, &k);
    for(i = 1; i <= n; i++)
        scanf("%d", q + i);
    for(i = 1; i <= n; i++)
        scanf("%d", a + i);
    for(m1 = 0; m1 <= k; m1++)
        for(m2 = 0; m1 + m2 <= k; m2++)
        {
            ok = true;
            for(i = 1; i <= n; i++)
            {
                p[i] = i;
                if(a[i] != i)
                    ok = false;
            }
            if(ok) continue;

            for(i = 0; i < m1; i++)
            {
                for(j = 1; j <= n; j++)
                    tmp[j] = p[q[j]];
                ok = true;
                for(j = 1; j <= n; j++)
                {
                    p[j] = tmp[j];
                    if(p[j] != a[j])
                        ok = false;
                }
                if(ok) break;
            }
            if(i < m1 && m2 != 0) continue;

            for(i = 0; i < m2; i++)
            {
                for(j = 1; j <= n; j++)
                    tmp[q[j]] = p[j];
                ok = true;
                for(j = 1; j <= n; j++)
                {
                    p[j] = tmp[j];
                    if(p[j] != a[j])
                        ok = false;
                }
                if(ok) break;
            }
            if(i != m2 - 1) continue;

            ok = true;
            for(i = 1; i <= n; i++)
                if(p[i] != a[i])
                    ok = false;
            if(ok)
            {
                printf("YES\n");
                return 0;
            }
        }
    printf("NO\n");
    return 0;
}