#define DEBUG

#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <cmath>
#include <iostream>
#include <fstream>
#include <sstream>
#include <climits>
#include <ctime>
#include <cassert>
using namespace std;
// template

// abbreviations
#define vi vector <int>
#define vl vector <long long>
#define vb vector <bool>
#define vs vector <string>
#define ii pair <int, int>
#define a first
#define b second
#define vii vector <ii>
#define mii map <int, int>
#define que queue
#define pque priority_queue
#define stk stack
#define lsone(value) (value)&(-value)
#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define pu push
#define po pop
#define mp make_pair
#define loop(i, n) for(int i = 0; i < n; ++i)
#define loop1(i, n) for(int i = 1; i <= n; ++i)
#define reverse_iterate(a, b) for(__typeof(b.rend()) a = b.rbegin(); a != b.rend(); ++a)
#define iterate(a, b) for(__typeof(b.begin()) a = b.begin(); a != b.end(); ++a)
#define all(i) i.begin(), i.end()

typedef unsigned long long ull;
typedef long long ll;

const double PI = acos(-1);

#ifdef DEBUG
	#define debug(...) printf(__VA_ARGS__)
	#define GetTime() fprintf(stderr,"Running time: %.3lf second\n",((double)clock())/CLOCKS_PER_SEC)
#else
	#define debug(...) 
	#define GetTime() 
#endif

// end of template

int main() {
    // freopen("659.in", "r", stdin);
    
    int n, m;
    cin >> n >> m;

    vector<vector<vs> > table(m, vector<vs>(801));
    while (n--) {
    	string name;
    	int group, point;
    	cin >> name >> group >> point;
    	--group;
    	table[group][point].pub(name);
    }
    for (int i = 0; i < m; ++i) {
    	vector<vs> &tab = table[i];
    	pair<string, string> ans("", "");
    	for (int point = 800; point >= 0; --point) {
    		vs &people = tab[point];
    		if (ans.a == "") {
    			if (people.size() >= 2) {
    				if (people.size() == 2) {
	    				ans.a = people[0];
	    				ans.b = people[1];
	    			}
    				break;
    			} else if (people.size() == 1) {
    				ans.a = people[0];
    			}
    		} else {
    			if (people.size() >= 1) {
    				if (people.size() == 1) {
    					ans.b = people[0];
    				}
    				break;
    			}
    		}
    	}
    	if (ans.b == "") {
    		puts("?");
    	} else {
    		cout << ans.a << " " << ans.b << endl;
    	}

    }

    return 0;
}