#include <bits/stdc++.h>
#define FORE(i, a, b) for(long long i = a; i <= b; i++)
#define FORD(i, a, b) for(long long i = a; i >= b; i--)
#define FOR(i, a, b) for(long long i = a; i < b; i++)
const long long MAXN = 1e5 * 5;
const long long INF = 123456789123456;

using namespace std;
long long w, n, m;
long long a[MAXN];
long long add[MAXN];


bool ok(long long h)
{
    memset(add, 0, sizeof(add));
    long long rem = m;
    for(long long i = 1; i <= n; i++){
        add[i] = add[i - 1] + add[i];
        long long cur = a[i] + add[i];
        if (cur >= h) continue;
        long long cost = h - cur;
        if (rem < cost) return 0;
        long long l = i, r = min(i + w - 1, n);
        add[l] += cost; add[r + 1] -= cost;
        rem -= cost;
    }
    //FORE(i, 1, n) if (a[i] < h) return 0;
    return 1;
}

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("460C.inp", "r", stdin);
    freopen("460C.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n >> m >> w;
    FORE(i, 1, n) cin >> a[i];

    long long d = 0, c = INF, g, fin = -1;
    while (d <= c){
       // cout <<d<<" "<<c<<endl;
        g = (d + c) / 2;
        if (ok(g)){
            d = g + 1;
            fin = g;
        }
        else c = g - 1;
    }

    //cout << ok(2) << endl;
    cout << fin;
    return 0;
}

