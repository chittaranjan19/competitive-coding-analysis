#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

int n, k;
ll m, lim;
ll dp[101][10001], fact[101], mfact[101], ncr[101], p[101][2];

ll modpow(ll a, ll b)
{
	ll x=1, y=a;
	while(b){
		if(b&1)
			x = (x*y)%mod;
		y = (y*y)%mod;
		b/=2;
	}
	return x;
}

ll solve(int cur, int lt)
{
	if(cur==(n+1)){
		if(!lt)
			return 1;
		return 0;
	}
	if(dp[cur][lt]!=-1)
		return dp[cur][lt];
	ll ret = 0, temp, cnt, i;
	for(i=0; i<=n; i++){
		if(i>lt)
			break;
		if(cur<=lim)
			temp = p[i][1];
		else
			temp = p[i][0];
		ret = (ret+(temp*solve(cur+1, lt-i))%mod)%mod;
	}
	return dp[cur][lt] = ret;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	memset(dp, -1, sizeof(dp));
	int i, j;
	ll temp, cnt1, cnt2;
	fact[0] = mfact[0] = 1;
	for(i=1; i<=100; i++)
		fact[i] = (fact[i-1]*i)%mod;
	scanf("%d%lld%d", &n, &m, &k);
	for(i=0; i<=n; i++){
		ncr[i] = (fact[n]*modpow((fact[n-i]*fact[i])%mod, mod-2))%mod;
		cnt1 = m%n;
		cnt2 = m%n + 1;
		p[i][0] = modpow(ncr[i], cnt1);
		p[i][1] = modpow(ncr[i], cnt2);
	}
	lim = m%n;
	ll ans = solve(1, k);
	printf("%lld\n", ans);
	return 0;
}
