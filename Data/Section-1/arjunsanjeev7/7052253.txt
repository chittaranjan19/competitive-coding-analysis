// Pythagorean Theorem II

#include <algorithm>
#include <bits/stdc++.h>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

typedef vector<int,int> VII;
typedef set<int,int> SII;
typedef map<int,int> MII;
typedef pair<int,int> P;

int coPrime(int i, int j)
{
	int r;
	while(1)
	{
		r=j%i;
		if(r==0) break;
		j=i;
		i=r;
	}
	if(i!=1) return 0;
	else return 1;
}

int main()
{
	int n,sides[3],i,j,k,ans=0;
	cin>>n;
	for(i=1;i<=n;i++)
	{
		for(j=i+1;j<=n;j+=2)
		{
			if(!coPrime(i,j)) continue;
			sides[0]=2*j*i;
			sides[1]=j*j-i*i;
			sides[2]=j*j+i*i;
			sort(sides,sides+3);
			if(sides[2]>n) break;
			ans+=n/sides[2];
		}
	}
	cout<<ans<<endl;
	return 0;
}