import java.io.*;
import java.util.*;
import java.math.*;

public class Task {
    void solve() throws IOException {
    	int n = nextInt();
    	char[] s = next().toCharArray();
    	for (int i=0; i<n; i++)
    		if (s[i]=='1')
    			for (int j=i+1; j<n; j++)
    				if (s[j]=='1') {
    					int d = j-i;
    					int p = j;
    					boolean ok = true;
    					for (int k=j+1; k<n; k++)
    						if (s[k]=='1') {
    							if (k-p!=d) ok = false;
    							p = k;
    						}
    					if (ok) out.println("YES"); else out.println("NO");
    					return;
    				}
    }
    
    


    static final int inf = 1000000000;
    BufferedReader br;
    StringTokenizer st;
    PrintWriter out;
    
    public void run() {
        try {
            //br = new BufferedReader(new FileReader(FileName+".in"));
            //out = new PrintWriter(FileName+".out");
            //br = new BufferedReader(new InputStreamReader(System.in));
            //out = new PrintWriter(System.out);
            br = new BufferedReader(new FileReader("input.txt"));
            out = new PrintWriter("output.txt");
            solve();
            br.close();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }
    }

    String next() throws IOException {
        while (st == null || !st.hasMoreTokens()) {
            String s = br.readLine();
            if (s == null)
                    return null;
            st = new StringTokenizer(s);
        }
        return st.nextToken();
    }

    double nextDouble() throws IOException {
       return Double.parseDouble(next());
    }

    int nextInt() throws IOException {
            return Integer.parseInt(next());
    }

    long nextLong() throws IOException {
            return Long.parseLong(next());
    }

    public static void main(String[] args) {        
            new Task().run();
    
    }
}