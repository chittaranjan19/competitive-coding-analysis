#include <bits/stdc++.h>

using namespace std;

#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define rep(it, v) for (auto it = (v).begin(); it != (v).end(); it++)

typedef long long ll;
typedef pair<int, int> pii;
const int MAXN = 10010;

int N, L[MAXN], R[MAXN];
vector<int> vall;
int cnt[MAXN];

int indexof (int x) {
	return lower_bound(all(vall), x) - vall.begin() + 1;
}

int main() {
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	ios::sync_with_stdio(false);
	cin >> N;
	for (int i = 0; i < N; i++) {
		cin >> L[i] >> R[i];
		vall.push_back(L[i]);
		vall.push_back(R[i]);
	}
	sort(all(vall));
	vall.resize(unique(all(vall)) - vall.begin());
	for (int i = 0; i < N; i++) {
		L[i] = indexof(L[i]);
		R[i] = indexof(R[i]);
		for (int j = L[i]; j < R[i]; j++) {
			cnt[j]++;	
		}
	}
	vector<int> ans;
	for (int i = 0; i < N; i++) {
		for (int j = L[i]; j < R[i]; j++) {
			cnt[j]--;	
		}
		bool bad = false;
		for (int j = 1; j < MAXN; j++) {
			if (cnt[j] > 1) {
				bad = true;
				break;
			}
		}
		if (!bad) {
			ans.push_back(i);
		}
		for (int j = L[i]; j < R[i]; j++) {
			cnt[j]++;	
		}
	}
	cout << ans.size() << endl;
	for (int i : ans) {
		cout << i + 1 << ' ';
	}
}