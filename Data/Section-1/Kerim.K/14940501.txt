#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define lg(x) ceil(log2(x))
#define lgN 18
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
PII rr[MAXN];
int lvl[MAXN],P[MAXN][lgN+9],a,arr[MAXN];
vector<int>adj[MAXN];
void dfs(int nd,int pr){
	lvl[nd]=lvl[pr]+1;
	P[nd][0]=pr;
	tr(v,adj[nd])
		if(*v!=pr)
			dfs(*v,nd);
}
void build(){
	for(int j=1;j<lgN;j++)
		for(int i=1;i<=a;i++)
			if(P[i][j-1]!=-1)
				P[i][j]=P[P[i][j-1]][j-1];
}
int LCA(int x,int y){
	if(lvl[x]<lvl[y])
		swap(x,y);
	for(int i=lgN;i>=0;i--)
		if(lvl[x]-(1<<i)>=lvl[y])
			x=P[x][i];
	if(x==y)
		return x;
	for(int i=lgN;i>=0;i--)
		if(P[x][i]!=-1 and P[x][i]!=P[y][i])
			x=P[x][i],y=P[y][i];
	return P[x][0];						
}
void dfs1(int nd,int pr){
	tr(v,adj[nd])
		if(*v!=pr)
			dfs1(*v,nd);
	arr[P[nd][0]]+=arr[nd];
}
int main(){
	memset(P,-1,sizeof(P));
	cin>>a;
	for(int i=0;i<a-1;i++){
		int u,v;
		cin>>u>>v;
		rr[i]={u,v};
		adj[u].pb(v);
		adj[v].pb(u);
	}
	dfs(1,0);
	build();
	int k;
	cin>>k;
	while(k--){
		int u,v;
		cin>>u>>v;
		int z=LCA(u,v);
		arr[u]++;arr[v]++;
		arr[z]-=2;
	}
	dfs1(1,0);
	for(int i=0;i<a-1;i++){
		int u=rr[i].ff,v=rr[i].ss;
		if(P[u][0]==v)
			cout<<arr[u]<<" ";
		else
			cout<<arr[v]<<" ";	
	}
	cout<<endl;
	return 0;
}

