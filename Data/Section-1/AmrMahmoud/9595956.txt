#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int arr[1005][1005];
LL res[1000005];
LL res2[1000005];

int main()
{
    ios_base::sync_with_stdio(0);
    LL n, m, k, p;
    cin >> n >> m >> k >> p;
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            cin >> arr[i][j];
    priority_queue<LL> q1, q2;
    for(int i=0;i<n;i++)
    {
        int temp = 0;
        for(int j=0;j<m;j++)
            temp+=arr[i][j];
        q1.push(temp);
    }
    for(int i=0;i<m;i++)
    {
        int temp = 0;
        for(int j=0;j<n;j++)
            temp+=arr[j][i];
        q2.push(temp);
    }
    for(int i=1;i<=k;i++)
    {
        LL temp = q1.top();
        res[i] = res[i-1] + temp;
        q1.pop();
        q1.push(temp - m * 1LL * p);
    }
    for(int i=1;i<=k;i++)
    {
        LL temp = q2.top();
        res2[i] = res2[i-1] + temp;
        q2.pop();
        q2.push(temp - n * 1LL * p);
    }
    LL sol = -INF_LL;
    for(int i=0;i<=k;i++)
        sol = max(sol, res[i] + res2[k - i] - p * i * (k - i));
    cout << sol;
    return 0;
}
