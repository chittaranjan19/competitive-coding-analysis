#include<string>
#include<iomanip>
#include<cstdio>
#include<math.h>
#include<cmath>
#include<algorithm>
#include<vector>
#include<set>
#include<map>

using namespace std;

typedef long long ll;

#if _DEBUG
#include<fstream>
ifstream cin("input.txt");
ofstream cout("output.txt");
#else
#include<iostream>
#endif


vector < vector <int> > vv;

vector <int> used;

bool was = false;

void dfs(int v, int p) {
	used[v] = 1;
	for (int i = 0; i < (int)vv[v].size(); i++) {
		int to = vv[v][i];
		if (to != p && used[to] == 1) 
			was = true;
		if (used[to] == 0)
			dfs(to, v);
	}
	used[v] = 2;
}


int main() {
	int n, m;
	cin >> n >> m;
	vv.resize(n + 1);
	used.resize(n + 1, 0);
	for (int i = 0; i < m; i++) {
		int from, to;
		cin >> from >> to;
		vv[from].push_back(to);
		vv[to].push_back(from);
	}
	int ans = 0;
	for (int i = 1; i <= n; i++) {
		if (used[i] == 0) {
			was = false;
			dfs(i, -1);
			if (!was) ans++;
		}
	}
	cout << ans;
	return 0;
}