#include <bits/stdc++.h>

#define ll long long
#define ld long double

using namespace std;

const ll inf = (ll)2 * 1e9;
const ll MOD = (ll)1e9 + 7;
const ll P = 239;
const ll MAX_N = 500000;
const long double pi = 3.1415926535897932384626;
const long double eps = 1e-6;

vector<vector<int> > graph;
vector<int> dist;
queue<int> q;

void bfs()
{
    while (!q.empty())
    {
        int x = q.front();
        q.pop();
        for (int i = 0; i < graph[x].size(); i++)
            if (dist[graph[x][i]] > dist[x] + 1)
            {
                dist[graph[x][i]] = dist[x] + 1;
                q.push(graph[x][i]);
            }
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin >> n;
    int a[n];
    for (int i = 0; i < n; i++)
        cin >> a[i];
    graph.resize(n);
    dist.resize(n, inf);
    for (int i = 0; i < n - 1; i++)
    {
        graph[i].push_back(i + 1);
        graph[i + 1].push_back(i);
    }
    for (int i = 0; i < n; i++)
        if (a[i] - 1 != i)
            graph[i].push_back(a[i] - 1);
    dist[0] = 0;
    q.push(0);
    bfs();
    for (int i = 0; i < n; i++)
        cout << dist[i] << " ";
    return 0;
}