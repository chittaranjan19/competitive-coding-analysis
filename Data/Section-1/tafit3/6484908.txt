import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class BiathlonTrack {

    private BiathlonTrack() throws IOException {
        BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
        String h = rd.readLine();
        String[] e = h.split("\\s+");
        int n = Integer.parseInt(e[0]);
        int m = Integer.parseInt(e[1]);
        int t = Integer.parseInt(e[2]);

        h = rd.readLine();
        e = h.split("\\s+");
        int tp = Integer.parseInt(e[0]);
        int tu = Integer.parseInt(e[1]);
        int td = Integer.parseInt(e[2]);

        int[][] v = new int[n][m];
        for(int i=0;i<n;i++) {
            h = rd.readLine();
            e = h.split("\\s+");
            for(int j=0;j<m;j++) {
                v[i][j] = Integer.parseInt(e[j]);
            }
        }


        int[][] horiz = new int[n][m];
        for(int i=0;i<n;i++) {
            horiz[i][0] = 0;
            for(int j=1;j<m;j++) {
                int d;
                if(v[i][j-1] < v[i][j]) {
                    d = tu;
                } else if(v[i][j-1] > v[i][j]) {
                    d = td;
                } else {
                    d = tp;
                }
                horiz[i][j] = horiz[i][j-1] + d;
            }
        }

        int[][] horiz2 = new int[n][m];
        for(int i=0;i<n;i++) {
            horiz2[i][m-1] = 0;
            for(int j=m-2;j>=0;j--) {
                int d;
                if(v[i][j+1] < v[i][j]) {
                    d = tu;
                } else if(v[i][j+1] > v[i][j]) {
                    d = td;
                } else {
                    d = tp;
                }
                horiz2[i][j] = horiz2[i][j+1] + d;
            }
        }

        int[][] vert = new int[n][m];
        for(int j=0;j<m;j++) {
            vert[0][j] = 0;
            for(int i=1;i<n;i++) {
                int d;
                if(v[i-1][j] < v[i][j]) {
                    d = tu;
                } else if(v[i-1][j] > v[i][j]) {
                    d = td;
                } else {
                    d = tp;
                }
                vert[i][j] = vert[i-1][j] + d;
            }
        }

        int[][] vert2 = new int[n][m];
        for(int j=0;j<m;j++) {
            vert2[n-1][j] = 0;
            for(int i=n-2;i>=0;i--) {
                int d;
                if(v[i+1][j] < v[i][j]) {
                    d = tu;
                } else if(v[i+1][j] > v[i][j]) {
                    d = td;
                } else {
                    d = tp;
                }
                vert2[i][j] = vert2[i+1][j] + d;
            }
        }

        int min = Integer.MAX_VALUE;
        String res = "";
        for(int y0=0;y0<n-2;y0++) {
            for(int x0=0;x0<m-2;x0++) {
                for(int y1=y0+2;y1<n;y1++) {
                    for(int x1=x0+2;x1<m;x1++) {
                        int s = horiz[y0][x1] - horiz[y0][x0];
                        s += horiz2[y1][x0] - horiz2[y1][x1];
                        s += vert[y1][x1] - vert[y0][x1];
                        s += vert2[y0][x0] - horiz2[y1][x0];
                        if(Math.abs(s-t) < min) {
                            min = Math.abs(s-t);
                            res = (y0+1)+" "+(x0+1)+" "+(y1+1)+" "+(x1+1);
                        }
                    }
                }
            }
        }
        out(res);
    }

    private static void out(Object s) {
        System.out.println(s);
    }


    public static void main(String[] args) throws IOException {
        new BiathlonTrack();
    }
}
