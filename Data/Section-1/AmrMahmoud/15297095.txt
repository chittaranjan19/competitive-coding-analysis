#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int arr[500005];
int cnt[1000005];

LL power(LL a, LL b)
{
  if(b == 0) return 1;
  LL tmp = power(a, b / 2);
  tmp = (tmp * tmp) % mod;
  if(b & 1) tmp = (tmp * a) % mod;
  return tmp;
}

int main()
{
  //freopen("text_editor.txt", "r", stdin);
  //freopen("output.txt", "w", stdout);
  LL n, m;
  cin >> n >> m;
  LL to = min(n, m);
  int sq = (int)(sqrt(to) + EPS);
  LL res = 0;
  for(int i=1;i<=sq;i++)
  {
    res += (i * 1LL * ((LL)(n / i) - sq) % mod) % mod;
    if(res >= mod)
      res -= mod;
  }
  LL tmp = 0;
  for(int i=1;i<=sq;i++)
  {
    LL x = n / i;
    x %= mod;
    tmp += (x * (x + 1)) % mod;
    if(tmp >= mod)
      tmp -= mod;
  }
  tmp *= power(2, mod - 2);
  tmp %= mod;
  res += tmp;
  if(res >= mod)
    res -= mod;
  res = (((n % mod) * (n % mod)) % mod) - res;
  if(res < 0) res += mod;
  if(m > n)
  {
    res += ((n % mod) * ((m - n) % mod)) % mod;
    if(res >= mod) res -= mod;
  }
  cout << res;
  return 0;
}
