#include <stdio.h>
#include <math.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <sstream>
#include <queue>
#include <algorithm>
#include <iostream>
using namespace std;

typedef long long ll;
#define mod 1000000007

int n, m;
int a[100005][3];
pair <ll, int> b[100005];
ll c[100005], cur;
int res[100005];

int main()
{
    scanf("%d", &m);
    for(int i = 0; i < m; i++)
    {
        scanf("%d", &a[i][0]);
        if(a[i][0] == 1)
            scanf("%d", &a[i][1]);
        else
            scanf("%d %d", &a[i][1], &a[i][2]);
    }
    scanf("%d", &n);
    for(int i = 0; i < n; i++)
    {
        scanf("%I64d", &b[i].first);
        b[i].first--;
        b[i].second = i;
    }
    sort(b, b + n);

    int j = 0;
    for(int i = 0; i < m && j < n; i++)
    {
        if(a[i][0] == 1)
        {
            if(b[j].first == cur)
            {
                res[b[j].second] = a[i][1];
                j++;
            }
            if(cur < 100000)
                c[cur] = a[i][1];
            cur++;
        }
        else
        {
            while(j < n && b[j].first < cur + a[i][1] * a[i][2])
            {
                res[b[j].second] = c[(b[j].first - cur) % a[i][1]];
                j++;
            }
            ll tmpcur = cur;
            for(int k = 0; k < a[i][2] && tmpcur < 100000; k++)
                for(int l = 0; l < a[i][1] && tmpcur < 100000; l++)
                    c[tmpcur++] = c[l];
            cur += a[i][1] * a[i][2];
        }   
    }

    for(int i = 0; i < n - 1; i++)
        printf("%d ", res[i]);
    printf("%d\n", res[n-1]);

    return 0;
}
