#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <stdexcept>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int arr[5005];

pair<pair<LL, LL>, LL> Extended_Euclidean(LL a, LL b)
{
    if(b == 0) return mp(mp(1, 0), a);
    pair<pair<LL, LL>, LL> nextSolution = Extended_Euclidean(b, a % b);
    LL p = nextSolution.f.f;
    LL q = nextSolution.f.s;
    LL g = nextSolution.s;
    pair<pair<LL, LL>, LL> res;
    res.f.f = q;
    res.f.s = (p - a / b * q);
    res.s = g;
    return res;
}

LL gcd(LL a, LL b)
{
  if(!b) return a;
  return gcd(b, a % b);
}

LL lcm(LL a,LL b)
{
  return a / gcd(a, b) * b;
}

int main()
{
  ios_base::sync_with_stdio(0);
  int n, k, q, x;
  cin >> n >> k;
  for(int i=0;i<n;i++) cin >> arr[i];
  cin >> q;
  while(q--)
  {
    cin >> x;
    int res = 50000;
    for(int i=0;i<n;i++)
    {
      for(int j=i;j<n;j++)
      {
        LL c = arr[i], cc = arr[j];
        pair<LL, LL> a = Extended_Euclidean(arr[i], arr[j]).f;
        LL z = Extended_Euclidean(arr[i], arr[j]).s;
        if(x % z != 0)
          continue;
        LL temp = x / z;
        a.f*=temp;
        a.s*=temp;
        c/=z, cc/=z;
        LL ce = ceil(-(double) a.f / cc), fl = floor((double) a.s / c);
        if(ce > fl)
          continue;
        LL cost = cc - c;
        if(cost * ce < cost * fl)
          a.f+=cc * ce, a.s-=c * ce;
        else a.f+=cc * fl, a.s-=c * fl;
        res = min(1LL * res, a.f + a.s);
      }
    }
    if(res > k) cout << "-1\n";
    else cout << res << "\n";
  }
  return 0;
}
