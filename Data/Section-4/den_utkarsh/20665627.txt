#include<iostream>
#include<algorithm>
#include<vector>
void findFit(std::vector<int> &groups, int &base){
	// 4 friends are maximum
	bool foundMax = false;
	int max = 0;
	std::vector<int>::iterator tmp;

	for (std::vector<int>::iterator it = groups.begin(); it != groups.end(); ++it) {
		if (base + it[0] <= 4){
			foundMax = true;
			tmp = it;
			// Select the maximum
			max = it[0];
			break;
		}
	}
	if (!foundMax){
		return;
	}
	base += max;
	groups.erase(tmp);
	if (base == 4){
		return;
	}
	findFit(groups, base);
}
int main(){
	std::vector<int> groups;
	int length;
	std::cin >> length;
	int i = 0;
	while (i != length){
		int temp;
		std::cin >> temp;
		groups.push_back(temp);
		i++;
	}
	std::sort(groups.rbegin(), groups.rend());
	// A taxi can hold 4 persons
	// Every group friends want to be together
	// Find the minimum number of taxi needed
	int cabs = 0;
	while (groups.size()>0){
		int base = groups.begin()[0];
		groups.erase(groups.begin());
		findFit(groups, base);
		cabs++;
	}
	std::cout << cabs << std::endl;
	return 0;
}