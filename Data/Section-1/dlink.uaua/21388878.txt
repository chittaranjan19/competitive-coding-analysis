#include <bits/stdc++.h>

#define out_file freopen("olymp.in", "r", stdin); freopen("olymp.out", "w", stdout)
#define ls else
#define all(a) a.begin(),a.end()
#define rall(a) a.rbegin(),a.rend()
#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
#define timer int timer=clock()
#define rtn return
#define maxint 2147483647
#define I "%d"
#define II "%d%d"
#define III "%d%d%d"
#define L "%lf"
#define sqr(x) (x)*(x)
#define mp make_pair
#define pb push_back
#define sd second
#define ft first
#define TAK "YES"
#define Tak "Yes"
#define tak "yes"
#define y0 sklfgnjkdnhfxfhn
#define y1 sklfgnjkdnhfxfh
#define y2 sklfgnjkdnhfxfhnv
#define y3 sklfgnjkdnhfxfhna
#define y5 sklfgnjkdnhfxfhns
#define y4 sklfgnjkdnhfxfhnd
#define y6 sklfgnjkdnhfxfhnf

using namespace std;

typedef pair <int,int> pii;
typedef vector < pii > vii;
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef long double ld;
typedef long long ll;
typedef unsigned long long ull;

string s;
int m, n;

bool chk(char c)
{
    int pos = -1;
    for(int i = 0; i < n; i++)
        if(s[i] <= c)
        {
            if(i-pos > m)
                rtn 0;
            pos = i;
        }
    rtn 1;
}

int kilk(char c)
{
    int targ = 0;
    int pos = -1;
    vi dop;
    for(int i = 0; i < n; i++)
    {
        if(s[i] == c)
        {
            dop.pb(i);
            if(i - pos == m)
            {
                targ++;
                dop.clear();
                pos = i;
            }
        }
        ls
        if(s[i] < c)
        {
            //cout << "!!" << pos << ' ' << i << '\n';
            int x = -1;
            if(i - pos <= m)
                goto suyda;
            while(x < int(dop.size()))
            {
                while(dop[x+1] - pos <= m && x < int(dop.size()))
                    //cout << "!2!",
                    x++;
                //system("pause");
                if(i - pos <= m)
                    goto suyda;
                pos = dop[x];
                targ++;
                //cout << i << ' ' << pos << ' ' << x << ' ' << dop.size() << ' ' << targ << '\n';
            }
            suyda:;
            pos = i;
            //cout << "??\n";
            dop.clear();
        }
        //cout << i << ' ' << targ << '\n';
    }
    /*if(!dop.empty())
    {
        //cout << dop.size() << ' ' << pos << '\n';
        for(int i = 0; i < (int)dop.size(); i++)
            if(dop[i] - pos > m)
                targ++,
                i--,
                pos = dop[i];
    }*/
    rtn targ;
}

void output(char c)
{
    string ans = "";
    for(int i = 0; i < n; i++)
        if(s[i] < c)
            ans += s[i];
    int dop = kilk(c);
    //cout << dop << '\n';
    sort(all(ans));
    for(int i = 0; i < dop; i++)
        ans += c;
    cout << ans;
    exit(0);
}

int main()
{
    cin >> m >> s;
    n = (int)s.length();
    for(char c = 'a'; c <= 'z'; c++)
        if(chk(c))
            output(c);
}
