#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

#define ll long long
#define ld long double

using namespace std;

const ll inf = (ll)2 * 1e9;
const ll MOD = (ll)1e9 + 7;
const ll p = 239;
const ll MAX_N = 10;
const long double pi = 3.1415926535897932384626;
const long double eps = 1e-6;

int main()
{
    //ifstream ifs("input.txt");
    //ofstream ofs("output.txt");
    //freopen("candies.in", "r", stdin);
    //freopen("candies.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    ll n, m, k;
    cin >> n >> m >> k;
    ll a, b;
    cin >> a >> b;
    ll f1[2], f2[2];
    f1[0] = a / (m * k) + (a % (m * k) ? 1 : 0);
    f1[1] = (a - ((f1[0] - 1) * m * k)) / k + ((a - ((f1[0] - 1) * m * k)) % k ? 1 : 0);
    f2[0] = b / (m * k) + (b % (m * k) ? 1 : 0);
    f2[1] = (b - ((f2[0] - 1) * m * k)) / k + ((b - ((f2[0] - 1) * m * k)) % k ? 1 : 0);
    if (f1[0] == f2[0])
        cout << min(abs(f1[1] - f2[1]) * 5, 10 + abs(f1[1] - f2[1]));
    else
        cout << min(abs(f1[1] - 1) * 5, 10 + abs(f1[1] - 1)) + min(abs(f2[1] - 1) * 5, 10 + abs(f2[1] - 1)) + min(max(f1[0], f2[0]) - min(f1[0], f2[0]), min(f1[0], f2[0]) - max(f1[0], f2[0]) + n) * 15;
    return 0;
}
