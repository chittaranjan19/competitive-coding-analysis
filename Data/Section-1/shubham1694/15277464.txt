#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

int isprime[maxn], p[maxn], arr[maxn], ans[maxn];
vector<int> pf;

void pre()
{
    memset(isprime, 1, sizeof(isprime));
    isprime[1] = 0;
    ll i, j;
    for(i=4; i<maxn; i+=2)
        isprime[i] = 0, p[i] = 2;
    p[2] = 2;
    p[1] = 1;
    for(i=3; i<maxn; i+=2){
        if(isprime[i]){
            p[i] = i;
            for(j=i*i; j<maxn; j+=i){
                isprime[j] = 0;
                p[j] = i;
            }
        }
    }
}

int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    int i, j, n, temp, cmax, sol=0, x;
    pre();
    sd(n);
    for(i=1; i<=n; i++)
        scanf("%d", &arr[i]);
    for(i=1; i<=n; i++){
        pf.clear();
        temp = arr[i];
        while(temp>1){
            pf.pb(p[temp]);
            x = p[temp];
            while(!(temp%x))
                temp/=x;
        }
        cmax = 0;
        for(j=0; j<pf.size(); j++)
            cmax = max(cmax, ans[pf[j]]);
        cmax++;
        for(j=0; j<pf.size(); j++)
            ans[pf[j]] = max(ans[pf[j]], cmax);
        sol = max(sol, cmax);
        //cout << cmax << "\n";
    }
    printf("%d\n", sol);
    return 0;
}
