#include <iostream>
#include <string>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <functional>
#include <algorithm>
#include <climits>
#include <list>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <stack>
#include <queue>
#include <vector>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define ll long long
#define f first
#define s second

typedef pair<int, int> pii;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 1000010;

int arr[maxn], l[maxn], r[maxn];
map<int, int> m1;
int ft[maxn];

void update(int x, int val)
{
    while(x<maxn){
        ft[x]+=val;
        x+=(x&(-x));
    }
}

int read(int x)
{
    int ret = 0;
    while(x>0){
        ret+=ft[x];
        x-=(x&(-x));
    }
    return ret;
}

int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    int t, i, j, n, m;
    ll ans = 0;
    t = 1;
    //sd(t);
    while(t--){
        sd(n);
        for(i=0; i<n; i++){
            sd(arr[i]);
            m1[arr[i]]++;
            l[i] = m1[arr[i]];
        }
        m1.clear();
        for(i=n-1; i>=0; i--){
            m1[arr[i]]++;
            r[i] = m1[arr[i]];
        }
        for(i=1; i<n; i++)
            update(r[i], 1);
        for(i=0; i<n-1; i++){
            ans+=read(l[i]-1);
            update(r[i+1], -1);
        }
        cout << ans << "\n";
    }   
    return 0;
}
