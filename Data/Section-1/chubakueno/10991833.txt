#include <bits/stdc++.h>
using namespace std;
double dp[101][101][101][3];
double cdp(int i,int j, int k,int tip){
    if(dp[i][j][k][tip]>=0) return dp[i][j][k][tip];
    double res=0;
    int combs=i*j+j*k+k*i;
    if(j&&k) res+=j*k*cdp(i,j,k-1,tip);
    if(i&&j) res+=i*j*cdp(i,j-1,k,tip);
    if(i&&k) res+=i*k*cdp(i-1,j,k,tip);
    return dp[i][j][k][tip]=res/combs;
}
int main(){
    for(int i=0;i<101;++i)
        for(int j=0;j<101;++j)
            for(int k=0;k<101;++k)
                dp[i][j][k][0]=dp[i][j][k][1]=dp[i][j][k][2]=-1;
    for(int i=0;i<101;++i)
        for(int j=0;j<101;++j){
            dp[0][i][j][0]=0;
            dp[i][0][j][1]=0;
            dp[i][j][0][2]=0;
        }
    for(int i=1;i<101;++i){
        dp[i][0][0][0]=1;
        dp[0][i][0][1]=1;
        dp[0][0][i][2]=1;
    }
    int r,s,p;
    cin>>r>>s>>p;
    cout<<std::fixed;
    cout<<setprecision(12);
    cout<<cdp(r,s,p,0)<<" ";
    cout<<cdp(r,s,p,1)<<" ";
    cout<<cdp(r,s,p,2)<<endl;
}