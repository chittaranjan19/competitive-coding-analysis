#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
vector<int>up[MAXN];
int s[MAXN<<2],arr[MAXN];
void upd(int p,int v,int nd,int x,int y){
	if(x==y){
		s[nd]+=v;
		return;
	}
	int mid=(x+y)>>1;
	if(p<=mid)
		upd(p,v,nd<<1,x,mid);
	else
		upd(p,v,nd<<1|1,mid+1,y);
	s[nd]=s[nd<<1]+s[nd<<1|1];		
}
int tap(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return 0;
	if(l<=x and y<=r)
		return s[nd];
	int mid=(x+y)>>1;
	int i1=tap(l,r,nd<<1,x,mid);
	int i2=tap(l,r,nd<<1|1,mid+1,y);
	return i1+i2;		
}
int n,m;
int bul(int l,int r,int ind){
	while(l+1<r){
		int mid=(l+r)>>1;
		if(!tap(ind,mid,1,1,n))
			l=mid;
		else
			r=mid;	
	}
	for(int i=r;i>=l;i--)
		if(!tap(ind,i,1,1,n))
			return i;
	return ind-1;		
}
int pos[MAXN];
int main(){
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++)
		scanf("%d",arr+i),pos[arr[i]]=i;
	while(m--){
		int x,y;
		scanf("%d%d",&x,&y);
		if(pos[x]>pos[y])
			swap(x,y); 
		up[pos[x]].pb(pos[y]),upd(pos[y],+1,1,1,n);		
	}
	ll ans=0;
	for(int i=1;i<=n;i++){
		ans+=bul(i,n,i)-i+1;
		for(int j=0;j<up[i].size();j++)
			upd(up[i][j],-1,1,1,n);
	}
	printf("%lld\n",ans);
	return 0;
}

