#include <iostream>
#include <string>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <functional>
#include <algorithm>
#include <climits>
#include <list>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <stack>
#include <queue>
#include <vector>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define ll long long
#define f first
#define s second

typedef pair<int, int> pii;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

int x, y, z;
/*
map<pair<int, pair<int, int> >, int > m1;

int solve(int a, int b, int c)
{   
    cout << a << " " << b << " " << c << "\n";
    if(a<0 || b<0 || c<0)
        return 0;
    if(a==x && b==y && x==z)
        return 1;
    int ret = 0;
    if(a>=2){
        if(m1.find(mp(a-2, mp(b+1, c)))==m1.end()){
            m1[mp(a-2, mp(b+1, c))] = 1;
            ret|=solve(a-2, b+1, c);
        }
        if(m1.find(mp(a-2, mp(b, c+1)))==m1.end()){
            m1[mp(a-2, mp(b, c+1))] = 1;
            ret|=solve(a-2, b, c+1);
        }
    }
    if(b>2){
        if(m1.find(mp(a+1, mp(b-2, c)))==m1.end()){
            m1[mp(a+1, mp(b-2, c))] = 1;
            ret|=solve(a+1, b-2, c);
        }
        if(m1.find(mp(a, mp(b-2, c+1)))==m1.end()){
            m1[mp(a, mp(b-2, c+1))] = 1;
            ret|=solve(a+1, b-2, c);
        }
    }
    if(c>2){
        if(m1.find(mp(a, mp(b+1, c-2)))==m1.end()){
            m1[mp(a, mp(b+1, c-2))] = 1;
            ret|=solve(a, b+1, c-2);
        }
        if(m1.find(mp(a+1, mp(b, c-2)))==m1.end()){
            m1[mp(a+1, mp(b, c-2))] = 1;
            ret|=solve(a+1, b, c-2);
        }
    }
    return ret;
}
*/
int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    int t, i, j, n, m, a, b, c, l, w;
    t = 1;
    //sd(t);
    while(t--){
        scanf("%d%d%d%d%d%d", &a, &b, &c, &x, &y, &z);
        l = max(0, a-x) + max(0, b-y) + max(0, c-z);
        w = max(0, x-a) + max(0, y-b) + max(0, z-c);
        if(2*w<=l)
            printf("Yes\n");
        else
            printf("No\n");
        /*
        m1[mp(a, mp(b, c))] = 1;
        if(solve(a, b, c))
            printf("Yes\n");
        else
            printf("No\n");
        */
    }
    return 0;
}
