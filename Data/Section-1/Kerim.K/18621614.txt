#include<stdio.h>
#include<stack>
#include<algorithm>
#include<cmath>
#define MAXN 1000009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define ff first
#define ss second
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
int imp[MAXN],arr[MAXN],pos[MAXN],s[MAXN<<2];
int tap(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return 0;
	if(l<=x and y<=r)
		return s[nd];
	int mid=(x+y)>>1;
	int i1=tap(l,r,nd<<1,x,mid);
	int i2=tap(l,r,nd<<1|1,mid+1,y);
	return i1+i2;		
}
void upd(int p,int nd,int x,int y){
	if(x==y){
		s[nd]++;
		return;
	}
	int mid=(x+y)>>1;
	if(p<=mid)
		upd(p,nd<<1,x,mid);
	else
		upd(p,nd<<1|1,mid+1,y);
	s[nd]=s[nd<<1]+s[nd<<1|1];		
}
int n,k,xx,m[MAXN];
PII rr[MAXN];
int main(){
	scanf("%d%d",&n,&k);
	for(ll i=1;i<=n;i++){
		scanf("%d",&arr[i]);
		m[i]=INF;
		pos[arr[i]]=i;
	}
	for(ll i=1;i<=k;i++){
		scanf("%d",&xx),imp[xx]=1;
		m[pos[xx]]=xx;
	}
	stack<int>s;
	s.push(0);arr[0]=-INF;
	for(int i=1;i<=n;i++){
		while(!s.empty() and arr[s.top()]>arr[i]){
			rr[s.top()].ss=i-1;
			s.pop();
		}
		if(arr[s.top()]==arr[i])
			rr[i].ff=rr[s.top()].ff;
		else
			rr[i].ff=s.top()+1;	
		s.push(i);	
		rr[i].ss=n;	
	}
//	for(int i=1;i<=n;i++)
//		printf("%d %d\n",rr[i].ff,rr[i].ss);
	ll ans=0;	
	for(int i=1;i<=n;i++){
		if(imp[i])
			continue;
		int left=rr[pos[i]].ff;
		int right=rr[pos[i]].ss;
		ans+=ll(right-left+1LL)-tap(left,right,1,1,n);
		upd(pos[i],1,1,n);	
	}
	printf("%lld\n",ans);
	return 0;
}