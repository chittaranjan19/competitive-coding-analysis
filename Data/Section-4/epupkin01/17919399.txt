#include <iostream>
#include <climits>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(b, 0, sizeof(arr)); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // getchar(), gets()
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); a - массв, n - кол-во эл-тов
#include <iomanip>      // setw(4), setfill('.'), setprecision(2)
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#include <memory>       // shared_ptr<>, uniqu_ptr<>
#include <iterator>     // ostream_iterator<int, char> our_iter(cout, " ");
#include <set>
#include <map>
#include <list>
#include <queue>
#define SRT srand(int(time(0)))

using namespace std;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
ld pi = 3.14159265358979323;
int ten[8] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};

typedef map<int, int> Map;
typedef Map::iterator mIter;
typedef pair<const int, int> mPair;
typedef pair<int, int> Pair;
typedef set<int> Set;
typedef Set::iterator sIter;
typedef list<int> List;
typedef List::iterator lIter;

int main()
{
    int n, d, h;
    
    cin >> n >> d >> h;
    
    // conditions of fail
    if (d < h)
    {
        cout << "-1\n";
        return 0;
    }
    if (d - h > h)
    {
        cout << "-1\n";
        return 0;
    }
    if (d == 1 && h == 1)
    {
        if (n > 2)
        {
            cout << "-1\n";
            return 0;
        }
        cout << "1 2\n";
        return 0;
    }
    if (n <= d)
    {
        cout << "-1\n";
        return 0;
    }
    
    int num = 1;
    
    // adding to left
    for (int i = 0; i < d - h; ++i, ++num)
    {
        printf("%d %d\n", num, num + 1);
    }
    
    ++num;
    
    // adding to right
    printf("1 %d\n", num);
    for (int i = 1; i < h; ++i, ++num)
    {
        printf("%d %d\n", num, num + 1);
    }
    
    int left = n - num, center = 1 + num / 2;
    
    if (d / 2 == h)
        center = 1;
    
    //cout << " left = " << left << ", center = " << center << '\n';
    
    while (left-- > 0)
    {
        printf("%d %d\n", center, ++num);
    }
    
    return 0;
}