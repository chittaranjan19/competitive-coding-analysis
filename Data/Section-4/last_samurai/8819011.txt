
/* Author:
 * Rohit Laddha */
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <map>
#include <stack>
#include <set>
#include <queue>
#include <limits.h>
#include <math.h>
#include <deque>
#include <list>
#include<tr1/unordered_map>
using namespace std;
using namespace std::tr1;
#define PI 3.14159265
//#define 
int ans[100050];
int main(){
	int n;
	cin >> n;
	unordered_map<int,int>hash,rhash;
	for(int i=0;i<n;i++){
		int x,y;
		cin >> x >> y;
		hash.insert(make_pair<int,int>(x,y));
		rhash.insert(make_pair<int,int>(y,x));
	};
	int i=0;
	int x = 0;
	unordered_map<int,int>::iterator it;
	while(hash.find(x)!=hash.end() && hash.find(x)->second!=0) {
		it = hash.find(x);
		ans[i] = it->second;
		i++;
		x = it->second;
		hash.erase(it);
	}
	deque<int>deq;
	if(n%2==0){
		i = n-2;
		x=0;
		deq.push_back(x);
		while(rhash.find(x)!=rhash.end()){
			it = rhash.find(x);
			deq.push_front( it->second);
	//		ans[i] = it->second;
	//		i-=2;
			x = it->second;
			rhash.erase(it);
		}
	}
	else{
		x = hash.begin()->first;
		int start = x;
		deq.push_back(x);
		while(hash.find(x)!=hash.end() ) {
			it = hash.find(x);
			deq.push_back( it->second);
			x = it->second;
		}
		x = start;
		while(rhash.find(x)!=rhash.end() ) {
			it = rhash.find(x);
			deq.push_front( it->second);
			x = it->second;
		}
	}

	i=0;
	while(i<n){
		cout << deq.front() << ' ';
		deq.pop_front();
		i++;
		if(i>=n)
			break;
		cout << ans[i/2] << ' ';
		i++;
	}
	cout << endl;

	return 0;
}
