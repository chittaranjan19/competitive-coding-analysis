#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
/*
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
ordered_set s;
*/
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN];
int main(){
	string a;
	cin>>a;
	int d=0;
	vector<int>v,g;
	for(int i=0;i<a.size();i++){
		if(a[i]==':')
			d=1;
		else{
			int h;
			if(a[i]>='A' and a[i]<='Z')
				h=int(a[i])-55;
			else
				h=a[i]-'0';
			if(d==0)
				v.pb(h);
			else
				g.pb(h);		
		}
	}
	int maxi=0;
	for(int i=0;i<v.size();i++)
		umax(maxi,v[i]);
	for(int i=0;i<g.size();i++)
		umax(maxi,g[i]);
	maxi++;		
	vector<int>ans;
	int f=1;
	for(int i=maxi;i<66;i++){
		ll h=0,m=0;
		for(int j=0;j<v.size();j++)
			h=(h*i)+v[j];
		for(int j=0;j<g.size();j++)
			m=(m*i)+g[j];
		if(m>=0 and h<24 and h>=0 and m<60)
			ans.pb(i);	
		else
			f=0;		
	}
	if(f)
		cout<<"-1"<<endl;
	else if(ans.size()==0)
		cout<<false<<endl;
	else{
		for(int i=0;i<ans.size();i++)
			cout<<ans[i]<<" ";
		cout<<endl;	
	}
	return 0;
}
