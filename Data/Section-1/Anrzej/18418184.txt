#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

int gcd(int a, int b) {
	return b ? gcd(b, a % b) : a;
}

int _c(int k, int n){
	int nm = 1, dm = 1;
	while (k){
		nm *= n;
		dm *= k;
		n--, k--;
	}
	return nm / dm;
}

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 2e5 + 10, lg = 20;
ll mod = 1e9 + 7;

vector<int> factor(int n){
	vector<int> res;
	for (int i = 2; i*i <= n; i++){
		if (n%i == 0)
			res.push_back(i);
		while (n%i == 0)
			n /= i;
	}
	if (n != 1) res.push_back(n);
	return res;
}
ll bin_pow(ll p){
	if (p == 0) return 1;
	if (p % 2 == 0) {
		ll a = bin_pow(p / 2);
		return (a*a) % mod;
	}
	else return (2*bin_pow(p - 1)) % mod;
}

int getDays(int n){
	if ((n % 4 == 0 && n % 100) || n % 400 == 0)
		return 366;
	else return 365;
}
int main()
{
	//freopen("musical.in", "r", stdin);
	//freopen("musical.out", "w", stdout);
	int n;
	cin >> n;
	int cur = 0;
	int ans = n + 1;
	cur = (cur + getDays(n)) % 7;
	while (cur != 0 || getDays(n) != getDays(ans)){
		cur = (cur + getDays(ans)) % 7;
		ans += 1;
	}
	cout << ans;
	return 0;
}