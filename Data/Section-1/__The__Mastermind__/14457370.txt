const
  tfi = '';
  tfo = '';

var
  n,m,front,rear : longint;
  queue,d : array [1..400] of longint;
  a : array [1..400,1..400] of boolean;

procedure enter;
  var j,u,v : longint;
  begin
    read(n,m);
    for j := 1 to m do
      begin
        read(u,v);
        a[u,v] := true;
        a[v,u] := true;
      end;
  end;

procedure push(u : longint);
  begin
    inc(rear);
    queue[rear] := u;
  end;

function pop : longint;
  begin
    pop := queue[front];
    inc(front);
  end;

procedure process;
  var u,v,j : longint;
  begin
    front := 1; rear := 0; d[1] := 1; push(1);
    while front <= rear do
      begin
        u := pop;
        for v := 1 to n do
          if (a[u,v] <> a[1,n]) and (d[v] = 0) then
            begin
              d[v] := d[u] + 1;
              push(v);
              if v = n then exit;
            end;
      end;
  end;

begin
  assign(input,tfi); reset(input);
  assign(output,tfo); rewrite(output);
  enter;
  process;
  write(d[n]-1);
  close(input);
  close(output);
end.
