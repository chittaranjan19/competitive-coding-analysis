//why are you stalking me?
#include <iostream>
#include <cstdio>
#include <fstream>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <deque>
#include <sstream>
#include <cmath>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>
#include <functional>
#include <ctime>
#include <climits>
#include <cstdlib>
#include <complex>
#include <iomanip>
//#define NDEBUG 1
#include <cassert>

using namespace std;

#define rep(it, v) for (auto it = (v).begin(); it != (v).end(); it++)
#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()

typedef long long ll;
typedef pair<int, int> pii;
const int MAXN = 305;

int N;
int A[MAXN];
bool vis[MAXN];
bool adj[MAXN][MAXN];
int ans[MAXN];
vector<int> comp, nums;

void dfs (int x) {
	comp.push_back(x);
	nums.push_back(A[x]);
	vis[x] = true;
	for (int i = 1; i <= N; i++) {
		if (!vis[i] && adj[x][i]) {
			dfs(i);
		}
	}
}

int main() {
	//why are you stalking me?
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	ios_base::sync_with_stdio(false);
	cin >> N;
	for (int i = 1; i <= N; i++) {
		cin >> A[i];
	}
	for (int i = 1; i <= N; i++) {
		string s;
		cin >> s;
		for (int j = 1; j <= N; j++) {
			adj[i][j] = (s[j - 1] == '1');
		}
	}
	//dfs on this matrix
	for (int i = 1; i <= N; i++) {
		if (!vis[i]) {
			dfs(i);
			sort(all(comp));
			sort(all(nums));
			for (int j = 0, siz = comp.size(); j < siz; j++) {
				ans[comp[j]] = nums[j];
			}
			comp.clear();
			nums.clear();
		}
	}
	for (int i = 1; i <= N; i++) {
		cout << ans[i] << ' ';
	}
}