#include <bits/stdc++.h>

#define out_file freopen("INPUT.TXT", "r", stdin); freopen("OUTPUT.TXT", "w", stdout)
#define ls else
#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
#define timer int timer=clock()
#define rtn return
#define I "%d"
#define II "%d%d"
#define III "%d%d%d"
#define sqr(x) (x)*(x)
#define mp make_pair
#define pb push_back
#define ft first
#define sd second
#define th second.second
#define TAK "YES"
#define Tak "Yes"
#define tak "yes"
#define x1 fdkg
#define x2 gkhlhj
#define y1 bkjlhlh
#define y2 jj

using namespace std;

typedef pair <int,int> pii;
typedef vector <pii> vii;
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

const ll maxll=numeric_limits<ll>::max();
const int maxint=numeric_limits<int>::max();
const int arr=2e5+10;
const int ar=2e3+10;
const ld pi=acos(-1);
const ll md=1e9+7;
const ld eps=1e-6;

template <typename name> inline name b_pow(name base, ll exp, ll md = maxll)
{
    if (exp == 0) return 1;
    if (exp % 2 == 1)
        return (base * b_pow(base, exp-1, md)) % md;
    else
    {
        name k = b_pow(base, exp/2, md);
        return (k*k)%md;
    }
}

vector<int> prefix_function (string s) {
	int n = (int) s.length();
	vector<int> pi (n);
	for (int i=1; i<n; ++i) {
		int j = pi[i-1];
		while (j > 0 && s[i] != s[j])
			j = pi[j-1];
		if (s[i] == s[j])  ++j;
		pi[i] = j;
	}
	return pi;
}

vector< vector<int> > operator *(vector< vector<int> > a,vector< vector<int> > b)
{
    vector< vector<int> > res(8);
    for (int i=0;i<8;i++)
        for (int j=0;j<8;j++)
            res[i].pb(0);
    for (int i=0;i<8;i++)
        for (int j=0;j<8;j++)
            for (int k=0;k<8;k++)
                res[i][j]+=a[i][k]*b[k][j];
    return res;
}

vector< vector<int> > bpow(vector< vector<int> > a,int n)
{
    if (n==1) return a;
    if (n&1) return a*bpow(a,n-1);
    vector< vector<int> > dop=bpow(a,n/2);
    return dop*dop;
}

template <typename nam> inline nam mrg_sort(nam up,int l,int r)
{
    nam targ="";
    if (l == r)
    {
        targ=up[r];
        return targ;
    }
    int mid=(l+r)/2;
    nam l_buff = mrg_sort(up,l, mid);
    nam r_buff = mrg_sort(up,mid+1,r);
    int lp=0,rp=0;
    while(lp<l_buff.size()||rp<r_buff.size())
    {
        if(lp==l_buff.size()) targ=targ+r_buff[rp],rp++; else
        if(rp==r_buff.size()) targ=targ+l_buff[lp],lp++;else
        if(r_buff[rp]<l_buff[lp]) targ=targ+l_buff[lp],lp++; else
        targ=targ+r_buff[rp],rp++;
    }
    return targ;
}

/*-------------Program Start-----------*/

double mn,mx,a[10003],b[10003];
double v,u,w, n;
int main()
{
    cin>>n>>w>>v>>u;
    for(int i=0;i<n;i++)
    {
        cin>>a[i]>>b[i];
        if(-a[i]*u+b[i]*v>mx)
        mx=-a[i]*u+b[i]*v;

        if(-a[i]*u+b[i]*v<mn)
        mn=-a[i]*u+b[i]*v;
    }
    if(mx<0)
    {
        cout<<w/u;
    }else
    if(mn>0)
    {
        cout<<w/u;
    }else
    cout<<(w-mn)/u;

}
