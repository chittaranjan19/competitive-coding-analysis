#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
#define maxn 200005

struct a {
	LL x, y;
} pos[maxn];

bool cmp(a lhs, a rhs) {
	if (lhs.x  == rhs.x) return lhs.y <rhs.y;
	else return lhs.x < rhs.x;
}

bool cmpb(a lhs, a rhs) {
	if (lhs.y  == rhs.y) return lhs.x <rhs.x;
	else return lhs.y < rhs.y;
}

int main() {
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n; i++) scanf("%I64d %I64d", &pos[i].x, &pos[i].y);
	
	sort(pos, pos+n, cmp);
	
	LL prev = pos[0].x, c = 0, ans = 0;
	for (int i = 1; i < n; i++) {
		if (pos[i].x == prev) c++;
		else {
			while (c > 0) 
				ans += c--;
				
			c = 0;
			prev = pos[i].x;
		}
	}
	if (c > 0) {
		while (c > 0)
			ans += c--;
		c = 0;
	}
	//printf("x ans = %I64d\n", ans);
	
	sort(pos, pos+n, cmpb);
	
	prev = pos[0].y, c = 0;
	for (int i = 1; i < n; i++) {
		if (pos[i].y == prev) c++;
		else {
			while (c > 0)
				ans += c--;
			c = 0;
			prev = pos[i].y;
		}
	}
	if (c > 0) {
		while (c > 0)
			ans += c--;
		c = 0;
	}
	//printf("y ans = %I64d\n", ans);
	
	/*printf(":asdfhahklsdfhasklf\n");
	for (int i = 0; i < n; i++) printf("%I64d %I64d\n", pos[i].x, pos[i].y);*/
	
	LL prevy, red = 0; c = 0;
	prev = pos[0].x;
	prevy = pos[0].y;
	for (int i = 1; i < n; i++) {
		if (pos[i].y == prevy && pos[i].x == prev) c++;
		else {
			prevy = pos[i].y;
			prev = pos[i].x;
			while (c > 0)
				red += c--;
		}
	}
	//printf(">>>%lli\n", c);
	if (c > 0) {
		while (c > 0) red += c--;
		c = 0;
	}
	
	printf("%I64d\n", ans - red);
	return 0;
}
