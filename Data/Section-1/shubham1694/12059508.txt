#include <bits/stdc++.h>

using namespace std;

const int maxn = 300000, inf = 1000000000;
const double lg2 = 0.30102999566;

int arr[maxn], seen[maxn];

map<int, int> m1, m2, m3, m4;
map<int, int> :: iterator iter;

int main()
{
    //freopen("i.txt", "r", stdin);
    int n, i, j, temp, moves, ans, x, temp2, k, cm, r;
    double y, z;
    scanf("%d", &n);
    for(i=0; i<n; i++)
        scanf("%d", &arr[i]);
        //arr[i] = i+1;
    for(i=0; i<n; i++){
        //cout << i << "\n";
        if(seen[arr[i]])
            continue;
        m2.clear();
        m4.clear();
        temp = arr[i];
        while(temp>0){
            m2[temp] = 1;
            temp/=2;
        }
        for(iter=m2.begin(); iter!=m2.end(); ++iter){
            temp = (iter->first)*2;
            while(temp<=maxn){
                m4[temp] = 1;
                temp*=2;
            }
        }
        for(iter=m4.begin(); iter!=m4.end(); ++iter){
            if(m2.find(iter->first)==m2.end())
                m2[iter->first] = 1;
        }
        if(i==0){
            for(iter=m2.begin(); iter!=m2.end(); ++iter)
                m1[iter->first] = 1;
        }
        else{
            m3.clear();
            for(iter=m2.begin(); iter!=m2.end(); ++iter){
                if(m1.find(iter->first)!=m1.end())
                    m3[iter->first] = 1;
            }
            m1.clear();
            for(iter=m3.begin(); iter!=m3.end(); ++iter){
                m1[iter->first] = 1;
            }
        }
        seen[arr[i]] = 1;
    }
    //cout << "1\n";
    ans = inf;
    for(iter=m1.begin(); iter!=m1.end(); ++iter){
        //cout << iter->first << " ";
        moves = 0;
        for(i=0; i<n; i++){
            if(arr[i]>=(iter->first)){
                temp = arr[i];
                cm = inf;
                r = 0;
                while(temp>0){
                    temp2 = temp;
                    k = r;
                    while(temp2<(iter->first)){
                        temp2*=2;
                        k++;
                    }
                    if(temp2==iter->first)
                        cm = min(cm, k);
                    temp/=2;
                    r++;
                }
                moves+=cm;
            }
            else{
                temp = arr[i];
                cm = inf;
                r = 0;
                while(temp>0){
                    temp2 = temp;
                    k = r;
                    while(temp2<(iter->first)){
                        temp2*=2;
                        k++;
                    }
                    if(temp2==iter->first)
                        cm = min(cm, k);
                    temp/=2;
                    r++;
                }
                moves+=cm;
            }
        }
        //cout << moves << "\n";
        ans = min(ans, moves);
    }
    printf("%d\n", ans);
    return 0;
}