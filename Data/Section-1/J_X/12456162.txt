#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <cmath>
#include <algorithm>
#include <queue>

using namespace std;

typedef long long ll;

const int maxn = 1200000 + 5;

bool check[maxn];
ll sum1[maxn], sum2[maxn];

bool C(int x)
{
    char c[70];
    int cnt = 0;
    while(x)
    {
        c[cnt++] = x % 10;
        x /= 10;
    }
    for(int i = 0; i < cnt / 2; ++i)
    {
        if(c[i] != c[cnt - i - 1]) return false;
    }
    return true;
}

int main()
{
    sum2[1] = 1;
    for(int i = 2; i < maxn; ++i)
    {
        if(!check[i])
        {
            sum1[i] = 1;
            for(int j = 2 * i; j < maxn; j += i)
            {
                check[j] = true;
            }
        }
        if(C(i))
        {
            sum2[i] = 1;
        }
    }
    for(int i = 1; i < maxn; ++i)
    {
        sum1[i] += sum1[i - 1];
        sum2[i] += sum2[i - 1];
    }
    int pp, qq;
    while(cin >> pp >> qq)
    {
        for(int i = maxn - 1; i >= 0; --i)
        {
            if(i == 0)
            {
                cout << "Palindromic tree is better than splay tree\n";
                break;
            }
            if((ll)qq * sum1[i] <= (ll)pp * sum2[i])
            {
                cout << i << endl;
                break;
            }
        }
    }
    return 0;
}
