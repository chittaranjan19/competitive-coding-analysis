import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProblemC {
    BufferedReader rd;

    ProblemC() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int m = intarr()[1];
        char[] s = rd.readLine().toCharArray();
        int n = s.length;
        int res = 0;
        boolean prevDot = false;
        int firstDot = 0;
        int replacements = 0;
        for(int i=0;i<n;i++) {
            char c = s[i];
            if(prevDot) {
                if(c != '.') {
                    replacements += Math.max(0, i - firstDot - 1);
                    prevDot = false;
                }
            } else {
                if(c == '.') {
                    firstDot = i;
                    prevDot = true;
                }
            }
        }
        if(prevDot) {
            replacements += Math.max(0, n - firstDot - 1);
        }
        for(int i=0;i<m;i++) {
            String[] q = split(rd.readLine());
            char after = q[1].charAt(0);
            int x = pint(q[0]);
            x--;
            if(s[x] != after) {
                int dots = 0;
                if(x > 0 && s[x-1] == '.') {
                    dots++;
                }
                if(x < n-1 && s[x+1] == '.') {
                    dots++;
                }
                if(after == '.') {
                    replacements += dots;
                } else if(s[x] == '.') {
                    replacements -= dots;
                }
                s[x] = after;
            }
            out(replacements);
        }
    }

    private int pint(String s) {
        return Integer.parseInt(s);
    }

    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = split(s);
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }

    public String[] split(String s) {
        if(s == null) {
            return new String[0];
        }
        int n = s.length();
        int start = -1;
        int end = 0;
        int sp = 0;
        boolean lastWhitespace = true;
        for(int i=0;i<n;i++) {
            char c = s.charAt(i);
            if(isWhitespace(c)) {
                lastWhitespace = true;
            } else {
                if(lastWhitespace) {
                    sp++;
                }
                if(start == -1) {
                    start = i;
                }
                end = i;
                lastWhitespace = false;
            }
        }
        if(start == -1) {
            return new String[0];
        }
        String[] res = new String[sp];
        int last = start;
        int x = 0;
        lastWhitespace = true;
        for(int i=start;i<=end;i++) {
            char c = s.charAt(i);
            boolean w = isWhitespace(c);
            if(w && !lastWhitespace) {
                res[x++] = s.substring(last,i);
            } else if(!w && lastWhitespace) {
                last = i;
            }
            lastWhitespace = w;
        }
        res[x] = s.substring(last,end+1);
        return res;
    }

    private boolean isWhitespace(char c) {
        return c==' ' || c=='\t';
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemC();
    }
}
