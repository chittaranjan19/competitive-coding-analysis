#include <iostream>
using namespace std;

int main ()
{
	int N, m, dx, dy;
	cin >> N >> m >> dx >> dy;

	int X [N], odp [N];
	X [0] = 0;
	int cx = dx, cy = dy;
	while (cx != 0 && cy != 0)
	{
		odp [cx] = 0;
		X [cx] = cy;
		cx = (dx + cx) % N;
		cy = (dy + cy) % N;
	}
	odp [0] = 0;
	for (int i = 0; i < m; ++i)
	{
		int xi, yi;
		cin >> xi >> yi;
		odp [(N + yi - X [xi])%N]++;
	}
	int maks = 0, ktury = 0;
	for (int i = 0; i < N; ++i)
	{
		if (odp [i] > maks)
		{
			maks = odp [i];
			ktury = i;
		}
	}
	cout << ktury << " 0" << endl;
	return 0;
}
