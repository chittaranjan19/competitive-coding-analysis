#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <stack>
#include <algorithm>
#include <cctype>
#include <vector>
#include <queue>
#include <tr1/unordered_map>
#include <cmath>
#include <map>
#include <bitset>
#include <set>
#include <iomanip>
#include <utility>   
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef pair<ll,ll> pll;
typedef vector< ii > vii;
typedef vector< ll > vll;
///////////////////////////////UTIL/////////////////////////////////
#define ALL(x) (x).begin(),x.end()
#define CLEAR0(v) memset(v, 0, sizeof(v))
#define CLEAR(v, x) memset(v, x, sizeof(v))
#define COPY(a, b) memcpy(a, b, sizeof(a))
#define CMP(a, b) memcmp(a, b, sizeof(a))
#define REP(i,n) for(int i = 0; i<n; i++)
#define REPP(i,a,n) for(int i = a; i<n; i++)
#define REPD(i,n) for(int i = n-1; i>-1; i--)
#define REPDP(i,a,n) for(int i = n-1; i>=a; i--)

int n;
int a[2100];
double pd[5100];
double pdac[5100];

int main(){
	
	while(cin >> n){
	    REP(i, n) cin >> a[i];
	    REP(i, 5100) pd[i] = pdac[i] = 0.0;
	    double total = 0;
	    double ans = 0.0;
	    REP(i, n)
		REP(j, n) if(i != j && a[i] > a[j]){
			total += 1.0;
			pd[a[i]-a[j]] += 1.0;
		}
		
		REPD(i, 5050) pdac[i] = pdac[i+1] + pd[i];
		REPP(i, 1, 5100){
			double A = (pd[i]/total);
			REPP(j, 1, 5100-i){
				double B = (pd[j]/total);
				ans += A * B * (pdac[i+j+1]/total);
			}
		}
		printf("%.10lf\n", ans);
	}
}
