#include <iostream>
#include <cstring>
#include <map>
#include <cstdio>
#include <cstdlib>
#include <ctime>

using namespace std;

const int maxn = 40000000 + 5;

int n, k;
map<int, int> mp;
int tot;
int sg[maxn];
int sg1[maxn];
//bool used[maxn][4];

int myhash(int x)
{
    if(!mp[x])
    {
        mp[x] = ++tot;
    }
    return mp[x];
}

int value(int a, int k) {
    int s;

    if(k % 2 == 0) {
        if(a < 3) return a;
        return (a + 1) % 2;
    }
    if(a < 4) return a % 2;
    if(a % 2 != 0) return 0;
    for(s = 0; a % 2 == 0; a /= 2) {
        s++;
    }
    if(a == 3) {
        s++;
    }
    return 2 - (s % 2);
}

int mex(int x)
{
    if(!x) return 0;
    if(x == 1) return 1;
    if(k & 1)
    {
        if(x == 3) return 1;
        if(x & 1) return 0;
//        int tmp = myhash(x);
//        if(~sg[tmp]) return sg[tmp];
//        memset(used[tmp], 0, sizeof(used[tmp]));
        int used[4];
        memset(used, 0, sizeof(used));
        used[mex(x >> 1)] = true;
        used[mex(x - 1)] = true;
        int ret = 0;
        while(used[ret])
        {
            ++ret;
        }
        return ret;
    }
    else
    {
        if(x == 2) return 2;
        if(x & 1) return 0;
//                int tmp = myhash(x);
//        if(~sg[tmp]) return sg[tmp];
//        memset(used[tmp], 0, sizeof(used[tmp]));
        int used[4];
        memset(used, 0, sizeof(used));
        used[0] = true;
        used[mex(x - 1)] = true;
        int ret = 0;
        while(used[ret])
        {
            ++ret;
        }
        return  ret;
    }
//    if(!x) return 0;
////    if(x == 1) return 1;
////    if(x == 2) return 2;
////    if(x & 1) return 0;
//    if(~sg[x]) return sg[x];
//    memset(used[x], 0, sizeof(used[x]));
//    if(x % 2 == 0)
//    {
//        if(k & 1)
//        used[x][mex(x >> 1)] = true;
//        else
//        {
//        used[x][0] = true;
//        }
//    }
//    used[x][mex(x - 1)] = true;
//    int ret = 0;
//    while(used[x][ret])++ret;
//    return sg[x] = ret;
}

//int mex1(int x)
//{
//        if(!x) return 0;
////    if(x == 1) return 1;
////    if(x == 2) return 2;
////    if(x & 1) return 0;
//    if(~sg1[x]) return sg1[x];
//    memset(used[x], 0, sizeof(used[x]));
//    if(x % 2 == 0)
//    {
//        if(k & 1)
//        used[x][mex1(x >> 1)] = true;
//        else
//        {
//        used[x][0] = true;
//        }
//    }
//    used[x][mex1(x - 1)] = true;
//    int ret = 0;
//    while(used[x][ret])++ret;
//    return sg1[x] = ret;
//}

int main()
{
//    k = 2;
//    memset(sg, -1, sizeof(sg));
//            memset(sg1, -1, sizeof(sg1));
//    for(int i = 1; i <= 100000000; ++i)
//    {
//        int tt = mex(i), ttt = mex1(i), tttt = value(i, k);
////        if(i == 30000008 || i == 30000010 || i == 30000012)
//        if(tt != ttt || tt != tttt || ttt != tttt)
//        {
//            cout << tt << ' ' << ttt << ' ' << tttt << endl;
//            system("pause");
//        }
//    }
//    cout << mex(30000008) << ' ' << value(30000008, k) << endl;
//    cout <<"ss" << endl;
//    srand(time(NULL));
    while(~scanf("%d%d", &n, &k))
    {
//        mp.clear();
//        memset(sg, -1, sizeof(sg));
//        memset(sg1, -1, sizeof(sg1));
//        tot = 0;
        int ans = 0;
//        int ans1 = 0;
        for(int i = 0; i < n; ++i)
        {
            int x;
//            x = rand() % 1000;
//            cout << x << ' ';
            scanf("%d", &x);
            ans ^= mex(x);
//            ans1 ^= mex1(x);
        }
//        cout << endl;
        puts(ans ? "Kevin" : "Nicky");
//        cout << ans << ' ' << ans1 << endl;
    }
    return 0;
}
