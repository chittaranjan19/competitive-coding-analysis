#include<stdlib.h>
#include<string.h>
#include<stdio.h>
unsigned __int64 gcd (unsigned __int64 m,unsigned __int64 n)
{
unsigned __int64 flag;
while(n>0)
{
flag=m%n;
m=n;
n=flag;

}

return m;
}

int main()
{
    unsigned __int64 t,w,b;
    while(scanf("%I64d%I64d%I64d",&t,&w,&b)!=EOF)
    {
        if(w==b)
           {
            printf("1/1\n");
            continue;
           }
        if(w>b)
        {
            unsigned  __int64 flag;
            flag=w;
            w=b;
            b=flag;
        }
        unsigned __int64 g=gcd(w,b);
        if(t/((w/g)*b) <1)
        {
        unsigned __int64 as=gcd(w-1,t);
        printf("%I64u/%I64u\n",w-1/as,t/as);
        continue;
        }




        unsigned __int64 h=b*w;
        unsigned  __int64 rest=t-(t/(b*w/g))*(b*w/g);
        unsigned __int64 frest;
        if(rest+1 <w)
            frest=rest+1;
        else
            frest=w;

        unsigned __int64 wtf= (t/(b/g))-1+frest;
        unsigned __int64 as=gcd(wtf,t);
        printf("%I64u/%I64u\n",wtf/as,t/as);

    }
    return 0;
}

