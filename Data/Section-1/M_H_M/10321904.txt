#include <bits/stdc++.h>

#define SZ(x) (((  (int)x.size() )))

using namespace std;

typedef long long ll;
const int N = 300 * 1000 + 10;

ll w,h,n,m,t1,t2;
char s;
set <ll> v1;
set <ll> v2;
set <ll> v1p;
set <ll> v2p;
set<ll>::iterator it;
int mark1[N] , mark2[N];

int main(){
    cin >> w >> h >> n;
    v1.insert(0);
    v1.insert(w);
    v2.insert(0);
    v2.insert(h);
    v1p.insert(w);
    v2p.insert(h);
    mark1[w] = 1;
    mark2[h] = 1;
    for(int i = 0; i < n; ++i){
        cin >> s >> m;
        if(s == 'H'){
            it = v2.lower_bound(m);
            it--;
            t1 = *(it);
            t2 = *v2.upper_bound(m);
            v2.insert(m);
            mark2[abs(t1 - t2)] --;
            if(mark2[abs(t1 - t2)] == 0)
                v2p.erase(abs(t1 - t2));
            mark2[abs(t1 - m)] ++;
            mark2[abs(m - t2)] ++;
            v2p.insert(abs(t1 - m));
            v2p.insert(abs(t2 - m));
        }
        else if(s == 'V'){
            it = v1.lower_bound(m);
            it--;
            t1 = *(it);
            t2 = *v1.upper_bound(m);
            v1.insert(m);
            mark1[abs(t1 - t2)] --;
            if(mark1[abs(t1 - t2)] == 0)
                v1p.erase(abs(t1 - t2));
            mark1[abs(t1 - m)] ++;
            mark1[abs(m - t2)] ++;
            v1p.insert(abs(t1 - m));
            v1p.insert(abs(t2 - m));

        }
        it = v1p.end();
        it--;
        m  = *it;
        it = v2p.end();
        it--;
        m  *= *it;
        cout << m << "\n";
    }
    return 0;
}
