#include<bits/stdc++.h>
using namespace std;
bool cats[100005]={0},vis[100005]={0};
int m,parent[100005],count1[100005]={0},ans=0;
vector<int>v[100005];
void dfs(int srt)
{
	stack<int>st;
	st.push(srt);
	parent[srt]=srt;
	while(!st.empty())
	{
		int top=st.top();
		st.pop();
		if(!vis[top])
		{
			vis[top]=1;
			//printf("%d ",top);
			if(cats[top])
			{
				count1[top]=count1[parent[top]]+1;
			}
			if(count1[top]<=m)
			{
				for(int i=0;i<v[top].size();i++)
				{
					if(!vis[v[top][i]])
					{
						st.push(v[top][i]);//printf("%d ",v[top][i]);
						parent[v[top][i]]=top;
					}
				}
				//printf("%d ",top);
				if(v[top].size()==1 && top!=1){ans++;}
			}
		}
	}
}
int main()
{
        int n,x,y,i,t;
        /*read(n);read(m);*/scanf("%d%d",&n,&m);
	for(i=1;i<=n;i++)
		scanf("%d",&cats[i]);
	for(i=1;i<n;i++)
	{
		scanf("%d%d",&x,&y);
		v[x].push_back(y);
		v[y].push_back(x);
	}
        dfs(1);
	printf("%d\n",ans);
        return 0;
}
