#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>
using namespace std;
#define inf 999999999999

vector <string> inp;
vector <int> c;
long long dp[2][1000005];

int main() {
	ios_base::sync_with_stdio(false);
	int n;
	cin >> n;
	for(int i=0; i<n; i++){
		int x;
		cin >> x;
		c.push_back(x);
	}
	for(int i=0; i<n; i++){
		string x;
		cin >> x;
		inp.push_back(x);
	}
	for(int i=0; i<n; i++){
		dp[0][i] = inf;
		dp[1][i] = inf;
	}
	dp[0][0] = 0;
	dp[1][0] = c[0];
	for(int i=1; i<n; i++){
		string curr = inp[i], prev = inp[i-1];
		string currrev = curr, prevrev = prev;
		reverse(currrev.begin(), currrev.end());
		reverse(prevrev.begin(), prevrev.end());
		if(curr >= prevrev)
			dp[0][i] = min(dp[1][i-1], dp[0][i]);
		if(curr >= prev)
			dp[0][i] = min(dp[0][i-1], dp[0][i]);
		if(currrev >= prevrev)
			dp[1][i] = min(dp[1][i-1] + c[i], dp[1][i]);
		if(currrev >= prev)
			dp[1][i] = min(dp[0][i-1] + c[i], dp[1][i]);
	}
	/*for(int i=0; i<n; i++){
		cout << dp[0][i] << " " <<dp[1][i] << "\n";
	}*/
	if(dp[0][n-1] == inf && dp[1][n-1] == inf)
		cout << "-1";
	else
		cout << min(dp[0][n-1], dp[1][n-1]);
	return 0;
}