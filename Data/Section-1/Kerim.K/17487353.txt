#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#define MAXN 1000009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace __gnu_pbds;
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> tes;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
//s.order_of_key(2)
map<int,int>pm;
int type[MAXN],x[MAXN],t[MAXN];
tes ayr[MAXN],gos[MAXN];
int main(){
	int a,c=0;
	scanf("%d",&a);
	for(int i=1;i<=a;i++){
		scanf("%d%d%d",type+i,t+i,x+i);
		pm[x[i]]=1;
	}
	tr(it,pm)
		it->ss=++c;
	for(int i=1;i<=a;i++)
		x[i]=pm[x[i]];
	for(int i=1;i<=a;i++){
		if(type[i]==1)
			gos[x[i]].insert(t[i]);
		if(type[i]==2)
			ayr[x[i]].insert(t[i]);
		if(type[i]==3){
			int _a=gos[x[i]].order_of_key(t[i]);
			int _b=ayr[x[i]].order_of_key(t[i]);
			printf("%d\n",max(_a-_b,0));
		}
	}
	return 0;
}
//LooK aT mY COde ONlinE +_+
