#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 300010;

int rnk[maxn], parent[maxn], diameter[maxn];

int find(int x)
{
	if(parent[x]==x)
		return x;
	return parent[x] = find(parent[x]);
}

void merge(int x, int y)
{
	int rx, ry, d1, d2, d;
	rx = find(x);
	ry = find(y);
	if(rx==ry)
		return;
	d1 = diameter[rx];
	d2 = diameter[ry];
	d = max(d1, max(d2, (d1+1)/2 + (d2+1)/2) + 1);
	if(rnk[rx] < rnk[ry]){
		parent[rx] = ry;
		diameter[ry] = d;
	}
	else if(rnk[ry] < rnk[rx]){
		parent[ry] = rx;
		diameter[rx] = d;
	}
	else{
		parent[ry] = rx;
		rnk[rx]++;
		diameter[rx] = d;
	}
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int t, n, m, q, i, u, v;
	scanf("%d%d%d", &n, &m, &q);
	for(i=1; i<=n; i++)
		parent[i] = i;
	for(i=0; i<m; i++){
		scanf("%d%d", &u, &v);
		merge(u, v);
	}
	while(q--){
		scanf("%d", &t);
		if(t==1){
			scanf("%d", &u);
			v = find(u);
			printf("%d\n", diameter[v]);
		}
		else{
			scanf("%d%d", &u, &v);
			merge(u, v);
		}
	}
	return 0;
}
