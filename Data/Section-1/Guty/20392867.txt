#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>
#include <valarray>

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 


#define forn(i,n) for(tint i=0;i<(tint)(n); i++)
#define forsn(i,s,n) for(tint i=(s);i<(tint)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl



using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint toNumber (string s)
{
	tint Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (tint number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}

tint cantidadZeros (tint mask) // Cuenta la cantidad de unos (amigas) en una mascara 
{
	tint ans = 6;
	while (mask > 0)
	{
		ans -= (mask%2);
		mask /= 2;
	}
	return ans;
}

const tint nMod = 1000000007;

int main()
{
	#ifdef ACMTUYO
		assert(freopen("entrada.in", "r", stdin));
	#endif
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	unordered_map<char,tint> f;
	forn(i,10)
		f['0'+i] = cantidadZeros(i);
	forn(i,26)
		f['A'+i] = cantidadZeros(10+i);
	forn(i,26)
		f['a'+i] = cantidadZeros(36+i);
	f['-'] = cantidadZeros(62);
	f['_'] = cantidadZeros(63);
	
	string s;
	while (cin >> s)
	{
		tint ans = 1;
		for (auto x : s)
		{
			tint r = 1;
			forn(i,f[x])
				r = (r*3) % nMod;
			ans = (ans * r) % nMod;
		}
		cout << ans << "\n";
	}
	return 0;
}



