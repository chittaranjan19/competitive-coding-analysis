#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 200005
#define maxC 10007
#define pb push_back
#define F first
#define S second
#define mp make_pair

using namespace std;
int n, co[mn], num[mn], all;
vector<int> g[mn], ans;

void dfs1(int u, int p = 0)
{
    num[u] = co[u];
    FOR(i, 0, int(g[u].size()) - 1)
    {
        int v = g[u][i];
        if (v == p)
            continue;
        dfs1(v, u);
        num[u] += num[v];
    }
}

void switc(int u)
{
    ans.pb(u);
    all -= co[u];
    co[u] ^= 1;
    all += co[u];
    if (all == 0)
    {
        FOR(i, 0, int(ans.size()) - 1)
            cout << ans[i] << ' ';
        exit(0);
    }
}

void dfs2(int u, int p = 0)
{
    switc(u);
    FOR(i, 0, int(g[u].size()) - 1)
    {
        int v = g[u][i];
        if (v == p)
            continue;
        if (num[v])
        {
            dfs2(v, u);
            switc(u);
            if (co[v])
            {
                switc(v);
                switc(u);
            }
        }
    }
}

void setup()
{
    cin >> n;
    FOR(i, 1, n)
    {
        cin >> co[i];
        co[i] = (co[i] == -1);
    }
    co[1] ^= 1;
    FOR(i, 2, n)
    {
        int u, v;
        cin >> u >> v;
        g[u].pb(v);
        g[v].pb(u);
    }
    dfs1(1);
    all = num[1];
    dfs2(1);
    switc(g[1][0]);
    switc(1);
    switc(g[1][0]);
}

void xuly()
{

}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
