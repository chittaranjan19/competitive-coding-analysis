#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>

using namespace std;

void scan(int &x); //IMPORTANT: for positive only

vector<int> AL[100003];
bool visited[100003] = {false};
bool flag = false;

void dfs(int s,int parent)
{
  visited[s] = true;

  for(int i=0;i<AL[s].size();i++)
  {
      if(AL[s][i] == parent )  continue;

      if(!visited[AL[s][i]]) dfs(AL[s][i],s);
      else                  flag = false;
  }
}
int main(void)
{
  int n,m,x,y;

  cin >> n >> m;

  for(int i=0;i<m;i++)
  {
      scan(x);
      scan(y);
      x--;
      y--;
      AL[x].push_back(y);
      AL[y].push_back(x);
  }
  int ans = 0;
  for(int i=0;i<m;i++)
  {
      if(!visited[i])
      {
          flag = false; //Is graph

          dfs(i,-1);

          if(flag) ans++;
      }
  }
  cout << ans;
  return 0;
}













void scan(int &x)
{
    register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}

   /* register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x; */
}
