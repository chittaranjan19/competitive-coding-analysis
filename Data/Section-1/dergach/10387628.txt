#include <stdio.h>
#include <math.h>
#include <string.h>
#include <time.h>
#include <vector>
#include <string>
#include <vector>
#include <map>
#include <algorithm>
#include <sstream>
#include <iostream>
using namespace std;

typedef long long ll;
/*
vector <int> v[205];
map <int, int> mp;
int rev[205];
int cnt;
map <int, vector <int> > res;

int main() {
    int m, k;
    scanf("%d %d", &m, &k);
    for(int i = 0; i < m; i++) {
        int a, b;
        scanf("%d %d", &a, &b);
        if(mp.find(a) == mp.end())
        {
            mp[a] = cnt;
            rev[cnt] = a;
            cnt++;
        }
        if(mp.find(b) == mp.end())
        {
            mp[b] = cnt;
            rev[cnt] = b;
            cnt++;
        }
        v[mp[a]].push_back(mp[b]);
        v[mp[b]].push_back(mp[a]);
    }
    for(int i = 0; i < cnt; i++)
        sort(v[i].begin(), v[i].end());
    for(int i = 0; i < cnt; i++)
    {
        for(int j = 0; j < cnt; j++)
            if(i != j && !binary_search(v[i].begin(), v[i].end(), j))
            {
                int c = 0;
                for(int k = 0; k < v[i].size(); k++)
                    if(binary_search(v[v[i][k]].begin(), v[v[i][k]].end(), j))
                        c++;
                if(100 * c >= v[i].size() * k)
                    res[rev[i]].push_back(rev[j]);
            }
    }
    for(int i = 0; i < cnt; i++)
        if(res.find(rev[i]) == res.end())
        {
            vector <int> t;
            res[rev[i]] = t;
        }
    for(map <int, vector <int> >::iterator it = res.begin(); it != res.end(); it++)
    {
        printf("%d: %d", it->first, (int)(it->second).size());
        sort((it->second).begin(), (it->second).end());
        for(int j = 0; j < (it->second).size(); j++)
            printf(" %d", (it->second)[j]);
        puts("");
            
    }
    return 0;
}
 */
/*
pair <ll, ll> dp[1005];
int w[1005], h[1005];
int n;

int main()
{
    scanf("%d", &n);
    for(int i = 0; i < n; i++)
        scanf("%d %d", &w[i], &h[i]);
    ll res = 1e17;
    for(int i = 0; i < n; i++)
    {
        ll H = h[i];
        ll sum = 0;
        bool ok= true;
        for(int j = 0; j < n; j++)
        {
            if(i == j)
            {
                sum += w[i];
            }
            else
            {
                if(min(w[j], h[j]) > H)
                {
                    ok = false;
                    break;
                }
                else
                {
                    if(max(w[j], h[j]) <= H)
                        sum += min(w[j], h[j]);
                    else
                        sum += max(w[j], h[j]);
                }
            }
        }
        if(ok)
            res = min(res, H * sum);
        
        H = w[i];
        sum = 0;
        ok= true;
        for(int j = 0; j < n; j++)
        {
            if(i == j)
            {
                sum += h[i];
            }
            else
            {
                if(min(w[j], h[j]) > H)
                {
                    ok = false;
                    break;
                }
                else
                {
                    if(max(w[j], h[j]) <= H)
                        sum += min(w[j], h[j]);
                    else
                        sum += max(w[j], h[j]);
                }
            }
        }
        if(ok)
            res = min(res, H * sum);
    }
    cout << res << endl;
    return 0;
}
*/

int a[5005], bill[10000005];

int main()
{
    int n, k;
    scanf("%d %d", &n, &k);
    bill[0] = 1;
    for(int i = 0; i < n; i++)
    {
        scanf("%d", &a[i]);
        bill[a[i]] = 1;
    }
    int q;
    scanf("%d", &q);
    while(q--)
    {
        int minv = 100;
        int sum;
        scanf("%d", &sum);
        for(int i = 0; i < n; i++)
        {
            if(a[i] > sum) continue;
            for(int cnt = 1; cnt <= k && cnt * a[i] <= sum; cnt++)
            {
                int partsum = sum - cnt * a[i];
                if(partsum == 0)
                {
                    minv = min(minv, cnt);
                    break;
                }
                else
                {
                    for(int cnt2 = 1; cnt + cnt2 <= k; cnt2++)
                    {
                        if(partsum % cnt2 == 0 && partsum/cnt2 <= 10000000 && bill[partsum/cnt2])
                            minv = min(minv, cnt + cnt2);
                    }
                }
            }
        }
        printf("%d\n", minv == 100 ? -1 : minv);
    }
    return 0;
}