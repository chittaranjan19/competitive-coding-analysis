//~  Inshaallah
/*
ID: omarmuh1
PROG: test
LANG: C++
*/
#include <iostream>
#include <cmath>
#include <algorithm>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <map>
#include <ctime>
#include <iomanip>
#include <string.h>
#include <stdio.h>
#include <set>

using namespace std;

#define ll long long
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define pp pop_back
#define pii pair<int ,int>
#define pil pair<int , ll>
#define pli pair<ll , int>
#define pll pair<ll , ll>
#define mid(x , y)	(x+y)/2
#define sz(x) int(x.size())
#define db		cout << "****" << endl;
#define all(x) 	x.begin() , x.end()
#define lgn 	19
#define maxn 	100007
#define INF 	1000000009
#define LLINF 	1000000000000000009
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
#define Help_me  ios_base::sync_with_stdio(false);

template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}

//~ ifstream cin("test.in");
//~ ofstream cout("test.out");

int a , b , c , l,n , m;
string d[maxn];
string z;
map <string  , int> mk;

int main()
{
	cin >> n ;
	
	for(int i = 1 ; i <= n ; i++)
		cin >> d[i] , mk[d[i]] = 1;
	mk["<3"] = 1;
	
	b = 0;
	c = 0;
	cin >> z;
	
	for(int i = 1 ; i <= n ; i++)
	{
		a = 0;
		
		if(z[b] != '<')
		{
			if(c)	l--;
			c = 1;
			b++;
		}
		
		if(z[b] == '<')
		{
			if(z[b+1] != '3')
			{
				if(c) l--;
				c = 1;
				b++;
			}
			b += 2;
		}
		
		for(int j = 0 ; j < sz(d[i]) ; j++)
		{
			if(d[i][j] != z[b])
			{
				if(c)
				{	
					l--;
					break;
				}
				j--;
				a--;
				c = 1;
			}
			a++;
			b++;
		}
		if(a == sz(d[i]))
			l++;
	}
	
	if(sz(z) - b != 2)
	{
		if(sz(z) - b == 3)
		{
			if(c) l--;
			c = 1;
		}
		else
			l--;
	}
	
	if(l == n)
		cout << "yes" << endl;
	else
		cout << "no" << endl;
	
	return 0;
}
/*
3
i
****
you

*/
