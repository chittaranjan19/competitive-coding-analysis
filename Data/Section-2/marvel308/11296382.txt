#include<stdio.h>
#include<memory.h>
typedef long long int ll;
ll visited[1000005]={0};
ll gcd(ll a,ll b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}
ll lcm(ll a,ll b)
{
    return a*b/gcd(a,b);
}
int main()
{
    ll m,flag=0;
    scanf("%I64d",&m);
    ll h1,a1,x1,y1,cnt1=0,d1=0;
    scanf("%I64d%I64d%I64d%I64d",&h1,&a1,&x1,&y1);
    ll tmp1=h1;
    while(!visited[tmp1])
    {

        visited[tmp1]=1;
        if(tmp1==a1)
        {
            d1=cnt1;
            flag=1;
        }
        cnt1++;
        tmp1=(x1*tmp1+y1)%m;
    }
    memset(visited,0,sizeof(visited));
    ll h2,a2,x2,y2,cnt2=0,d2=0;
    scanf("%I64d%I64d%I64d%I64d",&h2,&a2,&x2,&y2);
    if(flag==0)
    {
        printf("-1\n");
        return 0;
    }
    flag=0;
    ll tmp2=h2;
    while(!visited[tmp2])
    {
        //cnt2++;
        visited[tmp2]=1;
        if(tmp2==a2)
        {
            d2=cnt2;
            flag=1;
        }
        cnt2++;
        tmp2=(x2*tmp2+y2)%m;
    }
    //printf("d1=%I64d d2=%I64d cnt1=%I64d cnt2=%I64d\n",d1,d2,cnt1,cnt2);
    if(flag)
    {
        ll L=lcm(cnt1,cnt2);
        if(d1==d2)
        {
            printf("%I64d\n",d1);
            return 0;
        }
        else
        {
            if(cnt1==cnt2)
            {
                printf("-1\n");
                return 0;
            }
            else
            {
                ll ans=0,val=(d1-d2)%cnt2+cnt2,cnt3=1;
                memset(visited,0,sizeof(visited));
                val%=cnt2;
                ll tmp3=val;
                while(!visited[tmp3])
                {
                    visited[tmp3]=1;
                    if(tmp3==0)
                    {
                        printf("%I64d\n",d2+ans*cnt2);
                        return 0;
                    }
                    else
                    {
                        tmp3=(tmp3+cnt1)%cnt2;
                        ans++;
                    }
                }
                printf("-1\n");
                return 0;
            }
        }
    }
    else
    {
        printf("-1\n");
    }
    return 0;
}
