#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

double DP[500005];
double temp[500005];
double sum[500005];

bool isvowel(char x)
{
    return x == 'I' || x == 'E' || x == 'A' || x == 'O' || x == 'U' || x == 'Y';
}

int main()
{
    ios_base::sync_with_stdio(0);
    string s;
    cin >> s;
    int n = s.size();
    for(int i=1;i<=n;i++)
        temp[i] = temp[i - 1] + 1.0 / i;
    sum[1] = temp[n];
    for(int i=2;i<=n;i++)
    {
        sum[i] = sum[i-1];
        sum[i] -= temp[n] - temp[n - i + 1];
        sum[i] += temp[n] - temp[i - 1];
    }
    for(int i=1;i<=n;i++)
        DP[i] = DP[i-1] + isvowel(s[i - 1]) * (sum[i]);// * ((i + 1) * 1.0 * (n - i));
    printf("%.15lf",DP[n]);
    return 0;
}
