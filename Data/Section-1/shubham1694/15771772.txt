#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 300010;

vector<int> adj[maxn];
int dp1[maxn], dp2[maxn], p[maxn], vid[maxn];
map<int, int> bad;

int solve(int cur, int parent)
{
	p[cur] = parent;
	int ret = -inf;
	int x, y = -1; 
	if(bad.find(cur)!=bad.end())
		ret = 0;
	for(auto it:adj[cur]){
		if(it==parent)
			continue;
		x = solve(it, cur);
		if(x==-1)
			continue;
		if(x+1==ret)
			y = -1;
		else if(x+1 > ret){
			ret = x+1;
			y = it;
		}
	}
	vid[cur] = y;
	return dp1[cur] = ret;
}

void dfs(int cur, int parent)
{
	int ret = -inf;
	if(bad.find(cur)!=bad.end())
		ret = 0;
	for(auto it:adj[parent]){
		if(it==cur || it==p[parent])
			continue;
		ret = max(ret, dp1[it]+2);
	}
	//cout << " b " << cur << " " << parent << " " << ret << "\n"; 
	ret = max(ret, dp2[parent]+1);
	dp2[cur] = ret;
	for(auto it:adj[cur]){
		if(it!=parent)
			dfs(it, cur);
	}
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int n, m, d, i, j, u, v;
	scanf("%d%d%d", &n, &m, &d);
	for(i=1; i<=m; i++){
		scanf("%d", &j);
		bad[j] = 1;
	}
	for(i=1; i<n; i++){
		scanf("%d%d", &u, &v);
		adj[u].pb(v);
		adj[v].pb(u);
	}
	dp2[0] = -inf;
	int temp = solve(1, 0);
	dfs(1, 0);
	int ans = 0;
	for(i=1; i<=n; i++){
		//cout << dp1[i] << " " << dp2[i] << "\n";
		if(dp1[i]<=d && dp2[i]<=d)
			ans++;
	}
	printf("%d\n", ans);
	return 0;
}
