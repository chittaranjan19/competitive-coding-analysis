#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_LENGTH 20

using namespace std;

char str[MAX_LENGTH];
char ans[MAX_LENGTH];
char tmp[MAX_LENGTH];
int pot[MAX_LENGTH];

int convertTo26(int x){
    tmp[MAX_LENGTH - 1] = '\0';
    int i = MAX_LENGTH - 2;

    while (x > 0){
        if (x % 26){
            tmp[i] = x % 26 + 'A' - 1;
        }
        else{
            tmp[i] = 'Z';
            x--;
        }

        x /= 26;
        i--;
    }

    return i + 1;
}

void convertFrom26(char *s, int n){
    int x = 0;
    int j = 0;

    for (int i = n - 1; i >= 0; i--){
        x += (s[i] - 'A' + 1) * pot[j];
        j++;
    }

    sprintf(tmp, "%d", x);
}

void convertFromRXCY(){
    char tmp2[MAX_LENGTH];
    int i = 1;
    int index;

    while (str[i] != 'C'){
        tmp2[i - 1] = str[i];
        i++;
    }

    tmp2[i - 1] = '\0';

    index = convertTo26(atoi(str + i + 1));

    strcat(ans, tmp + index);
    strcat(ans, tmp2);
}

void convertToRXCY(){
    char tmp2[MAX_LENGTH];
    int i = 0;

    ans[0] = 'R';

    while (str[i] >= 'A' && str[i] <= 'Z'){
        tmp2[i] = str[i];
        i++;
    }

    tmp2[i] = '\0';

    convertFrom26(tmp2, i);

    strcat(ans, str + i);
    strcat(ans, "C");
    strcat(ans, tmp);
}

int main(void){
    int n;
    bool flag;

    pot[0] = 1;
    for (int i = 1; i < MAX_LENGTH; i++){
        pot[i] = pot[i - 1] * 26;
    }

    scanf("%d", &n);
    scanf("%*c");

    for (int i = 0; i < n; i++){
        scanf("%s", str);
        scanf("%*c");

        memset(ans, 0, sizeof(ans));

        if (str[1] >= 'A' && str[1] <= 'Z'){
            convertToRXCY();
        }
        else{
            int j = 2;
            flag = false;

            while (str[j] != '\0'){
                if (str[j] == 'C'){
                    flag = true;
                    break;
                }
                j++;
            }

            if (flag){
                convertFromRXCY();
            }
            else{
                convertToRXCY();
            }
        }

        printf("%s\n", ans);
    }
    return 0;
}
