#include <iostream>
#include <climits>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(b, 0, sizeof(arr)); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // getchar(), gets()
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); n - amount; pair
#include <iomanip>      // setw(4), setfill('.'), setprecision(2)
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#include <memory>       // shared_ptr<>, uniqu_ptr<>
#include <iterator>     // ostream_iterator<int, char> out_iter(cout, " ");
#include <set>
#include <map>
#include <list>
#include <queue>
#include <functional>   // function
#define SRT srand(int(time(0)))

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
ld pi = 3.14159265358979323846;
int ten[8] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};
inline void eatline() { while (getchar() != '\n'); }

typedef map<int, int> Map;
typedef Map::iterator mIter;
typedef pair<int, int> Pair;
typedef set<int> Set;
typedef Set::iterator sIter;
typedef multimap<int, int> mMap;
typedef mMap::iterator mmIter;
typedef multiset<int> mSet;
typedef mSet::iterator msIter;
typedef list<int> List;
typedef List::iterator lIter;
typedef deque<int> Deque;
typedef Deque::iterator dIter;

template <class T, class Compare_obj = bool (*)(T, T)>
int BinarSrch(T *arr, const int &siz, T elem, Compare_obj comp_obj = [](T elem, T ai) {return elem < ai;})
{
    int r = siz, l = 0, mid = siz / 2;
    
    while (mid > l)
    {
        if (comp_obj(elem, arr[mid]))   // elem < arr[mid]
            r = mid;
        else
            l = mid;
        mid = (r + l) / 2;
    }
    
    return mid;
}

const int S = 100000;
int n, x[S], q, m[S], ans[S];

int main()
{
    int i;
    cin >> n;
    for (i = 0; i < n; ++i)
        scanf("%d", x + i);
    cin >> q;
    for (i = 0; i < q; ++i)
        scanf("%d", m + i);
    
    sort(x, x + n);
    int ind;
    for (i = 0; i < q; ++i)
    {
        ind = BinarSrch(x, n, m[i]);
        if (m[i] >= x[ind])
            cout << ind + 1 << '\n';
        else
            cout << ind << '\n';
    }
    
    return 0;
}