//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

string s, u, t;

vector <pii> ans;

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> s >> t;
	reverse(s.begin(), s.end());
	u = s;
	reverse(s.begin(), s.end());
	int p = 0;
	while(p < SZ(t)){
		int down = 0, up = SZ(t) - p + 1;
		while(up - down > 1){
			int mid = (up + down) / 2;
			if(s.find(t.substr(p, mid)) == string::npos && u.find(t.substr(p, mid)) == string::npos)
				up = mid;
			else
				down = mid;
		}
		if(down == 0){
			cout << "-1\n";
			return 0;
		}
		size_t found = s.find(t.substr(p, down));
		if(found != string::npos)
			ans.PB({found + 1, found + down});
		else{
			found = u.find(t.substr(p, down));
			if(found != string::npos)
				ans.PB({SZ(s) - found, SZ(s) - found - down + 1});
		}
		p += down;
//		for(int i = 0; i < SZ(ans); ++i){
//			cerr << "bug : " <<  ans[i].X << " " << ans[i].Y << "\n";
//		}
	}
	cout << SZ(ans) << "\n";
	for(int i = 0; i < SZ(ans); ++i){
		cout << ans[i].X << " " << ans[i].Y << "\n";
	}
	return 0;
}
