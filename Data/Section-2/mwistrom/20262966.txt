#include<bits/stdc++.h>

using namespace std;
typedef long long ll;
#define mp make_pair
#define pb push_back
#define max(x, y)              ((x)>(y))?(x):(y)
#define min(x, y)              ((x)<(y))?(x):(y)

int main() {
    int n;
    cin >> n;

    ll a[n][n];

    int pi, pj;
    bool diag = false;
    bool secDiag = false;

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> a[i][j];
            if (a[i][j] == 0) {
                pi = i;
                pj = j;
                if (i == j)
                    diag = true;
                if (n - i - 1 == j)
                    secDiag = true;
            }
        }
    }

    if (n == 1) {
        cout << 1 << endl;
        return 0;
    }


    ll final_sum = 0;
    bool fs = false;

    for (int i = 0; i < n; i++) {
        if (i != pi) {
            ll sum = 0;
            for (int j = 0; j < n; j++) {
                sum += a[i][j];
            }
            if (!fs) {
                fs = true;
                final_sum = sum;
            }
            if (final_sum != sum) {
                cout << -1 << endl;
                return 0;
            }
        }
    }

    for (int j = 0; j < n; j++) {
        if (j != pj) {
            ll sum = 0;
            for (int i = 0; i < n; i++) {
                sum += a[i][j];
            }
            if (final_sum != sum) {
                cout << -1 << endl;
                return 0;
            }
        }
    }

    if (!diag) {
        ll sum = 0;
        for (int i = 0; i < n; i++) {
            sum += a[i][i];
        }
        if (final_sum != sum) {
            cout << -1 << endl;
            return 0;
        }
    }

    if (!secDiag) {
        ll sum = 0;
        for (int i = 0; i < n; i++) {
            sum += a[n - 1 - i][i];
        }
        if (final_sum != sum) {
            cout << -1 << endl;
            return 0;
        }
    }

    ll sum_row = 0;
    for (int j = 0; j < n; j++) {
        sum_row += a[pi][j];
    }

    ll sum_col = 0;
    for (int i = 0; i < n; i++) {
        sum_col += a[i][pj];
    }

    ll sum_diag = 0;
    if (diag) {
        for (int i = 0; i < n; i++) {
            sum_diag += a[i][i];
        }
    }

    ll sec_sum_diag = 0;
    if (secDiag) {
        for (int i = 0; i < n; i++) {
            sec_sum_diag += a[n - i - 1][i];
        }
    }


    if (sum_row == sum_col && !diag && !secDiag) {
        cout << final_sum - sum_row << endl;
    } else if (sum_row == sum_col && diag && sum_diag == sum_col && !secDiag) {
        cout << final_sum - sum_row << endl;
    } else if (sum_row == sum_col && secDiag && sec_sum_diag == sum_col && !diag) {
        cout << final_sum - sum_row << endl;
    } else if (sum_row == sum_col && diag && sum_diag == sum_col && secDiag && sum_col == sec_sum_diag) {
        cout << final_sum - sum_row << endl;
    } else
        cout << -1 << endl;

}