#include<bits/stdc++.h>
using namespace std;
/*
    Start   3:23
    End     4:45
*/
const int MAXN=1e5+10;
const int MAXL=35;

int seg[MAXL][4*MAXN];
bool leazy[MAXL][4*MAXN];
int a[MAXN];
void add(int id,int bid,int sz){
    leazy[bid][id]=!leazy[bid][id];
    seg[bid][id]=sz-seg[bid][id];
}
void shift(int id,int bid,int xl,int xr){
    if(!leazy[bid][id])return ;
    int xm=(xl+xr)/2;
    add(2*id+1,bid,xm-xl);
    add(2*id+2,bid,xr-xm);
    leazy[bid][id]=0;
}
void update(int ql,int qr,int bid,int xl=0,int xr=MAXN,int id=0){
    //cout<<xl<<' '<<xr<<'\n';
    if(ql<=xl && xr<=qr)return add(id,bid,xr-xl);
    if(qr<=xl || xr<=ql)return ;
    shift(id,bid,xl,xr);
    int xm=(xl+xr)/2;
    update(ql,qr,bid,xl,xm,2*id+1);
    update(ql,qr,bid,xm,xr,2*id+2);
    seg[bid][id]=
        seg[bid][2*id+1]+
        seg[bid][2*id+2];
}
int get(int ql,int qr,int bid,int xl=0,int xr=MAXN,int id=0){
    if(ql<=xl && xr<=qr)return seg[bid][id];
    if(qr<=xl || xr<=ql)return 0;
    shift(id,bid,xl,xr);
    int xm=(xl+xr)/2;
    return
        get(ql,qr,bid,xl,xm,2*id+1)+
        get(ql,qr,bid,xm,xr,2*id+2);

}
void build(int bid,int xl=0,int xr=MAXN,int id=0){
    if(xr-xl==1){seg[bid][id]=bool(a[xl]&(1<<bid));return;}
    int xm=(xl+xr)/2;
    build(bid,xl,xm,2*id+1);
    build(bid,xm,xr,2*id+2);
    seg[bid][id]=
        seg[bid][2*id+1]+
        seg[bid][2*id+2];
}
int main(){
    int n;  cin>>n;
    for(int i=0;i<n;i++)cin>>a[i];
    for(int i=0;i<MAXL;i++)build(i);
    int m;  cin>>m;
    while(m--){
        int qt; cin>>qt;
        if(qt==2){
            int x,y,z;  cin>>x>>y>>z;   x--;
            for(int i=0;i<MAXL;i++)if(z&(1<<i))update(x,y,i);
        }
        else{
            int x,y;    cin>>x>>y;  x--;
            long long sum=0;
            for(int i=0;i<MAXL;i++)sum+=get(x,y,i)<<i;
            cout<<sum<<endl;
        }
    }
}
