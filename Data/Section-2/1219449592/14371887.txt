#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <string.h>
#include <queue>
using namespace std;
const long long M = 100000+10, N = 1e9+7;
int a[M], n, m;
struct node
{
	int value, num;
	
}b[M], f[M];

int cmp1(const void *a, const void *b)
{
	return ((node *)a)->value - ((node*)b)->value;
}
int cmp2(const void *a, const void *b)
{
	return ((node *)a)->num - ((node*)b)->num;
}

int main()
{
#ifndef   ONLINE_JUDGE
	freopen("1.txt", "r", stdin);
#endif
	int i, j;
	cin >> n >> m;
	for(i = 0; i < n; i++)
	{
		scanf("%d", &f[i].value);
		f[i].num = i+1;
	}
	for(i = 0; i < m; i++)
	{
		scanf("%d", &b[i].value);
		b[i].num = i+1;
	}
	qsort(f, n, sizeof(node), cmp1);
	qsort(b, m, sizeof(node), cmp1);
	i = j = 0;
	while (i < n && j < m)
	{
		if (f[i].value == b[j].value)
		{
			a[j] = f[i].num;
			j++;
		}
		i++;
	}
	if (j < m)
	{
		cout << "Impossible\n";
		return 0;
	}
	for(j = 1; j < m; j++)
	{
		if (b[j].value == b[j-1].value)
		{
			break;
		}
	}
	if (j< m)
	{
		cout << "Ambiguity\n";
		return 0;
	}
	qsort(b, m, sizeof(node), cmp2);
	cout << "Possible\n" << a[0];
	for(i = 1; i < m; i++)
	{
		printf (" %d", a[i]);
	}
	return 0;
}
