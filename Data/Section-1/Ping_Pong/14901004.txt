#include <bits/stdc++.h>
#include <iostream>
#include <cstdio>
#include <stdlib.h>
#include <cmath>
#include <algorithm>

using namespace std;
const int MOD = 1e9 + 7;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n, l;
    cin >> n >> l;
    int a[n][2];
    for (int i = 0; i < n; i++)
        cin >> a[i][0] >> a[i][1];
    int dp[l][n][2];
    for (int i = 0; i < l; i++)
        for (int j = 0; j < n; j++)
            for (int k = 0; k < 2; k++)
                dp[i][j][k]= 0;
    for (int i = 0; i < l; i++)
        for (int j = 0; j < n; j++)
            for (int k = 0; k < 2; k++)
                if (!(k == 1 && a[j][0] == a[j][1]))
                {
                    if (a[j][k] == (i + 1))
                    {
                        dp[i][j][k] = (dp[i][j][k] + 1) % MOD;
                    }
                    else if (a[j][k] < (i + 1))
                    {
                        for (int t = 0; t < n; t++)
                            if (t != j)
                            {
                                for (int p = 0; p < 2; p++)
                                    if (a[j][k] == a[t][1 - p])
                                        dp[i][j][k] = (dp[i][j][k] + dp[i - a[j][k]][t][p]) % MOD;
                            }
                    }
                }
    int ans = 0;
    for (int j = 0; j < n; j++)
        for (int k = 0; k < 2; k++)
            ans = (ans + dp[l - 1][j][k]) % MOD;
    cout << ans;
    return 0;
}
