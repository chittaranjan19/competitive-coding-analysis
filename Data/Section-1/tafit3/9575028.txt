import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProblemA {
    BufferedReader rd;

    private ProblemA() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int[] a = intarr();
        int n = a[0];
        int m = a[1];
        int k = a[2];
        int[][] p = new int[n][m];
        for(int i=0;i<k;i++) {
            int[] g = intarr();
            int y = g[0]-1;
            int x = g[1]-1;
            p[y][x] = 1;
            for(int c=-1;c<=0;c++) {
                for(int d=-1;d<=0;d++) {
                    if(c+y>=0 && c+y+1 < n && d+x>=0 && d+x+1 < m) {
                        boolean allBlack = true;
                        for (int e = 0; e <= 1; e++) {
                            if(allBlack) {
                                for (int f = 0; f <= 1; f++) {
                                    if (p[y + c + e][x + d + f] == 0) {
                                        allBlack = false;
                                        break;
                                    }
                                }
                            }
                        }
                        if(allBlack) {
                            out(i+1);
                            return;
                        }
                    }
                }
            }
        }
        out(0);
    }

    private int pint() throws IOException {
        return pint(rd.readLine());
    }

    private int pint(String s) {
        return Integer.parseInt(s);
    }

    private long plong() throws IOException {
        return plong(rd.readLine());
    }

    private long plong(String s) {
        return Long.parseLong(s);
    }

    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = split(s);
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }

    private long[] longarr() throws IOException {
        return longarr(rd.readLine());
    }

    private long[] longarr(String s) {
        String[] q = split(s);
        int n = q.length;
        long[] a = new long[n];
        for(int i=0;i<n;i++) {
            a[i] = Long.parseLong(q[i]);
        }
        return a;
    }

    private String[] split(String s) {
        int n = s.length();
        int sp = 0;
        for(int i=0;i<n;i++) {
            if(s.charAt(i)==' ') {
                sp++;
            }
        }
        String[] res = new String[sp+1];
        int last = 0;
        int x = 0;
        for(int i=0;i<n;i++) {
            char c = s.charAt(i);
            if(c == ' ') {
                res[x++] = s.substring(last,i);
                last = i+1;
            }
        }
        res[x] = s.substring(last,n);
        return res;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemA();
    }
}