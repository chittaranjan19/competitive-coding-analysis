#include <iostream>
#include <cmath>

using namespace std;

int d[1005][105], v1, v2, tot, m;

int dp(int v, int t)
{
    if(d[v][t])
        return d[v][t];
    if(t == 1)
        return 0;
    else
    {
        for(int j = -m; j <= m; ++j)
            if(v + j >= 1 && m * (tot - t + 1) >= abs(v + j - v2) && m * (t - 1) >= abs(v + j - v1) && dp(v + j, t - 1) != 0)
                d[v][t] = max(d[v][t], v + dp(v + j, t - 1));
    }
    return d[v][t];
}

int main()
{
    cin >> v1 >> v2 >> tot >> m;
    d[v1][1] = v1;
//    for(int i = 1; i < t; i++)
//    {
//        for(int j = 0; j <= 1000; ++j)
//            if(dp[j][i])
//                for(int k = -d; k <= d; ++k)
//                    if(j + d >= 1 && j + d <= 1000)
//                        dp[j + k][i + 1] = max(dp[j + d][i + 1], j + d + dp[j][i]);
//    }
    cout << dp(v2, tot)<< endl;
    return 0;
}
