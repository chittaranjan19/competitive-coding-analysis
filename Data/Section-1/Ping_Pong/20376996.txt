#include <bits/stdc++.h>

#define ll long long
#define ld long double

using namespace std;

const ll N = 100000;
const ll inf = (ll)1e9;
const ll MOD = (ll)1e9 + 7;
const ld eps = 1e-6;
const ll ABC = 26;
const ll P = 239;

int main()
{
    //freopen("refrain.in", "r", stdin);
    //freopen("refrain.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    ll n, m;
    cin >> n >> m;
    vector<ll> a(n), b(m);
    for (ll i = 0; i < n; i++)
        cin >> a[i];
    for (ll i = 0; i < m; i++)
        cin >> b[i];
    sort(a.begin(), a.end());
    sort(b.begin(), b.end());
    vector<ll> pa(n + 1), pb(m + 1);
    pa[0] = 0;
    for (ll i = 0; i < n; i++)
        pa[i + 1] = pa[i] + a[i];
    pb[0] = 0;
    for (ll i = 0; i < m; i++)
        pb[i + 1] = pb[i] + b[i];
    ll ans = inf;
    for (ll i = 0; i < n + m; i++)
    {
        ll x = (i < n ? a[i] : b[i - n]);
        ll p1 = lower_bound(a.begin(), a.end(), x) - a.begin();
        ll p2 = lower_bound(b.begin(), b.end(), x) - b.begin();
        ll cnt = p1 * x - pa[p1] + pb[m] - pb[p2] - x * (m - p2);
        ans = min(ans, cnt);
    }
    cout << ans << endl;
    return 0;
}
