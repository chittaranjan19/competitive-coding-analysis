#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
#include <fstream>
#include <tuple>
#include <iomanip>

using namespace std;

#define forn(i, n) for (int i = 0; i < int(n); ++i)
#define for1(i, n) for (int i = 1; i < int(n); ++i)
#define ford(i, n) for (int i = int(n) - 1; i >= 0; --i)
#define fore(i, l, r) for (int i = int(l); i <= int(r); ++i)
#define all(a) a.begin(), a.end()
#define sz(a) (int(a.size()))
#define mp make_pair
#define pb push_back
#define ft first
#define sc second
#define g(a, b) get<a> (b)

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pt;

const int MAX_N = 2e5 + 10;
const int mod = 1e9 + 7;

int main(){
    #if 0
        freopen("cinemaholics.in", "r", stdin);
        freopen("cinemaholics.out", "w", stdout);
    #endif
    //cout << setprecision(20);
    int kol[MAX_N] = {0, }, f[MAX_N] = {0, };
    int n, st[MAX_N];
    scanf("%d", &n);
    for (int i = 0 ; i < n; i++){
        scanf("%d", &st[i]);
        kol[st[i]]++;
    }
    for (int i = MAX_N - 9; i >= 0; i--) f[i] = f[i + 1]  + kol[i];
    ll max_ = 0;
    for (int i = 1; i <= MAX_N - 9; i++){
        if (!kol[i]) continue;
        ll ans = 0;
        for (int j = i; j < MAX_N - 10; j+=i){
            ans += 1ll * j * (f[j] - f[j + i]);
        }
        max_ = max(ans, max_);
    }
    cout << max_;
    return 0;
}