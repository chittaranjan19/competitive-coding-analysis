#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int arr[105][105],d,n,m;
vector<int> temp,tempo;

int check(int ind)
{
    if(ind < 0 || ind >= temp.size())
        return 1 << 20;
    int res = 0;
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            res+=abs(arr[i][j] - temp[ind]) / d;
    return res;
}

int main()
{
    int maxi = 0,mini = 1 << 20;
    cin >> n >> m >> d;
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            scanf("%d",&arr[i][j]),maxi = max(maxi , arr[i][j]), mini = min(mini, arr[i][j]),tempo.push_back(arr[i][j]);
    bool fail = false;
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            if(abs(arr[i][j] - arr[0][0]) % d != 0)
            {
                fail = true;
                break;
            }
    if(fail)
    {
        printf("-1");
        return 0;
    }
    sort(tempo.begin(),tempo.end());
    temp.push_back(tempo[0]);
    for(int i=1;i<tempo.size();i++)
        if(tempo[i] != tempo[i-1])
            temp.push_back(tempo[i]);
    int L = 0, R = temp.size() - 1;
    while(R - L > 2)
    {
        int m1 = L + (R - L) / 3,m2 = L + 2 * (R - L) / 3;
        if(check(m1) > check(m2))
            L = m1;
        else R = m2;
    }
    printf("%d",min(check(L),min(check(R),check(R - 1))));
    return 0;
}