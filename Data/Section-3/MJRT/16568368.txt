//MJRT
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
//////////////////////
#include<iostream>
#include<algorithm>
#include<string>
#include <iterator>
#include<sstream>
#include<functional>
#include<numeric>
///////////////////////
#include<vector>
#include<map>
#include <stack>
#include<queue>
#include<set>
#include <bitset>
#include <list>
///////////////////////
//#include<ext/pb_ds/priority_queue.hpp> //pd_bs库,hdu&&poj不支持
using namespace std;
#define lowbit(x) ((x)&(-x))
static int INDEX = 0,BUGs = 0;
#define BUG() cout << "There is BUG No." << BUGs++ <<endl
#define Whats(x) cout << "{ "<< #x << " }" << " is " << "*** "<< x << " ***" << "  index:" << INDEX++ <<endl
#define Show(x,s,l)         cout << #x << ": "; for(int i = s ; i < s+l ; i++) cout << x[i] << " ";  cout << "\n"
typedef  long long int LL;
typedef  unsigned long long int ULL;

const int INF = ~0U>>1;

//const int N = 5 + ;
int a,b;
bool x;

bool check()
{
    if(!a || !b) return 0;
    if(x  && a == 1)  return 0;
    if(!x && b == 1)  return 0;
    return 1;
}

int main()
{
    //ios::sync_with_stdio(false);
#ifndef ONLINE_JUDGE
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
#endif
    scanf("%d%d",&a,&b);
    if(a > b) swap(a,b);
    x = 0;
    LL cnt = 0;
    int t;
    if(a == 1 && b == 1)        puts("0");
    else if((a == 1 && b == 2) || (a == 2 && b == 2) )  puts("1");
    else
    {
        int flag = 0;
        while(b && a && a!=1)
        {
            if(flag)
            {
                swap(a,b);
            }
            t = b/2;
            int bb = b;
            b = b%2;
            if(b == 0 && bb>2)
            {

                b+=2;
                t--;
            }
            else
            {

            }
            a += t;
//            Whats(a);
//            Whats(b);
//            Whats(t);
            cnt += t;

            flag = 1;
        }
        printf("%I64d\n",cnt);
    }
    return 0;
}


