#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;

int tar[100005];
bool vis[200005][200];

struct node
{
   int x,y;
}a[100005],ans[100005];

bool cmp(node a,node b)
{
   return a.x>b.x;
}
vector<node> first[200005];

int main()
{
   int n,flag,i;
   scanf("%d",&n);
   memset(vis,false,sizeof(vis));
   for(i=0;i<n;i++)
   {
      scanf("%d%d",&a[i].x,&a[i].y);
      int tmp=a[i].y-a[i].x+100000;
      first[tmp].push_back(a[i]);
      sort(first[tmp].begin(),first[tmp].end(),cmp);
   }
   for(i=0;i<n;i++) scanf("%d",&tar[i]);
   flag=0;
   int k=0;
   for(i=0;i<n;i++)
   {
      int tmp=tar[i]+100000;
      if(first[tmp].size()==0){flag=1;break;}
      else
      {
         int l=first[tmp].size()-1;
         if(k>0)
         {
            if((first[tmp][l].x<=ans[k-1].x && first[tmp][l].y<=ans[k-1].y)||vis[tmp][l])
            {
               while((first[tmp][l].x<=ans[k-1].x && first[tmp][l].y<=ans[k-1].y)||vis[tmp][l])
               {
                  if(l==0){flag=1;break;}
                  l--;
               }
               if(flag==1)break;
            }
            ans[k].x=first[tmp][l].x;
            ans[k++].y=first[tmp][l].y;
            vis[tmp][l]=true;
         }
         else
         {
            ans[k].x=first[tmp][l].x;
            ans[k++].y=first[tmp][l].y;
            first[tmp].pop_back();
         }
      }
   }
   if(!flag)
   {
      printf("YES\n");
      for(i=0;i<k;i++) printf("%d %d\n",ans[i].x,ans[i].y);
   }
   else printf("NO\n");
   return 0;
}
