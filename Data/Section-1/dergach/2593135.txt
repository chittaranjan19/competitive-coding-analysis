#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <time.h>
#include <stdlib.h>
#include <iostream>
#include <vector>
#include <string>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
using namespace std;

typedef long long ll;
#define eps 1e-8
/*

int a[105], n, i, j, k, cnt;

int main()
{
    scanf("%d", &n);
    for(i = 1; i <= n; i++)
        scanf("%d", &a[i]);
    if(n % 2 == 0 || n < 3)
    {
        puts("-1");
        return 0;
    }
    for(i = n - 1; i >= 1; i -= 2)
    {
        int x = max(a[i], a[i+1]);
        a[i/2] -= x;
        cnt += x;
        if(a[i/2] < 0) a[i/2] = 0;
    }
    cnt += a[1];
    printf("%d\n", cnt);
    return 0;
}*/

multiset <int> street, club;
multiset <int> :: iterator it;
int i, j, k, cnt;
char a[305];

int main()
{
    for(i = 0; i < 300; i++)
    {
        street.insert(0);
        club.insert(1);
    }
    gets(a);
    for(i = 0; a[i]; i++)
    {
        if(a[i] == '+')
        {
            if(street.find(2) != street.end())
            {
                it = street.find(2);
                street.erase(it);
                club.insert(2);
            }
            else
            {
                club.insert(2);
                cnt++;
            }
        }
        else
        {
            if(club.find(2) != club.end())
            {
                it = club.find(2);
                club.erase(it);
                street.insert(2);
            }
            else
            {
                street.insert(2);
                cnt++;
            }
        }
    }
    printf("%d\n", cnt);
    return 0;
}