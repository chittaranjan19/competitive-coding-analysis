uses    math;
const   fi      ='';
        fo      ='';
        oo      =trunc(1e5);

var     n       :longint;
        a       :array[0..oo] of longint;
        d, c    :array[0..oo] of longint;
        f       :text;
        res     :longint;
procedure nhap;
var     i :longint;
begin

        assign(f, fi);
        reset(f);
        read(f, n);
        for i:=1 to n do read(f, a[i]);
        close(f);
end;

procedure optimize;
var     i, j    :longint;
begin
        a[0]:=-10;
        a[n+1]:=high(longint);
        c[0]:=0;
        c[1]:=1;
        c[n+1]:=0;
        for i:=2 to n do
                if a[i-1]<a[i] then c[i]:=c[i-1]+1 else c[i]:=1;
        d[0]:=0;
        d[n]:=1;
        d[n+1]:=0;
        for i:=n-1 downto 1 do
                if a[i]<a[i+1] then d[i]:=d[i+1]+1 else d[i]:=1;

        if (d[1]=n) and (c[n]=n) then res:=n
        else res:=max(d[1],c[n])+1;
        if (a[2]>=2) then res:=max(d[2]+1,res)
        else res:=max(d[2],res);
        res:=max(c[n-1], res);
        for i:=2 to n-1 do

                if (c[i-1]+d[i+1]+1 > res) and (a[i-1]+1<a[i+1]) then res:=c[i-1]+d[i+1]+1;

        {for i:=1 to n do write(c[i],' ');
        writeln;
        for i:=1 to n do write(d[i],' ');
        writeln; }
end;

procedure xuat;
begin
        assign(f, fo);
        rewrite(F);
        write(f, res);
        close(f);
end;

BEGIN
        nhap;
        optimize;
        xuat;
END.
