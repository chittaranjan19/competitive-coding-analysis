#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int ata[MAXN],rank[MAXN];
int get(int x){
	if(ata[x]==x)
		return x;
	return ata[x]=get(ata[x]);	
}
void merge(int x,int y){
	x=get(x);y=get(y);
	if(x==y)
		return;
	if(rank[y]<rank[x]){
		rank[x]+=rank[y];
		ata[y]=x;
	}
	else{
		rank[y]+=rank[x];
		ata[x]=y;
	}
}
int next[MAXN];
void atla(int x,int y){
	for(int i=x;i<=y;i++){
		int k=next[i];
		if(k>y)
			return;
		merge(i,k);
		umax(next[i],y+1);
		i=k-1;
	}
}
int main(){
	int n,q;
	scanf("%d%d",&n,&q);
	for(int i=1;i<=n;i++){
		ata[i]=i;
		next[i]=i+1;
		rank[i]=1;
	}
	while(q--){
		int type,l,r;
		scanf("%d%d%d",&type,&l,&r);
		if(type==1)
			merge(l,r);
		else if(type==2)
			atla(l,r);
		else{
			if(get(l)==get(r))
				printf("YES\n");
			else
				printf("NO\n");	
		}
	}
	return 0;
}
//LooK aT mY COde ONlinE +_+
