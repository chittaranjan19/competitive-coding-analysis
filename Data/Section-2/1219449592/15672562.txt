#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <set>
#include <vector>
#include <algorithm>
#define N 100005
#define ll long long
const int INF = 0x3fffffff;
using namespace std;
vector<int> aa[N];
int n, vis[N];
int a;
void dfs(int node, int depth)
{
	int i, l = aa[node].size();
	bool flag = true;
	for (i = 0; i < l; i++)
	{
		if (!vis[aa[node][i]])
		{
			vis[aa[node][i]] = true;
			dfs(aa[node][i], depth+1);
			flag = false;
		}
	}
	if (flag)	a = max(a, depth);
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("1.txt", "r", stdin);
#endif
	int i, j, u, v, x, y;
	ll ans = 0;
	bool flag;
	scanf("%d%d%d", &n, &x, &y);
	for (i = 1; i < n; i++)
	{
		scanf("%d%d", &u, &v);
		aa[u].push_back(v);
		aa[v].push_back(u);
	}
	if (x > y)
	{
		ans = y*(n-1);
		flag = false;
		for (i = 1; i <= n; i++)
		{
			if (aa[i].size() == n-1)
			{
				flag = true;
				break;
			}
		}
		if (flag)	ans += x-y;
		printf("%I64d", ans);
		return 0;
	}
	int t = 0;
	for (i = 1; i <= n; i++)
	{
		if(aa[i].size() > 1) 	continue;
		a = 0;
		memset(vis, false, sizeof(vis));
		vis[i] = true;
		dfs(i, 0);
		t = max(t, a);
	}
	ans = t*x+(n-t-1)*y;
	printf("%I64d", ans);
	return 0;
}
