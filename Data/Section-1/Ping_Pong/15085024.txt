#include <bits/stdc++.h>
#include <iostream>
#include <cstdio>
#include <stdlib.h>
#include <cmath>
#include <algorithm>

using namespace std;
const int inf = (int)1e9;
const int MAX_N = 1000;
const int MOD = (int)1e9 + 7;

int ans[MAX_N][MAX_N];

int bin_pow(int n)
{
    return 1 << n;
}

void rec(int n)
{
    if (n == 0)
        ans[0][0] = 0;
    else
    {
        rec(n - 1);
        for (int i = 0; i < bin_pow(n - 1); i++)
            for (int j = 0; j < bin_pow(n - 1); j++)
                ans[i][bin_pow(n - 1) + j] = ans[i][j];
        for (int i = 0; i < bin_pow(n - 1); i++)
            for (int j = 0; j < bin_pow(n - 1); j++)
                ans[bin_pow(n - 1) + i][j] = ans[i][j];
        for (int i = 0; i < bin_pow(n - 1); i++)
            for (int j = 0; j < bin_pow(n - 1); j++)
                ans[bin_pow(n - 1) + i][bin_pow(n - 1) + j] = 1 - ans[i][j];
    }
}

int main()
{
    //freopen("slalom.in", "r", stdin);
    //freopen("output.txt", "w", stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n;
    cin >> n;
    rec(n);
    for (int i = 0; i < bin_pow(n); i++)
    {
        for (int j = 0; j < bin_pow(n); j++)
            cout << ans[i][j] << " ";
        cout << endl;
    }
    return 0;
}
