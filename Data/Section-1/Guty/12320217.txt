#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (deque<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int main()
{
	int n,w,aux1,aux2;
	cin >> n >> w;
	if (w > n)
	{
		cout << 0 << endl;
		return 0;
	}
	if (w == 1)
	{
		cout << n << endl;
		return 0;
	}
	cin >> aux1;
	deque<tint> vAux; 
	map<deque<tint>, tint> m;
	forn(i,w-1)
	{
		cin >> aux2;
		vAux.push_back(aux2-aux1);
		aux1 = aux2;
	}
	m[vAux]++;
	forsn(i,w,n)
	{
		cin >> aux2;
		vAux.pop_front();
		vAux.push_back(aux2-aux1);
		aux1 = aux2;
		m[vAux]++;
	}
	cin >> aux1;
	forn(i,w-1)
	{
		cin >> aux2;
		vAux[i] = aux2-aux1;
		aux1 = aux2;
	}
	cout << m[vAux] << endl;
	return 0;
}



