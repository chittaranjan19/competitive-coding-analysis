#include<bits/stdc++.h>
#define ll long long
#define cst long long  t;scanf("%I64d",&t)    ;while(t--)
#define si(x) scanf("%I64d",&x);
#define si2(x,y) scanf("%I64d%I64d",&x,&y);
#define si3(x,y,z) scanf("%I64d%I64d%I64d",&x,&y,&z);
#define sl(x) scanf("%I64d",&x);
#define ll long long
#define ss(x) scanf("%s",x);
#define sc(x) scanf("%c",&x);
#define pb(x) push_back(x);
#define ppb() pop_back();
#define MOD 100000007

using namespace std;

vector<long long > doll[100001];
long long  res=0;
long long  n,k;

void process(long long  x)
{
    if(x<=1)
        return ;
    /*if(x==1){
        res++;return;}*/
    //cout<<"a"<<x<<"a";
    long long  i,sz;
    for(i=0;i<k;i++){
        sz=doll[i].size();
        ////cout<<sz<<endl;
        if(sz==0)
            continue;
        if(doll[i][sz-1]==x)
            break;
    }
    if(i==k)
        return;
    ////cout<<i<<endl;;
    if(sz>1&&(doll[i][sz-1]-doll[i][sz-2])==1){
        doll[i].pop_back();
        //cout<<"A";
        if(doll[i][sz-2]==1){
           // res++;
            return;
        }
        process(x-1);

    }
    /*else if(sz==1&&doll[i][sz-1]==1)
        return;
*//*
    if(doll[i][sz-1]==1)
    {
        res++;
        return;
    }*/
    if(sz>1)
        res+=2;
    else
        res++;
        //cout<<" ";
    //cout<<i<<" "<<sz<<" "<<res<<endl;
    doll[i].pop_back();
    /*while(x>0&&sz>0&&(doll[i][sz-1]-x)==1)
        sz--,x--,doll[i].pop_back();*/
    if(x>2)
        process(x-1);
}
int main()
{
    //freopen("input.txt","r",stdin);
    long long  i;
    si2(n,k);
    for(i=0;i<k;i++)
    {
        long long  m,x;
        si(m);
        while(m--)
        {
            si(x);
            doll[i].pb(x);
        }

        //sort(doll[i].begin(),doll[i].end());
    }
    /*for(i=0;i<k;i++)
    {
        for(long long  j=0;j<doll[i].size();j++)
            //cout<<doll[i][j]<<" ";
        //cout<<endl;
    }*/
    process(n);
    cout<<res;
    return 0;
}
