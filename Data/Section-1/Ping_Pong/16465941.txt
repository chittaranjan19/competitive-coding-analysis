#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int p = 239;
const int MAX_N = 1000000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

int main()
{
    //ifstream ifs("input.txt");
    //ofstream ofs("output.txt");
    //freopen("candies.in", "r", stdin);
    //freopen("candies.out", "w", stdout);
    //ios_base::sync_with_stdio(0);
    //cin.tie(0);
    int n, m;
    scanf("%d %d", &n, &m);
    int a[n];
    for (int i = 0; i < n; i++)
        scanf("%d", &a[i]);
    vector<int> pos[MAX_N + 1];
    for (int i = 0; i < n; i++)
        if (a[i] <= MAX_N)
            pos[a[i]].push_back(i + 1);
    vector<int> index[MAX_N + 1];
    int size_arr[MAX_N + 1];
    for (int i = 1; i <= MAX_N; i++)
        size_arr[i] = 0;
    for (int i = 1; i <= MAX_N; i++)
        for (int j = i; j <= MAX_N; j += i)
        {
            size_arr[j] += pos[i].size();
            index[j].push_back(i);
        }
    int num = 1;
    for (int i = 1; i <= m; i++)
        if (size_arr[i] > size_arr[num])
            num = i;
    printf("%d %d\n", num, size_arr[num]);
    vector<int> ans;
    for (int i = 0; i < index[num].size(); i++)
        for (int j = 0; j < pos[index[num][i]].size(); j++)
            ans.push_back(pos[index[num][i]][j]);
    sort(ans.begin(), ans.end());
    for (int i = 0; i < ans.size(); i++)
        printf("%d ", ans[i]);
    return 0;
}
