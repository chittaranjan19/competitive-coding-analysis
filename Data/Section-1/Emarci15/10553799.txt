#include <iostream>
#include <algorithm>
#include <set>

#define mp make_pair
#define fi first
#define se second

using namespace std;

int n,x;

pair<int,int> a[2][2001];
set<int> s[2];
int v[2];
int sol[2];

int main()
{
    ios::sync_with_stdio(0);

    cin >> n >> x;
    int t,h,m;
    for(int i=0; i<n; i++) {
        cin >> t >> h >> m;

        a[t][v[t]++] = mp(h,m);
    }

    sort(&a[0][0],&a[0][v[0]]);
    sort(&a[1][0],&a[1][v[1]]);

    for(int tk=0; tk<2; tk++) {
        for(int i=0; i<2; i++) while(!s[i].empty()) s[i].erase(s[i].begin());
        int y = x;
        int ii[2];
        ii[0] = ii[1] = 0;
        for(int i=0; i<=n; i++) {
            sol[tk] = i;
            while((ii[(tk+i)%2] < v[(tk+i)%2]) && (a[(tk+i)%2][ii[(tk+i)%2]].fi <= y)) {
                s[(tk+i)%2].insert(-a[(tk+i)%2][ii[(tk+i)%2]++].se);
            }
            if((n==2000) && (s[(tk+i)%2].empty())) {
                cout << y << " " << a[(tk+i)%2][ii[(tk+i)%2]].fi << " " << a[(tk+i)%2][ii[(tk+i)%2]].se<< endl;
            }
            if(s[(tk+i)%2].empty()) break;
            y -= (*s[(tk+i)%2].begin());
            s[(tk+i)%2].erase(s[(tk+i)%2].begin());
        }
    }

    cout << max(sol[0],sol[1]) << endl;

    return 0;
}
