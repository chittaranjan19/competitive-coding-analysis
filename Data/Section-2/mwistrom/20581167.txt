
import java.io.*;
import java.util.*;

public class Q1 {
    public static MyScanner in = new MyScanner();
    public static PrintWriter out = in.MyOut();
    public static MyViewer view = new MyViewer();

    static class MyScanner {
        BufferedReader br;
        StringTokenizer st;

        public MyScanner() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        int[] arrayInt(int n) {
            int[] a = new int[n];
            for (int i = 0; i < n; i++) {
                a[i] = in.nextInt();
            }
            return a;
        }

        long[] arrayLong(int n) {
            long[] a = new long[n];
            for (int i = 0; i < n; i++) {
                a[i] = in.nextLong();
            }
            return a;
        }

        String nextLine() {
            String str = "";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        void close() {
            try {
                br.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        static PrintWriter MyOut() {
            return new PrintWriter(new BufferedOutputStream(System.out), true);
        }
    }

    static class MyViewer {
        static boolean print = false;

        public void on() {
            print = true;
        }

        public void off() {
            print = false;
        }

        public <T extends List> void list(T a) {
            if (!print) return;
            out.print("List: [" + a.get(0));
            for (int i = 1; i < a.size(); i++) {
                out.print(", " + a.get(i));
            }
            out.print("] Len: " + a.size());
        }

        public <T> void array(T[] a) {
            if (!print) return;
            out.print("Array: [" + a[0]);
            for (int i = 1; i < a.length; i++) {
                out.print(", " + a[i]);
            }
            out.print("] Len: " + a.length);
        }

        public void array(int[] a) {
            if (!print) return;
            out.print("int Array: [");
            for (int i = 0; i < a.length; i++) {
                out.print(a[i] + ", ");
            }
            out.print("'] Len: " + a.length);
        }

        public void array(long[] a) {
            if (!print) return;
            out.print("long Array: [");
            for (int i = 0; i < a.length; i++) {
                out.print(a[i] + ", ");
            }
            out.print("'] Len: " + a.length);
        }

        public void matrix(int[][] a, int cutoff) {
            if (cutoff == 0)
                cutoff = Integer.MAX_VALUE;
            for (int i = 0; i < a.length; i++) {
                if (i < cutoff) {
                    printMatrixRow(a[i], cutoff);
                } else {
                    out.println("     ...");
                    printMatrixRow(a[a.length - 1], cutoff);
                    break;
                }
            }
        }

        private void printMatrixRow(int[] a, int cutoff) {
            for (int j = 0; j < a.length; j++) {
                if (j < cutoff) {
                    out.printf("%6d  ", a[j]);
                } else {
                    out.printf(" ... %6d", a[a.length - 1]);
                    break;
                }
            }
            out.println();
        }
    }

    public static void main(String[] args) {

        long l1 = in.nextLong();
        long r1 = in.nextLong();
        long l2 = in.nextLong();
        long r2 = in.nextLong();
        long k = in.nextLong();

        long t = 0;

        if (l2 <= l1 && r2 >= r1) {
            t = r1 - l1 + 1;
            if( k >= l1 && k <= r1)
                t --;
        } else if( l2 >= l1 && r2 <= r1 ) {
            t = r2 - l2 + 1;
            if( k >= l2 && k <= r2)
                t --;                
        } else if (l2 >= l1 && l2 <= r1) {
            t = r1 - l2 + 1;
            if( k >= l2 && k <= r1)
                t --;
        } else if (r2 <= r1 && r2 >= l1) {
            t = r2 - l1 + 1;
            if( k >= l1 && k <= r2)
                t --;
        }
        out.println(t);
        in.close();
    }
}