#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <unordered_set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int MAX_N = 1000000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

int dp[MAX_N + 1];

int main()
{
	//ifstream ifs("input.in");
	//ofstream ofs("output.out");
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int n;
	cin >> n;
	for (int i = 0; i <= n; i++)
		dp[i] = inf;
	dp[0] = 0;
	for (int i = 0; i <= n; i++)
		for (int j = 1; j <= 5; j++)
			if (i + j <= n)
				dp[i + j] = min(dp[i + j], dp[i] + 1);
	cout << dp[n];
	return 0;
}