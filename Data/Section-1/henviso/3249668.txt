#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <cctype>
#include <vector>
#include <queue>
#include <tr1/unordered_map>
#include <cmath>
#include <map>
#include <bitset>
 
using namespace std;
 
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef long double real;
 
///////////////////////////////UTIL/////////////////////////////////
#define ALL(x) (x).begin(),x.end()
#define CLEAR(v) memset(v, 0, sizeof(v))
#define COPY(a, b) memcpy(a, b, sizeof(a))
#define REP(i,n) for(int i = 0; i<n; i++)
#define REPP(i,a,n) for(int i = a; i<n; i++)
#define REPD(i,n) for(int i = n-1; i>-1; i--)
#define REPDP(i,a,n) for(int i = a; i>-1; i--)
#define pb push_back
#define pf push_front
#define sz size()
#define mp make_pair
/////////////////////////////NUMERICAL//////////////////////////////
#define MOD 1000000007
#define INCMOD(a,b) a = (a+b)%MOD
#define DECMOD(a,b) a = (a+MOD-b)%mod
#define ROUNDINT(a) (int)((double)a + 0.5)
#define INF 2000000000
#define EPS 10e-7
/////////////////////////////BITWISE////////////////////////////////
#define CHECK(S, j) (S & (1 << j))
#define CHECKFIRST(S) (S & (-S)) //PRECISA DE UMA TABELA PARA TRANSFORMAR EM INDICE
#define SET(S, j) S |= (1 << j)
#define SETALL(S, j) S = (1 << j)-1 //J PRIMEIROS
#define UNSET(S, j) S &= ~(1 << j)
#define TOOGLE(S, j) S ^= (1 << j)
//scanf(" %d ", &t);

typedef long long int ll;

int a[100100];
int c[100100];

bool q(int a, int b){
	int ini = (a == 0)? 0 : c[a-1];
	return ((c[b]-ini) <= 2);
}

int main(){
	int n, m;
	int b, e;
	while(scanf(" %d %d ", &n, &m) != EOF){
		int aux = 0;
		c[0] = 0;
		scanf(" %d ", &a[0]);
		REPP(i, 1, n){
			c[i] = c[i-1];
			scanf(" %d ", &a[i]);
			if(a[i-1] < a[i]){
				if(aux != 1) c[i]++; 
				aux = 1;
			}
			else if(a[i-1] > a[i]){
				if(aux != -1) c[i]++;
				aux = -1;
			}	
		}
		//cout << " CHANGE " << endl;
		//REP(i, n) cout << c[i] << " ";
		//cout << endl;
			
		REP(i, m){
			scanf(" %d  %d ", &b, &e);
			if(q(b-1, e-1)) printf("Yes\n");
			else printf("No\n");
		}
	} 
}

























