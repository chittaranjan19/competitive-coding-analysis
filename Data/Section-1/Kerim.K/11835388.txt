#include <set>
#include <map>
#include <vector>
#include <math.h>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>

#define MOD 1000000007

#define ff first
#define ss second
#define mp make_pair
#define mt make_tuple
#define ln(c) (int)c.length()
#define tr(i,c) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)

template <class T> void mmin(T &a, T b) {if(a>b) a=b;}
template <class T> void mmax(T &a, T b) {if(a<b) a=b;}

const int MAXN = 200009;

using namespace std;
typedef long long ll;
typedef pair<ll,int> pii;
typedef tuple<ll,ll,int> tpl;

int n,m;
multiset<pii> a;
tpl tp[MAXN];
int ans[MAXN];


int main()
{ios_base::sync_with_stdio(0);
    
    scanf("%d %d" ,&n ,&m);
    
    for (int i=0; i<n; i++)
    {
        ll a1,b1;
        scanf("%lld %lld" ,&a1 ,&b1);
        tp[i] = mt(a1,b1,i);
    }
    
    for (int i=0; i<m; i++)
    {
        ll ai;
        scanf("%lld" ,&ai);
        a.insert(mp(ai,i+1));
    }
    
    for (int i=1; i<n; i++)
    {
        ll l1,r1,l2,r2;
        
        tie(l1,r1,ignore) = tp[i-1];
        
        tie(l2,r2,ignore) = tp[i];
        
        tp[i-1] = mt(r2-l1,l2-r1 i-1);        
    }
    
    n--;
    
    sort(tp, tp+n);
    
    for (int i=0; i<n; i++)
    {
        ll x,y,z;
        tie(x,y,z) = tp[i];
        
        auto j = a.lower_bound(mp(y,-1));
        
        if (j==a.end() || j->ff > x)
        {
            printf("No\n");
            return 0;
        }
        
        ans[z] = j->ss;
        
        a.erase(j);
    }
    
    printf("Yes\n");
    
    for (int i=0; i<n; i++)
        printf("%d " ,ans[i]);
}