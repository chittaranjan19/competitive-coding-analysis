import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashSet;
import java.util.Set;

public class ProblemB {
    BufferedReader rd;

    private ProblemB() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        int[] a = intarr();
        int n = a[0];
        int m = a[1];
        int[] sc = new int[n+1];
        for(int i=1;i<=n;i++) {
            sc[i] = i;
        }
        for(int i=0;i<m;i++) {
            int[] p = intarr();
            int x = Math.min(p[0],p[1]);
            int y = Math.max(p[0], p[1]);
            int u = Math.min(x,y);
            u = Math.min(u,sc[x]);
            u = Math.min(u,sc[y]);
            Set<Integer> bef = new HashSet<Integer>();
            if(u == x) {
                bef.add(sc[y]);
            } else {
                bef.add(sc[x]);
                bef.add(sc[y]);
            }
            for(int j=1;j<sc.length;j++) {
                if(bef.contains(sc[j])) {
                    sc[j] = u;
                }
            }
        }
        Set<Integer> d = new HashSet<Integer>();
        for(int i=1;i<sc.length;i++) {
            d.add(sc[i]);
        }
        out((1L<<n)>>(d.size()));
    }

    private int pint() throws IOException {
        return pint(rd.readLine());
    }

    private int pint(String s) {
        return Integer.parseInt(s);
    }



    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = s.split(" ");
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }



    private long plong() throws IOException {
        return plong(rd.readLine());
    }

    private long plong(String s) {
        return Long.parseLong(s);
    }



    private long[] longarr() throws IOException {
        return longarr(rd.readLine());
    }

    private long[] longarr(String s) {
        String[] q = s.split(" ");
        int n = q.length;
        long[] a = new long[n];
        for(int i=0;i<n;i++) {
            a[i] = Long.parseLong(q[i]);
        }
        return a;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemB();
    }
}
