#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 2e5, l = 20;

string surname[N];
vector<pair<int, int> > reg[N];

int main()
{
	int n, m;
	cin >> n >> m;
	for (int i = 0; i < n; i++){
		cin >> surname[i];
		int r, v;
		cin >> r >> v;
		r--;
		reg[r].push_back(mp(v, i));
	}
	for (int i = 0; i < m; i++){
		sort(reg[i].begin(), reg[i].end(), [](pair<int, int> a, pair<int, int> b){return a.fs > b.fs; });
		vector < pair<int, pair<int, int> > > ss;
		for (int j = 0; j < min(3, (int)reg[i].size()); j++)
		{
			for (int k = j + 1; k < min(3, (int)reg[i].size()); k++)
				ss.push_back(mp(reg[i][j].fs + reg[i][k].fs, mp(reg[i][j].sc, reg[i][k].sc)));
		}
		sort(ss.begin(), ss.end(), [](pair<int, pair<int, int> > a, pair<int, pair<int, int> > b){return a.fs > b.fs; });
		if (ss.size() == 1 || ss[0].fs > ss[1].fs){
			cout << surname[ss[0].sc.fs] << ' ' << surname[ss[0].sc.sc] << endl;
		}
		else cout << "?" << endl;
	}
	return 0;
}