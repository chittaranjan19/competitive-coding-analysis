#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <stack>
#include <algorithm>
#include <cctype>
#include <vector>
#include <queue>
#include <tr1/unordered_map>
#include <cmath>
#include <map>
#include <bitset>
#include <set>
#include <iomanip>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector< ii > vii;
///////////////////////////////UTIL/////////////////////////////////
#define ALL(x) (x).begin(),x.end()
#define CLEAR0(v) memset(v, 0, sizeof(v))
#define CLEAR(v, x) memset(v, x, sizeof(v))
#define COPY(a, b) memcpy(a, b, sizeof(a))
#define CMP(a, b) memcmp(a, b, sizeof(a))
#define REP(i,n) for(int i = 0; i<n; i++)
#define REPP(i,a,n) for(int i = a; i<n; i++)
#define REPD(i,n) for(int i = n-1; i>-1; i--)
#define REPDP(i,a,n) for(int i = n-1; i>=a; i--)
#define pb push_back
#define pf push_front
#define sz size()
#define mp make_pair
/////////////////////////////NUMERICAL//////////////////////////////
#define INF 0x3f3f3f3f
#define EPS 1e-9
/////////////////////////////BITWISE////////////////////////////////
#define CHECK(S, j) (S & (1 << j))
#define CHECKFIRST(S) (S & (-S)) 
#define SET(S, j) S |= (1 << j)
#define SETALL(S, j) S = (1 << j)-1  
#define UNSET(S, j) S &= ~(1 << j)
#define TOOGLE(S, j) S ^= (1 << j)
///////////////////////////////64 BITS//////////////////////////////
#define LCHECK(S, j) (S & (1ULL << j))
#define LSET(S, j) S |= (1ULL << j)
#define LSETALL(S, j) S = (1ULL << j)-1ULL 
#define LUNSET(S, j) S &= ~(1ULL << j)
#define LTOOGLE(S, j) S ^= (1ULL << j)

#define MOD 1000000007LL
//__builtin_popcount(m)
//scanf(" %d ", &t);

int n;
ll d;
int a[30100];
int b[30100][30100];

int main(){
	cin >> n >> d;
	int x;
	CLEAR0(a);
	REP(i, n){
		cin >> x;
		a[x]++;
	}
	
	CLEAR0(b);
	int ans = b[d][0] = a[d]+1;
	
	//ll lo = 1LL, hi = 30000LL, mid;
	//while((hi*(hi-1))/2 > 30000LL) hi--;
	//cout << "HI " << hi << endl; 
	
	REPP(i, d, 30001){
		REPP(j, max(i-245, 0), i){
			int x = i-j;
			if(b[i][j] == 0) continue;
			if(x-1 > 0){
				if(i+x-1 >= 30001) continue;
				b[i+x-1][i] = max(b[i+x-1][i], b[i][j]+a[i+x-1]);
				ans = max(ans, b[i+x-1][i]);
			}
			if(i+x >= 30001) continue;
			b[i+x][i] = max(b[i+x][i], b[i][j]+a[i+x]);
			ans = max(ans, b[i+x][i]);
			if(i+x+1 >= 30001) continue;
			b[i+x+1][i] = max(b[i+x+1][i], b[i][j]+a[i+x+1]);
			ans = max(ans, b[i+x+1][i]);
		}
	}
	cout << ans-1 << endl;
	
	
}
