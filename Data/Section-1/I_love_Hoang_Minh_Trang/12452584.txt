using namespace std;
#include<bits/stdc++.h>
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)

int nt[5000000 +10], C[5000000 +10], Era[5000000 +10], n, p, q;
int Rub[5000000 + 10];
int a[100];
bool check(int x)
{
    int tmp = x;
    int top = 0;
    while (tmp > 0) {
        a[++top] = tmp % 10;
        tmp = tmp / 10;
      //  cout<<tmp<<" "<<x<<endl;
    }
    //if (x == 100000) cout<<top<<"?????????"<<endl;
    bool ok = 1;
    for(int i = 1; i <= top / 2; i++) if (a[i] != a[top - i + 1]) ok = 0;
    //if (x == 100000) cout<<top<<"?????????"<<endl;
    return ok;
}

int main()
{
    cin>>p>>q;
    int m = 0;
    FORE(i, 2, 5000) if (!C[i]) {
        nt[m++] = i;
        for(int j = i * i; j <= 5000000; C[j] = 1, j += i);
    }
    Era[1] = 0;
   // cout<<(c[2] = 0)<<endl;
    FORE(i, 2, 5000000) Era[i] = Era[i - 1] + (C[i] == 0);

    Rub[0] = 0;
    FORE(i, 1, 5000000) Rub[i] = Rub[i - 1] + check(i);
     //cout<<"?"<<endl;
     //cout<<Rub[100000]<<" "<<Era[100000]<<endl;
    FORD(i, 5000000, 1) if (Era[i] * q <= p * Rub[i]) {
        cout<<i<<endl;
        break;
    }
    return 0;
}
