#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <string.h>
#include <queue>
using namespace std;
typedef long long ll;
const int M = 4010;
struct child
{
	ll v, d, p;
	bool flag;
}node[M];
int n;

int main()
{
	int i, ans = 0, j, k;
	cin >> n;
	for (i = 0; i < n; i++)
	{
		scanf("%I64d%I64d%I64d", &node[i].v, &node[i].d, &node[i].p);
		node[i].flag = true;
	}
	for(i = 0; i < n; i++)
	{
		if (node[i].flag)
		{
			for (j = i+1; j < n; j++)
			{
				if (node[j].flag)
				{
					node[j].p -= node[i].v + i - j + 1;
				}
			}
			for (j = i + 1; j < n; j++)
			{
				if (node[j].flag && node[j].p < 0)
				{
					node[j].flag = false;
					for (k = j + 1; k < n; k++)
					{
						if (node[k].flag)
						{
							node[k].p -= node[j].d;
						}
					}
				}
			}
		}
		
	}
	for (i = 0; i < n; i++)
	{
		if (node[i].flag)
		{
			ans++;
		}
	}
	cout << ans << endl;
	for (i = 0; i < n; i++)
	{
		if (node[i].flag)
		{
			printf("%d ", i+1);
		}
	}
	return 0;
} 
