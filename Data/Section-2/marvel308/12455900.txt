#include<stdio.h>
#include<queue>
#include<vector>
#include<algorithm>
using namespace std;
typedef long long int ll;
ll prime[10000005]={0},pal[10000005]={0};
ll gcd(ll a,ll b)
{
    if(b==0)
        return a;
    return gcd(b,a%b);
}
int main()
{
    ll i,j;
    //printf("si=%d\n",G.size());
    for(i=2;i<=10000000;i++)
    {
        //printf("i=%lld\n",i);
        if(prime[i]==0)
        {
            //count++;
            for(j=i;i*j<=10000000;j++)
            {
                prime[i*j]=1;
            }
        }
    }
    ll ja=0;
    for(i=1;i<=10000000;i++)
    {
        ll rev=0,tmp=i;
        while(tmp>0)
        {
            rev=rev*10+tmp%10;
            tmp/=10;
        }
        if(i==rev)
        {
            pal[i]=1;
            ja++;
        }
    }
    //printf("ja=%lld\n",ja);
    ll p,q1,count1=0,count2=0,ans=0;
    scanf("%I64d%I64d",&p,&q1);
    ll gc=gcd(p,q1);
    p/=gc;
    q1/=gc;
    for(i=1;i<=10000000;i++)
    {
        if(prime[i]==0 && i>=2)
        {
            count1++;
        }
        if(pal[i])
        {
            count2++;
        }
        if(q1*count1<=p*count2)
        {
            ans=i;
            //break;
        }
    }
    if(ans && ans!=10000001)
        printf("%I64d\n",ans);
    else
        printf("Palindromic tree is better than splay tree\n");
    return 0;
}
