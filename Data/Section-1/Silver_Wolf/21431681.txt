#include<bits/stdc++.h>
#define all(x) x.begin(),x.end()
using namespace std;

const int MAXN=1e6+17;

/*
    start:  4:25
    end:    5:00
*/

vector<int>seg[MAXN*4],ver[MAXN];
int get(int ql,int qr,int id=0,int xl=0,int xr=MAXN){
    if(xr<=ql+1)return seg[id].end()-lower_bound(all(seg[id]),qr);
    if(xl>=ql+1)return 0;
    int mid=(xr+xl)/2;
    return
        get(ql,qr,2*id+1,xl,mid)+
        get(ql,qr,2*id+2,mid,xr);
}
void build(int id=0,int xl=0,int xr=MAXN){
    if(xr-xl==1){seg[id]=ver[xl];  return sort(all(seg[id]));}
    int mid=(xl+xr)/2;
    build(2*id+1,xl,mid);
    build(2*id+2,mid,xr);
    merge(all(seg[2*id+1]),all(seg[2*id+2]),back_inserter(seg[id]));
}
int main(){
    int n,m;  cin>>n>>m;
    while(n--){ int x,y;    cin>>x>>y;  ver[x].push_back(y);}
    build();
    while(m--){
        int cnt;    cin>>cnt;
        int ans=0,last=0;
        while(cnt--){
            int x;  cin>>x;
            ans+=get(x,x);
            if(last)ans-=get(last,x);last=x;
        }
        cout<<ans<<'\n';
    }
}
