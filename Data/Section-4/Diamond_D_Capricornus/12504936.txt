Const Fi='';//'C.INP';
      Fo='';//'C.OUT';
      Bas=3*1000001;
Var   F:Array[1..Bas]Of Boolean;
Procedure Init;
Var i,j,tmp,k,d:Longint;
  Begin
    Fillchar(F,Sizeof(F),True);
    F[1]:=False;
    For i:=2 to Trunc(Sqrt(Bas)) do
      If F[i] then
        Begin
          j:=i*i;
          While j<Bas do
            Begin
              F[j]:=False;
              Inc(j,i);
            End;
        End;
  End;
Function  Dm(val:Longint):Boolean;
Var St:String;
    i:Longint;
  Begin
    Str(val,St);
    For i:=1 to Length(St) do
      If St[i]<>St[Length(St)-i+1] then Exit(False);
    Exit(True);
  End;
Procedure Main;
Var i:Longint;
    p,q,max:Longint;
    C1,C2:Int64;
  Begin
    Readln(p,q);
    max:=0;
    C1:=0;C2:=0;
    For i:=1 to Bas do
      Begin
        If Dm(i) then
          Inc(C2);
        If F[i] then Inc(C1);
        If C1*q<=C2*p then
          max:=i;
      End;
    //Writeln(C1,' ',C2);
    If max=0 then
      Writeln('Palindromic tree is better than splay tree')
    Else
      Writeln(max);
  End;
Begin
  Assign(Input,Fi);Reset(Input);
  Assign(Output,Fo);Rewrite(Output);
  Init;
  Main;
  Close(INput);CLose(Output);
End.
