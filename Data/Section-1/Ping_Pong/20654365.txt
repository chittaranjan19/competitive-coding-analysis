#include <bits/stdc++.h>

#define ll long long
#define ld long double

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int P = 239;
const int MAX_N = 100000;
const int ABC = 26;
const ld pi = 3.1415926535897932384626;
const ld eps = 1e-6;

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    string s, s1;
    cin >> s >> s1;
    int l = s.size(), l1 = s1.size();
    string t = s + '#' + s1;
    int n = t.size();
    short lcp[n][n];
    for (int i = n - 1; i >= 0; i--)
        for (int j = n - 1; j >= 0; j--)
        {
            lcp[i][j] = 0;
            if (t[i] == t[j])
            {
                lcp[i][j]++;
                if (i < n - 1 && j < n - 1)
                    lcp[i][j] += lcp[i + 1][j + 1];
            }
        }
    int ans = inf;
    int a[l + 1], b[l + 1];
    for (int i = 0; i < l; i++)
    {
        for (int j = 0; j <= l; j++)
        {
            a[j] = 0;
            b[j] = 0;
        }
        for (int j = 0; j < l; j++)
            if (i != j)
                a[lcp[i][j]]++;
            else
                a[l - i]++;
        for (int j = 0; j < l1; j++)
            b[lcp[i][l + 1 + j]]++;
        for (int j = l - 1; j >= 0; j--)
        {
            a[j] += a[j + 1];
            b[j] += b[j + 1];
        }
        for (int j = 1; j <= l; j++)
            if (a[j] == 1 && b[j] == 1)
                ans = min(ans, j);
    }
    cout << (ans != inf ? ans : -1);
    return 0;
}
