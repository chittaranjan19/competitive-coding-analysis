#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair
#define all(x) x.begin(), x.end()

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 5e5 + 10, lg = 31, MAXN = 1111;
ll mod = 1e9 + 7;

ll gcd(ll a, ll b) {
	return b ? gcd(b, a % b) : a;
}

ll _gcd(ll a, ll b, ll & x, ll & y) {
	if (a == 0) {
		x = 0; y = 1;
		return b;
	}
	ll _x1, _y1;
	ll d = _gcd(b%a, a, _x1, _y1);
	x = _y1 - (b / a) * _x1;
	y = _x1;
	return d;
}

ll binpow(ll a, ll n) {
	ll res = 1;
	while (n) {
		if (n & 1)
			res *= a;
		a *= a;
		n >>= 1;
		a %= mod;
		res %= mod;
	}
	return res;
}


void term_res(string res){
	cout << res;
	exit(0);
}


int n, c;
vector<int> w[N];

int main()
{
	cin >> n >> c;
	for (int i = 0; i < n; i++){
		int k;
		cin >> k;
		while (k--){
			int t;
			cin >> t;
			w[i].push_back(t);
		}
	}
	int cur = 0, mx = 1e9;
	for (int i = 0; i < n - 1; i++){
		bool go_on = 0;
		for (int j = 0; j < min(w[i].size(), w[i + 1].size()); j++){
			if (w[i][j] == w[i + 1][j]) continue;
			int a = (w[i][j] + cur), b = (w[i + 1][j] + cur);
			while (a > c)
				a -= c;
			while (b > c)
				b -= c;
			mx = min(mx, c - w[i + 1][j]);
			if (a < b){
				go_on = 1;
				break;
			}
			else{
				int delta = c - a + 1;
				go_on = 1;
				cur += delta;
				if (cur > c){
					cout << -1;
					exit(0);
				}
				break;
			}
		}
		if (go_on) continue;
		else{
			if (w[i].size() > w[i + 1].size()){
				cout << -1;
				exit(0);
			}
		}
	}
	if (mx >= cur)
		cout << cur;
	else cout << -1;
	return 0;
}