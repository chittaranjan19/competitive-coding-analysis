#include "bits/stdc++.h"
#define MAXN 100009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
//freopen("file.in","r",stdin);
//freopen("file.out","w",stdout);
const int N=1000;
struct edge{
	int val,u,v,id;
	bool operator < (edge k) const {
		return (val>k.val); 
	}
	
}e[N*(N-1)/2+9];
vector<int>adj[N+9];
int ata[N+9],rank[N+9];
int tap(int x){
	if(ata[x]==x)
		return x;
	return ata[x]=tap(ata[x]);	
}
int merge(int x,int y){
	int xx=rank[x];
	int yy=rank[y];
	x=tap(x);y=tap(y);
	if(x==y){
		if(xx==yy)
			return 0;
		return 1;	
	}
	if(adj[x].size()<adj[y].size())
		swap(x,y);
	tr(it,adj[y]){
		if(xx==yy)
			rank[*it]^=1;
		ata[*it]=x;		
		adj[x].pb(*it);	
	}
	return 1;
}
void sifirla(int x){	
	for(int i=1;i<=x;i++){
		adj[i].clear();adj[i].pb(i);
		ata[i]=i;rank[i]=0;
	}
}
int main(){
	int n,m,q;
	scanf("%d%d%d",&n,&m,&q);
	for(int i=1;i<=m;i++){
		scanf("%d%d%d",&e[i].u,&e[i].v,&e[i].val);
		e[i].id=i;
	}
	sort(e+1,e+m+1);
	while(q--){
		int l,r,ans=-1;
		scanf("%d%d",&l,&r);
		sifirla(n);
		for(int i=1;i<=m;i++)
			if(e[i].id>=l and e[i].id<=r){
				if(!merge(e[i].u,e[i].v)){
					ans=e[i].val;
					break;
				}
			}
		printf("%d\n",ans);	
	}
	return 0;
}
/*
5 6 5
5 4 86
5 1 0
1 3 38
2 1 33
2 4 28
2 3 40
3 5
2 6
1 3
2 3
1 6
*/
