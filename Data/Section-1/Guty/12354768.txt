#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int main()
{
	int n;
	cin >> n;
	vector<tint> v (n);
	forn(i,n)
		cin >> v[i];
	vector<tint> diff (n);
	vector<tint> maxi (n);
	diff[0] = v[1]-v[0];
	diff[n-1] = v[n-1] - v[n-2];
	forsn(i,1,n-1)
		diff[i] = min(v[i] - v[i-1],v[i+1]-v[i]);
	forn(i,n)
		maxi[i] = max(v[i]-v[0],v[n-1]-v[i]);
	forn(i,n)
		cout << diff[i] << " " << maxi[i] << endl; 
	return 0;
}


