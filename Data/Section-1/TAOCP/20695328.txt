#include <iostream>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <cstring>
#include <string>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <climits>
using namespace std;
#define pb push_back
#define ALL(x) x.begin(),x.end()
#define PII pair<int,int>
#define MP(x,y) make_pair((x),(y))
#define ll long long
#define ull unsigned ll
#define Max(a,b) a=max(a,b)
#define Min(a,b) a=min(a,b)
const long long MAXN=101111;
ll prm[MAXN+10];
bool visP[MAXN+10];
ll pn;
void getPrm(){
    for(ll i=2;i<=MAXN;i++){
        if(!visP[i]){
            prm[pn++]=i;
            for(ll j=i;j<=MAXN;j+=i) visP[j]=true;
        }
    }
}
ll factor[1111][2];
ll facCnt=0;
void getPrimeFactor(ll tmp){
	facCnt=0;
	for(ll i=0;i<pn && prm[i]*prm[i]<=tmp ;i++){
		factor[facCnt][1]=0;
		if(tmp%prm[i]==0){
			factor[facCnt][0]=prm[i];
			while(tmp%prm[i]==0){
					factor[facCnt][1]++;
					tmp/=prm[i];
			}
			facCnt++;
		}
	}
	if(tmp>1){
		factor[facCnt][0]=tmp;
		factor[facCnt++][1]=1;
	}
}

int main(){
    //freopen("D:/out.txt","w",stdout);
    getPrm();
    ll n;
    scanf("%I64d",&n);
    ll cur = 2;
    ll k = 1;
    while(k<n+1){
        getPrimeFactor(k);
        ll t=1;
        for(ll i=0;i<facCnt;i++){
            if(factor[i][1]&1){
                t = t*factor[i][0];
            }
        }
        ll to = t * (k+1) * (k+1);
        ll times = to - cur/k;
        printf("%I64d\n",times);
        ll tmp = sqrt(t*k)+0.5;
        cur = tmp *(k+1);
        k = k + 1;
    }
    return 0;
}
