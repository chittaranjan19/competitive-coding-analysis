/* understand it at your own risk */
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <deque>
#include <stack>
#include <cmath>
#include <cstdio>
#include <climits>
#include <map>
#include <queue> 
#include <cstring>
using namespace std;
 
#define debug(x) cout << #x << " = " << x << endl
#define si size()
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef vector<bool> vb;
typedef vector<vector<bool> > vvb;
typedef vector<string> vs;
typedef long long ii;
typedef long long i64;
typedef long long intint;
typedef pair<int,int> pii;
#define mod(A,B) ((((A) % (B)) + (B)) % (B))
#define b2e(A) (A).begin(), (A).end()
#define e2b(A) (A).rbegin(), (A).rend()
#define rev(A) std::reverse(b2e(A))
#define s(A) std::sort(b2e(A))
#define ss(A) std::stable_sort(b2e(A))
#define un(A) std::unique(b2e(A))
#define er(A) (A).erase(un(A), (A).end())
#define Fill(A,B) std::fill(b2e(A), B)
#define minelt(A) *min_element(b2e(A))
#define maxelt(A) *max_element(b2e(A))
#define For(i,a,b) for(int i=a;i<b;i++)
#define Forr(i,a,b) for(int i=b;i>=a;i--)
#define set(A,i) memset(A,i,sizeof A)
#define pb(A,i) A.push_back(i)
#define INF (1<<30)
void swap(int &a,int &b) { int t=a;a=b;b=t; }
//int dx[] = {-1,0,1,0}, dy[] = {0,1,0,-1};
//int dx[] = {1,1,1,0,0,-1,-1,-1}, dy[] = {1,0,-1,1,-1,1,0,-1};
ii gcd(ii a, ii b) {if (a == 0 || b == 0) return max(a,b); if (b % a == 0) return a; return gcd(b%a, a);}
 
//------------------------------------------------------//

//----------------------main code----------------------//
#define x first
#define y second
typedef pair<int,string> pis;
bool mycmp(pis p1,pis p2)
{
	if(p1.x==p2.x)
	return (p1.y).compare(p2.y)<0;
	return p1.x>p2.x;
}
int main()
{
	int m;
	string mname;
	cin>>mname;
	cin>>m;
	string fname,action,sname,st;
	map<string,int> mp;
	pis val[2*m];
	int cnt=0;
	while(m--)
	{
		cin>>fname;
		if(mp.count(fname)==0)
		{
			mp[fname]=cnt;
			val[cnt].y=fname;
			val[cnt++].x=0;
		}
		int fid=mp[fname];
		cin>>action;
		if(action=="posted")
		{
			cin>>st;
			cin>>sname;
			cin>>st;
			sname=sname.substr(0,sname.length()-2);
			if(mp.count(sname)==0)
			{
				mp[sname]=cnt;
				val[cnt].y=sname;
				val[cnt++].x=0;
			}
			if(sname==mname)
			val[fid].x+=15;
		}
		else if(action=="commented")
		{
			cin>>st;
			cin>>sname;
			cin>>st;
			sname=sname.substr(0,sname.length()-2);
			if(mp.count(sname)==0)
			{
				mp[sname]=cnt;
				val[cnt].y=sname;
				val[cnt++].x=0;
			}
			if(sname==mname)
			val[fid].x+=10;
		}
		else if(action=="likes")
		{
			cin>>sname;
			cin>>st;
			sname=sname.substr(0,sname.length()-2);
			if(mp.count(sname)==0)
			{
				mp[sname]=cnt;
				val[cnt].y=sname;
				val[cnt++].x=0;
			}
			if(sname==mname)
			val[fid].x+=5;
		}
	}
	sort(val,val+cnt,mycmp);
	for(int i=0;i<cnt;i++)
	if(val[i].y!=mname)
	cout<<val[i].y<<endl;
	return 0;
}
