//#include <bits/stdc++.h>
#define _CRT_SECURE_NO_WARNINGS

#include <cstdio>
#include <map>
#include <algorithm>

using namespace std;

const int N = 1000;

int n;
int t[N], s[N], f[N];
int ans[N];

bool check(int x, int y) {
    int s1 = s[x], f1 = f[x], t1 = t[x];
    int s2 = s[y], f2 = f[y], t2 = t[y];
    //printf("%d %d %d\n", s1, f1, t1);
    //printf("%d %d %d\n", s2, f2, t2);
    int t = max(t1, t2);
    int ts = min(abs(f1 - s1), abs(f2 - s2));
    //printf("%d %d\n", t, ts);
    int t1s = t - t1, t2s = t - t2;
    //printf("%d %d\n", t1s, t2s);
    int k1 = (s1 <= f1) ? 1 : -1, k2 = (s2 <= f2) ? 1 : -1;
    //printf("%d %d\n", k1, k2);
    int z = (s2 + k2 * t2s) - (s1 + k1 * t1s);
    //printf("%d %d\n", s2 + k2 * t2s, s1 + k1 * t1s);
    //printf("%d\n---\n", z);
    if (k1 == k2)
        return (z == 0);
    else {
        int up = z, dw = k1 - k2;
        if (dw < 0)
            up = -up, dw = -dw;
        return (up >= 0 && up <= dw * ts);
        //double e = double(z) / double(k1 - k2);
        //printf("%lf", e);
        //return (e >= 0 && e <= ts);
    }
}

int main()
{
    scanf("%d", &n);
    
    for (int i = 0; i < n; i++)
        scanf("%d%d%d", &t[i], &s[i], &f[i]);

    for (int i = 0; i < n; i++)
        for (int j = i + 1; j < n; j++)
            if (check(i, j))
                ans[i]++, ans[j]++;

    for (int i = 0; i < n; i++)
        printf("%d ", ans[i]);

    //while (true) {}

    return 0;
}