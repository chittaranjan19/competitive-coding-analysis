#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;
const int logn = 20;

int n, q, x, arr[maxn], dp[logn][maxn], lg[maxn];
map<int, ll> ans;
map<int, ll> :: iterator it;

int gcd(int a, int b) {
	while (a > 0 && b > 0) {
		if (a > b) {
			a %= b;
		} else {
			b %= a;
		}
	}
	return a + b;
}

void fill()
{
	int i, j;
	lg[1] = 0;
	for(i=2; i<=n; i++)
		lg[i] = lg[i>>1] + 1;
	for(i=1; i<logn; i++){
		for(j=1; j<=n; j++)
			dp[i][j] = gcd(dp[i-1][j], dp[i-1][min(n, (j+(1<<(i-1))))]);
	}
}

int g(int x, int y)
{
	int l = lg[y-x];
	int ret = gcd(dp[l][x], dp[l][y-(1<<l)+1]);
	return ret;
}

void solve()
{
	int i, val, lo, mid, hi, cur, cnt;
	for(i=1; i<=n; i++){
		cur = i;
		cnt = 0;
		while(cur <= n){			
			lo = cur;
			hi = n;
			val = g(i, cur);
			while(lo < hi){
				mid = (lo + hi) >> 1;
				if(mid == lo)
					mid++;
				if(g(i, mid) == val)
					lo = mid;
				else
					hi = mid - 1;
			}
			ans[val] += (lo - cur + 1);
			cur = lo + 1;
			cnt++;
		}
		assert(cnt<=100);
	}
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int i, j;
	scanf("%d", &n);
	for(i=1; i<=n; i++){
		scanf("%d", &arr[i]);
		dp[0][i] = arr[i];
	}
	fill();
	solve();
	scanf("%d", &q);
	while(q--){
		scanf("%d", &x);
		it = ans.find(x);
		if(it==ans.end())
			printf("0\n");
		else
			printf("%lld\n", it->s);
	}
	return 0;
}
