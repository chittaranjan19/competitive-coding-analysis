#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

int n, m;
vector<pii> bus;
int nxt[maxn], lst[maxn];
ll dp[maxn], ft[maxn];

void update(int idx, ll val)
{
	while(idx<=m){
		ft[idx] = (ft[idx] + val)%mod;
		idx+=(idx&(-idx));
	}
}

ll query(int idx)
{
	ll ret = 0;
	while(idx>0){
		ret = (ret+ft[idx])%mod;
		idx-=(idx&(-idx));
	}
	return ret;
}

ll solve(int cur)
{
	//
	cout << cur << " " << bus[cur].f << " " << bus[cur].s << "\n";
	if(bus[cur].s==n)
		return 1;
	if(dp[cur]!=-1)
		return dp[cur];
	ll ret = 0;
	int i;
	for(i=nxt[cur]; i<m; i++){
		if(!(bus[i].f<=bus[cur].s && bus[i].s>=bus[cur].s))
			break;
		ret = (ret+solve(i))%mod;
	}
	return dp[cur] = ret;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int i, j, lo, mid, hi;
	scanf("%d%d", &n, &m);
	bus.resize(m);
	for(i=0; i<m; i++)
		scanf("%d%d", &bus[i].f, &bus[i].s);
	sort(all(bus));
	bus.pb(mp(0, 1));
	for(i=0; i<n; i++){
		lo = i+1, hi = m;
		nxt[i] = m;
		while(lo<hi){
			mid = (lo+hi)>>1;
			if(bus[mid].f<=bus[i].s && bus[mid].s>=bus[i].s)
				nxt[i] = hi = mid;
			else
				lo = mid+1;
		}
		lo = nxt[i], hi = m-1;
		lst[i] = m-1;
		while(lo<hi){
			mid = (lo+hi)>>1;
			if(bus[mid].f>bus[i].s){
				lst[i] = mid-1;
				hi = mid;
			}
			else
				lo = mid+1;
		}
		//cout << nxt[i] << " " << lst[i] << "\n";
	}
	//cout << "\n\n";
	ll ans = 0, temp;
	for(i=m-1; i>=0; i--){
		if(bus[i].s==n)
			temp = 1;
		else
			temp = (query(lst[i]+1)-query(nxt[i])+mod)%mod;
		if(!bus[i].f)
			ans = (ans+temp)%mod;
		update(i+1, temp);
		//cout << i << " " << temp << "\n";
	}
	printf("%lld\n", ans);
	return 0;
}
