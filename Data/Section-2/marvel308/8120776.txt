#include<stdio.h>
#include<stdlib.h>
#include<map>
#include<vector>
using namespace std;
map<char,int> mx,my;
#define INF 1000000007
vector <int > G[100005];
long long int a[200005]={0};
bool visited[100005]={false},mark[100005]={false};
vector<int> ans;
int x=0;
void dfs(int u,vector<int> temp)
{
    temp.push_back(u);
    visited[u]=true;
    //printf("u=%d\n",u);
    int si=G[u].size(),i=0,flag=0;
    //printf("si=%d\n",si);
    for(i=0;i<si;i++)
    {
        int v=G[u][i];
        //printf("v=%d\n",v);
        if(!visited[v])
        {
            flag=1;
            dfs(v,temp);
        }
    }
    if(flag==0)
    {
        int si2=temp.size();
        if(si2>x)
        {
            ans.clear();
            for(i=0;i<si2;i++)
                ans.push_back(temp[i]);
        }
    }
}
int main()
{
    long long int d;
    int i,j,n;
    scanf("%d%I64d",&n,&d);
    mark[1]=1;
    for(i=1;i<=n;i++)
    {
        scanf("%I64d",&a[i]);
        for(j=i;j>=1;j--)
        {
            long long int ga;
            if(a[i]>a[j])
                ga=a[i]-a[j];
            else
                ga=a[j]-a[i];
  
            if(ga>=d&&(j==1||mark[j]))
            {
                //printf("j=%d i=%d\n",j,i);
                G[j].push_back(i);
                mark[i]=1;
                break;
            }
        }
    }
    vector<int> temp;
    dfs(1,temp);
    printf("%d\n",ans.size());
    int k=ans.size();
    for(i=0;i<k;i++)
        printf("%d ",ans[i]);
    return 0;
}
