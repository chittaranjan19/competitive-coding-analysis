#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>
#include<queue>
#include<set>
#include<stack>

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define scantype int
#define min(a,b) a<b?a:b
#define max(a,b) a>b?a:b
#define lli long long int

lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}

using namespace std;

void scan(scantype &x);

vector<int> edge[200003];

int main(void)
{
  int n;
  cin>>n;

  for(int i=1;i<n;i++)
        edge[i].pb(i+1);
  for(int i=n;i>1;i--)
        edge[i].pb(i-1);

  for(int i=1;i<=n;i++)
  {
      int x;
      scan(x);
      edge[i].pb(x);
  }

  bool vis[n+1];
  fill(vis,false);


  queue<pair<int,long long> > line;


  long long ans[n+1];


  line.push({1,0});
  vis[1]=true;

  while(!line.empty())
  {

      int p = line.front().first;
      long long ctime= line.front().second;

      ans[p] = ctime;
      //cout<<"now: " <<p<<endl;
      //vis[p]= true;
      line.pop();

      for(int i=0;i<edge[p].size();i++)
      {
          //cout<<"edge: "<<edge[p][i]<<endl;
          if(!vis[edge[p][i]])
            {
                vis[edge[p][i]]=true;
                line.push({edge[p][i],ctime+1});
            }
      }
  }

  for(int i=1;i<=n;i++)
    printf("%lld ",ans[i]);

  return 0;
}









void scan(scantype &x)
{
    /*register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}*/

    register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
