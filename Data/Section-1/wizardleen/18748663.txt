import java.util.HashSet;
import java.util.Set;

/**
 * Created by leen on 6/26/16.
 */
public class _686C extends CodeForceBase {

    public static void main(String[] args) {
        int n = scan.nextInt();
        int m = scan.nextInt();
        int maxHour = n - 1;
        int maxMinutes = m - 1;

        int numHourDigits = 0;
        if(maxHour == 0)
            numHourDigits = 1;
        else {
            while (maxHour > 0) {
                numHourDigits++;
                maxHour /= 7;
            }
        }

        int numMinuteDigits = 0;
        if(maxMinutes == 0)
            numMinuteDigits = 1;
        else {
            while (maxMinutes > 0) {
                numMinuteDigits++;
                maxMinutes /= 7;
            }
        }

       if(numHourDigits + numMinuteDigits > 7) {
           System.out.println(0);
           return;
       }

        int count = 0;
        for(int i = 0; i < n * m; i++) {
            int hours = i / m;
            int minutes = i % m;
            if(!hasDuplicates(hours, minutes, numHourDigits, numMinuteDigits))
                count++;
        }

        System.out.println(count);

    }

    static boolean hasDuplicates(int hours, int minutes, int numHourDigits, int numMinuteDigits) {
        Set<Integer> set = new HashSet<Integer>(16);
        for(int i = 0; i < numHourDigits; i++) {
            int hourDigit = hours % 7;
            if(set.contains(hourDigit))
                return true;
            set.add(hourDigit);
            hours /= 7;
        }

        for(int j = 0; j < numMinuteDigits; j++) {
            int minuteDigit = minutes % 7;
            if(set.contains(minuteDigit))
                return true;
            set.add(minuteDigit);
            minutes /= 7;
        }

        return false;
    }

}
