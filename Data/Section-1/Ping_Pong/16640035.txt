#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

using namespace std;

const int inf = (int)1e9;
const int MOD = (int)1e9 + 7;
const int p = 239;
const int MAX_N = 1000000;
const long double pi = 3.1415926535897932384626;
const long double eps = 1e-6;

int pos[MAX_N * 2 + 1];

int main()
{
    //ifstream ifs("input.txt");
    //ofstream ofs("output.txt");
    //freopen("candies.in", "r", stdin);
    //freopen("candies.out", "w", stdout);
    //ios_base::sync_with_stdio(0);
    //cin.tie(0);
    int n;
    scanf("%d", &n);
    int a[n];
    for (int i = 0; i < n; i++)
        scanf("%d", &a[i]);
    for (int i = 0; i < n; i++)
        pos[a[i]] = a[i];
    for (int i = 1; i <= MAX_N * 2; i++)
        pos[i] = max(pos[i], pos[i - 1]);
    set<int> s;
    int ans = 0;
    for (int i = 0; i < n; i++)
    {
        if (s.find(a[i]) == s.end())
        {
            s.insert(a[i]);
            for (int j = a[i] * 2; j <= MAX_N * 2; j += a[i])
                ans = max(ans, pos[j - 1] % a[i]);
        }
    }
    printf("%d", ans);
    return 0;
}
