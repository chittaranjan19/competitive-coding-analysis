#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 111;

char a[maxn], c[maxn];
int dp[maxn][maxn], nxt[maxn][30], pos[30], n, m;

int solve(int cn, int cm)
{
	if(cm>m)
		return 0;
	if(cn>n)
		return solve(1, cm);
	if(dp[cn][cm]!=-1)
		return dp[cn][cm];
	int ret;
	if(nxt[cn][c[cm]-'a'])
		ret = nxt[cn][c[cm]-'a'] - cn + 1 + solve(nxt[cn][c[cm]-'a']+1, cm+1);
	else{
		if(cn==1)
			ret = mod;
		else
			ret = n-cn+1 + solve(1, cm);
	}
	return dp[cn][cm] = ret;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int b, d, i, j, cn, cm, tc, ind;
	memset(dp, -1, sizeof(dp));
	scanf("%d%d%s%s", &b, &d, a+1, c+1);
	n = strlen(a+1);
	m = strlen(c+1);
	for(i=n; i>=1; i--){
		pos[a[i]-'a'] = i;
		for(j=0; j<26; j++)
			nxt[i][j] = pos[j];
	}
	for(i=1; i<=n; i++){
		for(j=1; j<=m; j++){
			dp[i][j] = solve(i, j);
			//cout << i << " " << j << " " <<  dp[i][j] << "\n";
		}
	}
	cn = cm = 1;
	tc = 0;
	while(cn < (b*n)){
		ind = cn%n;
		cn+=dp[ind][1];
		tc++;
	}
	int ans = tc/d;
	printf("%d\n", ans);
	return 0;
}
