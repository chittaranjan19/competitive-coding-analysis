#include<iostream>
#include<iomanip>
#include<fstream>
#include<algorithm>
#include<math.h>
#include<cmath>
#include<string>
#include<set>
#include<map>
#include<vector>
#include<list>
#include<stack>
#include<queue>
#include<unordered_map>
#include<assert.h>
#define ef else if
#define L list
#define V vector
#define ll long long
#define ull unsigned long long
#define re return
#define wh while
#define F false
#define T true
#define lp(i,n) for(int i=0;i<n;i++)
// ya rab Accepted :)
using namespace std;
int n,e,from,to,c=0;
//V<V<int>>graph(100);
//V<bool> v(100);
//V<int>vec;
long long pow(ll base,ll power)
{
	ll r=1;
	while(power!=0)
	{
		if(power%2==1)
			r*=base;
	  base*=base,power/=2;
	}
	return r;
}
int main()
{
	ll n,x1,y1,x2,y2,x,y,c1=-1,c2=-1,r1=-1,r2=-1;
	cin>>n>>x1>>y1>>x2>>y2>>x>>y;
	c1=pow(x1-x,2)+pow(y1-y,2);
	c2=pow(x2-x,2)+pow(y2-y,2);
	if(c1<=c2)
		r1=c1;
	else
		r2=c2;
	lp(i,n-1)
	{
		cin>>x>>y;
		c1=pow(x1-x,2)+pow(y1-y,2);
		c2=pow(x2-x,2)+pow(y2-y,2);
		if(r1==-1)
		{
			if(c2>r2)
			{
				if(c2-r2<c1)
					r2=c2;
				else
					r1=c1;
			}
		}
		ef(r2==-1)
		{
			if(c1>r1)
			{
				if(c1-r1<c2)
					r1=c1;
				else
					r2=c2;
			}
		}
		else
		{
			if(c2>r2&&c1>r1)
			{
				if(c2-r2==c1-r1)
				{
					if(r1>=r2)
						r1=c1;
					else
						r2=c2;
				}
				ef(c2-r2<c1-r1)
					r2=c2;
				else
					r1=c1;
			}
		}
	}
	cout<<r1+r2<<endl;
   re 0;
}