/*
	Nikhil Daliya
	IIIT Hyderabad
*/

#include <bits/stdc++.h>
#define ff first
#define ss second
#define sz size()
#define pb push_back
#define eb emplace_back
#define mp make_pair
#define pf push_front 
#define ff first
#define ss second
#define SET(a,b) memset(a,b,sizeof(a))
#define all(c) (c).begin(),(c).end() 
#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end()) 
#define SL(n) scanf("%lld",&n)
#define SL2(n,m) scanf("%lld%lld",&n,&m)
#define SL3(n,m,t) scanf("%lld%lld%lld",&n,&m,&t) 
#define PL(n) printf("%lld\n",n)
#define SI(n) scanf("%d",&n)
#define PI(n) printf("%d",n);
#define _ ios_base::sync_with_stdio(0);cin.tie(0)
using namespace std;
typedef long long int LL;
typedef vector<LL> VL;
typedef vector<int> VI; 
typedef vector<VL> VVL;
typedef pair<LL,LL> PLL; 
typedef vector<PLL> VPLL ;  

typedef pair<int ,int> II;
typedef vector<II> VII;
#define mod 1000000007

vector<double> arr ; 
LL power[19] ; 
double dp[1001][101] ; 
LL cal(LL l ){
	LL sum = 0 ,i;
	//cout <<l << endl;
	if(l==0) return 0 ;
	LL t = l;
	for(i=0;;i++){
		t/=10 ; 
		if(t==0)
			break ; 
	}
	t=  l;
	if(t/power[i]==0)
		sum += cal(t%power[i]) ;
	else if(t/power[i] > 1) sum += cal(t%power[i]) + power[i] ; 
	else sum +=  (t%power[i]) + (t/power[i]>0?1:0) + cal(power[i]-1) ; 
	return sum ; 

}
LL n ; 
double foo(LL i , LL k){
	if(i==n && k>0) return 0;
	else if(i==n || k==0) return 1 ;
	if(dp[i][k]!=-1) return dp[i][k] ; 
	double ans = arr[i]*foo(i+1 , k-1) + (1-arr[i])*foo(i+1,k) ;
	return dp[i][k] = ans ; 

}

int main()
{
	LL i,l,r,k,j ; 
	SL(n) ; 
	power[0] = 1 ; 
	for(i=1;i<19;i++)
		power[i] = 10*power[i-1] ; 
	for(i=0;i<n;i++){
		SL2(l,r) ; 
		//cout << cal(l) << " " << cal(r) << endl;
		arr.pb((double)(cal(r) - cal(l-1))/(r-l+1)) ; 
		//cout << arr[arr.size()-1] << endl;
	}
	SL(k) ; 
	if((n*k)%100) k = n*k/100 +1 ;
	else k = n*k/100;  

	for(i=0;i<1001;i++)
		for(j=0;j<101;j++)
			dp[i][j]=-1 ; 

	double ans = foo(0 , k) ;
	printf("%.15lf\n",ans);


	return 0 ;
}  