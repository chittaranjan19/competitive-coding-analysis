import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProblemD {
    private static final long B = 1000000007;
    BufferedReader rd;
    int k;

    private ProblemD() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        int[] a = intarr();
        int t = a[0];
        k = a[1];
        long[] d = new long[100010];
        for(int i=1;i<k;i++) {
            d[i] = i;
        }
        for(int i=k;i<=100000;i++) {
            long res = d[i-1];
            if(i == k) {
                res++;
                res %= B;
            } else {
                res += minus(d[i-k],d[i-k-1]);
                res %= B;
            }
            if(i == 1) {
                res++;
                res %= B;
            } else {
                res += minus(d[i-1],d[i-2]);
                res %= B;
            }
            d[i] = res;
        }
        for(int i=0;i<t;i++) {
            a = intarr();
            out(minus(d[a[1]],d[a[0]-1]));
        }
    }

    private long minus(long a, long b) {
        long c = a-b;
        if(c < 0) {
            c += B;
        }
        return c;
    }

    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = s.split(" ");
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemD();
    }
}
