#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint toNumber (string s)
{
	tint Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (tint number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}

tint gcd (tint a, tint b)
{
	if (a > b)
		return gcd(b,a);
	else if (a == 0)
		return b;
	else
		return gcd(b % a, a);
}



int main()
{
	ios_base::sync_with_stdio(0);
	tint n,p,q;
	cin >> n >> p >> q;
	string s;
	cin >> s;
	vector<string> ans;
	forn(a,100)
	{
		forn(b,100)
		{
			if (a*p + b*q == n)
			{
				forn(i,a)
					ans.push_back(s.substr(i*p,p));
				forn(j,b)
					ans.push_back(s.substr(a*p + j*q,q));
				cout << ans.size() << endl;
				for(auto x : ans)
					cout << x << endl;
				return 0;
			}
		}
	}
			
			
	cout << -1 << endl;
	return 0;
}


