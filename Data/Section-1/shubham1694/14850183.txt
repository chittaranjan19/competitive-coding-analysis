#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define ll long long
#define f first
#define s second

typedef pair<int, int> pii;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

string str;
vector<int> v[3], temp;
int taken[110], n, m;

/*
    0: Attack 1
    1: Defence 1
    2: Attack 2
*/

int pre()
{
    int i, j;
    j = 0;
    for(i=0; i<v[1].size(); i++){
        while(j<m){
            if(v[2][j]>v[1][i])
                break;
            j++;
        }
        if(j>=m)
            return 0;
        taken[j] = 1;
        j++;
    }   
    return 1;
}

int fun()
{
    int i, j;
    j = 0;
    for(i=0; i<v[0].size(); i++){
        while(j<temp.size()){
            if(v[0][i]<=temp[j])
                break;
            j++;
        }
        if(j>=temp.size())
            return 0;
        //cout << "fun " << i << " " << j << " " << v[0][i] << " " << temp[j] << "\n";
        j++;
    }
    return 1;
}

int comp()
{
    int i, j, ret=0;
    j = m-1;
    for(i=0; i<v[0].size(); i++){
        if(j<0)
            return ret;
        if(v[2][j]<v[0][i])
            return ret;
        ret+=(v[2][j]-v[0][i]);
        j--;
    }
    return ret;
}

int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    int t, i, j, x, sum1, sum2;
    boost
    cin >> n >> m;
    for(i=0; i<n; i++){
        cin >> str >> x;
        if(str[0]=='A')
            v[0].pb(x);
        else
            v[1].pb(x);
    }
    for(i=0; i<m; i++){
        cin >> x;
        v[2].pb(x);
    }
    for(i=0; i<3; i++)
        sort(all(v[i]));
    int ans = comp();
    //cout << "b " << ans << "\n";
    int f1 = pre();
    if(f1){
        for(i=0; i<m; i++){
            if(!taken[i])
                temp.pb(v[2][i]);
        }
        int f2 = fun();
        //cout << temp.size() << " " << f2 << "\n";
        if(f2){
            sum1 = sum2 = 0;
            for(i=0; i<temp.size(); i++)
                sum1+=temp[i];
            for(i=0; i<v[0].size(); i++)
                sum2+=v[0][i];
            ans = max(ans, sum1-sum2);
        }
    }
    printf("%d\n", ans);
    return 0;
}
