#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 1000005
#define maxC 1000000007
#define pb push_back
#define F first
#define S second
#define mp make_pair
#define ex 0.000001

using namespace std;
long long a[2][2], n, num0, num1, sum = 0;
int v[mn];

long long solve(long long s)
{
    long long l = -1, r = maxC;
    while(r - l > 1)
    {
        long long g = ((l + r) >> 1);
        if ((g * (g - 1) >> 1) <= s)
            l = g;
        else
            r = g;
    }
    if (((l * (l - 1)) >> 1) != s)
    {
        cout << "Impossible";
        exit(0);
    }
    return l;
}

void setup()
{
    FOR(i, 0, 1)
    FOR(j, 0, 1)
    {
        cin >> a[i][j];
        sum += a[i][j];
    }
    n = solve(sum);
    num0 = solve(a[0][0]);
    num1 = solve(a[1][1]);
    long long onezero = num1 * num0;
    long long zeroone = 0;
    if (num0 + num1 != n || onezero < a[1][0])
    {
        cout << "Impossible";
        return;
    }
    FORD(i, num1, 1)
    {
        long long bac = min(onezero - a[1][0], num0);
        v[i + bac] = 1;
        onezero -= bac;
        zeroone += bac;
    }
    if (onezero != a[1][0] || zeroone != a[0][1])
    {
        cout << "Impossible";
        return;
    }
    FOR(i, 1, n)
        cout << v[i];
}

void xuly()
{

}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
