#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int toNumber (string s)
{
	int Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (int number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}

int main()
{
	int n,m;
	cin >> n >> m;
	vector<string> row (n);
	forn(i,n)
		cin >> row[i];
	int total = 0;
	forn(i,n-1)
	forn(j,m-1)
	{
		char a = row[i][j], b = row[i][j+1], c = row[i+1][j], d = row[i+1][j+1];
		string s = "xxxx";
		forn(p,4)
		forn(q,4)
		forn(r,4)
		forn(t,4)
		{
			s[p] = a;
			s[q] = b;
			s[r] = c;
			s[t] = d;
			if (s == "face")
				total++;
		}
	} 
	cout << total << endl;
	return 0;
}



