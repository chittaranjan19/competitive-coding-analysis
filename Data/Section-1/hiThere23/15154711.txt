#include <bits/stdc++.h>
#define FOR(i, j, k) for(int i = j; i <= k; i ++)
#define FORD(i, j, k) for(int i = j; i >= k; i --)
#define mn 200010
#define maxC 1000000007
#define F first
#define S second
#define mp make_pair

using namespace std;
int n;
long long k[4], a, b, c;
multiset<long long> Set;
multiset<long long> :: iterator it;

void dele(long long val)
{
    it = Set.upper_bound(val);
    if (it == Set.begin())
        return;
    Set.erase(-- it);
}

void setup()
{
    long long x;
    cin >> n >> k[1] >> k[2] >> k[3];
    FOR(i, 1, n)
    {
        cin >> x;
        Set.insert(x);
    }
    sort(k + 1, k + 4);
    a = k[1], b = k[2], c = k[3];
}

void xuly()
{
    int ans = 0;
    while(true)
    {
        if (!Set.size())
        {
            cout << ans;
            return;
        }
        it = Set.end();
        it --;
        if (*it <= b + c)
            break;
        if (*it > a + b + c)
        {
            cout << -1;
            return;
        }
        ans ++, dele(a + b + c);
    }

    while(true)
    {
        if (!Set.size())
        {
            cout << ans;
            return;
        }
        it = Set.end();
        it --;

        if (*it <= a + c)
            break;
        if (*it > b + c)
        {
            cout << -1;
            return;
        }
        ans ++;
        dele(b + c);
        dele(a);
    }

    while(true)
    {
        if (!Set.size())
        {
            cout << ans;
            return;
        }
        it = Set.end();
        it --;
        if (*it <= max(a + b, c))
            break;
        if (*it > a + c)
        {
            cout << -1;
            return;
        }
        ans ++;
        dele(a + c);
        dele(b);
    }

    while(true)
    {
        if (!Set.size())
        {
            cout << ans;
            return;
        }
        it = Set.end();
        it --;
        if (*it <= c || c >= a + b)
            break;
        ans ++;
        dele(a + b);
        dele(c);
    }

    while(true)
    {
        if (!Set.size())
        {
            cout << ans;
            return;
        }
        if (*Set.begin() > a)
            break;
        ans ++;
        dele(a);
        dele(b);
        dele(c);
    }

    while(true)
    {
        if (!Set.size())
        {
            cout << ans;
            return;
        }
        ans ++;
        dele(a + b), dele(c);
    }
    cout << -1;
}

int main()
{
    iostream::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup();
    xuly();
    return 0;
}
