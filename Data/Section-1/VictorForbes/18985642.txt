#include <bits/stdc++.h>

#define PI 3.14159265358979323846

#define INF_1 0x3f // 0011 1111
#define INF_2 0x7f // 0111 1111

#define MOD_1 1000000007 // 10e9 + 7
#define MOD_2 1000000009 // 10e9 + 9

#define pb push_back
#define eb emplace_back

using namespace std;

typedef unsigned long long ull;
typedef unsigned int ui;
typedef long long ll;

bool isPalindrome(string str){
	int i, j;

	for (i = 0, j = str.size() - 1; i < j; i++, j--){
		if (str[i] != str[j]){
			return false;
		}
	}

	return true;
}

int main(){
	bool alreadyput = false;
	string str, res1, res2;
	int i, j;

	ios::sync_with_stdio(false);

	cin >> str;

	for (i = 0, j = str.size() - 1; i < j; i++, j--){
		if (str[i] != str[j]){
			res1 = str.substr(0, i) + str.substr(j, 1) + str.substr(i, str.size() - i);
			res2 = str.substr(0, j + 1) + str.substr(i, 1) + str.substr(j + 1, str.size() - (j + 1));
			alreadyput = true;
			break;
		}
	}

	if (alreadyput){
		if (isPalindrome(res1)){
			cout << res1 << endl;
		}
		else if (isPalindrome(res2)){
			cout << res2 << endl;
		}
		else{
			cout << "NA" << endl;
		}
	}
	else{
		if (str.size() % 2){
			cout << str.substr(0, (str.size() / 2) + 1) << str.substr(str.size() / 2, 1) << str.substr((str.size() / 2) + 1, str.size() - (str.size() / 2)) << endl;
		}
		else{
			cout << str.substr(0, str.size() / 2) << "a" << str.substr(str.size() / 2, str.size() - (str.size() / 2)) << endl;
		}
	}

	return 0;
}