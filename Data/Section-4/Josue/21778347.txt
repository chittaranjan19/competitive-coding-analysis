#include <cstdio>
#include <iostream>
#include <algorithm>
#include <deque>
#include <set>
#include <utility>
#include <cstdint>
#include <cinttypes>

#define INF 100000

#define msg(a) cout<<#a<<" : "<<a<<endl;
#define ms(a) cout<<#a<<" : "<<a<<", ";
typedef long long int LL;

using namespace std;

int main(){
#include <cstdint>
	int8_t n, k1, k2, a, b;
	int cont, data; bool aa;
	deque<int> A, B;
	set<string> Estado; string S;
	scanf("%hhi", &n);

	scanf("%hhi", &k1);
	while( k1-- ) scanf("%d", &data), A.push_back(data);

	scanf("%hhi", &k2);
	while( k2-- ) scanf("%d", &data), B.push_back(data);

	S = "";
	for(int i=0; i<A.size(); i++) S += to_string(A[i]) + "*";
	S += "|";
	for(int i=0; i<B.size(); i++) S += to_string(B[i]) + "*";

	Estado.insert(S);

	cont = 0; aa = true; bool flag = true, ok = true;
	while( ++cont<INF && flag && ok ){
		a = A.front(); A.pop_front();
		b = B.front(); B.pop_front();

		if( a < b ){//B ha ganado
			B.push_back(a); B.push_back(b);
			if( A.empty() ) { aa = false; flag = false; break; }
			S = "";
			for(int i=0; i<A.size(); i++) S += to_string(A[i]) + "*";
			S += "|";
			for(int i=0; i<B.size(); i++) S += to_string(B[i]) + "*";
			if( Estado.find(S) != Estado.end() ){ flag = false; ok = false; }
		} else{
			A.push_back(b); A.push_back(a);
			if( B.empty() ) { flag = false;  break; }
			S = "";
			for(int i=0; i<A.size(); i++) S += to_string(A[i]) + "*";
			S += "|";
			for(int i=0; i<B.size(); i++) S += to_string(B[i]) + "*";
			if( Estado.find(S) != Estado.end() ){ flag = false; ok = false; }
		}
	}
	if( cont==INF ) { printf("-1\n"); return 0; }
	if( ok == false ) printf("-1\n");
	else
		aa ? printf("%d 1\n", cont) : printf("%d 2\n", cont);

	return 0;
}
