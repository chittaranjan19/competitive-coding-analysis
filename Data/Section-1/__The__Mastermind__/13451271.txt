{$H+}
const
  tfi = '';//'584c.inp';
  tfo = '';//'584c.out';

var
  n,t,cc,t1,t2 : longint;
  s1,s2,res : string;

procedure enter;
  var i : longint;
  begin
    assign(input,tfi);
    reset(input);
    readln(n,t);
    readln(s1);
    readln(s2);
    for i := 1 to n do
      if s1[i] <> s2[i] then inc(cc);
    close(input);
  end;

function recheck : boolean;
  var i,tt1,tt2 : longint;
  begin
    tt1 := 0;
    tt2 := 0;
    for i := 1 to n do
      begin
        if res[i] <> s1[i] then inc(tt1);
        if res[i] <> s2[i] then inc(tt2);
      end;
    if (tt1 = t) and (tt2 = t) then exit(true) else exit(false);
  end;

procedure process;
  var
    i : longint;
    ch : char;
  begin
    t1 := t;
    t2 := t;
    for i := 1 to n do
      if s1[i] = s2[i] then res := res + s1[i]
      else
      if t1 > t2 then
        begin
          dec(t1);
          res := res + s2[i];
          dec(cc);
        end
      else
        begin
          dec(t2);
          res := res + s1[i];
          dec(cc);
        end;
    for i := 1 to n do
      if (t1 > t2) and (res[i] = s1[i]) and (res[i] <> s2[i]) then
        begin
          for ch := 'a' to 'z' do
            if (ch <> s1[i]) and (ch <> s2[i]) then
              begin
                dec(t1);
                res[i] := ch;
                break;
              end;
        end
      else
      if (t2 > t1) and (res[i] = s2[i]) and (res[i] <> s1[i]) then
        begin
          for ch := 'a' to 'z' do
            if (ch <> s1[i]) and (ch <> s2[i]) then
              begin
                dec(t2);
                res[i] := ch;
                break;
              end;
        end;
    for i := 1 to n do
      if ((t1 > 0) and (res[i] = s1[i])) or ((t2 > 0) and (res[i] = s2[i])) then
        for ch := 'a' to 'z' do
          if (ch <> s1[i]) and (ch <> s2[i]) then
            begin
              if res[i] = s1[i] then dec(t1);
              if res[i] = s2[i] then dec(t2);
              res[i] := ch;
              break;
            end;

  end;

procedure print;
  begin
    assign(output,tfo);
    rewrite(output);
    if recheck then write(res) else write(-1);
    close(output);
  end;

begin
  enter;
  process;
  print;
end.
