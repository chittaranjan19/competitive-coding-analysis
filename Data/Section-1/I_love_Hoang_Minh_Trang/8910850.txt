uses    math;
const   fi      ='';
        fo      ='';
        maxN    =1000;

var     n       :longint;
        a       :array[0..maxN+1] of longint;
        l       :longint;
procedure QS(l,r:longint);
var     i, j, x, tg:longint;
begin
        i:=l;j:=r;x:=a[(i+j) div 2];
        repeat
                while a[i]<x do inc(i);
                while a[j]>x do dec(j);
                if i<=j then
                        begin
                                tg:=a[i];a[i]:=a[j];a[j]:=tg;
                                inc(i);
                                dec(j);
                        end;
        until i>j;
        if l<j then QS(l,j);
        if i<r then QS(i,r);
end;

procedure xuly;
var     ans:real;
        dem ,i    :longint;
begin
        QS(1,n); ans:=high(longint);
        a[0]:=0;a[n+1]:=l;
        ans:=max(a[1],l-a[n]);
        for i:=2 to n do
                ans:=max(ans,(a[i]-a[i-1])/2);
        writeln(ans:0:9);


end;

procedure run;
var     i :longint;
begin
        assign(input,fi);assign(output,fo);
        reset(input);rewrite(output);
        readln(n, l);
        for i:=1 to n do read(a[i]);
        xuly;
        close(input);close(output);

end;
begin
        run;
end.
