#include <bits/stdc++.h>

#define SZ(x) ( (int)x.size() )

using namespace std;
typedef long long ll;
const int N = 1000 * 1000 + 10;

int n ,m ,k ,t1 ,t2;
vector < vector <int> > g;
vector <int> v;
bool mark[N];
int cnt;
int sum;
int p;

void dfs(int x){
	cnt++;
	mark[x] = 1;
	for(int i = 0; i < SZ(g[x]); ++i){
		int y = g[x][i];
		if(!mark[y]){
			dfs(y);
		}
	}
}

int main(){
	cin >> n >> m >> k;
	g.resize(n);
	for(int i = 0; i < m; ++i){
		cin >> t1 >> t2;
		t1--; t2--;
		g[t1].push_back(t2);
		g[t2].push_back(t1);
	}
	for(int i = 0; i < n; ++i){
		if(!mark[i]){
			cnt = 0;
			dfs(i);
			if(min(cnt, k) == 1)
				sum++;
			v.push_back(min(cnt , k));
		}
	}
	sort(v.begin(), v.end());
	if(k == 1){
		cout << SZ(v) - 1 << "\n";
		return 0;
	}
	while(v[ SZ(v) - 1] > 2){
		int tmp = v[ SZ(v) - 1 ];
		v.pop_back();
		tmp -= 2;
		sum -= tmp;
		if(sum <= 2){
			break;
		}
		v.erase( v.begin() , v.begin() + tmp);
	}
	if(sum <= 2){
		cout << "0\n";
		return 0;
	}
	cout << (sum - 1) / 2 << "\n";
	return 0;
}