#include <bits/stdc++.h>
#define forinc(i,a,b) for(int i = a, _key = b; i <= _key; i++)
#define fordec(i,a,b) for(int i = a, _key = b; i >= _key; i--)
#define fori(i,n) for(int i = 0, _key = n; i < _key; i++)
#define ford(i,n) for(int i = n - 1; i >= 0; i--)
#define forvct(i,v) for(int i = 0, _key = v.size(); i < _key; i++)
#define task "x"
#define st first
#define nd second
#define m_p make_pair
#define p_b push_back
#define p_f push_front
#define ll long long
#define db double
#define str string
#define base 1000000007

using namespace std;

string s;
int m, n, a[21][100001], b[21][100001], res, r[21], c[100001];

void localsearch()
{
    forinc(i,1,m) r[i] = rand()%2;
    forinc(i,1,n) c[i] = rand()%2;
    int tmp = 0, cc;
    forinc(i,1,m)
        forinc(j,1,n)
        {
            b[i][j] = (r[i] ^ c[j]) ^ a[i][j];
            tmp += b[i][j];
        }
    forinc(k,1,10)
    {
        forinc(i,1,m)
        {
            cc = 0;
            forinc(j,1,n) cc += b[i][j];
            if (cc < n - cc) continue;
            tmp += n - cc - cc;
            forinc(j,1,n) b[i][j] = 1 ^ b[i][j];
        }
        forinc(j,1,n)
        {
            cc = 0;
            forinc(i,1,m) cc += b[i][j];
            if (cc < m - cc) continue;
            tmp += m - cc - cc;
            forinc(i,1,m) b[i][j] = 1 ^ b[i][j];
        }
    }
    res = min(res,tmp);
}

int main()
{
    srand(time(NULL));
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    //freopen(task".inp","r",stdin);
    //freopen(task".out","w",stdout);
    cin >> m >> n;
    res = m * n;
    forinc(i,1,m)
    {
        cin >> s;
        forinc(j,1,n) a[i][j] = (s[j-1] == '1');
    }
    forinc(i,1,300) localsearch();
    cout << res;
}
