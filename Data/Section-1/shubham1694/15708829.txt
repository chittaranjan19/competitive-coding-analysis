#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

int l[maxn], r[maxn], valid[maxn], invalid[maxn], p;
double dp[maxn][2][2], pv[maxn], piv[maxn];

double solve(int cur, int nxt, int lst)
{
	double ret;
	if(cur==1){
		if(lst&nxt)
			return 2000.0;
		else if(lst){
			ret = pv[cur]*4000.0 + piv[cur]*2000.0;
			return ret;
		}
		else if(nxt){
			ret = pv[cur]*2000.0;
			return ret;
		}
		else{
			ret = pv[cur]*4000.0;
			return ret;
		}
	}
	if(dp[cur][nxt][lst]!=-1)
		return dp[cur][nxt][lst];
	if(nxt)
		ret = pv[cur]*(2000.0 + solve(cur-1, 1, lst)) + piv[cur]*solve(cur-1, 0, lst);
	else
		ret = pv[cur]*(4000.0 + solve(cur-1, 1, lst)) + piv[cur]*solve(cur-1, 0, lst);
	//ret = pv[cur]*(2000.0 + solve(cur-1, lst)) + piv[cur]*solve(cur-1, lst);
	//cout << cur << " " << lst << " " << ret << "\n";
	return dp[cur][nxt][lst] = ret;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int n, i, j, k, total;
	scanf("%d%d", &n, &p);
	for(i=1; i<=n; i++){
		scanf("%d%d", &l[i], &r[i]);
		valid[i] = r[i]/p - l[i]/p;
		if(!(l[i]%p))
			valid[i]++;
		total = r[i]-l[i]+1;
		invalid[i] = total-valid[i];
		pv[i] = (double)valid[i]/(1.0*total);
		piv[i] = (double)invalid[i]/(1.0*total);
		//cout << i << " " << pv[i] << " " << piv[i] << "\n";
	}
	for(i=0; i<=n; i++){
		for(j=0; j<2; j++){
			for(k=0; k<2; k++)
				dp[i][j][k] = -1;
		}
	}
	double ans = pv[n]*(2000.0 + solve(n-1, 1, 1)) + piv[n]*solve(n-1, 0, 0);
	//cout << piv[n]*solve(n-1, 0, 0) << "\n";
	printf("%.9lf\n", ans);
	return 0;
}
