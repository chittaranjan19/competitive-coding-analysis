#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;
const int maxn=100005;

struct node
{
   int len,is_in,id;
}l[maxn];

struct Edge
{
   int from,to;
}ans[maxn];

bool cmp(node x,node y)
{
   return x.len<y.len;
}

int cnt[maxn];

int main()
{
   int n,m,i,j;
   scanf("%d%d",&n,&m);
   for(i=1;i<=m;i++)
   {
      scanf("%d%d",&l[i].len,&l[i].is_in);
      l[i].id=i;
   }
   sort(l+1,l+m+1,cmp);
   for(i=1;i<=n-1;i++)
   {
      if(l[i].is_in)
      {
         cnt[1]++;
         ans[l[i].id].from=1;
         ans[l[i].id].to=cnt[1]+1;
      }
   }
   if(cnt[1]<n-1){printf("-1\n");return 0;}
   else
   {
      for(i=n;i<=m;i++)
      {
         for(j=2;j<=m;j++)
         {
            if(cnt[j]<cnt[1]-j+1)
            {
               cnt[j]++;
               ans[l[i].id].from=j;
               ans[l[i].id].to=j+cnt[j];
               break;
            }
         }
      }
   }
   for(i=1;i<=m;i++) printf("%d %d\n",ans[i].from,ans[i].to);
   return 0;
}
