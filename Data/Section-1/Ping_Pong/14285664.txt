#include <stdio.h>
#include <iostream>
#include <stdlib.h>
#include <algorithm>
#include <vector>
#include <set>
#include <queue>
#include <string>

using namespace std;
int a[200][200];
int graph[200][200][2];
bool used[200][200];
vector<set<int> > v;

void dfs(int i, int j)
{
    v[v.size() - 1].insert(a[i][j]);
    used[i][j] = true;
    if (graph[i][j][0] != -1 && graph[i][j][1] != -1 && !used[graph[i][j][0]][graph[i][j][1]])
        dfs(graph[i][j][0], graph[i][j][1]);
}

int main()
{
    int n, m, q;
    scanf("%d %d %d", &n, &m, &q);
    string s;
    for (int i = 0; i < n; i++)
    {
        cin >> s;
        for (int j = 0; j < m; j++)
            a[i][j] = s[j] - '0';
    }
    int ch[10][2];
    for (int i = 0; i < 10; i++)
        scanf("%d %d", &ch[i][0], &ch[i][1]);
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
        {
            graph[i][j][0] = -1;
            graph[i][j][1] = -1;
        }
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
        {
            if (i + ch[a[i][j]][0] < n && i + ch[a[i][j]][0] >= 0 && j + ch[a[i][j]][1] < m && j + ch[a[i][j]][1] >= 0)
            {
                graph[i][j][0] = i + ch[a[i][j]][0];
                graph[i][j][1] = j + ch[a[i][j]][1];
            }
        }
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            used[i][j] = false;
    set<int> se;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            if (!used[i][j])
            {
                v.push_back(se);
                dfs(i, j);
            }
    bool b1, b2;
    for (int i = 0; i < q; i++)
    {
        cin >> s;
        b1 = false;
        for (int j = 0; j < v.size(); j++)
        {
            b2 = true;
            for (int k = 0; k < s.size(); k++)
                if (v[j].count(s[k] - '0') == 0)
                {
                    b2 = false;
                    break;
                }
            if (b2)
            {
                b1 = true;
                break;
            }
        }
        if (b1)
            printf("YES\n");
        else
            printf("NO\n");
    }
    return 0;
}
