#include <iostream>
#include <cstring>

using namespace std;

const int maxn = 3000 + 5;

int num[maxn];
bool dp[maxn][maxn];

int main()
{
    int n, m;
    while(cin >> n >> m)
    {
        memset(num, 0, sizeof(num));
        memset(dp, 0, sizeof(dp));
        dp[0][0] = true;
        for(int i = 0; i < n; ++i)
        {
            int x;
            cin >> x;
            ++num[x % m];
        }
        bool flag = false;
        for(int i = 1; i < m; ++i)
        {
            for(int j = 0; j < m; ++j)
            {
                if(!dp[i - 1][j]) continue;
                dp[i][j] = true;
                for(int k = 1; k <= num[i]; ++k)
                {
                    dp[i][(j + k * i) % m] = true;
                    if((j + k * i) % m == 0)
                    {
                        flag = true;
                    }
                }
            }
        }
        cout << (flag ? "YES" : "No") << endl;
    }
    return 0;
}
