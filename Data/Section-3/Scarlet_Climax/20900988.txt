#include<bits/stdc++.h>
#define maxn 300005
using namespace std;
typedef long long LL;
#define G c=getchar()
inline LL read()
{
	LL x=0,f=1;char G;
	while(c>57||c<48){if(c=='-')f=-1;G;}
	while(c>47&&c<58)x=x*10+c-48,G;
	return x*f;
}
#define ls x<<1
#define rs x<<1|1
int n,ll,rr,A,a[maxn],b[maxn],d[maxn<<2],m[maxn<<2],len[maxn<<2],sum[maxn<<2];
LL ans;
void update(int x)
{
	int L=ls,R=L|1;
	m[x]=m[L]<m[R]?m[L]:m[R];
	len[x]=len[L]*(m[x]==m[L])+len[R]*(m[x]==m[R]);
	sum[x]=sum[L]*(m[x]==m[L])+sum[R]*(m[x]==m[R])+len[L]*(m[x]+1==m[L])+len[R]*(m[x]+1==m[R]);
}
void build(int x,int l,int r)
{
	if(l==r){len[x]=r-l+1;return;}
	int mid=l+r>>1;
	build(ls,l,mid),build(rs,mid+1,r);
}
void down(int x){if(d[x])d[ls]+=d[x],d[rs]+=d[x],m[ls]+=d[x],m[rs]+=d[x],d[x]=0;}
void add(int x,int l,int r,int A)
{
	if(l>rr||r<ll)return;
	if(ll<=l&&r<=rr){m[x]+=A,d[x]+=A;return;}
	down(x);
	int mid=l+r>>1;
	add(ls,l,mid,A),add(rs,mid+1,r,A);
	update(x);
}
int query(int x,int l,int r,int k)
{
	if(l>k)return 0;
	if(r<=k)return sum[x]*(m[x]<2)+len[x]*(m[x]<3);
	down(x);
	int mid=l+r>>1;
	return query(ls,l,mid,k)+query(rs,mid+1,r,k);
}
#define Add(l,r,A) ll=l,rr=r,add(1,1,n,A)
int main()
{
	scanf("%d",&n);build(1,1,n);
	for(int i=1;i<=n;i++)a[i]=read(),b[a[i]]=i;
	for(int i=1;i<=n;i++)
	{
		int x=a[b[i]-1],y=a[b[i]+1];Add(1,i,1);
		if(x&&x<i)Add(1,x,-1);if(y&&y<i)Add(1,y,-1);
		ans+=query(1,1,n,i-1);
	}
	printf("%I64d\n",ans);
	return 0;
}