#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <stdio.h>

using namespace std;

#define ll long long
#define ull unsigned long long 
#define sc second
#define fs first
#define mp make_pair
ll k, m[1111][1111], gn[1000];

int main()
{
    gn[0] = 1;
    gn[1] = 30;
    for (int i = 2; i <= 8; i++)
        gn[i] = gn[i - 1] * 30;
    cin >> k;
    if (k == 1)
    {
        cout << "NY" << endl << "YN" << endl;
        return 0;
    }
    memset(m, 0, sizeof(m));
    vector<int> pr;
    while (k != 0)
    {
        int i = 7;
        while (gn[i] > k)
            i--;
        pr.push_back(k/gn[i]);
        for (int j = 0; j < i; j++)
            pr.push_back(30);
        k %= gn[i];
    }
    int cur = 3, next = cur + pr[0];
    for (int i = 0; i < pr.size() - 1; i++){
        int f = pr[i], s = pr[i + 1];
        next = cur + f;
        for (int x = cur; x < cur + f; x++)
        {
            for (int y = next; y < next + s; y++){
                m[x][y] = 1;
                m[y][x] = 1;
            }
        }
        cur = next;
    }
    cur = 3;
    for (int i = cur; i < pr[0] + cur; i++){
        m[1][i] = 1;
        m[i][1] = 1;
    }
    for (int i = next-pr[pr.size()-1]; i < next; i++){
        m[2][i] = 1;
        m[i][2] = 1;
    }
    cout << 1000 << endl;
    for (int i = 1; i <= 1000; i++)
    {
        for (int j = 1; j <= 1000; j++)
        if (m[i][j])
            printf("Y");
        else printf("N");
        printf("\n");
    }
    return 0;
}