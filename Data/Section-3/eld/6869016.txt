// be name khoda
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

const int MAXN = 3000 + 10;

int a[MAXN], n, m;
vector <pair <int, int> > v;

int find_t(){
    int t = 0;
    for(int i = 1; i <= n; i++){
        if(a[i] == i)
            continue;
        for(int j = i+1; j <= n; j++){
            if(a[j] == i){
                swap(a[i], a[j]);
                v.push_back(make_pair(i, j));
                t++;
                break;
            }
            if(a[i] == j){
                swap(a[i], a[j]);
                v.push_back(make_pair(i, j));
                t++;
                i--;
                break;
            }
        }
    }
    return t;
}

int main(){
    cin >> n;
    for(int i = 1; i <= n; i++)
        cin >> a[i];
    cin >> m;
    int tedad = find_t();
    int t = tedad - m;
    if(t >= 0){ 
        cout << t << endl;
        for(int i = 0; i < t; i++)
            cout << v[i].first << " " << v[i].second << " ";
        cout << endl;
        return 0;
    }   
    sort(v.begin(), v.end());
    int f = 0;
    bool b;
    t *= (-1);  
    cout << t << endl;
    for(int i = 1; i <= n && f < t; i++)
        for(int j = i+1; j <= n && f < t; j++){
            b = 1;
            for(int k = 0; k < v.size(); k += 2){
                if(v[k].first == i && v[k].second == j){
                    b = 0;
                    break;
                }
                if(v[k].first > i || (v[k].first == i && v[k].second > j))
                    break;
            }
            if(b){
                f++;
                v.push_back(make_pair(i, j));
            }
        }
    sort(v.begin(), v.end());
    for(int i = 0; i < t; i++)
        cout << v[i].first << " " << v[i].second << " ";
    cout << endl;
    return 0;
}