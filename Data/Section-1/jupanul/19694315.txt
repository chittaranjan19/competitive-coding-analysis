#include <algorithm>
#include <fstream>
#include <iostream>
using namespace std;
const int MAX_N = 300005;

int _next[MAX_N];
int well[MAX_N];
vector<int> v[MAX_N];
int read[MAX_N];

int main() {
    int n, q, last = 0, cnt = 0, notif = 0;
    cin >> n >> q;
    for (int i = 1; i <= q; ++ i) {
        int type, x;
        cin >> type >> x;
        if (type == 1) {
            notif += 1;
            well[notif] = x;
            v[x].push_back(notif);
            cnt += 1;
        } else if (type == 2) {
            for (int j = _next[x]; j < (int)v[x].size(); j += 1) {
                if (!read[v[x][j]]) {
                    cnt -= 1;
                    read[v[x][j]] = true;
                }
            }
            _next[x] = v[x].size();
        } else {
            for (int j = last + 1; j <= x; j += 1) {
                if (!read[j]) {
                    cnt -= 1;
                    read[j] = true;
                }
            }
            last = max(last, x);
        }
        cout << cnt << "\n";
    }
    return 0;
}