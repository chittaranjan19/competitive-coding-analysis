/*
*Rainto96
*Beijing University of Posts and Telecommunications School of Software Engineering
*http://blog.csdn.net/u011775691
*/
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <cstring>
#include <string>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <climits>
using namespace std;
#define pb push_back
#define ALL(x) x.begin(),x.end()
#define VINT vector<int>
#define PII pair<int,int>
#define MP(x,y) make_pair((x),(y))
#define ll long long
#define ull unsigned long long
#define MEM0(x)  memset(x,0,sizeof(x))
#define scand(x) scanf("%d",&x)
#define Max(a,b) a=max(a,b)
const int MAXN=3333;
struct Edge{
        int to,val;
};
vector<Edge> G[MAXN];
int ans=0;
int dfs(int now, int fa){
        if(G[now].size()==0)
                return 0;
        int to=G[now][0].to;
        int val=G[now][0].val;
        int left=dfs(to,now) + val;

        to=G[now][1].to;
        val=G[now][1].val;
        int right=dfs(to,now) + val;

        int maxn=max(left,right);
        ans+=maxn-min(left,right);
        return maxn;
}
int main(){
        #ifndef ONLINE_JUDGE
                freopen("in.txt","r",stdin);
        #endif // ONLINE_JUDGE
        int n;
        cin>>n;
        for(int i=2;i<=(1<<(n+1))-1;i++){
                int x;scand(x);
                G[i/2].pb((Edge){i,x});
        }
        dfs(1,-1);
        cout<<ans<<endl;
        return 0;
}
