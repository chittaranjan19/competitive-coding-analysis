#include <iostream>
#include <cstdio>
#include <cstring>

using namespace std;

typedef long long ll;

const int maxn = 2e5 + 5;

struct edge
{
    int to, next;

    edge(int to = 0, int next = 0) : to(to), next(next) {}
} G[maxn << 1];
int head[maxn], tot, sz[maxn];
int n, m;
bool vis[maxn];
ll ans;

void init()
{
    memset(head, -1, sizeof(head));
    tot = 0;
}

void addedge(int u, int v)
{
    G[tot] = edge(v, head[u]);
    head[u] = tot++;
    G[tot] = edge(u, head[v]);
    head[v] = tot++;
}

void dfs(int u, int fa)
{
    sz[u] = vis[u];
    for(int i = head[u]; ~i; i = G[i].next)
    {
        int v = G[i].to;
        if(v == fa) continue;
        dfs(v, u);
        ans += min(sz[v], 2 * m - sz[v]);
        sz[u] += sz[v];
    }
}

int main()
{
    scanf("%d%d", &n, &m);
    init();
    for(int i = 1; i <= m << 1; ++i)
    {
        int x;
        scanf("%d", &x);
        vis[x] = true;
    }
    for(int i = 1; i < n; ++i)
    {
        int u, v;
        scanf("%d%d", &u, &v);
        addedge(u, v);
    }
    ans = 0;
    dfs(1, 0);
    printf("%I64d\n", ans);
    return 0;
}
