const maxN=1000;
var a:array[1..maxN] of longint;
c:array[1..maxN,1..2] of longint;
i,j,n,m,k,l,d,t,max1,max2,first,second:longint;
procedure swap(var a,b:longint);
              var c:longint;
              begin
              c:=a;
              a:=b;
              b:=c
              end;
procedure sortA (l,r:longint);
             var i,j,x:longint;
             begin
             i:=l;
             j:=r;
             x:=a[(l+r) div 2];
             repeat
             while a[i]<x do inc(i);
             while a[j]>x do dec(j);
             if i<=j then begin
                          swap(a[i],a[j]);
                          inc(i);
                          dec(j)
                          end
             until i>j;
             if i<r then sortA(i,r);
             if l<j then sortA(l,j)
             end;
procedure sortB (l,r:longint);
             var i,j,x:longint;
             begin
             i:=l;
             j:=r;
             x:=a[(l+r) div 2];
             repeat
             while a[i]>x do inc(i);
             while a[j]<x do dec(j);
             if i<=j then begin
                          swap(a[i],a[j]);
                          inc(i);
                          dec(j)
                          end
             until i>j;
             if i<r then sortB(i,r);
             if l<j then sortB(l,j)
             end;
begin
readln(n,m);
for i:=1 to n do read(a[i]);
for k:=1 to m do begin
                 readln(d,t);
                 c[k,1]:=d;
                 c[k,2]:=t
                 end;
for i:=1 to m do if c[i,1]=1 then sortA(1,c[i,2])
                             else sortB(1,c[i,2]);
for i:=1 to n do write(a[i],' ')
end.
