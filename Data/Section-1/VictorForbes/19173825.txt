#include <bits/stdc++.h>

using namespace std;

#define N 301

struct Event{
	bool ghost;
	int t;

	bool operator < (const Event& b) const{
		if (this->t == b.t){
			return this->ghost;
		}

		return this->t > b.t;
	}
};

Event make_event(int t, bool ghost){
	Event e;

	e.t = t;
	e.ghost = ghost;

	return e;
}

priority_queue<Event> pq;

int main(){
	int m, t, r, w, c, i;
	int sum = 0;
	Event cur;

	scanf("%d%d%d", &m, &t, &r);

	for (i = 0; i < m; i++){
		scanf("%d", &w);

		pq.push(make_event(w, true));
	}

	if (t < r){
		printf("-1\n");
		return 0;
	}

	c = 0;

	while (!pq.empty()){
		cur = pq.top();
		pq.pop();

		if (cur.ghost){
			sum += (r - c);

			for (i = cur.t; i > cur.t - (r - c); i--){
				pq.push(make_event(i + t, false));
			}

			c = r;
		}
		else{
			c--;
		}
	}

	printf("%d\n", sum);

	return 0;
}