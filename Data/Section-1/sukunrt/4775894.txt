#include <iostream>
#include <string>
#include <cstring>

using namespace std;

char grid[25][25];
int dp[25][25][2];
int v[25][25][2];
int n;

int solve(int i, int j, int k){
        //     cout << i << " " << j << endl;
        if(v[i][j][k] != 0) return dp[i][j][k];
        else { v[i][j][k] = 1;
                int &res = dp[i][j][k];
                int a1 = -1000000;
                if (i+1 <= n) a1 = solve(i+1,j,(k+1)%2);
                int a2 = -1000000;
                if (j+1 <= n) a2 = solve(i,j+1, (k+1)%2);
//                cout << a1 << " " << a2 << endl;
                if (a1 != -1000000 && a2 != -1000000){
                        if (k == 1){
                                //  cout << "here " << endl;
                                res = min(a2,a1);
                                if (grid[i][j] == 'a')
                                        res++;
                                if (grid[i][j] == 'b')
                                        res--;
                                return res;
                        }
                        else{
                                res = max(a2,a1);
                                if (grid[i][j] == 'a') res++;
                                if (grid[i][j] == 'b') res--;
                        }
                }
                else if (a1 == -1000000 && a2 == -1000000)
                        return res = (grid[i][j] == 'a') - (grid[i][j] == 'b');
                else if (a1 == -1000000)
                        return res = a2 + (grid[i][j] == 'a') - (grid[i][j] == 'b');
                else return res = a1+(grid[i][j] == 'a') - (grid[i][j] == 'b');
                        
                return res;
        }
        
}
                                                
                                
                
int main(){

        cin >> n;
        memset(dp,-1,sizeof(dp));
        for(int i = 1; i <= n; i++){
                string s;
                cin >> s;
//                cout << s << endl;
                for(int j = 1; j <= n; j++)
                        grid[i][j] = s[j-1];
        }

        int x = solve(1,1,1);
        if (x > 0) cout  << "FIRST" << endl;
        else if (x < 0) cout << "SECOND" << endl;
        else cout << "DRAW" << endl;
}
                
