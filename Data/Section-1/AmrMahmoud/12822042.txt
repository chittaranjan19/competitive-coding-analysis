#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

pair<pair<int, int>, pair<int, int> > arr[4], b[4];

int main()
{
  //freopen("approximation.in", "r", stdin);
  //freopen("approximation.out", "w", stdout);
  for(int i=0;i<4;i++)
  {
    scanf("%d %d", &arr[i].f.f, &arr[i].f.s);
    scanf("%d %d", &arr[i].s.f, &arr[i].s.s);
    if(arr[i].f.f == arr[i].s.f && arr[i].f.s == arr[i].s.s)
    {
      printf("NO");
      return 0;
    }
    if(arr[i].f > arr[i].s) swap(arr[i].f, arr[i].s);
  }
  sort(arr, arr + 4);
  for(int i=0;i<3;i++)
    if(arr[i] == arr[i + 1])
    {
      printf("NO");
      return 0;
    }
  bool test = false;
  for(int i=0;i<(1<<4) && !test;i++)
  {
    for(int j=0;j<4;j++)
    {
      b[j] = arr[j];
      if(i & (1 << j))
        swap(b[j].f, b[j].s);
    }
    do
    {
      test = true;
      for(int j=0;j<4;j++)
        test &= (b[j].s == b[(j + 1)%4].f);
      test &= (b[0].f.s == b[0].s.s);
      test &= (b[1].f.f == b[1].s.f);
      test &= (b[2].f.s == b[2].s.s);
      test &= (b[3].f.f == b[3].s.f);
    }
    while(next_permutation(b, b + 4) && !test);
  }
  printf("%s", (test?"YES":"NO"));
  return 0;
}
