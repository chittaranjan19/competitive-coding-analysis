#include<cstdio>
#include<algorithm>
#include<vector>
#include<queue>
using namespace std;
vector< pair<int,int> > a;
vector< bool > viz;
queue<int> q;
bool intersect(pair<int,int> p1,pair<int,int> p2)
{
    return (p2.first<p1.first && p1.first<p2.second) ||
        (p2.first<p1.second && p1.second<p2.second);
}
bool query(int x,int y)
{
    while(!q.empty()) q.pop();
    q.push(x);
    viz.assign(a.size(),false);viz[x]=true;
    while(!q.empty())
    {
        if(q.front()==y) return true;
        for(int i=0;i<(int)a.size();i++)
            if(!viz[i] && intersect(a[q.front()],a[i]))
                q.push(i),
                viz[i]=true;
        q.pop();
    }
    return false;
}
int main()
{
   /// freopen("f.in","r",stdin);
   /// freopen("f.out","w",stdout);
    int n,t,x,y;
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
    {
        scanf("%d%d%d",&t,&x,&y);
        if(t==1) a.push_back(make_pair(x,y));
        else
            puts(query(x-1,y-1)?"YES":"NO");
    }
    return 0;
}
