#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int main()
{
  int c, hr, hb, wr, wb;
  scanf("%d %d %d %d %d", &c, &hr, &hb, &wr, &wb);
  LL res = 0, ans = 0;
  if(hr * 1.0 / wr < hb * 1.0 / wb)
  {
    swap(hr, hb);
    swap(wr, wb);
  }
  int cnt = c / wr, tmp = c;
  ans = res = cnt * 1LL * hr;
  c%=wr;
  for(int i=0;i<100000;i++)
  {
    c-=wb;
    res+=hb;
    if(c < 0)
    {
      int tmp = (-c + wr - 1) / wr;
      cnt-=tmp;
      res-=hr * 1LL * tmp;
      c += wr * tmp;
    }
    if(cnt < 0) break;
    ans = max(ans, res);
  }
  c = tmp;
  for(int i=0;i<100000;i++)
  {
    if(i * wr > c) break;
    ans = max(ans, i * 1LL * hr + (c - (i * wr)) / wb * 1LL * hb);
  }
  for(int i=0;i<100000;i++)
  {
    if(i * wb > c) break;
    ans = max(ans, i * 1LL * hb + (c - (i * wb)) / wr * 1LL * hr);
  }
  printf("%I64d", ans);
  return 0;
}