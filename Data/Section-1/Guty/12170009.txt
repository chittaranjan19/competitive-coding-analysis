#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int maxi(int a , int b)
{
	if (a > b)
		return a;
	else
		return b;
}

bool cumple (vector<int> a, vector<int> b)
{
	return (a[1] + a[2] <= a[0] && maxi(b[1],b[2] <= b[0])) or ((b[1] + b[2] <= b[0] && maxi(a[1],a[2] <= a[0])));
}

int main()
{
	vector<int> a (3);
	vector<int> b (3);
	vector<int> aRot (3);
	vector<int> bRot (3);
	cin >> a[0] >> b[0];
	aRot[0] = a[0];
	bRot[0] = b[0];
	forsn(i,1,3)
	{
		int aa, bb;
		cin >> aa >> bb;
		a[i] = aa;
		b[i] = bb;
		bRot[i] = aa;
		aRot[i] = bb;
	}
	bool ans = false;
	ans = ans or cumple(a,b);
	ans = ans or cumple(aRot,b);
	ans = ans or cumple(a,bRot);
	ans = ans or cumple(aRot,bRot);
	if (ans)
		cout << "YES" << endl;
	else
		cout << "NO" << endl;
	
		
	return 0;
}



