#include <stdio.h>
#include <iostream>
#include <vector>
#include <set>
#include <string>
#include <algorithm>
#include <math.h>

using namespace std;

typedef struct
{
    int x;
    int y;
    int num;
} vec;

bool comp(vec a, vec b)
{
    return ((double)a.x / a.y < (double)b.x / b.y);
}

int main()
{
    int n;
    scanf("%d", &n);
    vec a[n];
    for (int i = 0; i < n; i++)
    {
        scanf("%d %d", &a[i].x, &a[i].y);
        a[i].num = i + 1;
    }
    sort(a, a + n, comp);
    double curr = 1000000000;
    int ans1, ans2;
    for (int i = 0; i < n; i++)
        if ((a[i].x * a[(i + 1) % n].x + a[i].y * a[(i + 1) % n].y) / sqrt((double)(a[i].x * a[i].x + a[i].y * a[i].y)) / sqrt((double)(a[(i + 1) % n].x * a[(i + 1) % n].x + a[i].y * a[(i + 1) % n].y)) < curr)
        {
            curr = (a[i].x * a[(i + 1) % n].x + a[i].y * a[(i + 1) % n].y) / sqrt((double)(a[i].x * a[i].x + a[i].y * a[i].y)) / sqrt((double)(a[(i + 1) % n].x * a[(i + 1) % n].x + a[i].y * a[(i + 1) % n].y));
            ans1 = i + 1;
            ans2 = (i % 1) % n + 1;
        }
    printf("%d %d", ans1, ans2);
    return 0;
}
