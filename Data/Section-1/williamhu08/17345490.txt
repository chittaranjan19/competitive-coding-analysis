#include <bits/stdc++.h>

using namespace std;

#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define rep(it, v) for (auto it = (v).begin(); it != (v).end(); it++)
#define rwfile(f) freopen(f".in", "r", stdin); freopen(f".out", "w", stdout)
#define pb push_back
#define mpair make_pair
#define fi first
#define se second
#define dri(x) scanf("%d", &x)
#define drii(x, y) scanf("%d %d", &x, &y)
#define driii(x, y, z) scanf("%d %d %d", &x, &y, &z)
#define driiii(x, y, z, w) scanf("%d %d %d %d", &x, &y, &z, &w)
#define drl(x) scanf("%lld", &x)
#define drll(x, y) scanf("%lld %lld", &x, &y)
#define drlll(x, y, z) scanf("%lld %lld %lld", &x, &y, &z)
#define drllll(x, y, z, w) scanf("%lld %lld %lld %lld", &x, &y, &z, &w)

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

int N;
string S;

int main() {
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	getline(cin, S);
	S = "+ " + S;
	stringstream ss(S);
	int nplus = 0, nminus = 0;
	vector<char> v;

	while (true) {
		char t;
		ss >> t;
		if (t == '=') {
			ss >> N;
			break;
		}
		if (t == '+') {
			nplus++;
		} else {
			nminus++;
		}
		v.pb(t);
		ss >> t;
		assert(t == '?');
	}

	int mxval = nplus * N - nminus, mnval = nplus - nminus * N;
	if (mnval <= N && N <= mxval) {
		vector<int> vplus(nplus, 1), vminus(nminus, N);
		int pptr = 0, mptr = 0;
		int csum = mnval;
		for (int &i : vplus) {
			int vadd = min(N - csum, N - 1);
			csum += vadd;
			i += vadd;
		}

		for (int &i : vminus) {
			int vsubtr = min(N - 1, N - csum);
			csum += vsubtr;
			i -= vsubtr;
		}

		cout << "Possible\n";
		for (int i = 0; i < v.size(); i++) {
			if (i) {
				cout << ' ' << v[i] << ' ';
			}
			cout << (v[i] == '+' ? vplus[pptr++] : vminus[mptr++]);
		}
		cout << " = " << N << endl;
	} else {
		puts("Impossible");
	}
}