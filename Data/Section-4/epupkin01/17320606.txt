#include <stdio.h>
struct segment
{
    int l;
    int r;
};
int main()
{
    const int S = 500000;
    struct segment s[S];
    int n, a[S], b[S], rev = 0, si = 0;
    scanf("%d", &n);
    for (int i = 0; i < n; ++i)
    {
        scanf("%d", a + i);
        b[i] = a[i];
    }
    for (int i = 1, j; i < n-1; ++i)
    {
        if (a[i-1] != a[i] && a[i] != a[i+1])
        {
            s[si].l = i;
            j = i;
            while (j < n-1 && a[j-1] != a[j] && a[j] != a[j+1])
                ++j;
            s[si++].r = j;
            i = j - 1;
        }
    }
    b[0] = a[0];
    b[n-1] = a[n-1];
    for (int i = 0, amount; i < si; ++i)
    {
        amount = s[i].r - s[i].l;
        if (amount % 2 == 1)
        {
            rev = rev < amount/2 + 1 ? amount/2 + 1 : rev;
            if (a[s[i].l] == 0)
                for (int k = s[i].l; k < s[i].r; ++k)
                    b[k] = 1;
            else
                for (int k = s[i].l; k < s[i].r; ++k)
                    b[k] = 0;
        }
        else
        {
            rev = rev < amount/2 ? amount/2 : rev;
            if (a[s[i].l] != 0)
            {
                for (int k = s[i].l; k < s[i].l + amount/2; ++k)
                    b[k] = 0;
                for (int k = s[i].l + amount/2; k < s[i].r; ++k)
                    b[k] = 1;
            }
            else
            {
                for (int k = s[i].l; k < s[i].l + amount/2; ++k)
                    b[k] = 1;
                for (int k = s[i].l + amount/2; k < s[i].r; ++k)
                    b[k] = 0;
            }
        }
    }
    printf("%d\n", rev);
    for (int i = 0; i < n; ++i)
        printf("%d ", b[i]);
    putchar('\n');
    return 0;
}