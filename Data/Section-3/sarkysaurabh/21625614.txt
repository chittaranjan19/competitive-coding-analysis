#include<bits/stdc++.h>
using namespace std;
int parent[105];
int findset(int i)
{
	if(parent[i] == -1) return -1;
	while(i != parent[i])
	{
		parent[i] = parent[parent[i]];
		i = parent[i];
	}
	return i;
}
void unionset(int x, int y)
{
	int px,py;
	px = findset(x);
	py = findset(y);
	if(px != py)
		parent[px] = py;
}
int main()
{
	int n,m;
	cin>>n>>m;
	int i,j,k,l;
	for(i=0;i<105;++i)
		parent[i] = -1;
	int z = 0;
	for(i=0;i<n;++i)
	{
		cin>>k;
		vector<int> vt;
		if(!k) z++;
		while(k--)
		{
			cin>>l;
			vt.push_back(l);
			if(parent[l] == -1) parent[l] = l;
		}
		for(j=0;j<vt.size();++j)
		{
			for(k=j+1;k<vt.size();++k)
			{
				unionset(vt[j],vt[k]);
			}
		}
	}
	int cnt = 0;
	for(i=1;i<=m;++i)
	{
		if(i == findset(i)) cnt++;
	}
	if(cnt == 0) z++;
	cout<<cnt-1+z<<endl;
}
