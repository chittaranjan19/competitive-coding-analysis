#include<bits/stdc++.h>

using namespace std;
#define N 100003
#define pb push_back


vector<int> edge[N];
int current[N],goal[N];
bool vis[N];
vector<int> ans;

void dfs(int now, int level , int odd , int even)
{
    vis[now] = true;

    if(level%2 && odd%2)
        current[now] = current[now]==0?1:0;

    if(level%2==0 && even%2)
        current[now] = current[now]==0?1:0;

    if(current[now]!=goal[now])
    {
        ans.pb(now);
        if(level%2) odd++;
        else        even++;
    }

    for(int i=0;i<edge[now].size();i++)
    {
        if(!vis[edge[now][i]])
          dfs(edge[now][i],level+1,odd,even);
    }

}
int main(void)
{
    int n;
    cin>>n;

    for(int i=1;i<n;i++)
    {
        int x,y;
        scanf("%d %d",&x,&y);
        edge[x].pb(y);
        edge[y].pb(x);
    }

    for(int i=1;i<=n;i++)scanf("%d",&current[i]);
    for(int i=1;i<=n;i++)scanf("%d",&goal[i]);

    dfs(1,1,0,0);

    cout<<ans.size()<<endl;
    for(int i=0;i<ans.size();i++)
      printf("%d\n",ans[i]);

    return 0;
}
