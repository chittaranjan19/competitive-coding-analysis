/*	 Hello World!	*/

#include <bits/stdc++.h>

#define pb push_back
#define pf push_front
#define mp make_pair
#define f first
#define s second
#define let(x,a) __typeof(a) x(a)
#define all(a) (a).begin(),(a).end() 
#define endl '\n'
#define present(c,x) ((c).find(x) != (c).end()) 
#define tr(v,it) for( let(it,v.begin()) ; it != v.end() ; it++)
#define rtr(v,it) for( let(it,v.rbegin()) ; it != v.rend() ; it++)
#define rep1(i,n) for(int i=0; i<(int)n;i++)
#define rep2(i,a,b) for(int i=(int)a; i<=(int)b; i++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define LL long long int
#define PII pair<int,int>
#define VI vector<int>
#define inf INT_MAX

using namespace std;

void FastIO()
{
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	cout.tie(NULL);
}

int main()
{
	FastIO();
	int k;
	cin>>k;
	if(k==0)
	{
		cout<<"+"<<endl;
	}
	else if(k==1)
	{
		cout<<"+*"<<endl;
		cout<<"*+"<<endl;
	}
	else if(k==2)
	{
		cout<<"++**"<<endl<<"+*+*"<<endl<<"++++"<<endl<<"+**+"<<endl;
	}
	else
	{
		vector< vector<string> > ans(10,vector<string>());
		ans[1].pb("+*");
		ans[1].pb("*+");
		ans[2].pb("++**");
		ans[2].pb("+*+*");
		ans[2].pb("++++");
		ans[2].pb("+**+");
		int n=k-2;
		for(int j=3;j<=9;j++)
		{
			for(int i=0;i<ans[j-2].size();i++)
			{
				string a=ans[j-2][i];
				string b="";
				rep1(l,a.length())
				{
					if(a[l]=='+') b+="*";
					else b+="+";
				}
				rep1(l,ans[2].size())
				{
					string temp=ans[2][l];
					string add="";
					rep1(h,temp.length())
					{
						if(temp[h]=='+') add+=a;
						else add+=b;
					}
					ans[j].pb(add);
				}
			}
		}
		rep1(i,ans[k].size())
		{
			cout<<ans[k][i]<<endl;
		}
	}
	return 0;
}