#include <bits/stdc++.h>

using namespace std;
string s;
set <string> store;
int n;
int v[100005];
int valid[100005];

int check_front( int i, int k ){
    if( i-k < 5 ||
	s.substr( i-k, k ) != s.substr( i, k ) )
	return 1;
    else return 0;
}

int check_back( int i, int k ){
    if( valid[i+k] ){
	if( i+k +k - 1 >= n ||
	    s.substr( i, k ) != s.substr( i+k, k ) )
	    return 1;
    }
    return 0;
}

void check_suffix( int i ){
    if( i < 5 ) return;
    if( check_front( i, 2 ) && check_back( i, 2 ) )
    {
	valid[ i ] = 1;
	store.insert( s.substr(i, 2 ) );
    }
    if( check_front( i, 3 ) && check_back( i, 3 ) )
    {
	valid[ i ] = 1;
	store.insert( s.substr( i, 3 ) );
    }
}

    
	
    

int main()
{
    ios::sync_with_stdio( false );
    cin >> s;
    n = s.size();
    valid[n] = 1;
    for(int i = n-1; i >= 5; i-- )
	check_suffix( i );
    int res=  0;
    for( auto x: store ) res++;
    cout << res << endl;
    for( auto x: store ){

	cout << x << endl;
    }


    return 0;
    
}
    
