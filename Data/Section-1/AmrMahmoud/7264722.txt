#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using  namespace  std;

int main()
{
    int n,m;
    cin >> n >> m;
    printf("0 0\n");
    printf("%d %d\n",n,m);
    double x = n + sqrt(pow(n,2) + pow(m,2)),y = m + sqrt(pow(n,2) + pow(m,2));
    double z = sqrt(pow(n,2) + pow(m-1,2)) + sqrt(pow(n-2,2) + pow(m,2)) ,zz = sqrt(pow(n,2) + pow(m-1,2)) + sqrt(pow(n-1,2) + pow(m-1,2));
    double xz = sqrt(pow(n-1,2) + pow(m,2)) + sqrt(pow(n,2) + pow(m-2,2)), xy = sqrt(pow(n-1,2) + pow(m,2)) + sqrt(pow(n-1,2) + pow(m-1,2));
    if(m == 0)
    {
        printf("1 0\n");
        printf("%d 0\n",n-1);
    }
    else if (n == 0)
    {
        printf("0 1\n");
        printf("0 %d\n",m-1);
    }
    else
    {
        if(x >= y && x >= z && x >= zz && x>= xz && x>=xy)
        {
            printf("0 %d\n",m);
            printf("%d 0\n",n);
        }
        else if(x <= y && y >= z && y >= zz && y>= xz && y>=xy)
        {
            printf("%d 0\n",n);
            printf("0 %d\n",m);
        }
        else if(z >= y && x <= z && z >= zz && z>= xz && z>=xy)
        {
            printf("1 0\n");
            printf("%d %d\n",n,m-1);
        }
        else if(zz >= y && zz >= z && x <= zz && zz>= xz && zz>=xy)
        {
            printf("1 0\n");
            printf("%d %d\n",n-1,m);
        }
        else if(xz >= y && xz >= z && xz >= zz && x<= xz && xz>=xy)
        {
            printf("0 1\n");
            printf("%d %d\n",n-1,m);
        }
        else
        {
            printf("0 1\n");
            printf("%d %d\n",n,m-1);
        }
    }
    return 0;
}