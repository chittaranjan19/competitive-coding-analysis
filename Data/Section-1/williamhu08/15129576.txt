#include <bits/stdc++.h>

using namespace std;

#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define rep(it, v) for (auto it = (v).begin(); it != (v).end(); it++)
#define rwfile(f) freopen(f".in", "r", stdin); freopen(f".out", "w", stdout)
#define fi first
#define se second

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

int N;
int asdf[3], &A = asdf[0], &B = asdf[1], &C = asdf[2];
multiset<int> st;

bool kill (int x) {
	if (st.empty()) {
		return false;
	}
	auto it = st.upper_bound(x);
	if (it != st.begin()) {
		st.erase(prev(it));
		return true;
	}
	return false;
}

int main() {
	//bad
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	scanf("%d %d %d %d", &N, &A, &B, &C);
	sort(asdf, asdf + 3);
	int ans = 0;
	for (int i = 0, x; i < N; i++) {
		scanf("%d", &x);
		if (x > A + B + C) {
			puts("-1");
			return 0;
		} else if (x > B + C) {
			ans++;
		} else {
			st.insert(x);
		}
	}
	//A + B + C > B + C > A + C > (A + B, C)
	//took care of between A + B + C, B + C
	//now (A + C, B + C]
	while (!st.empty()) {
		//delete B + C
		auto it = prev(st.end());
		int t = *it;
		if (t <= A + C) {
			break;
		}
		ans++;
		st.erase(it);
		//delete A
		kill(A);
	}

	//ok let's now delete A + C
	while (!st.empty()) {
		//delete A + C
		auto it = prev(st.end());
		int t = *it;
		if (t <= max(C, A + B)) {
			break;
		}
		ans++;
		st.erase(it);
		//delete A
		kill(B);
	}

	//everything is now <= max(A + B, C)
	if (A + B >= C) {
		//delete everything between C and A + B, kill it with A + B
		while (!st.empty()) {
			auto it = prev(st.end());
			int t = *it;
			if (t <= C) {
				break;
			}
			ans++;
			st.erase(it);
			kill(C);
		}
	}

	//now everything is the same. everything is <= C
	//kill with C, and choose what to kill with A + B or A,B

	while (!st.empty()) {
		//C kills
		ans++;
		st.erase(prev(st.end()));
		//A + B kills or A, B
		//if anything only B can do himself, then do it!
		//figure we might just kill with B, why not?
		if (kill(B)) {
			kill(A);
		} else {
			kill(A + B);
		}
	}

	printf("%d\n", ans);
}