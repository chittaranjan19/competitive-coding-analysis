#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
#include <fstream>
#include <tuple>
#include <iomanip>

using namespace std;

#define forn(i, n) for (int i = 0; i < int(n); ++i)
#define for1(i, n) for (int i = 1; i < int(n); ++i)
#define ford(i, n) for (int i = int(n) - 1; i >= 0; --i)
#define fore(i, l, r) for (int i = int(l); i <= int(r); ++i)
#define all(a) a.begin(), a.end()
#define sz(a) (int(a.size()))
#define mp make_pair
#define pb push_back
#define ft first
#define sc second
#define g(a, b) get<a> (b)

typedef int ll;
typedef long double ld;
typedef pair<int, int> pt;

const int MAX_N = 2e4;
const int mod = 1e9 + 7;

int main(){
    string s;
    cin >> s;
    long double sum = 0;
    int l = 0, r = 0;
    while(l != s.size()){
        while(l < s.size() && (s[l] < '0' || s[l] > '9')) l++;
        vector <char> ans;
        for (r = l; (r < s.size() && s[r] >= '0' && s[r] <= '9') || s[r] =='.' ; r++) if (s[r] !='.')ans.pb(s[r]);
        r--;
        if (ans.size() >= 2){
            if (s[r - 2] == '.'){
                ld e = 0, t = 0;
                e = (ld)(s[r - 1] - '0') / 10 + (ld)(s[r] - '0') / 100;
                for (int i = 0; i < (int)ans.size() - 2; i++){
                    t = t * 10 + (ans[i] - '0');}
                sum += (e + t);
            }
            else{
            ld e = 0, t = 0;
               for (int i = 0; i < (int)ans.size(); i++)
                    t = t * 10 + (ans[i] - '0');
                sum += (e + t);
            }
        }
        else{
            ld e = 0, t = 0;
               for (int i = 0; i < (int)ans.size(); i++)
                    t = t * 10 + (ans[i] - '0');
                sum += (e + t);
            }
        l = r + 1;
    }
    cout << setprecision(5);
    ll e = (ll) sum;
    ld t = sum - e;
    vector <int> anse;
    while(e != 0){
        ll q = e % 1000;
        e = e / 1000;
        anse.pb(q);
    }
    for (int i = (int)anse.size() - 1; i >= 0; i--){
        if (i != 0)cout << anse[i] << ".";
        else  t += (ld)anse[i];
    }
    if (anse.size() == 0){
        cout << t;
        return 0;
    }
    cout << t << endl;
    return 0;
}