/*   Hello World! */

#include <bits/stdc++.h>

#define pb push_back
#define pf push_front
#define mp make_pair
#define f first
#define s second
#define let(x,a) __typeof(a) x(a)
#define all(a) (a).begin(),(a).end() 
#define endl '\n'
#define present(c,x) ((c).find(x) != (c).end()) 
#define tr(v,it) for( let(it,v.begin()) ; it != v.end() ; it++)
#define rtr(v,it) for( let(it,v.rbegin()) ; it != v.rend() ; it++)
#define rep1(i,n) for(int i=0; i<(int)n;i++)
#define rep2(i,a,b) for(int i=(int)a; i<=(int)b; i++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define LL long long int
#define PII pair<int,int>
#define VI vector<int>
#define inf INT_MAX

using namespace std;

void FastIO()
{
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  cout.tie(NULL);
}

int main()
{
  FastIO();
  int n,m,type,r,pos,prevType,prevR,prev;
  cin>>n>>m;
  int L=0,R=n-1;
  VI a(n,0);
  vector< pair<int,PII> > V;
  VI Q;
  for(int i=0;i<n;i++)
  {
    cin>>a[i];
  }
  for(int i=0;i<m;i++)
  {
    cin>>type>>r;
    V.pb(mp(-r,mp(-i,type)));
  }
  sort(all(V));
  V.pb(mp(0,mp(-1e9,3)));
  prev=-1; prevType=0; prevR=n;
  for(int i=0;i<=m;i++)
  {
    type=V[i].s.s;
    r=-V[i].f;
    pos=-V[i].s.f;
    if(pos<=prev) continue;
    if(type==prevType) continue;
    //trace1(i);
    if(i==0)
    {
      for(int j=0;j<r;j++)
      {
        Q.pb(a[j]);
      }
      sort(all(Q));
      for(int j=0;j<r;j++)
      {
        if(type==1) a[j]=Q[j];
        else a[j]=Q[r-j-1];
      }
      L=0; R=r-1;
      prev=pos;
    }
    else if(r!=prevR)
    {
      //trace1(r);
      if(prevType==1)
      {
        //trace4(r,prevType,prevR,r);
        for(int i=prevR-1;i>=r;i--)
        {
          a[i]=Q[R--];
        }
      }
      else
      {
        //trace4(r,prevType,prevR,r);
        for(int i=prevR-1;i>=r;i--)
        {
          a[i]=Q[L++];
        }
      }
      prev=pos;
    }
    prevType=type;
    prevR=r;
  }
  for(int i=0;i<n;i++)
  {
    cout<<a[i]<<" ";
  }
  cout<<endl;
  return 0;
}