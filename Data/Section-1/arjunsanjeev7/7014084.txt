// Painting Eggs

#include <algorithm>
#include <bits/stdc++.h>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

class C
{
public:
	int a;
	int b;
	int diff;
	int pos;
	char c;
};

bool cmp1(C x, C y)
{
	return fabs(x.diff)<fabs(y.diff);
}

bool cmp2(C x, C y)
{
	return (x.pos)<(y.pos);
}

int main()
{
	int n,a,b,i;
	cin>>n;
	C arr[n];
	for(i=0;i<n;i++)
	{
		cin>>a>>b;
		if(n==1) goto jump;
		arr[i].a=a;
		arr[i].b=b;
		arr[i].diff=a-b;
		arr[i].pos=i;
	}
	sort(arr,arr+n,cmp1);
	arr[0].c='A';
	int S=arr[0].a,flag=0;
	for(i=1;i<n;i++)
	{
		if(fabs(S+arr[i].a)<=500)
		{
			arr[i].c='A'; 
			S+=arr[i].a;
		}
		else if(fabs(S-arr[i].b)<=500)
		{
			arr[i].c='G';
			S-=arr[i].b;
		}
		else {flag=1; break;}
	}
	if(flag==0)
	{
		sort(arr,arr+n,cmp2);
		for(i=0;i<n;i++)
		{
			cout<<arr[i].c;
		}
		cout<<endl;
	}
	else 
	{
		arr[0].c='G';
		S=arr[0].b,flag=0;
		for(i=1;i<n;i++)
		{
			if(fabs(S+arr[i].b)<=500)
			{
				arr[i].c='G'; 
				S+=arr[i].b;
			}
			else if(fabs(S-arr[i].a)<=500)
			{
				arr[i].c='A';
				S-=arr[i].a;
			}
			else {flag=1; break;}
		}
		if(flag==0)
		{
			sort(arr,arr+n,cmp2);
			for(i=0;i<n;i++)
			{
				cout<<arr[i].c;
			}
			cout<<endl;
		}
		else cout<<"-1"<<endl;
	}
	jump: if(n==1 && a<b) cout<<a<<endl;
	else if(n==1 && b<=a) cout<<b<<endl;
	return 0;
}