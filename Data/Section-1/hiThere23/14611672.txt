#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 300005
#define maxC 1000000007
#define pb push_back
#define F first
#define S second

using namespace std;
int n, m, dp[mn], ans = 1, temp[mn], top = 0;
pair< int, pair<int, int> > edge[mn];

void setup()
{
    cin >> n >> m;
    FOR(i, 1, m)
        cin >> edge[i].S.F >> edge[i].S.S >> edge[i].F;
    sort(edge + 1, edge + m + 1);
    FOR(i, 1, m)
    {
        while(edge[top + 1].F < edge[i].F)
        {
            top ++;
            dp[edge[top].S.F] = max(dp[edge[top].S.F], temp[edge[top].S.F]);
            dp[edge[top].S.S] = max(dp[edge[top].S.S], temp[edge[top].S.S]);
            temp[edge[top].S.F] = temp[edge[top].S.S] = 0;
        }
        temp[edge[i].S.F] = max(temp[edge[i].S.F], dp[edge[i].S.S] + 1);
        temp[edge[i].S.S] = max(temp[edge[i].S.S], dp[edge[i].S.F] + 1);

    }
    while(top < m)
    {
        top ++;
        dp[edge[top].S.F] = max(dp[edge[top].S.F], temp[edge[top].S.F]);
        dp[edge[top].S.S] = max(dp[edge[top].S.S], temp[edge[top].S.S]);
    }
    FOR(i, 1, n)
        ans = max(ans, dp[i]);
    cout << ans;
}

void xuly ()
{

}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
