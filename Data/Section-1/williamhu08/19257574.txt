//screw this problem
#include <bits/stdc++.h>

using namespace std;
const int MAXN = 20;

#define fi first
#define se second

int N, K;
double P[MAXN];
pair<double, double> dp[1 << MAXN];	//just one, all the way till the end!

int main() {
	scanf("%d %d", &N, &K);
	for (int i = 0; i < N; i++) {
		scanf("%lf", &P[i]);
		if (P[i] == 1) {
			for (int j = 0; j < i; j++) {
				printf("0 ");
			}
			printf("1");
			for (int j = i + 1; j < N; j++) {
				printf(" 0");
			}
			return 0;
		}
	}
	dp[0] = make_pair(1, 1);
	for (int i = 1; i < (1 << N); i++) {
		for (int j = 0; j < N; j++) {
			if (i & (1 << j)) {
				int pi = i ^ (1 << j);
				dp[i].fi += P[j] * dp[pi].se;
				dp[i].se += P[j] / (1 - P[j]) * dp[pi].se;
			}
		}
	}

	for (int i = 0; i < N; i++) {
		double ans = 0;
		for (int j = 0; j < (1 << N); j++) {
			if ((j & (1 << i)) && __builtin_popcount(j) == K) {
				ans += dp[j].fi;
			}
		}
		printf("%.10lf ", ans);
	}
}
