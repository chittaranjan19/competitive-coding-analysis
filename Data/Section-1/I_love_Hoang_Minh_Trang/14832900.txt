#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;
int n, h;
int a[MAXN];
void add(int &a, int b)
{
    a += b;
    if (a >= INF) a -= INF;
}

int f[2011][2011];
int duyet(int i, int c)
{
    //cout <<i<<" "<<c<<endl;
    if (f[i][c] > -1) return f[i][c];
    if (i > n) return c == 0;
    int ans = 0;
    int cur = a[i] + c;
    if (cur < h - 1 || cur > h) return 0;

    if (cur == h){
        //do nothing
        add(ans, duyet(i + 1, c));
        if (c) add(ans, (1LL * duyet(i + 1, c - 1) * c) % INF);
    }
    if (cur == h - 1){
        add(ans, (1LL * duyet(i + 1, c) * (c + 1)) % INF );
        add(ans, duyet(i + 1, c + 1));
    }
    f[i][c] = ans;
    return ans;
}

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("466D.inp", "r", stdin);
    freopen("466D.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n >> h;
    FORE(i, 1, n) cin >> a[i];
    memset(f, -1, sizeof(f));
    cout << duyet(1, 0) << endl;
    return 0;
}

