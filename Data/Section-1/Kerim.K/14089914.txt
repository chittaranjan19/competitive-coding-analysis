#include<bits/stdc++.h>
#define MAXN 200009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define ff first
#define ss second
#define lgN 19
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef  long long int ull;
typedef pair<ull,ull> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
vector<PII>E[MAXN];
ull lvl[MAXN],P[MAXN][lgN+9],a,b,y;
long long int ds[MAXN],ans[MAXN];
pair<PII,ull> rr[MAXN];
ull tap(ull h){
	if(ds[h]==h)
		return h;
	ds[h]=tap(ds[h]);	
}
void change(ull q1,ull q2){
	ds[q1]=q2;
}
void dfs(ull nd,ull par)
{
	lvl[nd]=lvl[par]+1;
	P[nd][0]=par;
	for(ull i=0;i<E[nd].size();i++){
		if(E[nd][i].ff!=par){
			if(E[nd][i].ss==1)
				change(tap(E[nd][i].ff),tap(nd));
			ans[E[nd][i].ff]=E[nd][i].ss;	
			dfs(E[nd][i].ff,nd);
		}
	}
}
void build()
{
	for(ull j=1;j<lgN;j++)
		for(ull i=1;i<=a;i++)
			if(P[i][j-1]!=-1)
				P[i][j]=P[P[i][j-1]][j-1];//f[i][j]=f[i][j-1]*f[P[i][j-1]][j-1];
}
ull LCA(ull x,ull y)
{
	if(lvl[x]<lvl[y])
		swap(x,y);
	for(ull i=lgN;i>=0;i--)
		if(lvl[x]-(1<<i)>=lvl[y])
			x=P[x][i];
	if(x==y)
		return x;	
	for(ull i=lgN;i>=0;i--)
		if(P[x][i]!=-1 and P[x][i]!=P[y][i])
			x=P[x][i],y=P[y][i];
	return P[x][0];
}
void get(ull k,ull l){
	 while(y>=1){
	 	ull a1=tap(k);
	 	if(a1==l)	
	 		break;	
	 	y/=ans[a1];
		k=P[a1][0];	
	 }
}
void upd( long long int x, long long int y){
	ans[x]=y;
	if(y==1)
		change(tap(x),tap(P[tap(x)][0]));
}
int main()
{
	cin>>a>>b;
	for(ull i=1;i<a;i++)
	{
		ull x,y,z;
		scanf("%lld%lld%lld",&x,&y,&z);
		E[x].pb(mp(y,z));
		E[y].pb(mp(x,z));
		rr[i]=mp(mp(x,y),z);
		ds[i]=i;
	}
	ds[a]=a;
	for(ull i=1;i<=a;i++)
		for(ull j=0;j<=lgN;j++)
			P[i][j]=-1;
	dfs(1,0);
	build();
	while(b--){
		long long int n,m,f,type;
		scanf("%lld%lld%lld",&type,&n,&m);
		if(type==1){
			f=LCA(n,m);
			scanf("%lld",&y);
			ull ff=tap(f);
			get(n,ff);
			get(m,ff);
			printf("%lld\n",y);	
		}
		else{
			long long int u=rr[n].ff.ff,v=rr[n].ff.ss;
			if(P[u][0]==v)
				upd(u,m);
			else
				upd(v,m);	
		}
	}
	return 0;
}
/*
6 6
1 2 2
1 3 7
1 4 4
2 5 5
2 6 2
*/