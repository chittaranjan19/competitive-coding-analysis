#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

#define ll long long
#define ld long long double

using namespace std;

const ll inf = (ll)2 * 1e18;
const ll MOD = (ll)1e9 + 7;
const ll P = 239;
const ll MAX_N = 500000;
const long double pi = 3.1415926535897932384626;
const long double eps = 1e-6;

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    //freopen("output.txt", "r", stdin);
    freopen("test.txt", "w", stdout);
    srand(time(0));
    ll n = 2000;
    ll a[n][2];
    for (ll i = 0; i < 2000; i++)
    {
        a[i][0] = rand() % 10001 + 999990000;
        a[i][1] = rand() % 10001 + 999990000;
    }
    cout << n << endl;
    set<pair<long double, long double> > s;
    for (ll i = 0; i < n; i++)
    {
        while (true)
        {
            bool b = true;
            for (ll j = 0; j < i; j++)
            {
                long double k = (long double)(a[j][1] - a[i][1]) / (a[j][0] - a[i][0]), b1 = (long double)a[i][1] - (long double)a[i][0] * k;
                if (s.find(make_pair(k, b1)) != s.end())
                {
                    b = false;
                    break;
                }
            }
            if (b)
            {
                for (ll j = 0; j < i; j++)
                {
                    long double k = (long double)(a[j][1] - a[i][1]) / (a[j][0] - a[i][0]), b1 = (long double)a[i][1] - (long double)a[i][0] * k;
                    s.insert(make_pair(k, b1));
                }
                break;
            }
            else
            {
                a[i][0] = rand() % 10001 + 999990000;
                a[i][1] = rand() % 10001 + 999990000;
            }
        }
    }
    for (ll i = 0; i < n; i++)
        cout << a[i][0] << " " << a[i][1] << endl;
    return 0;
}
