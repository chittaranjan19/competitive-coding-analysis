#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
using namespace std;
#define ll long long
#define ld long double
#define vi vector<int>
#define pb push_back
#define pii pair<int, int>
#define mp make_pair
#define st first
#define nd second
#define mini(a,b) a=min(a,(b))
#define maxi(a,b) a=max(a,(b))
#define RE(i,n) for(int i = 0, _n = (n); i < _n; ++i)
#define RI(i,n) for(int i = 1, _n = (n); i <= _n; ++i)
const int inf = 1e9 + 5, nax = 5e3 + 5;
const int pot = 8 * 1024;
const ll mod = 1e9 + 7;

ll tr[2 * pot + 5];
ll pom[nax];

int main()
{
    ios_base :: sync_with_stdio(false);
    
    int n, start, nie, k;
    cin >> n >> start >> nie >> k;
    
    RI(i, n) if(i != nie) tr[pot + i] = 1;
    for(int i = pot - 1; i > 0; --i) tr[i] = (tr[2*i] + tr[2*i+1]) % mod;
    
    while(k--) {
        RI(a, n) {
            if(a == nie) {
                pom[a] = 0;
                continue;
            }
            ll licz = 0;
            int del = abs(a - nie);
            int low = pot + max(1, a - del + 1);
            int high = pot + min(n, a + del - 1);
            licz = tr[low];
            if(high != low) licz += tr[high];
            while(low < high - 1) {
                if(low % 2 == 0) licz += tr[low + 1];
                if(high % 2) licz += tr[high - 1];
                low /= 2;
                high /= 2;
            }
            licz -= tr[pot + a];
            if(licz < 0) licz += mod;
            pom[a] = licz % mod;
        }
        RI(i, n) tr[pot + i] = pom[i];
        for(int i = pot - 1; i > 0; --i) tr[i] = (tr[2*i] + tr[2*i+1]) % mod;
    }
    cout << tr[pot + start];
    return 0;
}
