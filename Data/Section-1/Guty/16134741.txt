#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint toNumber (string s)
{
	tint Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (tint number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}

struct Caracter
{
	char c;
	bool usado;
	Caracter(char cc, bool uu)
	{
		c = cc;
		usado = uu;
	}
};


int main()
{
	#ifdef ACMTUYO
	if (!freopen("entrada.in", "r", stdin))
		return 1;
	#endif
	ios_base::sync_with_stdio(0);
	int n,m;
	while (cin >> n >> m)
	{
		vector<Caracter> s (n,Caracter('a',false));
		vector<vector<bool> > adj(n,vector<bool> (n,false));
		forn(i,m)
		{
			int u,v;
			cin >> u >> v;
			adj[u-1][v-1] = adj[v-1][u-1] = true;
		}
		bool sePuede = true;
		forn(i,n)
		{
			forsn(j,i+1,n)
			{
				if (!adj[i][j] && !s[j].usado)
				{
					s[i].usado = true;
					if (s[i].c == 'a')
						s[j].c = 'c';
					else
						s[j].c = 'a';
					s[j].usado = true;
				}
				else if (!adj[i][j] && s[i].c != s[j].c)
					s[i].usado = true;
				else if (!adj[i][j] && s[i].c == s[j].c)
				{
					sePuede = false;
					break;
				}	
			}
			if (!sePuede)
				break;
		}
		if (sePuede)
		{
			cout << "Yes" << endl;
			forn(i,n)
			{
				if (s[i].usado)
					cout << s[i].c;
				else
					cout << 'b';
			}
			cout << endl;
		}
		else
			cout << "No" << endl;
	}
	return 0;
}


