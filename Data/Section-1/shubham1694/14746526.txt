#include <iostream>
#include <string>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <functional>
#include <algorithm>
#include <climits>
#include <list>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <stack>
#include <queue>
#include <vector>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define ll long long
#define f first
#define s second

typedef pair<int, int> pii;

const int mod = 1000007;
const int inf = 50000000;
const int maxn = 1555;
const ll a = 141;

char str[maxn], good[26];
int cnt[maxn][26];
ll fhash[maxn], pa[maxn];
map<ll, int> m1;

int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    int t, i, j, k, n, m, f, lim, lo, mid, hi;
    ll x, y;
    t = 1;
    pa[0] = 1;
    for(i=1; i<maxn; i++)
        pa[i] = (pa[i-1]*a)%mod;    
    string s;
    //sd(t);
    while(t--){
        scanf("%s%s%d", str+1, good, &k);
        n = strlen(str+1);
        for(i=1; i<=n; i++){
            for(j=0; j<26; j++)
                cnt[i][j] = cnt[i-1][j];
            cnt[i][str[i]-'a']++;
        }
        int ans = 0;
        for(i=1; i<=n; i++){
            lo = i-1, hi = n;
            lim = -1;
            while(lo<hi){
                mid = (lo+hi)>>1;
                if((lo+hi)%2)
                    mid++;
                f = 0;
                for(j=0; j<26; j++){
                    if(good[j]=='0')
                        f+=(cnt[mid][j]-cnt[i-1][j]);
                }
                //cout << i << " " << mid << " " << f << " " << k << "\n";
                if(f>k)
                    hi = mid-1;
                else{
                    lim = mid;
                    lo = mid;
                }
            }
//          cout << lim << "\n";
            if(lim!=-1){
                x = 0;
                for(j=i; j<=lim; j++){
                    y = (pa[j-i]*1ll*(str[j]-'a'+1))%mod;
                    x = (x+y)%mod;
                    if(m1.find(x)==m1.end()){
//                      cout << i << " " << j << "\n";
                        m1[x] = 1;
                        ans++;
                    }
                }
            }
        }
        printf("%d\n", ans);
    }
    return 0;
}
