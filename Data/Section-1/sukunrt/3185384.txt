#include<iostream>
#include<sstream>
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<bitset>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
using namespace std;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define ALL(c) (c).begin(),(c).end()
#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;
int l[1000];
int r[1000];
unsigned long long n;
void solve(unsigned long long a,unsigned long long b){
    int x= 0;
    while(a){
        l[x++] = a&1;
        a = a >> 1;
    }
    int llen = x;
    x = 0;
    while (b){
        r[x++] = b&1;
        b = b >> 1;
    }
    int j = llen-x;
    int i;
    for(i = x-1; i >= 0; i--){
        if (l[i] == r[i])
            continue;
        else
            break;
    }
    unsigned long long t = 1;
    if (i < 0)
        return;

    while (i >= 0){
        t = t * 2;
        i--;
    }
    n = t - 1; 
    return;
}

    
                
    
        
int main(){
    unsigned long long a,b;
    cin >> a >> b;
    solve(a,b);
    cout << n <<  endl;

    return 0;
}

