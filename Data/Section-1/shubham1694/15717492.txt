#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

typedef vector< vector<ll> > matrix;
int cnt[maxn];

matrix m_mul(matrix a, matrix b)
{
	int i, j, k, m;
	m = a.size();
	matrix c(m, vector<ll>(m));
	for(i=0; i<m; i++){
		for(j=0; j<m; j++){
			c[i][j] = 0;
			for(k=0; k<m; k++){
				c[i][j] += (a[i][k]*b[k][j]);
				if(c[i][j]>mod)
					c[i][j]-=mod; 
			}
		}
	}
	return c;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int n, b, k, x, i, j, nxt;
	scanf("%d%d%d%d", &n, &b, &k, &x);
	for(i=1; i<=n; i++){
		sd(j);
		cnt[j]++;
	}
	matrix ret1(x, vector<ll>(x));
	matrix ret2(x, vector<ll>(x));
	for(i=0; i<x; i++){
		for(j=0; j<x; j++)
			ret2[i][j] = ret1[i][j] = 0;
		ret2[i][i] = 1;
	}
	for(i=0; i<x; i++){
		for(j=0; j<=9; j++){
			nxt = (i*10 + j)%x;
			ret1[nxt][i]+=cnt[j];
		}
	}
	while(b){
		if(b&1)
			ret2 = m_mul(ret1, ret2);
		ret1 = m_mul(ret1, ret1);
		b/=2;
	}
	printf("%lld\n", ret2[k][0]);
	return 0;
}
