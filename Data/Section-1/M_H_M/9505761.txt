#include <iostream>
#include <vector>

#define SZ(x) (( int( x.size() ) ))

using namespace std;

string s,tmp;
vector <string> v;
long long ans;

void fill_vec(){
	for(int i = 0; i < SZ(s); ++i){
		if(s[i] != '@'){
			tmp += s[i];
		}
		else{
			v.push_back(tmp);
			tmp = "";
		}
	}
	v.push_back(tmp);
}

long long pref(string t){
	long long  first = 0 , count = 0;
	for(int i = 0; i < SZ(t); ++i){
		if(!( (t[i] >= 'a' && t[i] <= 'z') || (t[i] >= '1' && t[i] <= '9') || (t[i] == '_') )){
			first = i + 1;
		}
	}
	for(int i = first; i < SZ(t); ++i){
		if(t[i] >= 'a' && t[i]<'z')
			count++;
	}
	return count;
}

long long suff(string t){
	long long count = 0;
	bool f = 0;
	for(int i = 0; i < SZ(t); ++i){
		if(!f && t[i] == '_')
			return 0;
		if(t[i] == '.'){
			if(f == 1)
				return 0;
			f = 1;
			continue;
		}
		if(!(t[i] >= 'a' && t[i] <= 'z') && f == 1){
			f = 0;
			break;
		}
		if(f)
			count ++;
	}
	return count;
}

int main(){
	cin >> s;
	fill_vec();
	for(int i = 1; i < SZ(v); ++i){
		//cerr << pref(v[i-1]) << " " << suff(v[i]) << endl;
		ans += pref(v[i-1]) * suff(v[i]);
	}
	cout << ans << endl;
	return 0;
}
