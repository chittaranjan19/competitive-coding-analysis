#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"--------------"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
short dp[509][509][509];
int arr[509],n;
int rr[509],m;
short rec(int x,int y,int z){
	if(x>n or y>m)
		return dp[x][y][z]=0;
	short &ret=dp[x][y][z];
	if(ret!=-1)
		return ret;
	ret=rec(x+1,y,z);
	umax(ret,rec(x,y+1,z));
	if(arr[x]==rr[y] and arr[x]>arr[z])
		umax(ret,short(rec(x+1,y+1,x)+1));
	return ret;	
}
void yaz(int x,int y,int z){
	if(x>n or y>m)
		return;
	int ret=dp[x][y][z];
	if(ret==dp[x+1][y][z]){
		yaz(x+1,y,z);
		return;
	}
	if(ret==dp[x][y+1][z]){
		yaz(x,y+1,z);
		return;
	}
	if(arr[x]==rr[y] and arr[x]>arr[z] and dp[x+1][y+1][x]+1==ret){
		printf("%d ",arr[x]);
		yaz(x+1,y+1,x);
	}
}
int main(){
	memset(dp,-1,sizeof(dp));
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
		scanf("%d",arr+i);
	scanf("%d",&m);arr[0]=-1;
	for(int i=1;i<=m;i++)
		scanf("%d",rr+i);	
	cout<<rec(1,1,0)<<endl;
	yaz(1,1,0);	
/*	for(int z=0;z<=n;z++)
		for(int y=1;y<=m+1;y++)
			dp[0][y][z]=0;	
	int st=1,en=0;	
	vector<int>vec;
	for(int x=n;x>=1;x--){
		for(int y=m;y>=1;y--)
			for(int z=0;z<=n;z++){
				int &ret=dp[st][y][z];
				ret=dp[en][y][z];
				umax(ret,dp[st][y+1][z]);
				if(arr[x]==rr[y] and arr[x]>arr[z]){
					if(umax(ret,dp[en][y+1][x]+1))
						vec.pb(arr[x]);	
				}
			}
		swap(st,en);
	}
	printf("%d\n",dp[en][1][0]);
	tr(it,vec)
		printf("%d ",*it);
	printf("\n");*/	
	return 0;
}

