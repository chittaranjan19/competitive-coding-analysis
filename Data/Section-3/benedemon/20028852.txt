#include <iostream>
#include <vector>
#include <string.h>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <queue>
#include <math.h>
#define ll long long
#define pb push_back
#define mp make_pair
#define traverse(container, it) \
for(typeof(container.begin()) it = container.begin(); it!= container.end(); it++)
using namespace std;

int gcd(int a, int b){ if(b==0) return a; return gcd(b,a%b); }

void setbool(bool a[], int n, bool x){for(int i=0;i<n;i++){a[i] = x;}}

void setint(int a[], int n, int x){for(int i=0;i<n;i++){a[i] = x;}}

vector<int> v;
vector<int> beauty;
void add(int &ans, int xind, int yind)
{
    if(v[xind] == 1 || v[yind]==1)
        return;
    else
    {
        ans += beauty[xind]*beauty[yind];
    }
}

int main(int argc, const char * argv[]) {
 
    
    int n, k, temp1, temp, sum, ans;
    
    cin>>n>>k;
    v = vector<int> (n+1, 0);
    temp1=n;
    sum=0;
    while(temp1--)
    {
        cin>>temp;
        beauty.pb(temp);
        sum+=temp;
    }
    ans=0;
    
    while(k--)
    {
        cin>>temp;
        v[temp-1] = 1;
        ans += beauty[temp-1]*(sum-beauty[temp-1]);
    }
    
    for(int i=1;i<n;i++)
    {
        if(v[i]==1 && v[i-1]==1)
        {
            ans -= beauty[i]*beauty[i-1];
        }
        
        add(ans, i, i-1);
    }
    if(v[0]==1 && v[n-1]==1)
        ans-= beauty[0]*beauty[n-1];
    
    add(ans, 0, n-1);
    
    cout<<ans<<endl;
    
    
    return 0;
}
