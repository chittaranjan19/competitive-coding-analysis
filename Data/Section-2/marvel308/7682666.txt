#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <climits>
#include <cstring>
#include <cassert>
#include <algorithm>
#include <vector>
#include <string>
#include <list>
#include <map>
#include <set>

using namespace std;
typedef long long int int64;
typedef pair<int, int> pii;
typedef pair<pii, pii> ppp;
#define MP make_pair
#define X first
#define Y second

#if defined ORDEBUG
#define Eo(x) {cerr << #x << " = " << (x) << '\n';}
#define E(x) {cerr << #x << " = " << (x) << ' ';}
#define E1(x) {cerr << (x);}
#else
#define Eo(x)
#define E(x)
#define E1(x)
#endif

const int N = 55;
int c[N], a[N][N];
int x[N * N], y[N * N];

vector<ppp> res;

int main() {
    int n;
    scanf("%d", &n);
    for (int i = 0; i < n; ++i) scanf("%d", c + i);
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < c[i]; ++j) {
            scanf("%d", &a[i][j]);
            x[ a[i][j] ] = i;
            y[ a[i][j] ] = j;
        }
    }
    
    int v = 0;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < c[i]; ++j) {
            ++v;
            if (a[i][j] != v) {
                res.push_back( MP(MP(i + 1, j + 1), MP(x[v] + 1, y[v] + 1)) );
                int oldv = a[i][j];
                swap(a[i][j], a[ x[v] ][ y[v] ]);
                x[oldv] = x[v];
                y[oldv] = y[v];
                x[v] = i;
                y[v] = j;
            }
        }
    }
    printf("%d\n", res.size());
    for (int i = 0; i < res.size(); ++i) {
        printf("%d %d %d %d\n", res[i].X.X, res[i].X.Y, res[i].Y.X, res[i].Y.Y);
    }

    return 0;
}