#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
#include <fstream>
#include <tuple>
#include <iomanip>

using namespace std;

#define forn(i, n) for (int i = 0; i < int(n); ++i)
#define for1(i, n) for (int i = 1; i < int(n); ++i)
#define ford(i, n) for (int i = int(n) - 1; i >= 0; --i)
#define fore(i, l, r) for (int i = int(l); i <= int(r); ++i)
#define all(a) a.begin(), a.end()
#define sz(a) (int(a.size()))
#define mp make_pair
#define pb push_back
#define ft first
#define sc second
#define g(a, b) get<a> (b)

typedef int ll;
typedef long double ld;
typedef pair<int, int> pt;

const int MAX_N = 2e5;

int main(){
    int x, y, x0, y0;
    cin >> x >> y >> x0 >> y0;
    string s;
    cin >> s;
    int use[505][505] = {0, };
    int kol = 1;
    use[x0][y0] = 1;
    printf("1 ");
    for (int i = 0; i < (int)s.size() - 1; i++){
        if (s[i] == 'U') x0 = max(x0 - 1, 1);
        else if (s[i] == 'D') x0 = min(x0 + 1, x);
        else if (s[i] == 'R') y0 = min(y0 + 1, y);
        else if (s[i] == 'L') y0 = max(y0 - 1, 1);
        use[x0][y0]++;
        if (use[x0][y0] > 1){
            printf("0 ");
        }
        else {printf("1 "); kol++;}
    }
    printf("%d", (x * y - kol));
    return 0;
}