#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define lg(x) ceil(log2(x))
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN];
map<int,int>vis;
map<int,vector<int> > pm;
queue<int>q;
int fun(int s,int h){
	for(int i=0;i<pm[h].size();i++)
		if(pm[h][i]==s)
			return 1;
	return 0;			
}
int main(){
	int n,k;
	cin>>n>>k;
	for(int i=0;i<n;i++)
		cin>>arr[i],q.push(arr[i]),vis[arr[i]]=1,pm[arr[i]].pb(arr[i]);
	while(k>=1 and !q.empty()){
		int nd=q.front();
		cout<<pm[nd].size()<<" ";
		for(int i=0;i<pm[nd].size();i++)
			cout<<pm[nd][i]<<" ";
		cout<<endl;	
		k--;
		q.pop();	
		for(int i=0;i<n;i++){
			if(vis[nd+arr[i]]==0 and !fun(arr[i],nd)){
				vis[nd+arr[i]]=1;
				for(int j=0;j<pm[nd].size();j++)
					pm[nd+arr[i]].pb(pm[nd][j]);
				pm[nd+arr[i]].pb(arr[i]);
				q.push(nd+arr[i]);
			}
		}
	}
	return 0;
}
