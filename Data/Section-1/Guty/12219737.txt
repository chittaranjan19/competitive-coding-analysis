#include <iostream>
#include <vector>
#include <string>
#include <queue>
#include <map>
#include <cmath>
#include <algorithm>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
    if (!v.empty())
    { 
        int p = v.size();
        cout << "[";
        forn(i,p-1)
            cout << v[i] << ",";
        cout << v[p-1] << "]" << endl;
    }
    else
        cout << "[]" << endl;
}
int main(){
    int n,w,t,k,cont=0,p=0;
    cin >> n >> w;
    vector <int> pattern(w-1),campo(n-1);
    
    cin >> t;
    forn(i,n-1) {
        cin >> k;
        campo[i]=k-t;
        t=k;
    }
    
    //imprimirVector(campo);
    
    cin >> t;
    forn(i,w-1){
        cin >> k;
        pattern[i]=k-t;
        t=k;
    }
    
    //imprimirVector(pattern);
    
    for(int i=0;i<n-w+1;i++)
        for(int j=0;j<w-1;j++){
			if(pattern[j]!=campo[i+j]){break;}
			else if(j==w-2) cont++;
		}
    cout << cont << endl;
}
