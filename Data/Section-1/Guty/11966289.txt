#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

bool sePuede(tint c, tint x, tint y, tint cnt1, tint cnt2)
{
	tint solo1 = c/y - c/(x*y);
	tint solo2 = c/x - c/(x*y);
	tint ambos = c - solo1 - solo2 - c/(x*y);
	tint zero = 0;
	tint cnt1N = max(zero,cnt1-solo1);
	tint cnt2N = max(zero,cnt2-solo2);
	return (cnt1N + cnt2N <= ambos);
		
}

int main()
{
	tint a = 1, b = 9000000000, c, cnt1, cnt2, x, y;
	cin >> cnt1 >> cnt2 >> x >> y;
	while(b - a > 1)
	{
		c = (a+b)/2;
		if (sePuede(c,x,y,cnt1,cnt2))
			b = c;
		else
			a = c;
	}
	cout << b << endl;
	return 0;
}
