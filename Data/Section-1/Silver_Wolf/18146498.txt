// In The Name Of ALLAH

#include<bits/stdc++.h>
#define LL long long
#define LB long double
#define ALL(X) X.begin(),X.end()
#define DD(X) cout<<#X<<' '<<X<<endl;
#define Speed_Up; ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define int long long
using namespace std;

const long long MOD=1000*1000*1000+7;
const long long MAXN=110;
const long long MAXM=200+50;
const long long INF=1e9+7;

const long long dx[4]={0,0,-1,+1};
const long long dy[4]={+1,-1,0,0};

ifstream fin("input.txt");
ofstream fout("output.txt");

map<int,int>mp;
vector<int>val,v;
int front[MAXN];
int back[MAXN];

int ipow(int base, int exp)
{
	if ( ! exp ) return 1 ;
    if ( exp % 2 )
    	return base * ipow( base , exp-1 ) % MOD ; 
    return ipow( base , exp / 2 ) * ipow( base , exp / 2 ) % MOD ;
}

main(){
	Speed_Up;
	int m;
	cin>>m;
	for(int i=0;i<m;i++){
		int x;
		cin>>x;
		mp[x]++;
	}
	
	map<int,int>::iterator it;
	for( it = mp . begin() ; it != mp . end() ; it++ )
		val . push_back (it -> second ) , v . push_back( it -> first ) ;

	int n = val . size();

	front [0] = 1 ;
	for( int i = 1 ; i <= n ; i++ ){
		long long p = front [i-1] * ( val [i-1] + 1 ) ;
		p %= MOD - 1 ;
		front[i]=p;
	}

	back [ n + 1 ] = 1;
	for(int i=n; i ;i--){
		long long p= back [i+1] * ( val [i-1] + 1 );
		p %= MOD - 1 ;
		back [i] = p;
	}
	
	long long ans = 1;
	for(int i = 1 ; i <= n ; i++ ){
		int pw = back [i+1] * front[i-1] % ( MOD - 1 ) ;
		int nm =( val [i-1] * val [i-1] + val [i-1] )/2 % ( MOD - 1 ) ;
		ans *= ipow (v[i-1] , nm * pw % ( MOD - 1 ) ) , ans %= MOD ; 
		ans %= MOD;
	}

	cout << ans << endl;

	return 0;
}