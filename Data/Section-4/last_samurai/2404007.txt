
/* Author:
    * Rohit Laddha */
#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <iostream>
#include <sstream>
#include <string>
#include <utility>
#include <vector>
#include <map>
#include <limits.h>
#include <math.h>
#include <cassert>
#include <ctime>
#include <queue>
#include <tr1/random>
#include <tr1/unordered_map>
using namespace std;
using namespace std::tr1;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define ALL(c) (c).begin(),(c).end()
#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;
#define PI 3.14159265
#define LL unsigned long long int 
LL gcd(LL a, LL b){
	if(b==0)
		return a;
	return gcd(b,a%b);
}
unsigned long long int lcm(unsigned long long int a,unsigned long long int b)
{
	if(a<b)
		swap(a,b);
	return (a*b)/gcd(a,b);
}

int main()
{
	 unsigned long long int n,ans=0;
//	 cout << lcm(lcm(10,9),8)<< endl;
	while(cin >> n){
		
		if(n==1)
			cout << 1 << endl;
		else if(n==2)
			cout << 2 << endl;
		else if(n==3)
			cout << 6 << endl;
		else if(n==4)
			cout << 12 << endl;
		else if(n==5)
			cout << 60 << endl;
		else if(n==6)
			cout << 60 << endl;
		else if(n%2==1)
			cout << (n)*(n-1)*(n-2) << endl;
		else{
		
//			cout << lcm(n,n-1) << endl;
//			cout << lcm(90,n-3) << endl;
	//		cout << lcm(lcm(n,n-1),n-3) << endl;
//			cout << lcm(lcm (n-1,n-2),n-3) << endl;
			cout << max(lcm(lcm(n,n-1),n-3),lcm(lcm (n-1,n-2),n-3)) << endl;
		}
	}
	return 0;
}
