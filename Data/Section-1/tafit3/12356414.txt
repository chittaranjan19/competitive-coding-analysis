import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class ProblemB {
    BufferedReader rd;

    ProblemB() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int n = pint();
        List<Integer> uid = new ArrayList<>();
        List<Boolean> enter = new ArrayList<>();
        for(int i=0;i<n;i++) {
            String s = rd.readLine();
            int u = pint(s.substring(2).trim());
            uid.add(u);
            enter.add(s.charAt(0) == '+');
        }
        boolean change = true;
        while(change) {
            change = false;
            Set<Integer> entered = new HashSet<>();
            for(int i=0;i<uid.size();i++) {
                boolean b = entered.add(uid.get(i));
                if(!enter.get(i) && b) {
                    uid.add(0, uid.get(i));
                    enter.add(0, true);
                    change = true;
                    break;
                }
            }
        }
        Set<Integer> present = new HashSet<>();
        int max = 0;
        for(int i=0;i<uid.size();i++) {
            if(enter.get(i)) {
                present.add(uid.get(i));
            } else {
                present.remove(uid.get(i));
            }
            max = Math.max(max, present.size());
        }
        out(max);
    }

    private int pint() throws IOException {
        return pint(rd.readLine());
    }

    private int pint(String s) {
        return Integer.parseInt(s);
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemB();
    }
}
