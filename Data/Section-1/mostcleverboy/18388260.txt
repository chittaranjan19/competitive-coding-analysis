program j01;
const maxn=200000;
type xx=record
          mn,mark:longint;
        end;
var f:array[1..4*maxn+100]of xx;
    l,r,n,m,i,v:longint;
    a:array[1..maxn]of longint;

function min(a,b:Longint):longint;
begin
  if a<b then exit(a) else exit(b);
end;

procedure pushdown(i:longint);
var j:longint;
begin
  for j:=0 to 1 do
  begin
    f[i*2+j].mn:=f[i*2+j].mn+f[i].mark;
    f[i*2+j].mark:=f[i*2+j].mark+f[i].mark;
  end;
  f[i].mark:=0;
end;

procedure change(i,l,r,ll,rr,v:longint);
var mid:longint;
begin
  if (r<ll)or(l>rr) then exit;
  if (ll<=l)and(r<=rr) then
  begin
    f[i].mn:=f[i].mn+v;
    f[i].mark:=f[i].mark+v;
    exit;
  end;
  pushdown(i);
  mid:=(l+r)div 2;
  change(i*2,l,mid,ll,rr,v);
  change(i*2+1,mid+1,r,ll,rr,v);
  f[i].mn:=min(f[i*2].mn,f[i*2+1].mn);
end;

function sum(i,l,r,ll,rr:longint):longint;
var mid:longint;
begin
  if (r<ll)or(l>rr) then exit(maxlongint);
  if (ll<=l)and(r<=rr) then exit(f[i].mn);
  pushdown(i);
  mid:=(l+r)div 2;
  exit(min(sum(i*2,l,mid,ll,rr),sum(i*2+1,mid+1,r,ll,rr)));
end;

procedure build(i,l,r:longint);
var mid:longint;
begin
  f[i].mark:=0;
  if l=r then
  begin
    f[i].mn:=a[l];
    exit;
  end;
  mid:=(l+r) div 2;
  build(i*2,l,mid);
  build(i*2+1,mid+1,r);
  f[i].mn:=min(f[i*2].mn,f[i*2+1].mn);
end;

begin
  readln(n);
  fillchar(f,sizeof(f),0);
  for i:=1 to n do read(a[i]);
  build(1,1,n);
  readln(m);
  for i:=1 to m do
  begin
    read(l,r);
    inc(l);
    inc(r);
    if not eoln then
    begin
      readln(v);
      if l<=r then change(1,1,n,l,r,v)
      else
      begin
        change(1,1,n,1,r,v);
        change(1,1,n,l,n,v);
      end;
    end
    else
    begin
      if l<=r then writeln(sum(1,1,n,l,r))
      else writeln(min(sum(1,1,n,1,r),sum(1,1,n,l,n)))
    end;
  end;
end.
