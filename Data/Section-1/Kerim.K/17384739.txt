#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 2000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
vector<ll>dv;
int prime(int x){
	for(int i=2;i<=sqrt(x);i++)
		if(x%i==0)
			return 0;
	return 1;		
}
ll dp[19][1024];
ll Fe(ll x,int y){
	if(!y)
		return 1;
	ll ff=Fe(x,y/2);
	if(ff>1e18)
		return LLINF;
	if(ff>1e18/ff)	
		return LLINF;
	if(y&1 and ff*ff>1e18/x)	
		return LLINF;
	if(y&1)
		return ff*ff*x;
	return ff*ff;		
}
ll rec(int x,int y){
	if(y<0)
		return LLINF;
	if(x>=int(dv.size())){
		if(y==1)
			return 1;
		return LLINF;	
	}
	ll &ret=dp[x][y];
	if(ret!=-1)
		return ret;ret=LLINF;
	for(int i=0; ;i++){
		if(Fe(dv[x],i)>1e18)
			break;
		if(y%(i+1)!=0)
			continue;		
		if(rec(x+1,y/(i+1))>1e18)
			continue;
		if(rec(x+1,y/(i+1))>1e18/Fe(dv[x],i))
			continue;		
		umin(ret,rec(x+1,y/(i+1))*Fe(dv[x],i)*1LL);		
	}
	return ret;
}
int main(){
	memset(dp,-1,sizeof(dp));
	for(int i=2;i<100 and dv.size()<11;i++)
		if(prime(i))
			dv.pb(i);			
	int n;
	scanf("%d",&n);
	printf("%lld\n",rec(0,n));
	return 0;
}
//LooK aT mY COde ONlinE +_+

