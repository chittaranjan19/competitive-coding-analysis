#include<iostream>
#include<cstring>
#include<cstdlib>
#include<cstdio>
#define SIZE 110 
#define mod 1000000007
using namespace std;
struct MATRIX{LL mt[SIZE][SIZE];int x,y;}ans,def;
typedef long long LL;
int n;
LL a[SIZE],k;
#define G c=getchar()
inline LL read()
{
	LL x=0,f=1;char G;
	while(c>57||c<48){if(c=='-')f=-1;G;}
	while(c>47&&c<58){x=x*10+c-48;G;}
    return x*f;
}
inline MATRIX operator *(MATRIX a,MATRIX b)
{
	MATRIX c;
	memset(c.mt,0,sizeof c.mt);
	c.x=a.x;c.y=b.y;
	for(int i=1;i<=a.x;i++)
		for(int j=1;j<=b.y;j++)
			for(int k=1;k<=a.y;k++)
				c.mt[i][j]=(c.mt[i][j]+(a.mt[i][k]%mod)*(b.mt[k][j]%mod)%mod)%mod;
	return c;
}
void go()
{
	for(int i=1;i<=n;i++)
		ans.mt[1][i]=1;
	for(int i=1;i<=n;i++)
		for(int j=1;j<=n;j++)
			if((a[i]^a[j])%3LL==0LL)
				def.mt[i][j]=1;
			else def.mt[i][j]=0;
	def.x=def.y=n;
	ans.x=ans.y=n;
	k--;
	while(k)
	{
		if(k&1) ans=ans*def;
		def=def*def;
		k>>=1;
	}
	LL ANS=0;
	for(int i=1;i<=n;i++)
		ANS=(ANS+ans.mt[1][i])%mod;
	printf("%I64d\n",ANS);
}

int main()
{
	scanf("%d",&n);k=read();
	for(int i=1;i<=n;i++)
		a[i]=read();
	go();
	return 0;
}