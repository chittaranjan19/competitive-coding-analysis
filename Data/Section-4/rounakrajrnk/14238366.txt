#include<bits/stdc++.h>
#define s(x) scanf("%d",&x)
#define ll long long
#define l(x) scanf("%lld",&x)
#define cst int t; s(t); while(t--)
#define fr freopen("in.txt", "r", stdin)
#define pb push_back

using namespace std;

//string s[1000];
char s[1009][1009];
int res[1001][1001];
int n, m, k;
int dp[1001][1001];

inline int process(int x, int y)
{
   // cout<<"A"<<x<<" "<<y<<endl;
    if(x<0||x>=n||y<0||y>=m)
        return 0;
    if(res[x][y]==1)
        return 0;
    else
        res[x][y]=1;
    int a, b, c, d;
    int sum=0;
    if(s[x-1][y]=='*')
        res[x-1][y]=1, sum++;
    else if(s[x-1][y]=='.'&&res[x-1][y]==0){
        sum+=process(x-1,y);
        res[x-1][y]=1;
        }

    if(s[x+1][y]=='*')
        res[x+1][y]=1, sum++;
    else if(s[x+1][y]=='.'&&res[x+1][y]==0)
        {sum+=process(x+1,y);
        res[x+1][y]=1;}

    if(s[x][y-1]=='*')
        res[x][y-1]=1, sum++;
    else if(s[x][y-1]=='.'&&res[x][y-1]==0)
        {sum+=process(x,y-1);
        res[x][y-1]=1;
        }

    if(s[x][y+1]=='*')
        res[x][y+1]=1, sum++;
    else if(s[x][y+1]=='.'&&res[x][y+1]==0){
        sum+=process(x,y+1);
        res[x][y+1]=1;
    }

    return sum;
}


int bon()
{
    memset(dp,0,sizeof(dp));
    memset(res, 0, sizeof(res));
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            if(s[i][j]=='.'&&dp[i][j]==0){
               // cout<<"A";
                dp[i][j]=process(i,j);
                for(int a=0;a<n;a++)
                    for(int b=0;b<m;b++)
                        if(res[a][b]==1)
                            dp[a][b]=max(dp[i][j],dp[a][b]),res[a][b]=0;
            }
}
int main()
{
    //fr;
    scanf("%d%d%d",&n, &m, &k);

    for(int i=0; i<n; i++)
        scanf("%s",s[i]);
    bon();
    while(k--)
    {
        int x, y;
        scanf("%d%d",&x, &y);
        --x,--y;
        //cout<<x<<" "<<y<<endl;
        memset(res, 0, sizeof(res));
        printf("%d\n",dp[x][y]);

    }
    return 0;
}
