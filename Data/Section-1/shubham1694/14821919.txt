#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define ll long long
#define f first
#define s second

typedef pair<int, int> pii;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

vector<int> adj[maxn], wt[maxn];
set<int> mset[maxn];
int dist[maxn];
map<pair<int, pair<int, int> >, int> m1;
map<pii, int> m2;

int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    int t, i, j, n, m, s, u, v, w, l, cdist, d, cur;
    double x;
    sd(n), sd(m), sd(s);
    for(i=1; i<=m; i++){
        sd(u), sd(v), sd(w);
        adj[u].pb(v);
        adj[v].pb(u);
        wt[u].pb(w);
        wt[v].pb(w);
    }
    for(i=1; i<=n; i++)
        dist[i] = inf;
    sd(l);
    dist[s] = 0;
    priority_queue<pii, vector<pii>, greater<pii> > q;
    q.push(mp(0, s));
    while(!q.empty()){
        cdist = q.top().f;
        cur = q.top().s;
        q.pop();
        if(dist[u]<cdist)
            continue;
        for(i=0; i<adj[cur].size(); i++){
            u = adj[cur][i];
            d = cdist + wt[cur][i];
            if(dist[u]>d){
                dist[u] = d;
                q.push(mp(d, u));
            }
        }
    }
    int ans = 0;
    for(i=1; i<=n; i++){
        u = i;
        for(j=0; j<adj[i].size(); j++){
            v = adj[i][j];
            x = (double)(dist[v] + wt[u][j] - dist[u])/2.0;
            d = dist[u] + x;
            if(d==l){
                if(m2.find(mp(u, v))==m2.end() && m2.find(mp(v, u))==m2.end()){
                    cout << u << " " << v << "\n";
                    ans++;
                    m2[mp(u, v)] = 1;
                    m2[mp(v, u)] = 1;
                }
            }
            else if(d>l && dist[u]<l){
                ans++;
            }
        }
    }
    printf("%d\n", ans);
    return 0;
}
