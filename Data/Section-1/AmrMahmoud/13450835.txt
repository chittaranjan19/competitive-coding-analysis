#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-4
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int n;
vector<pair<int, int> > res;

LL solve(vector<int> arr, vector<int> pos, bool t)
{
  LL cost = 0;
  int i;
  if(t == 0) i = n - 1;
  else i = 0;
  while(i >= 0 && i < n)
  {
    int curr = i;
    if(pos[curr] > i)
    {
      for(int j=i+1;j<n;j++)
      {
        if(pos[arr[curr]] == j)
        {
          cost += j - curr;
          res.pb(mp(curr + 1, j + 1));
          swap(arr[curr], arr[j]);
          curr = j;
          break;
        }
        if(pos[arr[j]] <= curr)
        {
          cost += j - curr;
          res.pb(mp(curr + 1, j + 1));
          swap(arr[curr], arr[j]);
          curr = j;
        }
      }
    }
    else if(pos[curr] < i)
    {
      for(int j=i-1;j>=0;j--)
      {
        if(pos[arr[curr]] == j)
        {
          cost += curr - j;
          res.pb(mp(curr + 1, j + 1));
          swap(arr[curr], arr[j]);
          curr = j;
          break;
        }
        if(pos[arr[j]] >= curr)
        {
          cost += curr - j;
          res.pb(mp(curr + 1, j + 1));
          swap(arr[curr], arr[j]);
          curr = j;
        }
      }
    }
    if(t == 0) i--;
    else i++;
  }
  return cost;
}

int main()
{
  int x;
  scanf("%d", &n);
  vector<int> arr, pos;
  for(int i=0;i<n;i++)
  {
    scanf("%d", &x);
    arr.pb(x);
    pos.pb(0);
  }
  pos.pb(0);
  for(int i=0;i<n;i++)
  {
    scanf("%d", &x);
    pos[x] = i;
  }
  LL c1 = solve(arr, pos, 0);
  vector<pair<int, int> > y = res;
  res.clear();
  LL c2 = solve(arr, pos, 1);
  if(c2 < c1)
    c1 = c2;
  else res = y;
  printf("%I64d\n%d\n", c1, res.size());
  for(int i=0;i<res.size();i++)
    printf("%d %d\n", res[i].f, res[i].s);
  return 0;
}
