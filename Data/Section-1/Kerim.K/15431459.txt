//Cok tavsanin pesinde kosan hicbrini yakalayamaz!
#include<bits/stdc++.h>
#define MAXN 200009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
template<class T> bool umul(T& a, T b) {a=(a*b)%INF;}
template<class T> bool usum(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
ll arr[MAXN],ans[MAXN];
vector<ll>adj[MAXN],pre[MAXN],suf[MAXN];
void dfs(int nd){
	arr[nd]=1;ll n1=1,n2=1;
	tr(v,adj[nd]){
		dfs(*v);
		pre[nd].pb(n1);
		umul(arr[nd],arr[*v]+1);
		umul(n1,arr[*v]+1);
	}
	for(int i=adj[nd].size()-1;i>=0;i--)
		suf[nd].pb(n2),umul(n2,arr[adj[nd][i]]+1);
	reverse(all(suf[nd]));	
}
void dfs1(int nd,int pr){
	ans[nd]=arr[nd];
	for(int i=0;i<adj[nd].size();i++){
		int to=adj[nd][i],e_to=arr[to],e_nd=arr[nd];
		arr[nd]=(pre[nd][i]*suf[nd][i])%INF;
		if(pr!=-1)
			umul(arr[nd],arr[pr]+1);
		umul(arr[to],arr[nd]+1);	
		dfs1(to,nd);
		arr[to]=e_to;
		arr[nd]=e_nd;
	}
}
int main(){
	int a,x;
	scanf("%d",&a);	
	for(int i=2;i<=a;i++)
		scanf("%d",&x),adj[x].pb(i);
	dfs(1);
	dfs1(1,-1);	
	for(int i=1;i<=a;i++)
		printf("%lld ",ans[i]);
	printf("\n");	
	return 0;
}

