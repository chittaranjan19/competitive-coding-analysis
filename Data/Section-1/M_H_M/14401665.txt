//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 100 * 1000 + 100;

int n, m;
int a[N];
int b[N];
pii seg[4 * N];

void update(int v, int s, int e, int l, int r, int k, int i){
	if(r <= s || e <= l) return;
	if(l <= s && e <= r){
		seg[v] = MP(i, k + s - l);
		return;
	}
	int mid = (s + e) / 2;
	update(2 * v + 0, s, mid, l, r, k, i);
	update(2 * v + 1, mid, e, l, r, k, i);
}

pii get(int v, int s, int e, int p){
	if(e - s == 1)
		return seg[v];
	int mid = (s + e) / 2;
	if(p < mid)
		return max(get(2 * v + 0, s, mid, p), MP(seg[v].X, seg[v].Y + p - s));
	else
		return max(get(2 * v + 1, mid, e, p), MP(seg[v].X, seg[v].Y + p - s));
}

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> n >> m;
	for(int i = 0; i < n; ++i)
		cin >> a[i];
	for(int i = 0; i < n; ++i)
		cin >> b[i];
	for(int i = 0; i < m; ++i){
		int t;
		cin >> t;
		if(t == 1){
			int x, y, k;
			cin >> x >> y >> k;
			x --;
			y --;
			update(1, 0, n, y, y + k, x, i + 1);
		} 
		else{
			int x;
			cin >> x;
			x --;
			pii tmp = get(1, 0, n, x);
			if(tmp.X == 0)
				cout << b[x] << "\n";
			else
				cout << a[tmp.Y] << "\n";
		}
	}
	return 0;
}
