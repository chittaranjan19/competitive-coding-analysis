import java.util.Arrays;
import java.util.Scanner;

/**
 * Created by noonan on 8/11/2016.
 */
public class Q3 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);

        int n = in.nextInt();
        int[] c = new int[n];
        for (int i = 0; i < n; i++) {
            c[i] = in.nextInt();
        }

        String[] s = new String[n];
        String[] r = new String[n];
        in.nextLine();
        for (int i = 0; i < n; i++) {
            s[i] = in.nextLine();
            r[i] = new StringBuilder(s[i]).reverse().toString();
        }

        long[][] a = new long[n][2];

        a[0][0] = 0;
        a[0][1] = c[0];
        for (int i = 1; i < n; i++) {
            int ss = s[i-1].compareTo(s[i ]) < 0 && a[i ][0] != Long.MAX_VALUE ? 0 : -100;
            int sr = s[i-1].compareTo(r[i ]) < 0 && a[i ][0] != Long.MAX_VALUE ? c[i ] : -100;
            int rs = r[i-1].compareTo(s[i ]) < 0 && a[i ][1] != Long.MAX_VALUE ? 0 : -100;
            int rr = r[i-1].compareTo(r[i ]) < 0 && a[i ][1] != Long.MAX_VALUE ? c[i ] : -100;

            a[i][0] = Math.min(ss < 0 ? Long.MAX_VALUE : a[i - 1][0] + ss, rs < 0 ? Long.MAX_VALUE : a[i - 1][1] + rs);
            a[i][1] = Math.min(sr < 0 ? Long.MAX_VALUE : a[i - 1][0] + sr, rr < 0 ? Long.MAX_VALUE : a[i - 1][1] + rr);

            if (a[i][0] == Long.MAX_VALUE && a[i][1] == Long.MAX_VALUE) {
                System.out.println(-1);
                System.exit(0);
            }
        }

        System.out.println(Math.min(a[n-1][0], a[n-1][1]));

        in.close();
    }
}

