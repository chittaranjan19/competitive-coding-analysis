#include <bits/stdc++.h>

using namespace std;

const int maxn = 1000010;

int dp[1010][1010][2], cnt[1010], m;
vector<int> v;
map<int, int> m1;

int solve(int cur, int sum, int emp)
{
    //cout << cur << " " << sum << " " << emp << "\n";
    if(cur<0){
        if(!sum && !emp)
            return 1;
        else
            return 0;
    }
    if(dp[cur][sum][emp]!=-1)
        return dp[cur][sum][emp];
    int x, y, ns, i;
    x = 0;
    //if(emp)
        x = solve(cur-1, sum, emp);
    //y = solve(cur-1, sum, )
    i = 1;
    ns = sum;
    if(x)
        return dp[cur][sum][emp] = 1;
    while(i<=cnt[v[cur]]){
        ns = ns-v[cur];
        while(ns<0)
            ns+=m;
        y = solve(cur-1, ns, 0);
        if(y)
            break;
        i++;
    }
    return dp[cur][sum][emp] = max(x, y);
}

int main()
{
    int n, i, j, x;
    scanf("%d%d", &n, &m);
    for(i=0; i<n; i++){
        scanf("%d", &x);
        x = x%m;
        if(!cnt[x])
            cnt[x] = 1, v.push_back(x);
        else
            cnt[x]++;
    }
    if(n>m){
        printf("YES\n");
        return 0;
    }
    memset(dp, -1, sizeof(dp));
    if(solve(v.size()-1, 0, 1))
        printf("YES\n");
    else
        printf("NO\n");
    return 0;
}