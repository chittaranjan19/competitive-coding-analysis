#include<bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define mp make_pair
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
const int inf = 1e9 + 5;
const int nax = 1e6 + 5;

int a[nax], m[nax];
int tmp[nax];
bool x[nax];

int main() {
	int n;
	scanf("%d", &n);
	REP(i, n) scanf("%d", &a[i]);
	int ok = -1;
	REP(i, n) if(a[i] != a[0]) ok = i;
	if(ok == -1) {
		printf("%lld\n", (ll) n * (n - 1));
		return 0;
	}
	REP(i, n) if(a[i] < a[ok]) ok = i;
	REP(i, n) tmp[i] = a[(i + ok)%n];
	REP(i, n) a[i] = tmp[i];
	REP(i, n) assert(a[0] <= a[i]);
	ll r = 0;
	RI(d, n - 1) if(n % d == 0) {
		REP(i, d) m[i] = 0;
		int it = 0;
		REP(i, n) {
			maxi(m[it], a[i]);
			++it;
			if(it == d) it = 0;
		}
		assert(it == 0);
		REP(i, n) {
			x[i] = (m[it] == a[i]);
			++it;
			if(it == d) it = 0;
		}
		vi w;
		for(int z = d; z < n; z += d)
			if(__gcd(n, z) == d)
				w.pb(z);
		REP(i, n) if(x[i]) {
			int c = 1;
			while(x[i+1]) {
				++i;
				++c;
			}
			for(int z : w) {
				if(z > c) break;
				r += c - z + 1;
			}
		}
	}
	printf("%lld\n", r);
	return 0;
}
