#include <iostream>
#include <vector>

using namespace std;

char arr[510][510];
bool mark[510][510];
int color[510][510];
int n,m;

void dfs(int l,int k,int f){
	mark[l][k]=true;
	color[l][k]=1;
	cout << "B" << l+1 << k+1 << endl;
	if(l!=0 && arr[l-1][k]=='.' && !mark[l-1][k]){
		dfs(l-1,k,f+1);
	}
	if(k!=0 && arr[l][k-1]=='.' && !mark[l][k-1]){
		dfs(l,k-1,f+1);
	}
	if(l!=n && arr[l+1][k]=='.' && !mark[l+1][k]){
		dfs(l+1,k,f+1);
	}
	if(k!=m && arr[l][k+1]=='.' && !mark[l][k+1]){
		dfs(l,k+1,f+1);
	}
	if(f != 0){
		cout << "D" << l+1 << k+1 << endl;
		cout << "R" << l+1 << k+1 << endl;
	}
}

int main(){
	cin >> n >> m;
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			cin >> arr[n][m];
		}
	}
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(!mark[i][j])
				dfs(i,j,0);
		}
	}
}
