//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 1e5 + 100;
const int M = 1e9 + 9;

int n;
string s[N];
vector<string> str;
string t;
map<string, int> m2;
map<string, int> mp;
map<ll, int> m;
vector <int> id[N];
vector <int> ans[N];
ll h[N];
ll pw[N];
int k;
int sz;

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	pw[0] = 1;
	for(int i = 1; i < N; ++i)
		pw[i] = (pw[i - 1] * 2) % M;
	cin >> n;
	for(int i = 0; i < n; ++i){
		cin >> s[i];
		s[i] = s[i].substr(7);
		int l = 0;
		for(l = 0; l < SZ(s[i]); ++l)
			if(s[i][l] == '/')
				break;
		t = s[i].substr(l);
		string st = s[i].substr(0, l);
		
		if(m2[st] == 0){
			m2[st] = ++sz;
			str.PB(st);
		}
		if(mp[t] == 0)
			mp[t] = ++k;
		id[mp[t] - 1].PB(m2[st] - 1);
	}
	for(int i = 0; i < k; ++i){
		sort(id[i].begin(), id[i].end());
		id[i].resize(unique(id[i].begin(), id[i].end()) - id[i].begin());
		for(int j = 0; j < SZ(id[i]); ++j){
//			cerr << id[i][j] << " ";
			h[id[i][j]] += pw[i];
		}	
//		cerr << "\n";
	}
	k = 0;
	for(int i = 0; i < sz; ++i){
		if(m[h[i]] == 0)
			m[h[i]] = ++k;
		ans[m[h[i]] - 1].PB(i);
	}
	int tmp = 0;
	for(int i = 0; i < k; ++i)
		if(SZ(ans[i]) != 1)
			tmp ++;
	cout << tmp << "\n";
	for(int i = 0; i < k; ++i){
		if(SZ(ans[i]) == 1) continue;
		for(int j = 0; j < SZ(ans[i]); ++j){
			cout << "http://" + str[ans[i][j]] << " ";
		}
		cout << "\n";	
	}
	return 0;
}
