#include<bits/stdc++.h>
#define MAXN 500009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<ll,ll>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
ll n,k,mn=INF,mx=0;
map<ll,ll>pm;
ll arr[MAXN],sum[MAXN],cum[MAXN];
ll touch(ll x){
	ll kz=upper_bound(arr+1,arr+n+1,x)-arr;kz=n-kz+1;
	if(!(kz+pm[x]))
		return INF;	
	return (cum[kz]-x*kz);
}
ll ok(){
	ll st=mn,en=mx;
	while(st+1<en){
		ll mid=(st+en)>>1;	
		if(touch(mid)<=k)
			en=mid;
		else
			st=mid;		
	}
	for(ll i=st;i<=en;i++)
		if(touch(i)<=k)
			return i;
}
ll patch(ll x){
	ll ru=lower_bound(arr+1,arr+n+1,x)-arr;ru--;
	if(!(ru+pm[x]))
		return INF;
	return (ru*x-sum[ru]);	
}
ll love(){
	ll st=mn,en=mx;
	while(st+1<en){
		ll mid=(st+en)>>1;	
		if(patch(mid)<=k)
			st=mid;
		else
			en=mid;		
	}
	for(ll i=en;i>=st;i--)
		if(patch(i)<=k)
			return i;
}
int main(){
	scanf("%lld%lld",&n,&k);
	for(ll i=1;i<=n;i++){
		scanf("%lld",arr+i);
		umin(mn,arr[i]);
		umax(mx,arr[i]);
		pm[arr[i]]++;
	}
	sort(arr+1,arr+n+1);
	for(ll i=1;i<=n;i++)
		sum[i]=sum[i-1]+arr[i];
	for(ll i=n;i>=1;i--)
		cum[(n-i+1)]=cum[n-i]+arr[i];	
	ll dif=ok()-love();	
	if(dif<=0){
		if(sum[n]%n!=0)
			printf("1\n");
		else
			printf("0\n");	
	}
	else
		printf("%lld\n",dif);	
	return 0;
}
//LooK aT mY COde ONlinE +_+