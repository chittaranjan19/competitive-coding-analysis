#include<iostream>
#include<vector>
#include<string>
#include<cmath>
#include<math.h>
using namespace std;
int main()
{
    int x1,x2,x3,y1,y2,y3,ans=0,d1,d2,d3;
    cin>>x1>>y1>>x2>>y2>>x3>>y3;
    d1=(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1);
    d2=(x3-x1)*(x3-x1)+(y3-y1)*(y3-y1);
    d3=(x3-x2)*(x3-x2)+(y3-y2)*(y3-y2);
    if(d1==d2+d3||d2==d1+d3||d3==d1+d2)
         ans=1;
    else
    {
     x1++,y1++;
     d1=(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1);
     d2=(x3-x1)*(x3-x1)+(y3-y1)*(y3-y1);
    if(d1==d2+d3||d2==d1+d3||d3==d1+d2)
        ans=2;
      y1--;
     d1=(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1);
     d2=sqrtl(x3-x1)*(x3-x1)+(y3-y1)*(y3-y1);
     if(d1==d2+d3||d2==d1+d3||d3==d1+d2)
        ans=2;
      y1++,x1--;
     d1=(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1);
     d2=(x3-x1)*(x3-x1)+(y3-y1)*(y3-y1);
      if(d1==d2+d3||d2==d1+d3||d3==d1+d2)
       ans=2;
       y1--,y1--,x1--;
     d1=(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1);
     d2=(x3-x1)*(x3-x1)+(y3-y1)*(y3-y1);
     if(d1==d2+d3||d2==d1+d3||d3==d1+d2)
    ans=2;
    /////////////////////////point 2 
    x2++,y2++;
    d1=(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1);
    d3=(x3-x2)*(x3-x2)+(y3-y2)*(y3-y2);
    if(d1==d2+d3||d2==d1+d3||d3==d1+d2)
    ans=2;
    y2--;
     d1=(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1);
    d3=(x3-x2)*(x3-x2)+(y3-y2)*(y3-y2);
    if(d1==d2+d3||d2==d1+d3||d3==d1+d2) 
        ans=2;
    y2++,x2--;
     d1=(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1);
    d3=(x3-x2)*(x3-x2)+(y3-y2)*(y3-y2);
    if(d1==d2+d3||d2==d1+d3||d3==d1+d2)
    ans=2;
    y2--,y2--,x2--;
    d1=(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1);
    d3=(x3-x2)*(x3-x2)+(y3-y2)*(y3-y2);
    if(d1==d2+d3||d2==d1+d3||d3==d1+d2)
    ans=2;
    /////////////////////////point 3 
    x3++,y3++;
    d2=(x3-x1)*(x3-x1)+(y3-y1)*(y3-y1);
    d3=(x3-x2)*(x3-x2)+(y3-y2)*(y3-y2);
     if(d1==d2+d3||d2==d1+d3||d3==d1+d2)
    ans=2;
    y3--;
    d2=(x3-x1)*(x3-x1)+(y3-y1)*(y3-y1);
    d3=(x3-x2)*(x3-x2)+(y3-y2)*(y3-y2);
     if(d1==d2+d3||d2==d1+d3||d3==d1+d2)
         ans=2;
    y3++,x3--;
    d2=(x3-x1)*(x3-x1)+(y3-y1)*(y3-y1);
    d3=(x3-x2)*(x3-x2)+(y3-y2)*(y3-y2);
     if(d1==d2+d3||d2==d1+d3||d3==d1+d2)
    ans=2;
    y3--,y3--,x3--;
    d2=(x3-x1)*(x3-x1)+(y3-y1)*(y3-y1);
    d3=(x3-x2)*(x3-x2)+(y3-y2)*(y3-y2);
     if(d1==d2+d3||d2==d1+d3||d3==d1+d2)
         ans=2;
    }
    if(ans==1)
        cout<<"RIGHT"<<endl;
    else if(ans==2)
        cout<<"ALMOST"<<endl;
    else
        cout<<"NEITHER"<<endl;
    return 0;
}