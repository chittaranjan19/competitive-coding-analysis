#include<fstream>
#include<string.h>
#include<ctype.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<unordered_map>
#include<array>
#include<deque>
#include<math.h>
#include<unordered_set>
#include<set>
#include<iomanip>
#include<bitset>
using namespace std;
int n, m,v[100100],necessary[100100],k,i,el,min1,used[100100];
int check(int t)
{
	int nrnec=0;
	memset(used, 0, sizeof(used));
	for (i = t; i >= 1; i--)
	{
		if (v[i] != 0&&used[v[i]] == 0)
		{
			used[v[i]] = 1;
			nrnec = nrnec + necessary[v[i]];
		}
		else
			nrnec--;
	}
	if (i <0||nrnec>0)
		return 0;
	for(i=1;i<=m;i++)
		if (used[i] == 0)
		{
			return 0;
		}
	return 1;
}
int main()
{
	cin >> n>>m;
	for (k = 1; k <= n; k++)
		cin >> v[k];
	for (k = 1; k <= m; k++)
	{
		cin >> necessary[k];
		min1 += necessary[k];
	}
	if (n-m < min1)
	{
		cout << "-1";
		return 0;
	}
	int l = min1,r=n;
	while (l <= r)
	{
		int mid = (l + r) / 2;
		if (check(mid))
			r = mid - 1;
		else
			l = mid + 1;
	}
	if (check(l))
		cout << l;
	else
		cout << -1;
	return 0;
}