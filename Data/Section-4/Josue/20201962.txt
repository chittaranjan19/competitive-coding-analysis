//http://codeforces.com/contest/581/problem/B
//No participé en este contest, pero recuerdo haber leído los problemas mientras
//el contest estaba en ejecución, e identificar un problema que me parecía segment tree
#include <cstdio>
#include <iostream>

int v[100010], st[400010];

using namespace std;
int build(int p, int i, int j){
	int p1, p2;
	if( i==j ) { st[p] = i; return i; }
	p1 = build(2*p, i, (i+j)/2);
	p2 = build(2*p+1, (i+j)/2+1, j);
	if( v[p1] > v[p2] ) { st[p] = p1; return p1; }
	else { st[p] = p2; return p2; }
}
int RMQ( int p, int L, int R, int i, int j ){
	int p1, p2;
	if( L == i && R == j ) return st[p];
	if( L <= i && R >= j ){
		if( j <= (L+R)/2 ) return RMQ(2*p, L, (L+R)/2, i, j);
		if( i >= (L+R)/2+1 ) return RMQ(2*p+1, (L+R)/2+1, R, i, j);
	}
	p1 = RMQ(2*p, L, (L+R)/2, i, (L+R)/2);
	p2 = RMQ(2*p+1, (L+R)/2+1, R, (L+R)/2+1, j);
	if( v[p1] > v[p2] ) return p1; else return p2;
}
int main(){
	int n;
	scanf("%d", &n);
	for(int i=0; i<n; i++)
		scanf("%d", &v[i]);
	build(1, 0, n-1);
	if( n>1 ){
		for(int i=0; i<(n-1); i++){
			int mx = RMQ(1, 0, n-1, i+1, n-1);
			if( v[mx] >= v[i] ) printf("%d ", 1+v[mx]-v[i]);
			else printf("0 ");
		}
		printf("0\n");
	}
	else printf("0\n");
	return 0;
}
