#include <bits/stdc++.h>

#define ll long long
#define ld long double

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int P = 239;
const int MAX_N = 100000;
const int ABC = 26;
const ld pi = 3.1415926535897932384626;
const ld eps = 1e-6;

pair<pair<int, int>, pair<int, int> > solve(int x1, int y1, int x2, int y2)
{
    int n, e, s, w;
    int l, r, mid, cnt;
    l = x1; r = x2 + 1;
    while (r - l > 1)
    {
        mid = (l + r) / 2;
        cout << "? " << mid << " " << y1 << " " << x2 << " " << y2 << endl;
        cin >> cnt;
        if (cnt == 1)
            l = mid;
        else
            r = mid;
    }
    n = l;
    l = x1 - 1; r = x2;
    while (r - l > 1)
    {
        mid = (l + r) / 2;
        cout << "? " << x1 << " " << y1 << " " << mid << " " << y2 << endl;
        cin >> cnt;
        if (cnt == 1)
            r = mid;
        else
            l = mid;
    }
    s = r;
    l = y1; r = y2 + 1;
    while (r - l > 1)
    {
        mid = (l + r) / 2;
        cout << "? " << x1 << " " << mid << " " << x2 << " " << y2 << endl;
        cin >> cnt;
        if (cnt == 1)
            l = mid;
        else
            r = mid;
    }
    w = l;
    l = y1 - 1; r = y2;
    while (r - l > 1)
    {
        mid = (l + r) / 2;
        cout << "? " << x1 << " " << y1 << " " << x2 << " " << mid << endl;
        cin >> cnt;
        if (cnt == 1)
            r = mid;
        else
            l = mid;
    }
    e = r;
    return {{n, w}, {s, e}};
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin >> n;
    int l = 1, r = n + 1, mid, cnt;
    while (r - l > 1)
    {
        mid = (l + r) / 2;
        cout << "? " << 1 << " " << 1 << " " << mid << " " << n << endl;
        cin >> cnt;
        if (cnt == 2)
            r = mid;
        else
            l = mid;
    }
    cout << "? " << 1 << " " << 1 << " " << l << " " << n << endl;
    cin >> cnt;
    if (cnt == 1)
    {
        cout << "? " << l + 1 << " " << 1 << " " << n << " " << n << endl;
        cin >> cnt;
        if (cnt == 1)
        {
            auto p1 = solve(1, 1, l, n);
            auto p2 = solve(l + 1, 1, n, n);
            cout << "! " << p1.first.first << " " << p1.first.second << " " << p1.second.first << " " << p1.second.second << " ";
            cout << p2.first.first << " " << p2.first.second << " " << p2.second.first << " " << p2.second.second << endl;
            return 0;
        }
    }
    l = 1; r = n + 1;
    while (r - l > 1)
    {
        mid = (l + r) / 2;
        cout << "? " << 1 << " " << 1 << " " << n << " " << mid << endl;
        cin >> cnt;
        if (cnt == 2)
            r = mid;
        else
            l = mid;
    }
    auto p1 = solve(1, 1, n, l);
    auto p2 = solve(1, l + 1, n, n);
    cout << "! " << p1.first.first << " " << p1.first.second << " " << p1.second.first << " " << p1.second.second << " ";
    cout << p2.first.first << " " << p2.first.second << " " << p2.second.first << " " << p2.second.second << endl;
    return 0;
}
