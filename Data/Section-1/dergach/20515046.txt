#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <math.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <sstream>
#include <fstream>
#include <queue>
#include <algorithm>
#include <iostream>
#include <stack>
#include <bitset>
using namespace std;

typedef long long ll;
typedef long long ull;
#define pi acos(-1.0)
#define eps 1e-7
#define start 131072
#define LINF 1000000000000000000LL
#define pi acos(-1.0)
#define SHIFT 225000
#define mod 1000000007LL

int dp[2][450000];
int a, b, k, t;

int main()
{
	scanf("%d %d %d %d", &a, &b, &k, &t);
	for(int i = a - b + SHIFT; i < 450000; i++)
		dp[0][i] = 1;
	for(int i = 0; i < t; i++)
	{
		memset(dp[1-i%2], 0, sizeof(dp[1-i%2]));
		ll sum = dp[i%2][0];
		for(int j = 1; j < 2 * k + 1; j++)
			sum += (j + 1) * ((dp[i%2][j] - dp[i%2][j-1] + mod) % mod);
		for(int j = 2 * k + 1, c = 2 * k; c >= 1; j++, c--)
			sum += c * ((dp[i%2][j] - dp[i%2][j-1] + mod) % mod);
		sum %= mod;
		for(int j = 2 * k; j < 450000; j++)
		{
			if(j+2*k+1 < 450000)
			{
				int L = j - 2 * k;
				int R = j + 2 * k;
				dp[1-i%2][j] = (dp[1-i%2][j] + sum) % mod;
				sum = (sum - dp[i%2][j] + mod) % mod;
				if(j - 2 * k > 0)
					sum = (sum + dp[i%2][j-2*k-1]) % mod;
				sum = (sum + dp[i%2][j+2*k+1] - dp[i%2][j] + mod) % mod;
			}
			if(j > 0)
				dp[1-i%2][j] = (dp[1-i%2][j] + dp[1-i%2][j-1]) % mod;
		}
		for(int j = 449000; j < 450000; j++)
			dp[1-i%2][j] = dp[1-i%2][j-1];
	}
	printf("%I64d\n", ((dp[t%2][449999] - dp[t%2][SHIFT]) % mod + mod) % mod);
	return 0;
}