#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair

using namespace std;

vector<vector<int> > graph(1005);
pair<int,int> energy[1005];
LL energies[1005];

bool sorter(pair<int,int> a,pair<int,int> b)
{
    return a.first > b.first;
}

int main()
{
    int n,m;
    cin >> n >> m;
    for(int i=1;i<=n;i++)
        scanf("%d",&energy[i].first),energy[i].second = i;
    int x,y;
    for(int i=0;i<m;i++)
    {
        scanf("%d%d",&x,&y);
        energies[x]+=energy[y].first;
        energies[y]+=energy[x].first;
        graph[x].pb(y);
        graph[y].pb(x);
    }
    sort(energy+1,energy+n+1,sorter);
    int res=0;
    for(int i=1;i<=n;i++)
    {
        res+=energies[energy[i].second];
        for(int j=0;j<graph[energy[i].second].size();j++)
            energies[graph[energy[i].second][j]]-=energy[i].first;
        sort(energy+i+1,energy+n+1,sorter);
    }
    cout << res;
    return 0;
}