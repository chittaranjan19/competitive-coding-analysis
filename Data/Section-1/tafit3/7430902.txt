import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class ProblemB {
    private ProblemB() throws IOException {
        BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
        rd.readLine();
        String h = rd.readLine();
        String[] q = h.split("\\s+");
        int m = q.length;
        long[] a = new long[m];
        for(int i=0;i<m;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        h = rd.readLine();
        q = h.split("\\s+");
        int n = q.length;
        long[] b = new long[n];
        for(int i=0;i<n;i++) {
            b[i] = Integer.parseInt(q[i]);
        }
        Arrays.sort(a);
        Arrays.sort(b);
        long[] pa = new long[m+1];
        long[] pb = new long[n+1];
        pa[0] = a[0];
        for(int i=1;i<m;i++) {
            pa[i] = pa[i-1] + a[i];
        }
        pa[m] = pa[m-1];
        pb[0] = b[0];
        for(int i=1;i<n;i++) {
            pb[i] = pb[i-1] + b[i];
        }
        pb[n] = pb[n-1];
        long res1 = compute(a,pa,pb,m,n);
        long res2 = compute(b,pb,pa,n,m);
        out(Math.min(res1,res2));
    }

    private long compute(long[] a, long[] pa, long[] pb, int m, int n) {
        long res = 0;
        int idx = Arrays.binarySearch(a,pb[n]);
        if(idx < 0) {
            idx = -1-idx;
        }
        if(idx > 0) {
            if(m == idx) {
                if(idx > 1) {
                    res += pa[idx-2];
                }
            } else {
                res += pa[idx-1];
            }
        }
        if(m == idx) {
            res += pb[n];
        } else {
            res += (m-idx)*pb[n];
        }
        return res;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemB();
    }
}
