#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;
unsigned long long C[65][65];
#define de(i,A) for(int i=A-1;i+1;i--)
//c(n k) = c(n-1 k-1) + c(n-1 k)
unsigned long long m, k;
typedef long long ll;



unsigned long long calc(unsigned long long x)
{
    unsigned long long ans = 0;
    unsigned long long d1 = 0;
    FORD(i, 64, 1){
        if ((x >> (i - 1)) & 1){
            //if (x == )
            if (k - d1 >= 0) ans += (C[i - 1][k - d1]);
            d1++;
        }
    }
    return ans + (__builtin_popcountll(x) == k);
}

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("431D.inp", "r", stdin);
    freopen("431D.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> m >> k;
    memset(C, 0, sizeof(C));
    FORE(i, 1, 64) C[i][1] = i;
    FORE(i, 1, 64) C[i][0] = 1;
    FORE(i, 2, 64) FORE(k, 1, 64) C[i][k] = C[i - 1][k - 1] + C[i - 1][k];
    unsigned long long d = 1, c = 2234567891234567899, g, fin = -1;

    while (d <= c){
        g = (d + c) / 2;
        //cout <<d <<" "<<c<<endl;
        unsigned long long tmp = calc(g * 2LL) - calc(g);
        if (tmp >= m){
            if (tmp == m) fin = g;
            c = g - 1;
        }
        else d = g + 1;
    }
    cout << fin;
    return 0;
}

