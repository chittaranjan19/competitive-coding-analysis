#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>
#include <valarray>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint toNumber (string s)
{
	tint Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (tint number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}




int main()
{
	#ifdef ACMTUYO
		assert(freopen("entrada.in", "r", stdin));
	#endif
	ios_base::sync_with_stdio(0);
	tint n, k;
	while (cin >> n >> k)
	{
		vector<tint> a (n);
		vector<tint> zeros; // indices de los 0
		vector<tint> ones(n); // sumas parciales de 1s.
		
		forn(i,n)
		{
			
			cin >> a[i];
			if (a[i] == 0)
				zeros.push_back(i);
			if (i == 0)
				ones[0] = (a[0] == 1);
			if (i > 0)
				ones[i] = ones[i-1] + (a[i] == 1);
		}
		tint sumaZero = zeros.size(), quedanFijos = sumaZero - k;
		if (quedanFijos <= 0)
		{
			cout << n << endl;
			forn(i,n)
				cout << 1 << " ";
			cout << endl;
		}
		else
		{
			tint ans = 0;
			vector<tint> v = {0,0};
			tint r = sumaZero-k;
			forn(i,k)
			{
				
				
				tint j = i + r-1; // de zeros[i] a zeros[j] el array queda fijo (y vale 0 en esos bordes).
				//debug(i);
				//debug(zeros[i]);
				//debug(zeros[j]);
				//cout <<  " --------- " << endl;
				if (zeros[i]-1 > ans)
				{
					
					ans = zeros[i] - 1;
					v = {zeros[i], zeros[j]};
				}
				if (n - zeros[j] - 1 > ans)
				{
					
					ans = n - zeros[j] - 1;
					v = {zeros[i], zeros[j]};
				}
				tint aux = zeros[i] - 1;
				if (aux < 0)
					aux = 0;
				else
					aux = ones[aux];
				if (ones[zeros[j]] - aux > ans)	
				{
					
					ans = ones[zeros[j]] - aux;
					v = {zeros[i], zeros[j]};
				}
			}
			cout << ans << endl;
			forn(i,n)
			{
				if (v[0] <= i && i <= v[1])
					cout << a[i] << " ";
				else
					cout << 1 << " ";
			}
			cout << endl;
		}
		
			
	}
	return 0;
}



