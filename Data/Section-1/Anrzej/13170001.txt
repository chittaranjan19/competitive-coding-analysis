#include <string>
#include <algorithm>
#include <math.h>
#include <vector>
#include <queue>
#include <stack>
#include <stdio.h>
#include <stdlib.h>
#include <cstdlib>
#include <iostream>
#include <set>
#include <cstring>
#include <map>
#include <iomanip>
#include <sstream>
#include <utility>
#include <iterator>
#include <ctype.h>
#include <cmath>

//freopen("knight.in", "r", stdin);
//freopen("knight.out", "w", stdout);

using namespace std;
#define pi 3.1415926535
#define ll long long


int main()
{
    vector<pair<ll, ll>> v, venv;
    ll n, d, ans = 0;
    cin >> n >> d;
    for (int i = 0; i < n; i++)
    {
        ll mi, si;
        cin >> mi >> si;
        v.push_back(make_pair(mi, si));
        venv.push_back(make_pair(si, mi));
        //ans += v[i].second;
    }
    sort(v.begin(), v.end());
    sort(venv.begin(), venv.end());
    reverse(venv.begin(), venv.end());


    int ref = 0;
    ll anss = -1;
    ans += v[ref].second;
    anss = max(anss, ans);
    for (int i = 0; i < n; i++)
    {
        if (abs(v[ref].first - v[i].first) >= d && ref != i)
        {
            ans -= v[ref].second;
            ref++;
            if (i <= ref)
                ans += v[ref].second;
        }
        if (abs(v[ref].first - v[i].first) < d && ref != i)
        {
            ans += v[i].second;
            anss = max(anss, ans);
        }

    }


    ans = max(ans, venv[0].first);
    cout << anss << endl;
    return 0;
}