#include <bits/stdc++.h>

using namespace std;

#define MAX 30001
#define ll long long

int lastn;
int treasure[MAX];
ll dp[MAX][600];

ll maximum(ll a, ll b, ll c)
{
    if(a>b){
        if(a>c)
            return a;
        else
            return c;
    }
    else{
        if(b>c)
            return b;
        else
            return c;
    }
}

ll solve(int cur, int d)
{
    //cout << cur << " " << d << endl;
    if(cur>lastn || cur<0)
        return 0;
    if(d<600){
        if(dp[cur][d]!=-1)
            return dp[cur][d];
    }
    ll a, b, c, ans;
    if(d>1)
        a=solve(cur+d-1, d-1);
    else
        a=0;
    if(d>0)
        b=solve(cur+d, d);
    else
        b=0;
    c=solve(cur+d+1, d+1);
    ans=treasure[cur]+maximum(a, b, c);
    if(d<600)
        return dp[cur][d]=ans;
    else
        return ans;
}

int main()
{
    memset(treasure, 0, sizeof(treasure));
    memset(dp, -1, sizeof(dp));
    int d, n, j;
    scanf("%d%d", &n, &d);
    int i, x;
    for(i=0; i<n; i++){
        scanf("%d", &x);
        treasure[x]++;
    }
    lastn=x;
    ll ans = solve(d, d);
    /*for(i=1; i<=30; i++){
        for(j=1; j<=30; j++)
            cout << dp[i][j] << " ";
        cout << endl;
    }*/
    cout << ans << endl;
    return 0;
}
