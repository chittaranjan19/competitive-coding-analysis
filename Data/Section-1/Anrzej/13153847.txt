#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <ctime>
#include <stdio.h>

using namespace std;

#define ll long long
#define sc second
#define fs first
#define mp make_pair

ll n, m;
vector<int> g[200000];
bool is[200000];

int ans = 0;

void dfs(int v, int cur, int p = -1)
{
    int ncur = cur;
    if (is[v] == 1)
        ncur++;
    else ncur = 0;
    if (ncur > m) return;
    if (g[v].size() == 1 && v != 1)
        ans++;
    for (int i = 0; i < g[v].size(); i++)
    {
        if (g[v][i] == p) continue;
        dfs(g[v][i], ncur, v);
    }
}

int main()
{
    //freopen("cranksft.in", "r", stdin);
    //freopen("cranksft.out", "w", stdout);
    cin >> n >> m;
    for (int i = 0; i < n; i++)
        cin >> is[i+1];
    for (int i = 0; i < n-1; i++)
    {
        int v, u;
        cin >> v >> u;
        g[v].push_back(u);
        g[u].push_back(v);
    }
    dfs(1, 0);
    cout << ans;
    return 0;
}