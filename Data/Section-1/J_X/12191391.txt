#include <bits/stdc++.h>

using namespace std;

const int maxn = 200000 + 5;

char a[maxn], b[maxn];
int sum[maxn][26][2];

bool cmp(int x1, int y1, int x2, int y2)
{
    while(x1 < y1)
    {
        if(a[x1++] != b[x2++])
        {
            return false;
        }
    }
    return true;
}

bool solve(int x1, int y1, int x2, int y2)
{
    for(int i = 0; i < 26; ++i)
    {
        if(sum[y1][i][0] - sum[x1][i][0] != sum[y2][i][1] - sum[x2][i][1]) return false;
    }
    if(cmp(x1, y1, x2, y2)) return true;
    if((y1 - x1) % 2) return false;
    if(solve(x1, (x1 + y1) >> 1, x2, (x2 + y2) >> 1) && solve((x1 + y1) >> 1, y1, (x2 + y2) >> 1, y2)) return true;
    if(solve(x1, (x1 + y1) >> 1, (x2 + y2) >> 1, y2) && solve((x1 + y1) >> 1, y1, x2, (x2 + y2) >> 1)) return true;
    return false;
}

int main()
{
    while(~scanf("%s%s", a, b))
//    while(cin >> a >> b)
    {
        int n = strlen(a);
        for(int j = 0; j < 26; ++j)
        {
            for(int i = 0; i < n; ++i)
            {
                if(a[i] - 'a' == j)
                {
                    sum[i + 1][j][0] = sum[i][j][0] + 1;
                }
                else
                {
                    sum[i + 1][j][0] = sum[i][j][0];
                }
                if(b[i] - 'a' == j)
                {
                    sum[i + 1][j][1] = sum[i][j][1] + 1;
                }
                else
                {
                    sum[i + 1][j][1] = sum[i][j][1];
                }
            }
        }
//        cout << (solve(0, n, 0, n) ? "YES" : "NO") << endl;
        printf("%s\n", solve(0, n, 0, n) ? "YES" : "NO");
    }
    return 0;
}
