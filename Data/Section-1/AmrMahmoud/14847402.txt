#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

bool taken[405][405], v[405];
int dist[405];

int main()
{
  int n, m, x, y, z;
  scanf("%d %d", &n, &m);
  for(int i=0;i<m;i++)
  {
    scanf("%d %d", &x, &y);
    taken[x][y] = taken[y][x] = true;
  }
  bool t = 1 - taken[1][n];
  queue<int> q;
  q.push(1);
  v[1] = true;
  while(!q.empty())
  {
    x = q.front();
    q.pop();
    if(x == n)
    {
      printf("%d", dist[n]);
      return 0;
    }
    for(int i=1;i<=n;i++)
      if(!v[i] && taken[x][i] == t)
      {
        v[i] = true;
        dist[i] = dist[x] + 1;
        q.push(i);
      }
  }
  printf("-1");
  return 0;
}
