#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define lg(x) ceil(log2(x))
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
set<int>s[MAXN];
int r[5];
int main(){
	int n,m;
	char c;
	cin>>n>>m;
	for(int i=0;i<n;i++){
		s[i].insert(-1);
		int d=0;
		for(int j=0;j<m;j++){
			cin>>c;
			if(c=='1')
				s[i].insert(j),d=1;
		}
		if(!d){
			cout<<"-1"<<endl;
			return 0;
		}
		s[i].insert(INF);	
	}
	int mn=INF;
	for(int i=4;i<=4;i++){
		int ans=0;
		for(int j=0;j<n;j++){
			int mini=INF;
			r[0]=i-*(--s[j].lower_bound(i));
			r[1]=(m-*(--(--s[j].end())))+i;
			r[2]=*s[j].lower_bound(i)-i;
			r[3]=*(s[j].lower_bound(0))+(m-i);
		//	printf("%d %d %d %d\n",r[0],r[1],r[2],r[3]);
			for(int i=0;i<4;i++)
				umin(mini,r[i]);
			ans+=mini;
		}
		umin(mn,ans);
	}
	cout<<mn<<endl;
	return 0;
}

