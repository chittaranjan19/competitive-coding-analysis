//INOG
//<MohammadJavad Akbari/>
//I Try So Hard And Got So Far,But In The End It Doesn't Even Matter... 

#include<bits/stdc++.h>
using namespace std;

#define mp make_pair
#define int long long
#define ld long double
#define all(x) x.begin(),x.end()
#define endl '\n'

const long long MAXN=1e5+51;
const long long MAXM=3e3;
const long long MOD=1610612741;
const long long mod=1e9+7;
const long long INF=1e15+5040;

const int MAX_LOG=21;
const int dx[4]={1,-1,0,0};
const int dy[4]={0,0,-1,1};

int p[MAXN];
int root(int x){if(p[x]<0)return x;return p[x]=root(p[x]);}
inline void merge(int x,int y){x=root(x);y=root(y);p[x]=y;}

vector<pair<int,int>>ver[MAXN];
vector<pair<int,pair<int,int>>>eg,ed;
int par[MAXN][MAX_LOG];
int meg[MAXN][MAX_LOG];
int dis[MAXN];

void dfs(int v=1,int dad=0,int d=0,int w=0){
    //cout<<v<<' '<<dad<<'\n';
    par[v][0]=dad;
    meg[v][0]=w;
    dis[v]=d;
    for(auto u:ver[v])
        if(u.first!=dad)dfs(u.first,v,d+1,u.second);
}

int ipar(int v,int x){
    for(int i=0;x>0;i++){
        if(x%2)v=par[v][i];
        x/=2;
    }
    return v;
}

int lca(int x,int y){
    if(dis[x]>dis[y])swap(x,y);
    y=ipar(y,dis[y]-dis[x]);
    if(y==x)return x;
    for(int i= MAX_LOG-1;i>=0;i--)
		if(par[x][i]-par[y][i])
			x=par[x][i],y=par[y][i];
	return par[x][0];
}

int imeg(int v,int x){
    int res=0;
    for(int i=0;x>0;i++){
        if(x%2)res=max(res,meg[v][i]),v=par[v][i];
        x/=2;
    }
    return res;
}


main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);cout.tie(0);
	fill(p,p+MAXN,-1);
	int n,m;
	cin>>n>>m;
	for(int i=0;i<m;i++){
	    int x,y,z;
	    cin>>x>>y>>z;
	    eg.push_back(mp(z,mp(x,y)));
	    ed.push_back(mp(z,mp(x,y)));
	}
	sort(all(eg));
	int sum=0;
	for(auto e:eg){
	    int x=e.second.first;
	    int y=e.second.second;
	    int z=e.first;
	    if(root(x)==root(y))continue;
	    sum+=e.first;
	    ver[x].push_back(mp(y,z));
	    ver[y].push_back(mp(x,z));
	    merge(x,y);
	}
	dfs();
	for(int i=1;i<MAX_LOG;i++)
	    for(int j=1;j<=n;j++){
	        par[j][i]=par[par[j][i-1]][i-1];
	        meg[j][i]=max(meg[j][i-1],meg[par[j][i-1]][i-1]);
	    }

	for(auto e:ed){
	    int x=e.second.first;
	    int y=e.second.second;
	    int z=lca(x,y);
	    if(par[x][0]==y || par[y][0]==x)cout<<sum;
	    else cout<<sum-max(imeg(x,dis[x]-dis[z]),imeg(y,dis[y]-dis[z]))+e.first;
	    cout<<'\n';
	}
	
}