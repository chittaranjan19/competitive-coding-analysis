#include <iostream>
#include <algorithm>
#include <cstring>
#include <string>
#include <cstdio>
#include <queue>
using namespace std;
#define T 200005
typedef long long ll;
int n;
struct node
{
    int max,min;
    int i,cnt;
    node(int _1,int _2,int _3,int _4):max(_1),min(_2),i(_3),cnt(_4){}
    node(){}
};
bool Abs(int a,int b)
{
    if(a-b<=1&&a-b>=-1)
        return true;
    return false;
}
int v[T],ma;
queue<node> q;
void bfs()
{
    node p;
    while(!q.empty())
    {
        if(ma==n)break;
        p =q.front();q.pop();
        ma = max(ma,p.cnt);
        int t = p.i +1;
       if(t!=n&&Abs(v[t],p.max)&&Abs(v[t],p.min)){
           if(v[t]>p.max)p.max=v[t];
           if(v[t]<p.min)p.min=v[t];
           q.push(node(p.max,p.min,t,p.cnt+1));
       }
    }
    while(!q.empty()){q.pop();}
}
int main()
{
#ifdef zsc
    freopen("input.txt","r",stdin);
#endif
    int i;
    while(~scanf("%d",&n))
    {
        for(i=0;i<n;++i){
            scanf("%d",&v[i]);
            q.push(node(v[i],v[i],i,1));
        }
        ma = 0;
        bfs();
        printf("%d\n",ma);
    }
    return 0;
}