/*
PROG:kerim
LANG:C++
*/
#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<ll,int> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN],rr[MAXN],r[MAXN],ar[MAXN],ra[MAXN];
vector<int>adj[MAXN];
int main()
{
	int a,b,mini=INF,san;
	cin>>a;
	for(int i=0;i<a;i++)
		cin>>arr[i],rr[arr[i]]++;
	for(int i=0;i<a;i++)
	{
		cin>>b;
		adj[arr[i]].pb(b);
		ar[arr[i]]+=b;		
	}	
	for(int i=1;i<MAXN;i++)
		r[i]=r[i-1]+rr[i];
	for(int i=1;i<MAXN;i++)
		ar[i]+=ar[i-1];			
	for(int i=1;i<MAXN;i++)
	{
		if(rr[i])
		{
			int pri=ar[MAXN-1]-ar[i],sum=0;
			if(r[i]/2+(r[i]%2)>r[i-1])
			mini=min(mini,pri),san=pri;
			else
			{
				int to=r[i-1]-rr[i];
				to++;
				for(int j=1;j<=200;j++)
				{
					if(to-ra[j]<=0)
					{
						mini=min(mini,to*j+sum+pri);
						san=to*j+sum+pri;
						break;
					}
					else
					sum+=ra[j]*j,to-=ra[j];
				}
			}
			//cout<<san<<endl;
			for(int j=0;j<adj[i].size();j++)
				ra[adj[i][j]]++;		
		}
	}	
	cout<<mini<<endl;
	return 0;
}
/*
10
20   1   15 17  11  2 15  3  16  3
129 114 183 94 169 16 18 104 49 146
*/