#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>
#include <valarray>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint toNumber (string s)
{
	tint Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (tint number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}




int main()
{
	#ifdef ACMTUYO
		assert(freopen("entrada.in", "r", stdin));
	#endif
	ios_base::sync_with_stdio(0);
	
	tint n;
	while (cin >> n)
	{
		vector<tint> a (n);
		forn(i,n)
			cin >> a[i];
		vector<bool> v (n,false);
		sort(a.begin(),a.end());
		tint ans = 0;
		bool termine = false;
		while (!termine)
		{
			termine = true;
			tint j = 0,anterior = 0;
			forn(i,n)
				if (!v[i])
				{
					j = i;
					v[i] = true;
					anterior = a[i];
					break;
				}
			forsn(i,j+1,n)
			{
				if (!v[i] && a[i] != anterior )
				{
					anterior = a[i];
					v[i] = true;
					ans++;
				}
				termine &= v[i];
			}
		}
		
		cout << ans << endl;
	}
	return 0;
}



