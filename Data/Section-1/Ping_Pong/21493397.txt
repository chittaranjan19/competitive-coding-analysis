#include <stdio.h>
#include <bits/stdc++.h>

#define ll long long
#define ld long double

using namespace std;

const ll inf = (ll)2 * 1e9;
const ll MOD = (ll)1e9 + 7;
const ll P = 239;
const int ABC = 26;
const ll MAX_N = 100000;
const ld pi = 3.1415926535897932384626;
const ld eps = 1e-6;

int main()
{
    //ios_base::sync_with_stdio(0);
    //cin.tie(0);
    int n, c;
    scanf("%d %d", &n, &c);
    vector<vector<int> > a(n);
    for (int i = 0; i < n; i++)
    {
        int l;
        scanf("%d", &l);
        a[i].resize(l);
        for (int j = 0; j < l; j++)
        {
            scanf("%d", &a[i][j]);
            a[i][j]--;
        }
    }
    vector<int> cnt(c, 0);
    for (int i = 0; i < n - 1; i++)
    {
        int n1 = a[i].size(), n2 = a[i + 1].size();
        bool ok = false;
        for (int j = 0; j < min(n1, n2); j++)
            if (a[i][j] != a[i + 1][j])
            {
                int l = (c - a[i][j]) % c;
                int r = (c - 1 - a[i + 1][j]);
                if (l <= r)
                {
                    cnt[l]++;
                    if (r < n - 1)
                        cnt[r + 1]--;
                }
                else
                {
                    cnt[0]++;
                    if (r < n - 1)
                        cnt[r + 1]--;
                    cnt[l]++;
                }
                ok = true;
                break;
            }
        if (!ok)
        {
            if (n1 <= n2)
                cnt[0]++;
            else
            {
                printf("%d", -1);
                return 0;
            }
        }
    }
    for (int i = 1; i < c; i++)
        cnt[i] += cnt[i - 1];
    for (int i = 0; i < c; i++)
        if (cnt[i] == n - 1)
        {
            printf("%d", i);
            return 0;
        }
    printf("%d", -1);
    return 0;
}
