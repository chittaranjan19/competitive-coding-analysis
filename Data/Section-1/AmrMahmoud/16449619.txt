#include <bits/stdc++.h>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int arr[2505][2505];
map<int, int> m;
vector<int> tmp;
vector<pair<int, int> > v[6250005];
bitset<2505> mask[2505];

int main()
{
  int n;
  scanf("%d", &n);
  for(int i=0;i<n;i++)
    for(int j=0;j<n;j++)
    {
      scanf("%d", &arr[i][j]);
      tmp.pb(arr[i][j]);
    }
  for(int i=0;i<n;i++)
  {
    if(arr[i][i])
    {
      printf("NOT MAGIC");
      return 0;
    }
    for(int j=i+1;j<n;j++)
    {
      if(arr[i][j] != arr[j][i])
      {
        printf("NOT MAGIC");
        return 0;
      }
    }
  }
  sort(tmp.begin(), tmp.end());
  int idx = 0;
  for(int i=0;i<tmp.size();i++)
  {
    if(i && tmp[i] == tmp[i - 1]) continue;
    m[tmp[i]] = idx++;
  }
  for(int i=0;i<n;i++)
    for(int j=0;j<n;j++)
    {
      arr[i][j] = m[arr[i][j]];
      v[arr[i][j]].pb(mp(i, j));
    }
  int x, y;
  for(int i=0;i<idx;i++)
  {
    for(int j=0;j<v[i].size();j++)
    {
      x = v[i][j].f;
      y = v[i][j].s;
      if((mask[x] & mask[y]) != mask[2501])
      {
        printf("NOT MAGIC");
        return 0;
      }
    }
    for(int j=0;j<v[i].size();j++)
    {
      x = v[i][j].f;
      y = v[i][j].s;
      mask[x][y] = 1;
      mask[y][x] = 1;
    }
  }
  printf("MAGIC");
  return 0;
}
