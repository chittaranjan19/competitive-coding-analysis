import java.io.*;         
import java.util.*;         
import java.math.*;         

 
public class Main  implements Runnable {
//public static final String FileName = "test";
StreamTokenizer ST;      
PrintWriter out;      
BufferedReader br;   
Scanner in;
static final int inf = 1000000000;
 
int nextInt() throws IOException{      
    ST.nextToken();      
    return (int)ST.nval;      
}
long nextLong() throws IOException{      
    ST.nextToken();      
    return (long)ST.nval;      
}      
String next() throws IOException{      
    ST.nextToken();      
    return ST.sval;      
}      
double nextD() throws IOException{      
    ST.nextToken();      
    return ST.nval;      
}      
public static void main(String[] args) throws IOException {       
   new Thread(new Main()).start();
//	new Main().run();
}
 
public void run()  {      
    try {
    	br = new BufferedReader(new InputStreamReader(System.in));
    	out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));    	
    	//br = new BufferedReader(new FileReader(new File(FileName+".in")));
    	//out = new PrintWriter(new BufferedWriter(new FileWriter(FileName+".out")));
    	in = new Scanner(br);
        ST = new StreamTokenizer(br);      
        solve();      
        out.close();
        //in.close();
        br.close();   
    }         
    catch (IOException e) {       
    	e.printStackTrace();
    	throw new IllegalStateException(e);  
    }      
}


public void solve() throws IOException {
	int m = nextInt();
	int n = nextInt();
	boolean[][] a = new boolean[n+1][n+1];
	int cx = (n+1)/2;
	while (m-->0) {
		int k = nextInt();
		int bx = -1, by = -1, bv = Integer.MAX_VALUE;
		for (int x=1; x<=n; x++) {
			int fx = k*Math.abs(x-cx);
			int l=1, r = 1, z = 0, val = 0;
			while (r<=k) {
				val += Math.abs(r-cx);
				if (a[x][r]) z++;
				r++;				
			}
			if (z==0) {
				if (val+fx<bv) {
					bv = val+fx;
					bx = x; by = l;
				}
			}
			while (r<=n) {
				if (a[x][l]) z--; val -= Math.abs(l-cx);			
				if (a[x][r]) z++; val += Math.abs(r-cx);
				r++; l++;
				if (z==0 && val+fx<bv) {
					bv = val+fx;
					bx = x; by = l;
				}		
			}
		}
		
		if (bx>=0) {
			out.println(bx+" "+by+" "+(by+k-1));
			for (int i=0; i<k; i++) a[bx][by+i] = true;
		} else out.println(-1);
			
	}
		
	
}
  
}
















 
 
  