#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007
#define inf 1000000000
#define maxn 1000000

#define ll long long
#define pii pair<int, int>
#define pb push_back
#define sin scanint
#define bitcount(x) __builtin_popcount(x)
#define fill(s, p) memset(s, p, sizeof(s));
#define gc getchar

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

ll x[maxn], ht[maxn], dp[maxn];
int n;

int solve(ll llim, int cur)
{
    ll l, r;
    int r1, r2, r3;
    l = x[cur]-ht[cur];
    r = x[cur]+ht[cur];
    if(cur==n-2){
        if(l>llim)
            return 1;
        else{
            if(r<x[n-1])
                return 1;
            else
                return 0;
        }
    }       
    if(dp[cur]!=-1)
        return dp[cur];
    r1 = solve(x[cur], cur+1);
    if(l>llim)
        r3 = 1+r1;
    else
        r3 = 0;
    if(r<x[cur+1])
        r2 = 1+solve(r, cur+1);
    else
        r2 = 0;
    return dp[cur] = max(r1, max(r2, r3));
}

int main()
{   
    //freopen("input.txt", "r", stdin);
    fill(dp, -1);
    int i, j;
    sin(n);
    for(i=0; i<n; i++){
        scanf("%I64d%I64d", &x[i], &ht[i]);
    }
    if(n<=2){
        printf("%d\n", n);
        return 0;
    }
    printf("%d\n", (solve(x[0], 1)+2));
    //for(i=0; i<n; i++)
    //  cout << dp[i] << endl;
    return 0;
}