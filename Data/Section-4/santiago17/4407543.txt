#include <iostream>
#include <map>
#include <set>
#include <utility>
#include <queue>

using namespace std;

pair<int, int> ret(char c, pair<int, int> t)
{
    if(c == 'S')
	return make_pair(t.first, t.second-1);
    if(c == 'N')
	return make_pair(t.first, t.second+1);
    if(c == 'E')
	return make_pair(t.first+1, t.second);
    return make_pair(t.first-1, t.second);	
}


int main()
{
    int t, sx,sy, ex, ey, moves;
    bool reachable = false;
    string dir;
    cin>>t>>sx>>sy>>ex>>ey;
    cin>>dir;
    map<pair<int, int>, int> times;
    queue<pair<int, int> > q;
    q.push(make_pair(sx, sy));
    times[make_pair(sx, sy)] = 0;     
    while(!q.empty())
    {
	pair<int, int> p = q.front();
	if(p.first == ex && p.second == ey)
	{
	    moves = times[p];
	    reachable = true;
	    break;
	}
	q.pop();
//	cout<<"current = "<<p.first<<" "<<p.second<<endl;
	int ctime = times[p];
	if(ctime >= t)
	   continue; 
//	cout<<"time = "<<ctime<<endl;
	pair<int, int> t = ret(dir[ctime], p);
	times[t] = ctime+1;
	times[p] = ctime+1;
	q.push(t);
	q.push(p);	
    }
    if(reachable)
	cout<<moves;
    else
	cout<<-1;
    return 0;
}
