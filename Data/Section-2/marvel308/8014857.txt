#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<vector>
#include<queue>
using namespace std;
#define min(a,b) ((a<b)?(a):(b))
#define pp pair<int,int>
int d[2001][2001],n;
class priortise
{
public:
    bool operator()(const pp &p1,const pp &p2)
    {
        return p1.second>p2.second;
    }
};
int main()
{
    int i,j;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=n;j++)
        {
            scanf("%d",&d[i][j]);
        }
    }
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=n;j++)
        {
            if(d[i][1]+d[1][j]!=d[i][j]&&i!=j)
            {
                printf("NO\n");
                return 0;
            }
        }
    }
    priority_queue<pp, vector<pp> ,priortise > q;
    for(i=1;i<=n;i++)
    {
        int dist[2005]={0};
        for(j=1;j<=2000;j++)
            dist[j]=1000000000;
        dist[i]=0;
        q.push(pp(i,0));
        while(!q.empty())
        {
            pp temp=q.top();
            q.pop();
            int u=temp.first;
            for(j=1;j<=n;j++)
            {
                if(i!=j)
                {
                    int v=j;
                    if(dist[v]>dist[u]+d[u][v])
                    {
                        dist[v]=dist[u]+d[u][v];
                        q.push(pp(v,dist[v]));
                    }
                }
            }
        }
        for(j=1;j<=n;j++)
        {
            if(d[i][j]!=dist[j])
            {
                printf("NO\n");
                return 0;
            }
        }
    }
    printf("YES\n");
    return 0;
}
