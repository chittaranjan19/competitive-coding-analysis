#include <iostream>
#include <climits>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(b, 0, sizeof(arr)); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // getchar(), gets()
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); n - amount; pair
#include <iomanip>      // setw(4), setfill('.'), setprecision(2)
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#include <memory>       // shared_ptr<>, uniqu_ptr<>
#include <iterator>     // ostream_iterator<int, char> out_iter(cout, " ");
#include <set>
#include <map>
#include <list>
#include <queue>
#include <functional>   // function
#define SRT srand(int(time(0)))

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
ld pi = 3.14159265358979323846;
int ten[8] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};
inline void eatline() { while (getchar() != '\n'); }

typedef map<int, int> Map;
typedef Map::iterator mIter;
typedef pair<int, int> Pair;
typedef set<int> Set;
typedef Set::iterator sIter;
typedef multimap<int, int> mMap;
typedef mMap::iterator mmIter;
typedef multiset<int> mSet;
typedef mSet::iterator msIter;
typedef list<int> List;
typedef List::iterator lIter;
typedef deque<int> Deque;
typedef Deque::iterator dIter;

char s[20];
int n = 0;

int main()
{
    int i;
    for (i = 0; !isalpha(s[i] = getchar()); ++i);
    n = i;
    ll t = 1, a = 0;
    for (i = n-1; i >= 0; --i, t *= 10)
        a += (s[i] - '0') * t;
    
    ll t1, t2, dt;
    if (a % 2 != 0)
    {
        if ((a + 1) % 4 == 0)
            t1 = a - 3, t2 = 3 * t1;
        else
            t1 = a - 1, t2 = 3 * t1;
    }
    else
    {
        if (a % 4 == 0)
            t1 = a - 3, t2 = 3 * (a - 2);
        else
            t1 = a - 1, t2 = 3 * a;
    }
    char c[6] = {'f', 'e', 'd', 'a', 'b', 'c'};
    for (i = 0; i < 6; ++i)
    {
        if (s[n] == c[i])
        {
            dt = i + 1;
            break;
        }
    }
    cout << t1 + t2 + dt << '\n';
    return 0;
}