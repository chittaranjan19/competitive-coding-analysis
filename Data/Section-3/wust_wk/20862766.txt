#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int maxn=200005;
char s[maxn];
char ss[maxn];
char s_copy[maxn];
int n,t;
char str[maxn];

const int N=200005;
void add(char *s)
{
    char s1[N],s2[5];
    int a[N]={0},b[N]={0},l1,l2,c,k,i;
    /*puts("请输入两个较大的数字（Note：输完一个按一次回车）：");
    gets(s1);
    gets(s2);*/
    strcpy(s1,s);
    s2[0]='1';
    s2[1]='\0';
    l1=strlen(s1);
    l2=strlen(s2);
   if(l1<l2) k=l2;
    else k=l1;
    c=k;
    for(i=0; i<l1; k--,i++)     a[k]=s1[l1-1-i]-'0';
    for(k=c,i=0; i<l2; k--,i++)     b[k]=s2[l2-1-i]-'0';
    //printf("\n");
    for(i=c; i>=0; i--)
    {
        a[i]+=b[i];
        if(a[i]>=10)
        {
            a[i]-=10;
            a[i-1]++;
        }
    }
    //printf("此两数相加之和为");
    if(a[0]!=0)
    {
        for(i=0; i<=c; i++) printf("%d",a[i]);
    }
    else    {for(i=1; i<=c; i++) printf("%d",a[i]);} printf("\n");
}
int main()
{
    while(~scanf("%d%d",&n,&t))
    {
        scanf("%s",s);
        strcpy(s_copy,s);
        int len=strlen(s);
        int k=0;
        for(int i=0;s[i];i++)
        {
            if(s[i]=='.')
                break;
            ss[k++]=s[i];
        }
        ss[k]='\0';
        //cout<<"ss="<<ss<<endl;
        t=min(t,len-k);
        int pos=k+1;
        for(int i=k+1;s[i];i++)
        {
            if(s[i]>='5')
            {
                pos=i;
                break;
            }
        }
        //cout<<"pos="<<pos<<endl;
        bool flag=false;
        int i=pos-1;
        while(t&&i>=0)
        {
            if(s[i]=='.')
            {
                if(s[i+1]>='5')
                {add(ss);
                }
                else puts(s);
                flag=true;
                break;
            }
            char c=(s[i]+=1);
            s[i+1]='\0';
            if(c<'5') break;
            t--;
            i--;
        }
        /*if(flag)
        {
            //puts(ss);

        }
        else
        {

        }*/
        if(!flag)
        {
            puts(s);
        }
    }
    return 0;
}
