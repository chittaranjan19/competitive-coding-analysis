import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProblemBDiv2 {
    BufferedReader rd;

    private ProblemBDiv2() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int[] a = intarr();
        long from = 1;
        long to = 2000000000;
        while(to - from > 2) {
            long mid = (from+to)/2;
            int y = solve(mid,a[2],a[3],a[0],a[1]);
            if(y < 0) {
                from = mid+1;
            } else {
                to = mid-1;
            }
        }
        for(long i=Math.min(from, to)-5;i<=Math.max(from, to)+5;i++) {
            if(i >= 1 && i <= 2000000000) {
                if(solve(i,a[2],a[3],a[0],a[1]) == 1) {
                    out(i);
                    return;
                }
            }
        }
    }

    private int solve(long s, long x, long y, long c1, long c2) {
        long a = s/(x*y);
        long b = a*(x*y-x-y+1);
        for(long i=a*x*y;i<=s;i++) {
            if(i%x>0&&i%y>0) {
                b++;
            }
        }
        long c = s - b - s/x;
        long d = s - b - s/y;
        c1 -= Math.min(c,c1);
        c2 -= Math.min(d,c2);
        return c1+c2 > b?-1:1;
    }


    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = s.split(" ");
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemBDiv2();
    }
}
