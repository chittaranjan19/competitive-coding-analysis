#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

#define ll long long
#define ld long double

using namespace std;

const ll inf = (ll)2 * 1e18;
const ll MOD = (ll)1e9 + 7;
const ll P = 239;
const ll MAX_N = 500000;
const long double pi = 3.1415926535897932384626;
const long double eps = 1e-6;

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    ll n;
    cin >> n;
    map<pair<ld, ll>, ll > m;
    map<ll, ll> t;
    ll a[n][2];
    for (ll i = 0; i < n; i++)
        cin >> a[i][0] >> a[i][1];
    for (ll i = 0; i < n; i++)
        for (ll j = i + 1; j < n; j++)
        {
            ld k;
            if (a[i][0] == a[j][0])
                k = (long double)inf;
            else
                k = (long double)(a[i][1] - a[j][1]) / (a[i][0] - a[j][0]);
            ll d = (a[i][0] - a[j][0]) * (a[i][0] - a[j][0]) + (a[i][1] - a[j][1]) * (a[i][1] - a[j][1]);
            if (m.find(make_pair(k, d)) == m.end())
                m[make_pair(k, d)] = 0;
            m[make_pair(k, d)]++;
        }
    ll ans = 0;
    for (ll i = 0; i < n; i++)
        for (ll j = i + 1; j < n; j++)
        {
            ld k;
            if (a[i][0] == a[j][0])
                k = (long double)inf;
            else
                k = (long double)(a[i][1] - a[j][1]) / (a[i][0] - a[j][0]);
            ll d = (a[i][0] - a[j][0]) * (a[i][0] - a[j][0]) + (a[i][1] - a[j][1]) * (a[i][1] - a[j][1]);
            if (m.find(make_pair(k, d)) != m.end())
                ans += (m[make_pair(k, d)] - 1);
        }
    cout << ans / 4;
    return 0;
}
