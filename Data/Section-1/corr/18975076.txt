#include<bits/stdc++.h>
using namespace std;
#define mx 1000000

int N= mx;
bool stts[mx+10];
vector <int> prime;
set <int> nums;
void sieve();
bool factor(int n);

int main() {
	sieve();
	int n,k;
	while (cin>>n>>k) {
		nums.clear();
		bool ans=0;
		for (int i=1;i<=n;++i) {
			int c;
			cin>>c;
			if (c%k==0) ans=1;
			if (nums.find(c)==nums.end()) nums.insert(c);
		}
		ans= max(ans,factor(k));
		if (ans) puts("Yes");
		else puts("No");
	}
}

void sieve() {
    int i,j,sqr= sqrt(N);

    for (i=3; i<=sqr; i+= 2) {
        if (stts[i>>1]) continue;
        for (j=i+i; j<=N; j+= i)
            stts[j]= 1;
    }

	prime.push_back(2);
    for (i=3; i<=N; i+=2) if (!stts[i]) prime.push_back(i);
}

bool factor(int n) {
	int sqr= sqrt(n);
	for (int i=0;prime[i]<=sqr;++i) {
		if (n%prime[i]!=0) continue;
		int div=1;
		while (n%prime[i]==0) {
			div*=prime[i];
			n/=prime[i];
		}
		if (nums.find(div)==nums.end()) return 0;
		sqr= sqrt(n);
	}
	if (n>1) {
		if (nums.find(n)==nums.end()) return 0;
	}
	return 1;
}