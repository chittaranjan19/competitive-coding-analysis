#include <bits/stdc++.h>

#define f first
#define s second
#define mp make_pair
#define rank    something_which_is_supposed_to_be_rank
#define left    something_which_is_supposed_to_be_left
#define right   something_which_is_supposed_to_be_right

using namespace std;

typedef unsigned int uint;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

const int N = 501, INF = N;

int n, c[N], dp[N][N];

int f(int l, int r) {
    if (dp[l][r] == -1) {
        if (l >= r) {
            dp[l][r] = 0;
        } else {
            dp[l][r] = 1 + f(l + 1, r);
            if (l + 1 < r && c[l + 1] == c[l]) {
                dp[l][r] = min(dp[l][r], 1 + f(l + 2, r));
            }
            for (int m = l + 2; m < r; ++m) {
                if (c[l] == c[m]) {
                    dp[l][r] = min(dp[l][r], f(l + 1, m) + f(m + 1, r));
                }
            }
        }
        // cerr << l << " " << r << ": " << dp[l][r] << "\n";
    }
    return dp[l][r];
}

int main() {
    cin.sync_with_stdio(0);
    cin.tie(0);
    memset(dp, -1, sizeof(dp));
    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> c[i];
    }
    cout << f(0, n) << "\n";
    cerr << "Time elapsed: " << (ld) clock() / CLOCKS_PER_SEC << "\n";
    return 0;
}