import java.io.*;
import java.util.*;
import java.math.*;

public class Task {

    void solve() throws IOException {
    	int n = nextInt();
    	int[] a = new int[n];
    	int res = 0;
    	int cnt = 0;
    	for (int i=0; i<n; i++) a[i] = nextInt();
    	Arrays.sort(a);
    	for (int i=0; i<n; ) {
    		int k = 1;
    		while (i+k<n && a[i+k]==a[i]) k++;
    		i += k;
    		if (k>res) res = k;
    		cnt++;
    	}
    	out.println(res+" "+cnt);
    	
    }
    
    


    static final int inf = 1000000000;
    static final double epd = 1e-8;
    BufferedReader br;
    StringTokenizer st;
    PrintWriter out;
    
    public void run() {
        try {
            //br = new BufferedReader(new FileReader(FileName+".in"));
            //out = new PrintWriter(FileName+".out");
            br = new BufferedReader(new InputStreamReader(System.in));
            out = new PrintWriter(System.out);
            //br = new BufferedReader(new FileReader("input.txt"));
            //out = new PrintWriter("output.txt");
            solve();
            br.close();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }
    }

    String next() throws IOException {
        while (st == null || !st.hasMoreTokens()) {
            String s = br.readLine();
            if (s == null)
                    return null;
            st = new StringTokenizer(s);
        }
        return st.nextToken();
    }

    double nextDouble() throws IOException {
       return Double.parseDouble(next());
    }

    int nextInt() throws IOException {
            return Integer.parseInt(next());
    }

    long nextLong() throws IOException {
            return Long.parseLong(next());
    }

    public static void main(String[] args) {        
            new Task().run();
    
    }
}