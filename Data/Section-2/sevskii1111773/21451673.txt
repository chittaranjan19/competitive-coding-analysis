using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;

namespace SevskiiOlymp
{
    class Program
    {
        static void Main(string[] args)
        {
            Dictionary<string, int> shirts = new Dictionary<string, int>();
            shirts.Add("S",0);
            shirts.Add("M",1);
            shirts.Add("L",2);
            shirts.Add("XL",3);
            shirts.Add("XXL",4);
            shirts.Add("XXXL",5);
            int[] shirt = new int[6];
            string[] sizes = Console.ReadLine().Split(' ');
            for (int i = 0; i < sizes.Length; i++)
                shirt[i] += int.Parse(sizes[i]);
            int n = int.Parse(Console.ReadLine());
            List<int> results = new List<int>();
            for (int i = 0; i < n; i++)
            {
                string[] cs = Console.ReadLine().Split(',');
                int max = 0;
                foreach (string s in cs)
                    if (shirt[shirts[s]] > shirt[max])
                        max = shirts[s];
                if (shirt[max] == 0)
                {
                    Console.WriteLine("NO");
                    return;
                }

                results.Add(max);
                shirt[max]--;
            }
            Dictionary<int, string> shirtsr = new Dictionary<int, string>();
            shirtsr.Add(0, "S");
            shirtsr.Add(1, "M");
            shirtsr.Add(2, "L");
            shirtsr.Add(3, "XL");
            shirtsr.Add(4, "XXL");
            shirtsr.Add(5, "XXXL");
            Console.WriteLine("YES");
            for (int i = 0; i < results.Count; i++)
                Console.WriteLine(shirtsr[results[i]]);
        }
        public void tmp()
        {
            List<string> prices = new List<string>();
            string s = Console.ReadLine();
            foreach (Match m in Regex.Matches(s, @"[^\d]+([^a-z]+)"))
            {
                prices.Add(m.Groups[1].Value);
            }
            int result = 0;

            foreach (string p in prices)
            {
                if (Regex.IsMatch(p, @"\.\d\d$"))
                {
                    result += int.Parse((p.Substring(0, p.Length - 3).Replace(".", ""))) * 100 + int.Parse(p.Substring(p.Length - 2, 2));
                }
                else
                {
                    result += int.Parse((p.Replace(".", ""))) * 100;
                }
            }
            string resultStr = result.ToString();
            if (resultStr.Length == 1)
                resultStr = "00" + resultStr;
            if (resultStr.Length == 2)
                resultStr = "0" + resultStr;

            if (result % 100 == 0)
            {
                for (int i = 0; i < resultStr.Length - 2; i++)
                {
                    Console.Write(resultStr[i]);
                    if ((resultStr.Length - i) % 3 == 0 && i != resultStr.Length - 3)
                        Console.Write(".");
                }
            }
            else
            {
                for (int i = 0; i < resultStr.Length - 2; i++)
                {
                    Console.Write(resultStr[i]);
                    if ((resultStr.Length - i - 3) % 3 == 0 && i != resultStr.Length - 3)
                        Console.Write(".");
                }
                Console.Write("." + resultStr.Substring(resultStr.Length - 2, 2));
            }
            Console.ReadLine();
        }
    }
}
