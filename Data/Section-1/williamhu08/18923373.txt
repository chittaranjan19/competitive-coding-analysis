#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
const int MAXN = 2e5 + 10, MOD = 1e9 + 7;

inline int add (int x, int y) {
	return (x + y) % MOD;
}

inline void addeq (int &x, int y) {
	x = add(x, y);
}

inline int subtr (int x, int y) {
	x -= y;
	return x < 0 ? x + MOD : x;
}

inline void subtreq (int &x, int y) {
	x = subtr(x, y);
}

inline int mult (int x, int y) {
	return ll(x) * y % MOD;
}

inline void multeq (int &x, int y) {
	x = mult(x, y);
}

inline int add (int x, int y, int z) {
	return add(x, add(y, z));
}

inline int mult (int x, int y, int z) {
	return mult(x, mult(y, z));
}

int N, K;
int inv[MAXN], cho[MAXN];

void precomp() {
	inv[1] = 1;
	for (int i = 2; i < MAXN; i++) {
		inv[i] = mult(MOD - MOD / i, inv[MOD % i]);
	}

	cho[K] = 1;
	for (int i = K + 1; i < MAXN; i++) {
		cho[i] = mult(cho[i - 1], i, inv[i - K]);
	}
}

map<int, int> mp;

int main() {
	scanf("%d %d", &N, &K);
	precomp();
	for (int i = 0; i < N; i++) {
		int a, b;
		scanf("%d %d", &a, &b);
		mp[a]++;
		mp[b + 1]--;
	}

	int cnt = 0;
	int ans = 0;

	for (auto it = mp.begin(); next(it) != mp.end(); it++) {
		cnt += it -> second;
		addeq(ans, mult(cho[cnt], next(it) -> first - it -> first));
	}

	printf("%d\n", ans);
}
