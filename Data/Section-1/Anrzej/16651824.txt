#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

template<class T> T sqr(T x) { return x*x; }

const int N = 5222;

ld pi = 3.1415926535897932384626433832795;

int t[2001000], a[500010], b[500010];

int get(int v, int tl, int tr, int l, int r)
{
	if (tl > tr) return 1e9;
	if (tl > r || tr < l) return 1e9;
	if (l <= tl && tr <= r)
		return t[v];
	int m = (tl + tr) >> 1;
	return min(get(v * 2, tl, m, l, r), get(v * 2 + 1, m + 1, tr, l, r));
}

void update(int v, int tl, int tr, int p, int vl)
{
	if (tl > tr) return;
	if (tl == tr){
		t[v] =  vl;
		return;
	}
	int m = (tl + tr) >> 1;
	if (m >= p)
		update(v * 2, tl, m, p, vl);
	else update(v * 2 + 1, m + 1, tr, p, vl);
	t[v] = min(t[v * 2], t[v * 2 + 1]);
}

int n, q;

pair<pair<int, int>, int> qq[500010];
int ans[500010], nxt[500010];

int main()
{
	cin >> n >> q;
	for (int i = 0; i < n * 4 + 1; i++)
		t[i] = 1e9;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	map<int, int> pr;
	for (int i = 0; i < n; i++){
		if (pr.count(a[i])){
			b[i] = i - pr[a[i]];
			nxt[pr[a[i]]] = i;
		}
		pr[a[i]] = i;
	}
	for (int i = 0; i < q; i++){
		int l, r;
		cin >> l >> r;
		l--, r--;
		qq[i] = mp(mp(l, r), i);
	}
	sort(qq, qq + q);
	for (int i = 0; i < n; i++)
		update(1, 0, n - 1, i, (b[i] == 0)?1e9:b[i]);
	int tl = 0;
	for (int i = 0; i < q; i++){
		int l = qq[i].fs.fs, r = qq[i].fs.sc, id = qq[i].sc;
		while (tl < l){
			if (nxt[tl] != 0)
				update(1, 0, n - 1, nxt[tl], 1e9);
			tl++;
		}
		int tans = get(1, 0, n - 1, 0, r);
		ans[id] = (tans == 1e9) ? -1 : tans;
	}
	for (int i = 0; i < q; i++)
		cout << ans[i] << '\n';
	return 0;
}