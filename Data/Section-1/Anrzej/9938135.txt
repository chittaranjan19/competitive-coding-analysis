#include <iostream>
#include <vector>

using namespace std;

int n, a[110], i, j, result = 0;
vector<int> box[110];
bool used[110];

void sort()
{
    for (i = 0; i < n; i++)
    {
        for (j = i; j < n; j++)
        {
            if (a[j] > a[i])
            {
                int swap = a[i];
                a[i] = a[j];
                a[j] = swap;
            }
        }
    }
}

bool tryFound()
{
    for (i = 0; i < n; i++)
    {
        if (!used[i])
            return true;
    }
    return false;

}

int main()
{
    cin >> n;
    for (i = 0; i < n; i++)
        cin >> a[i];

    result = 1;
    sort();

    box[result].push_back(a[0]);
    used[0] = true;

    while (tryFound())
    {
        for (i = 1; i < n; i++)
        {
            for (int k = 0; k < box[result].size(); k++)
            {
                if (box[result][k] == 0)
                {
                    box[result++];
                    i = 0;
                    break;
                }
            }
            bool if_zero = false;
            if (box[result].size() > 0)
            {
                int temp = box[result].back();
                if ( temp == 1)
                {
                    int zero;
                        for (zero = i; zero < n; zero++)
                        {
                            if (a[zero] == 0 && !used[zero])
                            {
                                box[result].push_back(a[zero]);
                                used[zero] = true;
                                if_zero = true;
                                for (int k = box[result].size() - 2; k > -1; k--)
                                    box[result][k] -= 1;
                                break;
                            }
                    }
                }
            }
                if (!used[i] && !if_zero)
                {
                    box[result].push_back(a[i]);
                    used[i] = true;
                    for (int k = box[result].size() - 2; k > -1; k--)
                        box[result][k] -= 1;
                }
        }

    }
    cout << result;
    return 0;
}