import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProblemD {
    private static final long B = 1_000_000_007L;
    BufferedReader rd;

    ProblemD() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        long[] z = longarr();
        long a = z[0];
        long b = z[1];
        long n = z[2];
        long x = z[3];

        long res;
        if(n == 1) {
            res = modAdd(modMul(a,x),b);
        } else if(a == 1) {
            res = modAdd(x, modMul(b, modSub(n, 1)));
        } else {
            long p = modPow(a,n);
            res = modAdd(modMul(p, x), modMul(b, modDivpm(modSub(p, 1), modSub(a,1))));
        }
        out(res);
    }

    private static long modAdd(long a, long b) {
        return (a+b)%B;
    }

    private static long modSub(long a, long b) {
        return (a+B-(b%B))%B;
    }

    private static long modMul(long a, long b) {
        return (a*b)%B;
    }

    private static long modPow(long a, long b) {
        long x = 1%B;
        a %= B;
        while(b > 0) {
            if((b&1)!=0) {
                x *= a;
                x %= B;
            }
            b >>= 1;
            a *= a;
            a %= B;
        }
        return x;
    }

    private static long modDivpm(long a, long b) {
        return modMul(a,modPow(b,B-2));
    }

    private long[] longarr() throws IOException {
        return longarr(rd.readLine());
    }

    private long[] longarr(String s) {
        String[] q = split(s);
        int n = q.length;
        long[] a = new long[n];
        for(int i=0;i<n;i++) {
            a[i] = Long.parseLong(q[i]);
        }
        return a;
    }

    public String[] split(String s) {
        if(s == null) {
            return new String[0];
        }
        int n = s.length();
        int start = -1;
        int end = 0;
        int sp = 0;
        boolean lastWhitespace = true;
        for(int i=0;i<n;i++) {
            char c = s.charAt(i);
            if(isWhitespace(c)) {
                lastWhitespace = true;
            } else {
                if(lastWhitespace) {
                    sp++;
                }
                if(start == -1) {
                    start = i;
                }
                end = i;
                lastWhitespace = false;
            }
        }
        if(start == -1) {
            return new String[0];
        }
        String[] res = new String[sp];
        int last = start;
        int x = 0;
        lastWhitespace = true;
        for(int i=start;i<=end;i++) {
            char c = s.charAt(i);
            boolean w = isWhitespace(c);
            if(w && !lastWhitespace) {
                res[x++] = s.substring(last,i);
            } else if(!w && lastWhitespace) {
                last = i;
            }
            lastWhitespace = w;
        }
        res[x] = s.substring(last,end+1);
        return res;
    }

    private boolean isWhitespace(char c) {
        return c==' ' || c=='\t';
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemD();
    }
}
