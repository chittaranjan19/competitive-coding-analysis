using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;
int n, k, a, m;

int Calc(int l, int r)
{
    if (l > r) return 0;
    else
    return (r - l + 2) / (a + 1);
}
int main()
{
    //freopen("codeforces.inp", "r", stdin);
    //freopen("codeforces.out", "w", stdout);
    cin>>n>>k>>a;
    set <int> s;
    set <int> :: iterator it;
    set <int, greater <int> > sdown;
    set <int, greater <int> > :: iterator its;

    //long long ans = 0;
    s.insert(0);
    s.insert(n + 1);
    sdown.insert(0);
    sdown.insert(n + 1);
    long long ans = Calc(1, n);
    cin>>m;
    int num;
    FORE(i, 1, m) {
        cin>>num;
        if (s.find(num) != s.end() ) continue;
        else
        {
            s.insert(num);
            sdown.insert(num);
            int le = *sdown.upper_bound(num);
            int ri = *s.upper_bound(num);
            //cout<<le<<"=="<<ri<<"=="<<ans<<endl;
            ans -= Calc(le + 1, ri - 1);
            ans = ans + Calc(le + 1, num - 1) + Calc(num + 1, ri - 1);
            if (ans < k) {
                cout<<i<<endl;
                return 0;
            }
        }
    }
    cout<<-1<<endl;
    return 0;
}

