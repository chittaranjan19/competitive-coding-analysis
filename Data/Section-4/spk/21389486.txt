#include<bits/stdc++.h>

using namespace std;

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define scantype int
#define lli long long int
#define N 210

lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}
lli string_to_number(string s){lli x=0; stringstream convert(s); convert>>x; return x;}


void scan(scantype &x);

multiset<int>edge[N];
map< pair<int,int> , int > del;
vector<int> path;
bool vis[N];
bool yes[N][N];
vector< pair<int,int> > res;
bool bcn[N][N];

void dfs(int s)
{
       vis[s]=true;
       while(edge[s].size())
       {
              int t = *edge[s].begin();
              edge[s].erase(t);
              edge[t].erase(s);
              dfs(t);
              res.pb({t,s});
       }
}

int main(void)
{
  int t;
  cin>>t;

  while(t--)
  {
      int n,m;
      scan(n);scan(m);

      for(int i=0;i<N;i++)edge[i].clear();
      fill(vis,false);
      del.clear();
      path.clear();
      fill(yes,false);
      res.clear();
      fill(bcn,false);

      for(int i=0;i<m;i++)
      {
             int x,y;
             scan(x);scan(y);
             edge[x].insert(y);
             edge[y].insert(x);
             yes[x][y]=true;
             yes[y][x]=true;
      }

      vector<int> oedge;

      int cnt=0;
      for(int i=1;i<=n;i++)
         if(edge[i].size()%2)oedge.pb(i);
         else cnt++;

      for(int i=0;i<oedge.size();i+=2)
      {
             edge[oedge[i]].insert(oedge[i+1]);
             edge[oedge[i+1]].insert(oedge[i]);
             bcn[oedge[i]][oedge[i+1]]=true;
             bcn[oedge[i+1]][oedge[i]]=true;
      }

      for(int i=1;i<=n;i++)
              if(!vis[i])
                     dfs(i);

      cout<<cnt<<endl;
      for(int i=0;i<res.size();i++)
       {
              int v,u;
              v=res[i].first;
              u=res[i].second;
              if(bcn[v][u] || bcn[u][v])
                     bcn[v][u]=bcn[u][v]=false;
              else
                     printf("%d %d\n",v,u);
       }
      // cout<<endl<<endl;
  }
  return 0;
}









void scan(scantype &x)
{
    /*register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}*/

    register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
