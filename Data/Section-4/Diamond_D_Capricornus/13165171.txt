Const Fi='';//'D.INP';
      Fo='';//'D.OUT';
      maxN=19;
      So=1 shl 19;
Var   B:Array[0..maxN]OF Int64;
      A:Array[0..maxN,0..maxN]Of Int64;
      F:Array[0..So,0..maxN]Of Int64;
      n,m,k:Longint;
Procedure Enter;
Var i,x,y,c:Longint;
  Begin
    Readln(n,m,k);
    For i:=1 to n do
      Read(B[i]);
    Fillchar(A,Sizeof(A),0);
    For i:=1 to k do
      Begin
        Readln(x,y,c);
        A[x,y]:=c;
      End;
  End;
Function GetBit(x,i:Longint):Longint;
  Begin
    GetBit:=(x Shr i) and 1;
  End;
Procedure  OnBit(Var x:Longint;i:Longint);
  Begin
    x:=x or (1 shl i);
  End;
Procedure OffBit(Var  x:Longint;i:Longint);
  Begin
    x:=x and (Not (1 shl i));
  End;
Function Tinh(k,x,c:Longint):Int64;
Var i,Tm:Longint;
    Tmp:Int64;
  Begin
    If k>m then Exit(0);
    If F[x,c]<>-1 then Exit(F[x,c]);
    Tinh:=0;
    For i:=1 to n do
      If GetBit(x,i-1)=0 then
        Begin
          Tm:=x;
          OnBit(Tm,i-1);
          Tmp:=B[i]+A[c,i]+Tinh(k+1,Tm,i);
          If Tmp>Tinh then
            Tinh:=Tmp;
        End;
    F[x,c]:=Tinh;
  End;
Procedure Main;
  Begin
    Fillchar(F,Sizeof(F),255);
    Writeln(Tinh(1,0,0));
  End;
Begin
  Assign(Input,Fi);Reset(Input);
  Assign(Output,Fo);Rewrite(Output);
  Enter;
  Main;
  Close(Input);Close(Output);
End.