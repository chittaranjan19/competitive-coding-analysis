#include<bits/stdc++.h>
using namespace std;

const int lmt = 100005;
#define pb push_back
vector<int> adj[lmt];
bool odd = false;
bool vis[lmt],instack[lmt];
int stackCnt = 0;

void dfs(int x,int par){
    if(instack[x]){
        if(stackCnt%2 != 0)
            odd = true;
        return;
    }
    if(vis[x]) return;
    vis[x] = true;
    instack[x] = true;
    stackCnt++;
    for(int i=0;i<adj[x].size();i++){
        if(adj[x][i] != par)
            dfs(adj[x][i],x);
    }
    instack[x] = false;
    stackCnt--;
}

vector<int> ansa,ansb;

void dfs2(int x,int toadd){
    if(vis[x]) return;
    vis[x] = true;
    if(toadd==0)
        ansa.pb(x);
    else
        ansb.pb(x);
    for(int i=0;i<adj[x].size();i++)
        dfs2(adj[x][i],1-toadd);
}

int main(){
    memset(vis,false,sizeof(vis));
    memset(instack,false,sizeof(instack));
    int n,m,u,v;
    scanf("%d %d",&n,&m);
    for(int i=0;i<m;i++){
        scanf("%d %d",&u,&v);
        u--;
        v--;
        adj[u].pb(v);
        adj[v].pb(u);
    }
    for(int i=0;i<n;i++){
        if(!vis[i]){
            stackCnt = 0;
            dfs(i,-1);
        }
    }
    if(odd){
        printf("-1\n");
        return 0;
    }
    memset(vis,false,sizeof(vis));
    for(int i=0;i<n;i++){
        if(!vis[i])
            dfs2(i,0);
    }
    printf("%d\n",ansa.size());
    for(int i=0;i<ansa.size();i++)
        printf("%d ",ansa[i]+1);
    printf("\n");
    printf("%d\n",ansb.size());
    for(int i=0;i<ansb.size();i++)
        printf("%d ",ansb[i]+1);
    return 0;
}
