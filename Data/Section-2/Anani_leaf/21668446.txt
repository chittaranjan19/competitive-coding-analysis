#include<bits/stdc++.h>
using namespace std;
int const Max_N = 1e5+5;
int arr1[Max_N];
int arr2[Max_N];

int N,M;
bool check(int day)
{
	bool vis[Max_N] = {true};
	bool mp[Max_N] = {true};
	int ans = 0;
	while(day>0&&ans < M) 
	{
		while(day>0&&(mp[day]||vis[arr1[day]])) --day;
		if(day==0) return false;
		int num = arr1[day];
		vis[num] = mp[day] = true;
		int tot = arr2[num];
		int cnt = 0;
		int j = day - 1;
		bool vv[Max_N] = {false};	
		while(cnt < tot && j > 0)
		{
		
			while(j>0)
			{
				if(mp[j])
				{
					--j;
					continue;
				 } 
				int tt = arr1[j];
				if(vis[tt]) break;
				if(!vis[tt])
				{
					if(!vv[tt]) vv[tt] = true;
					else break;
				}
				--j;
			}
			if(j==0) return false;
			mp[j] = true;
			++cnt;
		}
		if(j==0) return false;
		++ans;
	} 
	return true;
}
int main()
{
	scanf("%d%d",&N,&M);
	for (int i = 1; i < N+1; ++i) scanf("%d",arr1+i);
	for (int i = 1; i < M+1; ++i) scanf("%d",arr2+i);
	
	if(!check(N))
	{
		printf("-1\n");
		return 0; 
	}
	int l = 0, r = N;
	while(l < r)
	{
		int mid = (l+r) >> 1;
		if(check(mid)) r = mid;
		else l = mid + 1;
	}
	printf("%d\n",l);
	return 0;
}
	//freopen("in.txt","r",stdin);
//std::ios::sync_with_stdio(false);

