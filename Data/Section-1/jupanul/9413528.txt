#include <cstring>

#include <algorithm>
#include <fstream>
#include <iostream>
using namespace std;
const int MAX_N = 100005;

int n;
int p[MAX_N];
int q[MAX_N];
int v[MAX_N];
int answer[MAX_N];

void update(int place) {
    for (int i = place; i <= n; i += i & -i) {
        ++ v[i];
    }
}
int query(int place) {
    int answer = 0;
    for (int i = place; i; i -= i & -i) {
        answer += v[i];
    }
    return answer;
}

int main() {
    cin >> n;
    for (int i = 1; i <= n; ++ i) {
        cin >> p[i];
        ++ p[i];
        update(p[i]);
        p[i] = p[i] - query(p[i]);
    }
    memset(v, 0, sizeof v);
    for (int i = 1; i <= n; ++ i) {
        cin >> q[i];
        ++ q[i];
        update(q[i]);
        q[i] = q[i] - query(q[i]);
    }
    for (int i = n - 1; i >= 1; -- i) {
        answer[i] += p[i] + q[i];
        if (answer[i] >= n - i + 1) {
            answer[i] -= (n - i + 1);
            ++ answer[i - 1];
        }
    }
    memset(v, 0, sizeof v);
    for (int i = 1; i <= n; ++ i) {
        int left = 1, right = n, last = -1;
        while (left <= right) {
            int middle = (left + right) / 2;
            if (middle - query(middle) >= answer[i] + 1) {
                last = middle;
                right = middle - 1;
            } else {
                left = middle + 1;
            }
        }
        cout << last - 1 << (i == n ? '\n' : ' ');
        update(last);
    }
    return 0;
}
