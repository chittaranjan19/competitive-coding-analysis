
/* Author:
    * Rohit Laddha */
#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <iostream>
#include <sstream>
#include <string>
#include <utility>
#include <vector>
#include <cassert>
#include <ctime>
#include <queue>
#include <tr1/random>
#include <tr1/unordered_map>
using namespace std;
using namespace std::tr1;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define ALL(c) (c).begin(),(c).end()
#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;
int main()
{
	int x;
	while(cin>> x)
	{
		if(x==1)cout << 1<< endl;
		else if(x==2 || x==4 || x==5) cout << 3 << endl;
		else if(x==3)cout << 5<< endl;
		else
		{
			int tmp=0,max_sharp=0;
			for(int i=5;i<1000;i=i+2)
			{
				tmp=i/2;
				if(tmp%2!=0)max_sharp=4*(((tmp-1)/2)*tmp+tmp-1+(tmp/2))+1;
				else max_sharp=4*(((tmp/2)*tmp)+(tmp/2))+1;
				if(x<=max_sharp)
				{
					cout << i << endl;
					break;
				}
			}
		}
	}
	return 0;
}
