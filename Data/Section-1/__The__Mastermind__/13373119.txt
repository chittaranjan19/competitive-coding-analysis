const
  tfi = '';//'583c.inp';
  tfo = '';//'583c.out';

var
  n,nn : longint;
  a,m : array [1..500*500] of longint;
  b : array [1..500] of longint;

function gcd(x,y : longint) : longint;
  begin
    if x < y then exit(gcd(y,x));
    if x mod y = 0 then exit(y);
    exit(gcd(y,x mod y));
  end;

procedure enter;
  var i : longint;
  begin
    assign(input,tfi);
    reset(input);
    read(n); nn := n*n;
    for i := 1 to nn do read(a[i]);
    close(input);
  end;

procedure sort(l,h : longint);
  var i,j,x,temp : longint;
  begin
    i := l;
    j := h;
    x := a[random(h - l + 1) + l];
    repeat
      while a[i] < x do inc(i);
      while a[j] > x do dec(j);
      if i <= j then
        begin
          temp := a[i];
          a[i] := a[j];
          a[j] := temp;
          inc(i);
          dec(j);
        end;
    until i > j;
    if l < j then sort(l,j);
    if i < h then sort(i,h);
  end;

function find(x : longint) : longint;
  var l,r,mid : longint;
  begin
    find := 0;
    l := 1;
    r := nn;
    while l <= r do
      begin
        mid := (l + r) div 2;
        if a[mid] > x then r := mid - 1
        else
        if a[mid] < x then l := mid + 1
        else
          if m[mid] = 1 then r := mid - 1
          else
            begin
              find := mid;
              l := mid + 1;
            end;
      end;
  end;

procedure process;
  var i,j,p : longint;
  begin
    sort(1,nn);
    p := nn;
    for i := 1 to n do
      begin
        while m[p] = 1 do dec(p);
        b[i] := a[p];
        m[p] := 1;
        for j := 1 to i-1 do
          begin
            m[find(gcd(b[i],b[j]))] := 1;
            m[find(gcd(b[i],b[j]))] := 1;
          end;
      end;
  end;

procedure print;
  var i : longint;
  begin
    assign(output,tfo);
    rewrite(output);
    for i := 1 to n do write(b[i],' ');
    close(output);
  end;

begin
  enter;
  process;
  print;
end.