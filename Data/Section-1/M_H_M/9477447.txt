#include <iostream>
#include <cstring>

using namespace std;

const int maxn = 550;

long long n,m,mod,dp[maxn][maxn];
long long col[maxn],cnt[2];
string s;

long long memoize(int i , int j){
    if (i < 0 || j < 0) return 0;
    if (i == 0 && j == 0) return 1;
    if (dp[i][j]  != -1) return dp[i][j] ;

    dp[i][j]  = i * j * memoize(i, j - 1) % mod;
    dp[i][j]  = (dp[i][j]  + (j * (j - 1) / 2) * memoize(i + 2, j - 2)) % mod;
    dp[i][j]  = (dp[i][j]  + (i * (i - 1) / 2) * memoize(i - 2, j)) % mod;
    return dp[i][j];
}

int main(){
    memset(dp,-1,sizeof dp);
    cin >> n >> m >> mod;
    for(int i = 0; i < m; ++i){
        cin >> s;
        for(int j = 0; j < n; ++j){
            col[j] += s[j] - '0';
        }
    }
    for (int i = 0; i < n; i++){
        cnt[col[i]]++;
    }
    cerr << cnt[1] << " " << cnt[0] << endl;
    cout << memoize(cnt[1],cnt[0]) << endl;
}
