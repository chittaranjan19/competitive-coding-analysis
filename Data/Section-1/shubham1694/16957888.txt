#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 1010;
const int off = 10010;

int n, dp[2*off + 10], trace[2*off + 10], present[2*off + 10];
pii pt[maxn];

int solve(int cur)
{
	//cout << cur << "\n";
	if(cur > (2*off))
		return 0;
	int f = 0, ret = inf, temp, ind, i, lim;
	lim = 2*off;
	for(i=cur; i<=lim; i++){
		if(present[i]!=inf){
			f = 1;
			lim = min(lim, present[i]);
		}
		if(f){
			temp = 1 + solve(i+1);
			if(temp < ret){
				ret = temp;
				ind = i;
			}
		}
	}
	if(!f)
		ret = 0;
	else
		trace[ind] = 1;
	return dp[cur] = ret;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int i, j, lo, mid, hi;
	memset(dp, -1, sizeof(dp));
	for(i=0; i<2*off + 10; i++)
		present[i] = inf;
	sd(n);
	for(i=1; i<=n; i++){
		scanf("%d%d", &pt[i].f, &pt[i].s);
		if(pt[i].f>pt[i].s)
			swap(pt[i].f, pt[i].s);
		pt[i].f+=off;
		pt[i].s+=off;
		present[pt[i].f] = min(present[pt[i].f], pt[i].s);
	}
	int ans = solve(1);
	printf("%d\n", ans);
	for(i=1; i<2*off + 10; i++){
		if(trace[i])
			printf("%d ", i-off);
	}
	return 0;
}
