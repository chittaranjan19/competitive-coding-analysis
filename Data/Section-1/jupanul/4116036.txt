#include<cstdio>
#include<queue>
using namespace std;
char a[1005][1005];
int n,m,d[1005][1005];
bool viz[1005][1005];
int dx[]={0,1,0,-1};
int dy[]={-1,0,1,0};
struct POINT
{
    int x,y;
    POINT() {x=y=-1;}
    POINT(int xx,int yy) {x=xx;y=yy;}
} exit,t,tn,start;
bool inside(const POINT &p)
{
    return 1<=p.x && p.x<=n && 1<=p.y && p.y<=m;
}
int main()
{
    ///freopen("f.in","r",stdin);
    scanf("%d %d",&n,&m);
    for(int i=1;i<=n;i++)
    {
        getchar();
        for(int j=1;j<=m;j++)
        {
            a[i][j]=getchar();
            if(a[i][j]=='E')
                exit=POINT(i,j);
            if(a[i][j]=='S')
                start=POINT(i,j);
            d[i][j]=100000000;
        }
    }
    queue< POINT> q;
    q.push(exit);d[exit.x][exit.y]=0;
    while(!q.empty())
    {
        t=q.front();q.pop();
        for(int dir=0;dir<4;dir++)
        {
            tn=POINT(t.x+dx[dir],t.y+dy[dir]);
            if(inside(tn) && !viz[tn.x][tn.y] && a[tn.x][tn.y]!='T')
                viz[tn.x][tn.y]=true,
                d[tn.x][tn.y]=d[t.x][t.y]+1,
                q.push(tn);
        }
    }
    int nr=0;
    for(int i=1;i<=n;i++)
        for(int j=1;j<=m;j++)
            if('0'<=a[i][j] && a[i][j]<='9' && d[i][j]<=d[start.x][start.y])
                nr+=a[i][j]-'0';
    printf("%d\n",nr);
    return 0;
}
