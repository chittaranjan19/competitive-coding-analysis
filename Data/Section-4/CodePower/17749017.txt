#include <iostream>
#include <map>
#include <vector>
using namespace std;

struct movie
{
	int number, sound, sub;
	int sound_qty = 0, sub_qty = 0;
};

int main()
{
	int n;
	cin >> n;

	map<int,int> lang;

	for (int i = 0; i < n; i++)
	{
		int a;
		cin >> a;
		if (lang.count(a) > 0)
			lang[a]++;
		else lang.insert(pair<int, int>(a, 1));
	}

	int m;
	cin >> m;
	movie* mv = new movie[m];

	for (int i = 0; i < m; i++)
	{
		mv[i].number = i;
		cin >> mv[i].sound;
		mv[i].sound_qty = lang[mv[i].sound];
	}

	int max_sound = 0;
	vector<movie> best;

	for (int i = 0; i < m; i++)
	{
		cin >> mv[i].sub;
		mv[i].sub_qty = lang[mv[i].sub];
		
		if (mv[i].sound_qty > max_sound) {
			max_sound = mv[i].sound_qty;
			best.clear();
			best.push_back(mv[i]);
		}
		else if (mv[i].sound_qty == max_sound)
			best.push_back(mv[i]);
	}

	int max_sub = 0;
	for (int i = 1; i < best.size(); i++)
		if (best[i].sub_qty > best[max_sub].sub_qty)
			max_sub = i;

	cout << best[max_sub].number + 1;

	delete[] mv;

	return 0;
}