#include<bits/stdc++.h>
#define MAXN 300009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int cp[MAXN],dp[MAXN];
vector<PII>adj[MAXN];
	int maxi=0;
void bfs(int nd){
	queue<PII>q;
	q.push(mp(0,nd));
	while(!q.empty()){
		int c=q.front().ff,f=q.front().ss;
		q.pop();
		for(int i=0;i<adj[f].size();i++){
			int h=adj[f][i].ff,x=adj[f][i].ss;
			if(x>c and dp[h]<dp[f]+1){
				dp[h]=dp[f]+1;
				checkMax(maxi,dp[h]);
				q.push(mp(x,h));
			}
		}
	}
}
int main(){
	int n,m;
	cin>>n>>m;
	for(int i=0;i<m;i++){
		int u,v,w;
		scanf("%d%d%d",&u,&v,&w);
		adj[w].pb(mp(u,v));
	}			
	for(int i=1;i<100001;i++){
		for(int j=0;j < adj[i].size();j++)
			cp[adj[i][j].ss]=0;
		for(int j=0;j<adj[i].size();j++)
			cp[adj[i][j].ss]=max(cp[adj[i][j].ss],dp[adj[i][j].ff]+1);
		for(int j=0;j < adj[i].size();j++)
			dp[adj[i][j].ss]=max(dp[adj[i][j].ss],cp[adj[i][j].ss]),checkMax(maxi,dp[adj[i][j].ss]);	
	} 
	cout<<maxi<<endl;
	return 0;
}

