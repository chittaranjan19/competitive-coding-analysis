#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
struct node{
	ll pul,mon;
	int len,mask;	
}arr[MAXN];;
bool cmp(node x,node y){
	if(x.mon!=y.mon)
		return (x.mon<y.mon);
	if(x.pul!=y.pul)
		return (x.pul<y.pul);
	if(x.len!=y.len)
		return (x.len<y.len);
	return (x.mask<y.mask);		
}
ll dp[2][1<<21],b,ans=LLINF;
int n,m,msk;
void doldur(int x){
	for(int i=0;i<1<<m;i++)
		dp[x][i]=imx;
}
int main(){
	scanf("%d%d%lld",&n,&m,&b);
	for(int i=1;i<=n;i++){
		scanf("%lld%lld%d",&arr[i].pul,&arr[i].mon,&arr[i].len);
		for(int j=1;j<=arr[i].len;j++)
			scanf("%d",&msk),arr[i].mask+=(1<<(msk-1));
	}
	sort(arr+1,arr+n+1,cmp);
	doldur(0);dp[0][0]=0;	
	for(int i=1;i<=n;i++){
		doldur(i&1);
		for(int j=0;j<(1<<m);j++){
			umin(dp[i&1][j],dp[(i&1)^1][j]);
			umin(dp[i&1][j|arr[i].mask],dp[(i&1)^1][j]+arr[i].pul);
		}
		if(dp[i&1][(1<<m)-1]!=imx)
			umin(ans,dp[i&1][(1<<m)-1]+arr[i].mon*b*1LL);
	}
	if(ans==LLINF)
		ans=-1;
	printf("%lld\n",ans);
	return 0;
}
//LooK aT mY COde ONlinE +_+
