var p:array[0..500001] of longint;
suf,pref:array[0..500001,'A'..'B'] of int64;
s:ansistring;
i,j:longint;
max,n,m,k,sum1,sum2,pos,res:int64;
u:boolean;
function maxim(a,b:int64):int64;
            begin
            if a>b then maxim:=a
                   else maxim:=b
            end;

begin
readln(n);
for i:=1 to n-1 do read(p[i]);
readln(p[n]);
readln(s);
for i:=1 to n do begin
                 pref[i,'A']:=pref[i-1,'A'];
                 pref[i,'B']:=pref[i-1,'B'];
                 inc(pref[i,s[i]],p[i])
                 end;
for i:=n downto 1 do begin
                     suf[i,'A']:=suf[i+1,'A'];
                     suf[i,'B']:=suf[i+1,'B'];
                     inc(suf[i,s[i]],p[i])
                     end;
max:=-1000000000000000000;
for i:=1 to n do begin
                 sum1:=pref[i,'A']-pref[i,'B'];
                 sum2:=suf[i,'A']-suf[i,'B'];
                 if sum1>max then begin
                                  u:=true;
                                  max:=sum1;
                                  pos:=i
                                  end;
                 if sum2>max then begin
                                  u:=false;
                                  max:=sum2;
                                  pos:=i
                                  end
                 end;
if u then res:=pref[pos,'A']+pref[n,'B']-pref[pos,'B']
     else res:=suf[pos,'A']+suf[1,'B']-suf[pos,'B'];
res:=maxim(maxim(res,pref[n,'B']),suf[n,'B']);
writeln(res);
end.


