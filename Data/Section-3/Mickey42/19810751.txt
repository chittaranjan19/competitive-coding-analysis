#include<fstream>
#include<string.h>
#include<ctype.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<unordered_map>
#include<array>
#include<deque>
#include<math.h>
#include<unordered_set>
#include<set>
using namespace std;
map<int, int>mp;
map<int, int>::iterator it;
int lg,power;
int n, i, j, k, nr,min1,m1x,rez;
char type;
int main()
{
	cin >> n;
	for (j = 1; j <= n; j++)
	{
		cin >> type>>nr;
		if (type == '+')
		{
			mp[nr]++;
			lg = 0;
			while (nr != 0) 
			{
				nr >>= 1;
				lg++;
			}
			if (lg > power)
				power = lg;
		}
		else
			if (type == '-')
				mp[nr]--;
			else
			{
				lg = pow(2, power)-1;
				min1 = pow(2, power - 1);
				lg = lg^nr;
				m1x = -1;
				if (min1 > lg)
				{
					rez = min1;
					min1 = lg;
					lg = rez;
				}
				for (i = min1; i <= lg; i++)
					if(mp.count(i)>0)
					{
						if (mp[i] > 0)
						{
							rez = i^nr;
							if (rez > m1x)
								m1x = rez;
						}
					}
				if(m1x!=-1)
					printf("%d\n", m1x);
				else
				{
					for (it = mp.begin(); it != mp.end() && it->first <= min1; it++)
						if (it->second>0)
						{
							rez = it->first^nr;
							if (rez > m1x)
								m1x = rez;
						}
					printf("%d\n", m1x);
				}
			}
	}
	return 0;
}