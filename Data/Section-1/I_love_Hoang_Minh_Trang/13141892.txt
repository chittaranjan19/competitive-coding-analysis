using namespace std;
#include<bits/stdc++.h>
#define FOR(i, a, b) for (int i = a; i < b; i++)
#define FORE(i, a, b) for (int i = a; i <= b; i++)
#define FORD(i, a, b) for (int i = a; i >= b; i--)
const int MAXN = 2*1e6;
const int INF  = 1e9 + 7;
vector<int> v[10];
int n, k, x[10];
int ff[MAXN];
void update()
{
    int ans = 0;
    FORE(i, 1, k) ans = ans * 10 + x[i];
    v[k].push_back(ans);
}

void duyet(int i)
{
    //cout<<i<<" "<<k<<endl;
    FORE(j, 0, 1) {
        x[i] = j ;
        if (i >= k) update();
            else duyet(i + 1);
    }
}
int trace[MAXN];

int f(int x)
{
    //cout<<x<<endl;
    if (ff[x] != -1) return ff[x];
    if (x == 0) {
            ff[x] = 0;
            return 0;
    }
    int dem = 0, tmp = x;
    int ans = INF;
    while (tmp) dem++, tmp/=10;
    for(int i = 0; i < v[dem].size(); i++) {
        if (x >= v[dem][i]) {
            int tmp = f(x - v[dem][i]);
            if (ans > tmp + 1) {
                ans = tmp + 1;
                trace[x] = x - v[dem][i];
            }
        }
    }
    //cout<<x<<" "<<ans<<endl;
    ff[x] = ans;
    if (ans == INF) ans = 1;
    return ans;
}

int main()
{
    ios::sync_with_stdio(false);
    //freopen("538B.inp", "r", stdin);
    //freopen("538B.out", "w", stdout);
    FORE(i, 0, 1000000) ff[i] = -1;
    x[1] = 1;
    cin >> n;
    v[1].push_back(1);
    for(k = 2; k <= 6; k++) duyet(2);
    //cout<<v[6][0]<<endl;
    //for(int i = 0; i < v[3].size(); i++) cout<<v[3][i]<<" ";cout<<endl;
    cout<<f(n)<<endl;

    //cout<<"wtf"<<endl;
    while (n) {
        cout<<n - trace[n]<<" ";
        n = trace[n];
    }
    return 0;
}
