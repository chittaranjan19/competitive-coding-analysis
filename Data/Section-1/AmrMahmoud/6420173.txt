#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair

using namespace std;

vector<vector<int> > graph(100005);
bool visited[30005];
vector<int> sol;

void dfs(int i)
{
    visited[i] = true;
    for(int j=0;j<graph[i].size();j++)
        if(!visited[graph[i][j]])
            dfs(graph[i][j]);
    sol.push_back(i);
}

int main()
{
    int n,m,x,y;
    cin >> n >> m;
    for(int i=0;i<m;i++)
    {
        scanf("%d%d",&x,&y);
        graph[x].pb(y);
    }
    for(int i=1;i<=n;i++)
        if(!visited[i])
            dfs(i);
    if(sol.size() != n)
        cout << -1;
    else for(int i=0;i<n;i++)
        printf("%d ",sol[i]);
    return 0;
}
