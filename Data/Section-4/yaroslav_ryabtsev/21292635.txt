#include <iostream>#include <Windows.h>
#include <ctime>
#include <fstream>
#include <conio.h>
#include <cmath>
#include <locale>
#include <cstddef>
#include <cstdlib>
#include <cmath>
using namespace std;
struct snak{
        int x;
        int y;
    };
int v=200,f1=5;
snak kon;
COORD scrn;
HANDLE h = GetStdHandle(STD_OUTPUT_HANDLE);
int snake();
int main(){
	int c = 0;
    srand(time(0));
    int start=time(NULL);
	SetConsoleTextAttribute(h, 0x000f);
    while((time(NULL)-start)<=1){
        scrn.X = rand() % 82; scrn.Y = rand() % 25;
        SetConsoleCursorPosition(h, scrn);
        SetConsoleTextAttribute(h, (c + 4) % 4 + 11);
        cout << "*";
        scrn.X = rand() % 82; scrn.Y = rand() % 25;
        SetConsoleCursorPosition(h, scrn);
        SetConsoleTextAttribute(h, (c + 4) % 4 + 11);
        cout << " ";
        c++;
    }
    c=0;
    start=time(NULL);
    while((time(NULL)-start)<=1){
        scrn.X = rand() % 82; scrn.Y = rand() % 25;
        SetConsoleCursorPosition(h, scrn);
        SetConsoleTextAttribute(h, (c + 4) % 4 + 11);
        if(scrn.X<27||scrn.X>54||scrn.Y<8||scrn.Y>16)
        	cout << "*";
        else if((scrn.X == 27&& scrn.Y == 8)||(scrn.X == 27&& scrn.Y ==16)||(scrn.X == 53&& scrn.Y == 8)||(scrn.X == 53&& scrn.Y == 16))
			cout << "**";
		else
			cout << " ";
		c++;
    }
    c=0;
    start=time(NULL);
    while((time(NULL)-start)<=3){
        scrn.X = rand() % 82; scrn.Y = rand() % 25;
        SetConsoleCursorPosition(h, scrn);
        if(scrn.X<=1||scrn.X>=80||scrn.Y==0||scrn.Y==24)
        	SetConsoleTextAttribute(h,0xff);
        else
        	SetConsoleTextAttribute(h,0x00);
        cout << " ";
        c++;
    }
    
    scrn.X =40; scrn.Y =11;
    SetConsoleCursorPosition(h, scrn);
    SetConsoleTextAttribute(h,BACKGROUND_BLUE|BACKGROUND_GREEN|BACKGROUND_RED);
    cout << "  ";
    scrn.X =38; scrn.Y =11;
    SetConsoleCursorPosition(h, scrn);
    SetConsoleTextAttribute(h,0xff);
    cout << "  ";
    scrn.X =36; scrn.Y =11;
    SetConsoleCursorPosition(h, scrn);
    SetConsoleTextAttribute(h,0xff);
    cout << "  ";
    c=0;
    scrn.X =0; scrn.Y =25;
    SetConsoleTextAttribute(h, c);
    SetConsoleCursorPosition(h, scrn);
	int rez=snake();

    
    
    
    
    
    c=0;
    scrn.X =0; scrn.Y =25;
    SetConsoleTextAttribute(h, c);
    SetConsoleCursorPosition(h, scrn);
    system("pause");
    return 0;
}
void end(int n){
	setlocale(LC_ALL,"RUS");
	scrn.X =30; scrn.Y =25;
    SetConsoleTextAttribute(h, 15);
    SetConsoleCursorPosition(h, scrn);
	cout<<"��� ����� ����: "<<n+1;
	int c = 0;
    srand(time(0));
    int start=time(NULL);
	SetConsoleTextAttribute(h, 0x000f);
    while(1){
        scrn.X = rand() % 82; scrn.Y = rand() % 25;
        SetConsoleCursorPosition(h, scrn);
        SetConsoleTextAttribute(h, (c + 4) % 4 + 11);
        cout << "*";
        scrn.X = rand() % 82; scrn.Y = rand() % 25;
        SetConsoleCursorPosition(h, scrn);
        SetConsoleTextAttribute(h, (c + 4) % 4 + 11);
        cout << " ";
        c++;
    }
} 
int func(snak m[2000],snak ne,int n){
	ne.x=(ne.x-1)%39+1+39*(ne.x==0);
	ne.y=(ne.y-1)%23+1+23*(ne.y==0);
	if(ne.x==kon.x&&ne.y==kon.y){
		kon.x=rand()%39+1;
		kon.y=rand()%23+1;
		for(int i=0;i<n;i++)
			if(kon.x==m[i].x&&kon.y==m[i].y){
				kon.x=rand()%39+1;
				kon.y=rand()%23+1;
				i=0;
			}
		scrn.X =kon.x*2; scrn.Y =kon.y;
    	SetConsoleCursorPosition(h, scrn);
		SetConsoleTextAttribute(h,BACKGROUND_RED|BACKGROUND_INTENSITY);
    	cout << "  ";
    	scrn.X =0; scrn.Y =25;
    	SetConsoleCursorPosition(h, scrn);
    	
    	scrn.X =ne.x*2; scrn.Y =ne.y;
    	SetConsoleCursorPosition(h, scrn);
    	SetConsoleTextAttribute(h,BACKGROUND_BLUE|BACKGROUND_GREEN|BACKGROUND_RED);
		cout << "  ";
		scrn.X =m[0].x*2; scrn.Y =m[0].y;
    	SetConsoleCursorPosition(h, scrn);
    	SetConsoleTextAttribute(h,0xff);
    	cout << "  ";
    	
    	scrn.X =0; scrn.Y =25;
		SetConsoleCursorPosition(h, scrn);
		m[n].x=m[n-1].x;
    	m[n].y=m[n-1].y;
    	n++;
    	f1+=abs((170-f1)/10);
    	f1%=170;
	}else{
		scrn.X =ne.x*2; scrn.Y =ne.y;
    	SetConsoleCursorPosition(h, scrn);
    	SetConsoleTextAttribute(h,BACKGROUND_BLUE|BACKGROUND_GREEN|BACKGROUND_RED);
		cout << "  ";
		scrn.X =m[0].x*2; scrn.Y =m[0].y;
    	SetConsoleCursorPosition(h, scrn);
    	SetConsoleTextAttribute(h,0xff);
    	cout << "  ";
    	scrn.X =m[n-1].x*2; scrn.Y =m[n-1].y;
    	SetConsoleCursorPosition(h, scrn);
    	SetConsoleTextAttribute(h,0x0);
    	cout << "  ";
    	scrn.X =0; scrn.Y =25;
		SetConsoleCursorPosition(h, scrn);
    }
    for(int j=n-1;j>0;j--){
    	m[j].x=m[j-1].x;
    	m[j].y=m[j-1].y;
    }
    m[0].x=ne.x;
	m[0].y=ne.y;
	for(int i=1;i<n;i++)
	if(m[0].x==m[i].x&&m[0].y==m[i].y){
		end(n-4);
	}
	Sleep(v-f1);	
	return (n-1);		
}
int snake(){
	int n=2;
	
	kon.x=rand()%39+1;
	kon.y=rand()%23+1;
	scrn.X =kon.x*2; scrn.Y =kon.y;
    SetConsoleCursorPosition(h, scrn);
    SetConsoleTextAttribute(h,BACKGROUND_RED|BACKGROUND_INTENSITY);
    cout << "  ";
    scrn.X =0; scrn.Y =25;
    SetConsoleCursorPosition(h, scrn);
	snak m[2000],ne;
	m[0].x=20;
	m[0].y=11;
	m[1].x=19;
	m[1].y=11;
	m[2].x=18;
	m[2].y=11;
	int c;
	int b=1;
	while(b){
		if(_kbhit()){
			c = _getch();
			if(c==49){
			while(!_kbhit()){
				ne.x=m[0].x-1;
				ne.y=m[0].y+1;
				n=func(m,ne,n+1);
				}}
			if(c==50||c==80){
				while(!_kbhit()){
				ne.x=m[0].x;
				ne.y=m[0].y+1;
				n=func(m,ne,n+1);
			}}
			if(c==51){
				while(!_kbhit()){
				ne.x=m[0].x+1;
				ne.y=m[0].y+1; 
				n=func(m,ne,n+1);
			}}
			if(c==52||c==75){
				while(!_kbhit()){
				ne.x=m[0].x-1;
				ne.y=m[0].y; 
				n=func(m,ne,n+1);
			}}
			if(c==54||c==77){
				while(!_kbhit()){
				ne.x=m[0].x+1;
				ne.y=m[0].y; 
				n=func(m,ne,n+1);
			}}
			if(c==55){
				while(!_kbhit()){
				ne.x=m[0].x-1;
				ne.y=m[0].y-1; 
				n=func(m,ne,n+1);	
			}}
			if(c==56||c==72){
				while(!_kbhit()){
				ne.x=m[0].x;
				ne.y=m[0].y-1;
				n=func(m,ne,n+1);
			}}
			if(c==57){
				while(!_kbhit()){
				ne.x=m[0].x+1;
				ne.y=m[0].y-1; 
				n=func(m,ne,n+1);	
			}}
			if(c==32){
				c=0;
				while(c!=32)
					c = _getch();
			}
		
		
		}
	}
	return (n-3);
}
