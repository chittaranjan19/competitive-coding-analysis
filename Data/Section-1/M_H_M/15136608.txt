//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

int n;
vector <int> v;
vector <pii> s;
int m, y;

int main(){
	int ans = 1;
	scanf("%d", &n);
	for(int i = 0; i < n; ++i){
		int x; scanf("%d", &x);
		if(x == -1){
			if(SZ(s) >= 2){
				int z = y + SZ(v) * m;
				if(x == -1) x = z;
				if(x != z || z <= 0){
					v.clear();
					s.clear();
					ans ++;
				}
			}
			v.PB(x);
		}
		else{
			if(SZ(s) >= 2){
				int z = y + (SZ(v)) * m;
//				cerr << "bug : " << x << " " << z << "\n";
				if(x != z || z <= 0){
					v.clear();
					s.clear();
					ans ++;
					s.PB(MP(x, SZ(v)));
					v.PB(x);
					continue;
				}
			}	
			s.PB(MP(x, SZ(v)));
			v.PB(x);
			if(SZ(s) == 2){
				bool f = !((s[1].X - s[0].X) % (s[1].Y - s[0].Y));
				m = (s[1].X - s[0].X) / (s[1].Y - s[0].Y);
				y = s[0].X - m * s[0].Y;
//				cerr << y << " " << m << "\n";
				for(int j = 0; j < SZ(v); ++j){
					int z = y + j * m;
					if(z <= 0){
						f = 0;
						break;
					}
				}
				if(!f){
					v.clear();
					s.clear();
					s.PB(MP(x, SZ(v)));
					v.PB(x);
					ans ++;
				}
			}
		}
	}
	cout << ans << "\n";
	return 0;
}
