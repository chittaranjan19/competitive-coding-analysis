#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
vector<string> vs;
vector<ll> v;
ll dp[100005][2];
const ll INF=1E15;
ll cdp(ll idx,ll tip){
	if(dp[idx][tip]>=0) return dp[idx][tip];
	ll ans=INF;
	string str=vs[idx],str2;
	if(tip) reverse(str.begin(),str.end());
	str2=vs[idx-1];
	if(str2<=str){
		ans=min(ans,cdp(idx-1,0));
	}
	reverse(str2.begin(),str2.end());
	if(str2<=str){
		ans=min(ans,cdp(idx-1,1));
	}
	if(tip) ans+=v[idx];
	ans=min(ans,INF);
	return dp[idx][tip]=ans;
}
int main()
{
	memset(dp,-1,sizeof dp);
	ll n;
	cin>>n;
	v.resize(n);
	for(ll i=0;i<n;++i){
		cin>>v[i];
	}
	vs.resize(n);
	for(ll i=0;i<n;++i){
		cin>>vs[i];
	}
	dp[0][0]=0;
	dp[0][1]=v[0];
	ll ans=min(cdp(n-1,0),cdp(n-1,1));
	if(ans>=INF){
		ans=-1;
	}
	cout<<ans<<endl;
}
