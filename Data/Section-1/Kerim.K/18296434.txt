#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"--------------"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define y1 pepsiyasatyrsenipepsiii
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int dp[309][309];
int dis[309][309];
int n,m,p;
int go(int x,int y,int x1,int y1){
	return abs(x-x1)+abs(y-y1);	
}
vector<PII>adj[MAXN];
int arr[309][309];
int rec(int x,int y){
	int col=arr[x][y];
//	cout<<x<<" "<<y<<" "<<col<<endl; 
	if(col==p)
		return 0;
	int &ret=dp[x][y];
	if(~ret)
		return ret;	ret=INF;
	if(!x and !y)
		x=1,y=1;	
	for(int i=0;i<adj[col+1].size();i++){
		int x1=adj[col+1][i].ff;
		int y1=adj[col+1][i].ss;
		umin(ret,go(x,y,x1,y1)+rec(x1,y1));
	}
	return ret;
}
int dx[]={+1,-1,0,0};
int dy[]={0,0,+1,-1};
int ok(int x,int y){
	return (x>=1 and y>=1 and x<=n and y<=m);
}
void bfs(int x){
	queue<PII>q;
	memset(dis,31,sizeof(dis));
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			if(arr[i][j]==x)
				dis[i][j]=dp[i][j],q.push(mp(i,j));
	while(!q.empty()){	
		int nx=q.front().ff;
		int ny=q.front().ss;
		q.pop();
		for(int i=0;i<4;i++){
			int tox=dx[i]+nx;
			int toy=dy[i]+ny;
			if(ok(tox,toy) and umin(dis[tox][toy],dis[nx][ny]+1))
				q.push(mp(tox,toy));
		}
	}
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			if(arr[i][j]==x+1)
				dp[i][j]=dis[i][j];
}
int main(){
	//memset(dp,-1,sizeof(dp));
	scanf("%d%d%d",&n,&m,&p);
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){int x;
			scanf("%d",&x);
			
			adj[x].pb(mp(i,j));
			arr[i][j]=x;
		}
	}
//	printf("%d\n",rec(0,0));~TLE
	memset(dp,31,sizeof(dp));
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)	
			if(arr[i][j]==1)
				dp[i][j]=go(1,1,i,j);
	for(int i=2;i<=p;i++){
		if(1==2 and adj[i].size()*adj[i-1].size()<=n*m){
			for(int j=0;j<adj[i].size();j++)
				for(int k=0;k<adj[i-1].size();k++){
					int x=adj[i-1][k].ff,y=adj[i-1][k].ss;
					int x1=adj[i][j].ff,y1=adj[i][j].ss;
					umin(dp[x1][y1],dp[x][y]+go(x,y,x1,y1));
				}
			continue;	
		}
		bfs(i-1);
	}
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			if(arr[i][j]==p)
				return 0,printf("%d\n",dp[i][j]);
	return 0;
}
