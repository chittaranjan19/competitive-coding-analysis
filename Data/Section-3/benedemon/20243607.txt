#include <iostream>
#include <vector>
#include <string.h>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <queue>
#include <math.h>

#define ll long long
#define pb push_back
#define mp make_pair
#define traverse(container, it) \
for(typeof(container.begin()) it = container.begin(); it!= container.end(); it++)
using namespace std;

//FILE *fin = freopen("in","r",stdin);
//FILE *fout = freopen("out","w",stdout);

int gcd(int a, int b){ if(b==0) return a; return gcd(b,a%b); }
int lcm(int a, int b) {return a*(b/gcd(a,b));}
void setbool(bool a[], int n, bool x){for(int i=0;i<n;i++){a[i] = x;}}
void setint(int a[], int n, int x){for(int i=0;i<n;i++){a[i] = x;}}

ll x[501][501];

int main(int argc, const char * argv[]) 
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    
    ll n, a, b;
    
    a=b=-1;
    
    cin>>n;
    
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
            cin>>x[i][j];
    }
    
    if(n==1 && x[0][0] != 0)
    {
        cout<<-1<<endl;
        return 0;
    }
    if(n==1)
    {
        cout<<1<<endl;
        return 0;
    }
    
    ll sum;
    ll row[501] = {0};
    
    for(int i=0;i<n;i++)
    {
        sum = 0;
        for(int j=0;j<n;j++)
        {
            sum += x[i][j];
        }
        row[i] = sum;
    }
    
    sort(row,row+n);
    ll col[501] = {0};
    for(int i=0;i<n;i++)
    {
        sum = 0;
        for(int j=0;j<n;j++)
        {
            sum += x[j][i];
        }
        
        col[i] = sum;
    }
    
    sum = 0;
    for(int i=0;i<n;i++)
    {
        sum += x[i][i];
    }
    ll diag1 = sum;
    
    
    sum = 0;
    for(int i=0;i<n;i++)
    {
        sum += x[i][n-i-1];
    }
    ll diag2 = sum;
    set<ll> s;
    for(int i=0;i<n;i++)
    {
        s.insert(row[i]);
        s.insert(col[i]);
    }
    s.insert(diag1);
    s.insert(diag2);
    
    if(s.size() != 2)
    {
        cout<<-1<<endl;
        return 0;
    }
    else
    {
        set<ll>::iterator it= s.begin();
        ll temp = *it;
        it++;
        temp -= *it;
        
        cout<<abs(temp)<<endl;
    }
   // cout<<a<<" "<<b<<endl;
    return 0;
}
