#define _SCL_SECURE_NO_WARNINGS
#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/STACK:500000000") 
#include <functional>
#include <algorithm>
#include <iostream> 
#include <string.h> 
#include <stdlib.h>
#include <complex>
#include <sstream> 
#include <numeric>
#include <ctype.h> 
#include <stdio.h> 
#include <bitset>
#include <vector> 
#include <string> 
#include <math.h> 
#include <time.h> 
#include <queue> 
#include <stack> 
#include <list>
#include <map> 
#include <set> 
#define Int long long 
#define INF 0x3F3F3F3F 
#define eps 1e-9
using namespace std;
typedef pair<int, int> pii;

#define N 22

char A[N][N];
bool used[N][N][4];
int n, m;

int dx[] = { 0, -1, 0, 1 };
int dy[] = { -1, 0, 1, 0 };

int dfs(int x, int y, int dir)
{
	if (used[x][y][dir])
		return 0;
	used[x][y][dir] = true;

	int nx = dx[dir] + x;
	int ny = dy[dir] + y;
	if (nx >= 0 && ny >= 0 && nx < n && ny < m && A[nx][ny] != '*')
		return 1 + dfs(nx, ny, dir);
	return dfs(x, y, (dir + 1) % 4);
}

int main()
{
	int i, j;
	scanf("%d %d", &n, &m);
	int dir, x, y;
	for (i = 0; i < n; i++)
	{
		scanf("%s", A[i]);
		for (j = 0; j < m; j++)
		{
			if (A[i][j] == 'L')
				dir = 0, x = i, y = j;
			if (A[i][j] == 'U')
				dir = 1, x = i, y = j;
			if (A[i][j] == 'R')
				dir = 2, x = i, y = j;
			if (A[i][j] == 'D')
				dir = 3, x = i, y = j;
		}
	}
	dfs(x, y, dir);
	int res = 0;
	for (i = 0; i < n; i++)
	{
		for (j = 0; j < m; j++)
			res += !!count(used[i][j], used[i][j] + 4, true);
	}
	cout << res << endl;
}