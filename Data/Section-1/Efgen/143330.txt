import java.io.*;
import java.util.*;
import java.math.*;

public class Task {
	// static final String FileName = "test";


	void solve() throws IOException {
		int n = nextInt();
		int[] a = new int[n+2];
		int[] s1 = new int[n+2];
		int[]d1 = new int[n+2];
		int[]d2 = new int[n+2];
		for (int i=1; i<=n; i++) a[i] = nextInt();
		for (int i=1; i<=n; i++) s1[i] = s1[i-1]+a[i];
		for (int i=1; i<=n; i++) {
			d1[i] = Math.max(Math.abs(s1[i]), a[i]+d1[i-1]);
		}
		
		int[] s2 = new int[n+2];
		for (int i=n; i>0; --i) s2[i] = s2[i+1]+a[i];
		
		for (int i=n; i>0; --i) {
			d2[i] = Math.max(Math.abs(s2[i]), a[i]+d2[i+1]);
		}
		int res = 0;
		for (int i=0; i<=n; i++) res = Math.max(res, d1[i]+d2[i+1]);
		
		out.println(res);
		
	}
	
	


	static final int inf = 1000000000;
	BufferedReader br;
	StringTokenizer st;
	PrintWriter out;
	
	public void run() {
		try {
			// br = new BufferedReader(new FileReader(FileName+".in"));
			// out = new PrintWriter(FileName+".out");
			br = new BufferedReader(new InputStreamReader(System.in));
			out = new PrintWriter(System.out);
			//br = new BufferedReader(new FileReader("input.txt"));
			//out = new PrintWriter("output.txt");
			solve();
			br.close();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

	String next() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			String s = br.readLine();
			if (s == null)
				return null;
			st = new StringTokenizer(s);
		}
		return st.nextToken();
	}

	double nextDouble() throws IOException {
		return Double.parseDouble(next());
	}

	int nextInt() throws IOException {
		return Integer.parseInt(next());
	}

	long nextLong() throws IOException {
		return Long.parseLong(next());
	}

	public static void main(String[] args) {	
		new Task().run();
	
	}
}



