/*	 Hello World!	*/

#include <bits/stdc++.h>

#define pb push_back
#define pf push_front
#define mp make_pair
#define f first
#define s second
#define let(x,a) __typeof(a) x(a)
#define all(a) (a).begin(),(a).end() 
#define endl '\n'
#define present(c,x) ((c).find(x) != (c).end()) 
#define tr(v,it) for( let(it,v.begin()) ; it != v.end() ; it++)
#define rtr(v,it) for( let(it,v.rbegin()) ; it != v.rend() ; it++)
#define rep1(i,n) for(int i=0; i<(int)n;i++)
#define rep2(i,a,b) for(int i=(int)a; i<=(int)b; i++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define LL long long int
#define PII pair<LL,LL>
#define VI vector<int>
#define inf INT_MAX

using namespace std;

void FastIO()
{
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	cout.tie(NULL);
}

vector<LL> dist;
VI parent;
vector< vector<PII> > V;

void dijkstra()
{
	priority_queue< PII, vector<PII>, greater<PII> > pq;
	pq.push(mp(0,1));
	dist[1]=0;
	while(!pq.empty())
	{
		PII p=pq.top();
		pq.pop();
		LL v=p.s, d=p.f;
		if(d>dist[v]) continue;
		for(int i=0;i<V[v].size();i++)
		{
			PII q=V[v][i];
			if(d+q.s < dist[q.f])
			{
				dist[q.f]=d+q.s;
				pq.push(mp(dist[q.f],q.f));
				parent[q.f]=v;
			}
		}
	}
}

void Print(int p)
{
	if(p==1) cout<<"1";
	else
	{
		Print(parent[p]);
		cout<<" "<<p;
	}
}

int main()
{
	int n,m,a,b,c;
	cin>>n>>m;
	V.assign(n+1,vector<PII>());
	dist.assign(n+1,1e15);
	parent.assign(n+1,0);
	rep1(i,m)
	{
		cin>>a>>b>>c;
		V[a].pb(mp(b,c));
		V[b].pb(mp(a,c));
	}
	dijkstra();
	if(dist[n]==1e15) cout<<"-1"<<endl;
	else
	{
		Print(n);
		cout<<endl;
	}
	return 0;
}