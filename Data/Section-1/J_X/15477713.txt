#include <iostream>
#include <cstdio>
#include <map>

using namespace std;

const int MAXN = 3e5 + 5;

int a[MAXN], dp[MAXN], max_[MAXN], b[MAXN];
map<int, int> mp;

int main()
{
    int n;
    while(~scanf("%d", &n))
    {
        max_[n + 1] = dp[n + 1] = 0;
        mp.clear();
        for(int i = 1; i <= n; ++i)
        {
            scanf("%d", a + i);
        }
        for(int i = n; i; --i)
        {
            int k = mp[a[i]];
            if(!k)
            {
                b[i] = n + 1;
                dp[i] = max_[i + 1];
            }
            else
            {
                b[i] = k;
                dp[i] = max_[k + 1] + 1;
            }
            max_[i] = max(dp[i], max_[i + 1]);
            mp[a[i]] = i;
        }
        if(dp[1])
        {
            printf("%d\n", dp[1]);
            int now = 1;
            while(now <= n)
            {
                int c;
                for(c = b[now]; c <= n && dp[now] == dp[c + 1] + 1; ++c);
                printf("%d %d\n", now, c - 1);
                now = c;
            }
        }
        else
        {
            puts("-1");
        }
    }
    return 0;
}
