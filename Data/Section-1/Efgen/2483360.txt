import java.io.*;
import java.util.*;
import java.math.*;

public class Task implements Runnable {
    

    void solve() throws IOException {
        int n = nextInt();
        int time = nextInt();
        int[] d = new int[n+1];
        int[] s = new int[n+1];
        for (int i=0; i<n; i++)
            d[i] = nextInt();
        for (int i=0; i<n; i++)
            s[i] = nextInt();
        int t = 0;
        int res = 0;
        int z = 0;
        for (int i=0; i<n; i++) {
            t = Math.max(t, s[i]);
            z += s[i];
            int need = (Math.max(0, (d[i]-z))+t-1)/t;
            res += need*time+d[i];
            z = z + need*t - d[i];
        }
        out.print(res);
  
    }

    BufferedReader br;
    StringTokenizer st;
    PrintWriter out;

    public void run() {
        try {            
            //br = new BufferedReader(new FileReader("input.txt"));
            //out = new PrintWriter("output.txt");
            br = new BufferedReader(new InputStreamReader(System.in));
            out = new PrintWriter(System.out);
            solve();
            br.close();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(123);
        }
    }

    String next() throws IOException {
        while (st == null || !st.hasMoreTokens()) {
            String s = br.readLine();
            if (s == null)
                return null;
            st = new StringTokenizer(s);
        }
        return st.nextToken();
    }

    double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static void main(String[] args) {
        new Thread(new Task()).start();
    }
}
