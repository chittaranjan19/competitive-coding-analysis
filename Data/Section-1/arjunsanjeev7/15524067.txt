/*	 Hello World!	*/

#include <bits/stdc++.h>

#define pb push_back
#define pf push_front
#define mp make_pair
#define f first
#define s second
#define let(x,a) __typeof(a) x(a)
#define all(a) (a).begin(),(a).end() 
#define endl '\n'
#define present(c,x) ((c).find(x) != (c).end()) 
#define tr(v,it) for( let(it,v.begin()) ; it != v.end() ; it++)
#define rtr(v,it) for( let(it,v.rbegin()) ; it != v.rend() ; it++)
#define rep1(i,n) for(int i=0; i<(int)n;i++)
#define rep2(i,a,b) for(int i=(int)a; i<=(int)b; i++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define LL long long int
#define PII pair<int,int>
#define VI vector<int>
#define inf INT_MAX

using namespace std;

void FastIO()
{
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	cout.tie(NULL);
}

LL x11,x12,y11,y12;

LL dist(LL a, LL b, LL c, LL d)
{
	return (c-a)*(c-a)+(d-b)*(d-b);
}

bool cmp(pair<LL,LL> a, pair<LL,LL> b)
{
	LL l1=dist(x11,y11,a.f,a.s);
	LL l2=dist(x11,y11,b.f,b.s);
	LL l3=dist(x12,y12,a.f,a.s);
	LL l4=dist(x12,y12,b.f,b.s);
	return min(l1,l3)<min(l2,l4);
}

int main()
{
	FastIO();
	LL n,r1=0,r2=0,x,y;
	LL x1,y1,x2,y2;
	x11=x1,x12=x2,y11=y1,y12=y2;
	cin>>n>>x1>>y1>>x2>>y2;
	vector< pair<LL,LL> > V;
	for(int i=0;i<n;i++)
	{
		cin>>x>>y;
		V.pb(mp(x,y));
	}
	sort(all(V),cmp);
	for(int i=0;i<n;i++)
	{
		x=V[i].f;
		y=V[i].s;
		LL l1=dist(x,y,x1,y1);
		LL l2=dist(x,y,x2,y2);
		if(l1<l2 && r2<l2)
		{
			r1=max(r1,l1);
		}
		else if(l1>l2 && r1<l1)
		{
			r2=max(r2,l2);
		}
	}
	cout<<r1+r2<<endl;
	return 0;
}