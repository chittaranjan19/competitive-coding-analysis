#include <bits/stdc++.h>
using namespace std;

typedef long long LL;

const int maxn = 100000;
LL pri[maxn + 10];
LL p[maxn + 10];

void getPrime () {
    memset (p, 0, sizeof p);
    for (int i = 2; i <= maxn; i++) {
        if (!p[i])    p[++p[0]] = i;
        for (int j = 1; j <= p[0] && p[j] <= maxn / i; j++) {
            p[p[j] * i] = 1;
            if (i % p[j] == 0)    break;
        }
    }
}

int check (LL m, LL mid) {
    LL cnt = 0;
    for (int i = 1; i <= pri[0]; i++) {
        if (pri[i] > mid)   break;
        cnt += mid / pri[i];
        if (cnt > m)    return -1;
    }
    if (cnt > m)    return -1;
    else if (cnt < m)   return 1;
    else    return 0;
}

int main () {
    getPrime();
    LL m;
    cin >> m;
    pri[0] = p[0];
    for (int i = 1; i <= pri[0]; i++) {
        pri[i] = p[i] * p[i] * p[i];
    }
    LL l = 1ll, r = 1000000000000000000ll;
    while (l < r) {
        LL mid = (l + r) / 2;
        int ct = check (m, mid);
        if (ct == -1) {
            r = mid - 1;
        } else if (ct == 1) {
            l = mid + 1;
        } else {
            r = mid;
        }
        //cout << l << " " << r << endl;
    }
    LL ans = l, cp = 0, flag = 0;
    for (int i = 1; i <= p[0]; i++) {
        if (ans % p[i] == 0 && !flag) {
            while (ans % p[i] == 0) {
                ans /= p[i];
                cp++;
            }
            flag = 1;
        }
        if (flag == 1) {
            if (ans == 1 && cp >= 4)   ans = 1;
            else    ans = 0;
            break;
        }
    }
    if (ans == 1)
        cout << -1 << endl;
    else
        cout << l << endl;
    return 0;
}
