
import java.io.*;
import java.util.StringTokenizer;

/**
 * Created by noonan on 8/14/2016.
 */
public class LittleArtemandGrasshopper {
    public static MyScanner in = new MyScanner();
    public static PrintWriter out = in.MyOut();

    static class MyScanner {
        BufferedReader br;
        StringTokenizer st;

        public MyScanner() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = "";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        void close() {
            try {
                br.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        static PrintWriter MyOut() {
            return new PrintWriter(new BufferedOutputStream(System.out), true);
        }
    }

    @SuppressWarnings("unused")
    public static void main(String[] args) {

        int n = in.nextInt();

        int[] a = new int[n];
        boolean[] hist = new boolean[n];

        String s= in.nextLine();
        for(int i= 0 ; i < n; i ++) {
            a[i] = in.nextInt();
            if(s.charAt(i) == '<') {
               a[i] = -a[i];
            }
        }

        int pos = 0;

        while( true ){



            if(pos < 0 || pos > n - 1 ) {
                break;
            }
            if (hist[pos]) {
                out.println("INFINITE");
                System.exit(0);
            }
            hist[pos] = true;
            pos = pos + a[pos];
        }
        out.println("FINITE");
        in.close();
    }
}
