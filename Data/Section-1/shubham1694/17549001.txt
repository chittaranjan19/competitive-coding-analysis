#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;
const int a = 141;

vector<int> adj[maxn];
vector<pii> q[maxn];
string str[maxn];
int n, m, siz[maxn], depth[maxn], ans[maxn], sc[maxn], st[maxn], seen[maxn];
unordered_map<string, int> m1[2*maxn];

void dfs(int cur, int p, int d)
{
	seen[cur] = 1;
	siz[cur] = 1;
	depth[cur] = d;
	for(int it:adj[cur]){
		if(it!=p){
			dfs(it, cur, d+1);
			siz[it]+=siz[cur];
		}
	}
}

void remove(int cur, int p)
{
	auto it = m1[depth[cur]].find(str[cur]);
	it->s--;
	if(!it->s)
		m1[depth[cur]].erase(it);	
	for(int it:adj[cur]){
		if(!sc[it] && it!=p)
			remove(it, cur);
	}
}

void add(int cur, int p)
{
	m1[depth[cur]][str[cur]]++;
	for(int it:adj[cur]){
		if(!sc[it] && it!=p)
			add(it, cur);
	}
}

void solve(int cur, int p, int keep)
{
	int mxsize = -1, special_child = -1;
	for(int it:adj[cur]){
		if(it!=p && siz[it]>mxsize){
			mxsize = siz[it];
			special_child = it;
		}
	}
	for(int it:adj[cur]){
		if(it!=p && it!=special_child)
			solve(it, cur, 0);
	}
	if(special_child!=-1)
		solve(special_child, cur, 1), sc[special_child] = 1;
	add(cur, p);
	for(pii it:q[cur]){
		int level = it.s + depth[cur];
		ans[it.f] = (int)m1[level].size();
	}
	if(special_child!=-1)
		sc[special_child] = 0;
	if(!keep)
		remove(cur, p);
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int u, v, i, j;
	boost;
	cin.tie(0);
	cout.tie(0);
	cin >> n;
	for(i=1; i<=n; i++){
		cin >> str[i] >> u;
		adj[u].pb(i);
		adj[i].pb(u);	
	}
	cin >> m;
	for(i=1; i<=m; i++){
		cin >> v >> u;
		q[v].pb(mp(i, u));
	}
	dfs(0, -1, 0);
	solve(0, -1, 0);
	for(i=1; i<=m; i++)
		cout << ans[i] << "\n";
	return 0;
}
