#include<bits/stdc++.h>
using namespace std;

const int MAXN=1e5+10;


int seg_S[4*MAXN];
pair<int,int>seg_M[4*MAXN];
int a[MAXN];
void update(int qp,int qv,int xl=0,int xr=MAXN,int id=0){
    if(xr-xl==1){seg_S[id]=seg_M[id].first=qv; seg_M[id].second=xl;     return;}
    int mid=(xl+xr)/2;
    if(qp<mid)  update(qp,qv,xl,mid,2*id+1);
    else        update(qp,qv,mid,xr,2*id+2);
    seg_S[id]=    seg_S[2*id+1] + seg_S[2*id+2];
    seg_M[id]=max(seg_M[2*id+1] , seg_M[2*id+2]);
}

int get_S(int ql,int qr,int xl=0,int xr=MAXN,int id=0){
    if(ql<=xl && xr<=qr)return seg_S[id];
    if(qr<=xl || xr<=ql)return 0;
    int mid=(xl+xr)/2;
    return  get_S(ql,qr,xl,mid,2*id+1)+
            get_S(ql,qr,mid,xr,2*id+2);
}

pair<int,int> get_M(int ql,int qr,int xl=0,int xr=MAXN,int id=0){
    if(ql<=xl && xr<=qr)return seg_M[id];
    if(qr<=xl || xr<=ql)return {0,0};
    int mid=(xl+xr)/2;
    return  max(get_M(ql,qr,xl,mid,2*id+1),
                get_M(ql,qr,mid,xr,2*id+2));
}

int main(){
    ios::sync_with_stdio(false);
    cout.tie(0);    cin.tie(0);
    int n,m;    cin>>n>>m;
    for(int i=0;i<n;i++)cin>>a[i],update(i,a[i]);
    while(m--){
        int qt; cin>>qt;
        if(qt==1){
            int x,y;    cin>>x>>y;
            cout<<get_S(x-1,y)<<'\n';
            continue;
        }
        if(qt==3){
            int x,y;    cin>>x>>y;
            update(x-1,y);
            continue;
        }
        int x,y,z;  cin>>x>>y>>z;
        while(true){
            pair<int,int> A=get_M(x-1,y);
            if(A.first >= z)update(A.second,A.first % z);
            else break;
        }
    }
}
