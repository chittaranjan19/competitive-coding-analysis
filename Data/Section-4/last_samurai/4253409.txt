
/* Author:
 * Rohit Laddha */
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <map>
#include <stack>
#include <set>
#include <queue>
#include <limits.h>
#include <math.h>
#include <queue>
#include <list>
using namespace std;
#define PI 3.14159265

int main(){
	int b[20];
	int k=1;
	for(int i=0;i<20;i++){
		b[i]=k;
		k*=2;
	}
	//	for(int i=0;i<20;i++)
	//		cout << b[i] << ' ';
	//	cout << endl;
	int n;
	cin >> n;
	int a[n];
	for(int i=0;i<n;i++)
		cin >> a[i];
	sort(a,a+n);
	vector<int>myvector(a,a+n);
	std::vector<int>::iterator it;
	it = std::unique (myvector.begin(), myvector.end());
	myvector.resize( std::distance(myvector.begin(),it));
	n= myvector.size();
//	cout << "n = " << n << endl;
	for(int i=0;i<n;i++)
		a[i]=myvector[i];
//	int *c = unique(a,a+n);
//	cout << n-(*c) << endl;
	int ans=-1;
	int ind[19][2];
	for(int i=0;i<20;i++)
		ind[i][0]=-1;
	int j=0;
	for(int i=0;i<n;i++){
		while(j<19){
			if(a[i]>=b[j] && a[i]<b[j+1]){
				if(ind[j][0]==-1){
					ind[j][0]=i;
					ind[j][1]=i;
				}
				else
					ind[j][1]=i;
				break;
			}
			j++;
		}
	}
	//	for(int i=0;i<20;i++)
	//		cout << ind[i][0] << ' ' << ind[i][1] << endl;
	for(int i=18;i>=0;i--){
		if(ind[i][0]==-1)
			continue;
		int tmp=a[ind[i][0]];
		for( j=ind[i][0]+1;j<=ind[i][1];j++)
			tmp=(tmp&a[j]);
		for(int j=19;j>=0;j--){
			if(tmp==b[j]){
				cout << ind[i][1]-ind[i][0]+1 << endl;
				for(k=ind[i][0];k<=ind[i][1];k++)
					cout << a[k] << ' ';
				cout << endl;
				return 0;
			}
		}
	}
	cout << "-1\n";
	return 0;
}

