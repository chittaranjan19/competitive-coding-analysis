import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProblemB {
    BufferedReader rd;

    private ProblemB() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int[][] s = new int[2][200000];
        int[] z = new int[2];
        long[] sum = new long[2];
        int n = pint();
        boolean lastTechniqueFirstPlayer = false;
        for(int i=0;i<n;i++) {
            int p = pint();
            int index = 0;
            if(p < 0) {
                p = -p;
                index = 1;
            }
            s[index][z[index]] = p;
            z[index]++;
            sum[index] += p;
            lastTechniqueFirstPlayer = index == 0;
        }
        boolean first;
        if(sum[0] > sum[1]) {
            first = true;
        } else if(sum[0] < sum[1]) {
            first = false;
        } else {
            int i = 0;
            while(i < z[0] && i < z[1] && s[0][i] == s[1][i]) i++;
            if(i < z[0] && i < z[1]) {
                first = s[0][i] > s[1][i];
            } else if(i < z[0]) {
                first = false;
            } else if(i < z[1]) {
                first = true;
            } else {
                first = lastTechniqueFirstPlayer;
            }
        }
        out(first?"first":"second");
    }

    private int pint() throws IOException {
        return pint(rd.readLine());
    }

    private int pint(String s) {
        return Integer.parseInt(s);
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemB();
    }
}
