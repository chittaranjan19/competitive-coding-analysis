#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define MAX 200005
ll psum[MAX];
int arr[MAX] ,  st[MAX*4];
void build(int si, int ss, int se)
{
	if(ss == se)
	{
		st[si] = ss;
		return;
	}
	int mid = (ss+se)>>1;
	build(si<<1,ss,mid);
	build(si<<1|1,mid+1,se);
	if(psum[st[si<<1]] >= psum[st[si<<1|1]])
	{
		st[si] = st[si<<1];
	}
	else st[si] = st[si<<1|1];

}
int query(int si, int ss, int se, int qs, int qe)
{
	if(ss > se || qs > qe || qe < ss || qs > se) return 0;
	if(qs <= ss && se <= qe) return st[si];
	int i,j,mid;
	mid = (ss+se)>>1;
	i = query(si<<1,ss,mid,qs,qe);
	j = query(si<<1|1,mid+1,se,qs,qe);
	return psum[i]>=psum[j] ? i : j;
}
int main()
{
	int n,k,i;
	cin>>n>>k;
	for(i=1;i<=n;++i)
	{
		cin>>arr[i];
	}
	ll csum = 0;
	for(i=1;i<=k;++i)
		csum += arr[i];
	psum[1] = csum;
	for(i=k+1;i<=n;++i)
	{
		csum += arr[i];
		csum -= arr[i-k];
		psum[i-k+1] = csum;
	}
	build(1,1,n);
	ll msum = 0;
	int id;
	int a,b;
	for(i=1;i+k<=n;++i)
	{
		csum = psum[i] + psum[id=query(1,1,n,i+k,n)];
		if(csum > msum)
		{
			a = i;
			b = id;
			msum = csum;
		}
	}
	cout<<a<<" "<<b<<endl;
}
