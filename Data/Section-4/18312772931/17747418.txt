#include<iostream>
#include<functional>
#include<algorithm>
#include<cstring>
#include<string>
#include<vector>
#include<cstdio>
#include<cmath>
#include<set>
#include<map>
using namespace std;
#define CRL(a) memset(a,0,sizeof(a))
//#define QWQ ios::sync_with_stdio(0)
typedef unsigned __int64 LL;
typedef  __int64 ll;
const int T = 200000+50;
const int mod = 1000000007;
const double PI = 3.1415926535898;

map<int,int> mp;
map<int,int > m2,num;
map<int,vector<int> > m1;
int a[T];

int main()
{
#ifdef zsc
	freopen("input.txt","r",stdin);
#endif

	int n,m,i,j,k;
	while(~scanf("%d",&n))
	{
		mp.clear(),m1.clear();
		m2.clear(),num.clear();
		int ma = 0;
		for(i=0;i<n;++i){
			scanf("%d",&k),mp[k]++;
			ma = max(mp[k],ma);
			m1[mp[k]].push_back(k);
		}
		scanf("%d",&m);
		for(i=1;i<=m;++i){
			scanf("%d",&a[i]);
			num[a[i]] = i;
		}
		for(i=1;i<=m;++i){
			scanf("%d",&k);
			m2[a[i]] = k;
		}
		int tmp = 0,ans;
		for(i=0;i<m1[ma].size();++i){
			if(tmp<mp[m2[m1[ma][i]]]+mp[m1[ma][i]]){
				tmp = mp[m2[m1[ma][i]]]+mp[m1[ma][i]];
				ans = num[m1[ma][i]];
			}
		}
		printf("%d\n",ans);
	}

	return 0;
}

