#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define pb push_back
#define mp make_pair
#define LL long long
#define mn 1003
#define mp make_pair
#define F first
#define S second

using namespace std;
long long n, greet[mn], t[mn], s[mn], f[mn];

void setup ()
{
    cin >> n;
    FOR(i, 1, n)
        cin >> t[i] >> s[i] >> f[i];
}

void add(int i, int j)
{
    greet[i] ++;
    greet[j] ++;
}

void xuly()
{
    FOR(i, 1, n - 1)
    FOR(j, i + 1, n)
    {
        long long speedI = (f[i] - s[i]) / abs(f[i] - s[i]);
        long long speedJ = (f[j] - s[j]) / abs(f[j] - s[j]);
        int t1, s1, f1, sp1;
        int t2, s2, f2, sp2;
        bool ok = false;
        if (s[i] < s[j])
        {
            t1 = t[i], s1 = s[i], f1 = f[i], sp1 = speedI;
            t2 = t[j], s2 = s[j], f2 = f[j], sp2 = speedJ;
        }
        else
        {
            t1 = t[i], s1 = s[i], f1 = f[i], sp1 = speedJ;
            t2 = t[j], s2 = s[j], f2 = f[j], sp2 = speedI;
        }
        if (s1 == s2)
        {
            if (t1 == t2)
                add(i, j);
            continue;
        }
        if (sp1 == -1 && sp2 == 1)
            continue;
        if (sp1 == 1 && sp2 == -1)
        {
            if (t1 < t2)
                s1 += t2 - t1;
            if (t1 > t2)
                s2 -= t1 - t2;
            if (s1 > f1 || s2 < f2)
                continue;
            int g = ((s1 + s2) >> 1);
            if (g <= f1 && g >= f2)
                add(i, j);
            continue;
        }
        if (sp1 == 1 && t2 > t1 && s1 + t2 - t1 == s2)
        {
            add(i, j);
            continue;
        }
        if (t1 > t2 && s2 - (t1 - t2) == s1)
            add(i, j);
    }
    FOR(i, 1, n)
    cout << greet[i] << " ";
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup();
    xuly();
    return 0;
}
