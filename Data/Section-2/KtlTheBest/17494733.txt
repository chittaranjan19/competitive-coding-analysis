/*
          ______      
||  //   | _____|   ||  //
|| //    ||         || //
||//     ||_____    ||//
||\\     | _____|   ||\\
|| \\    ||         || \\   ll Once(ll KEK){
||  \\   ||_____    ||  \\ 		return Forever(KEK);
||   \\  |______|   ||   \\ }
                     
*/
#include<bits/stdc++.h>

using namespace std;
const int N6 = 1e6 + 6, N3 = 1e3 + 6, oo =  1e9 + 9, base = 1e9 + 7;
const long long ool = 1e18 + 9;

typedef unsigned long long ull;
typedef long long ll;
typedef double ld;
typedef pair <int, int> PII;
typedef pair <ll, ll> PLL;

#define F first
#define S second
#define pb push_back
#define right(x) x << 1 | 1
#define left(x) x << 1	
#define	forn(x, a, b) for (int x = a; x <= b; ++x)
#define for1(x, a, b) for (int x = a; x >= b; --x)
#define mp make_pair

int n, m, cmove, a[N6];
bool s;
int res;

int main(){
	ios_base :: sync_with_stdio(0);
	cin.tie(0);	

	cin >> n >> m;
	bool pos = 0;
	forn(i, 1, m){
		int qt;
		cin >> qt;
		if(qt == 1){
			int x;
			cin >> x;
			cmove += x;
			if(cmove > n)
				cmove -= n;
			if(cmove < -n)
				cmove += n;
			x = abs(x);
			s ^= (x & 1);
			pos ^= (x & 1);
		}
		else{
			if(!s)
				res++;
			else
				res--;
			s ^= 1;
			if(res == n)
				res = 0;
			if(res == -n)
				res = 0;
		}
	}

	forn(i, 1, n){
		if(i & 1){
			int x = i + res;
			if(x <= 0)
				x += n;
			if(x > n)
				x -= n;				 
			a[x] = i;
		}
		else{
			int x = i - res;
			if(x <= 0)
				x += n;
			if(x > n)
				x -= n;				 
			a[x] = i;
		}			
	}		

	if(cmove < 0){
		forn(i, 1 - cmove, n)
			cout << a[i] << " ";
		forn(i, 1, (1 - cmove) - 1)
			cout << a[i] << " ";
	}
	else{
		forn(i, n - cmove + 1, n)
			cout << a[i] << " ";
		forn(i, 1, n - cmove)
			cout << a[i] << " ";
	}						

	return 0;
}