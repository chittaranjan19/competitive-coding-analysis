#include <iostream>
#include <climits>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(b, 0, sizeof(arr)); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // getchar(), gets()
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); n - amount; pair
#include <iomanip>      // setw(4), setfill('.'), setprecision(2)
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#include <memory>       // shared_ptr<>, uniqu_ptr<>
#include <iterator>     // ostream_iterator<int, char> our_iter(cout, " ");
#include <set>
#include <map>
#include <list>
#include <queue>
#define SRT srand(int(time(0)))

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
ld pi = 3.14159265358979323;
int ten[8] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};

typedef map<int, int> Map;
typedef Map::iterator mIter;
typedef pair<const int, int> mPair;
typedef pair<int, int> Pair;
typedef set<int> Set;
typedef Set::iterator sIter;
typedef list<int> List;
typedef List::iterator lIter;

int main()
{
    const int S = 500001;
    int n, kl, kr, a[S];
    ll sum = 0;
    
    cin >> n >> kl;
    kr = kl;
    
    for (int i = 1; i <= n; ++i)
    {
        scanf("%d", a + i);
        sum += a[i];
    }
    sort(a + 1, a + n + 1);
    
    ll av = sum / n, lval = -1, rval = -1, mult;
    
    // to poor
    int i, l, r;
    for (i = 1; i <= n && a[i] < av; ++i)
    {
        mult = (ll) (a[i+1] - a[i]) * i;
        if (kl >= mult)
            kl -= mult;
        else
        {
            lval = a[i] + kl / i;
            break;
        }
    }
    l = i;
    
    // from rich
    for (i = n; i > 0 && a[i] > av; --i)
    {
        mult = (a[i] - a[i-1]) * (n - i + 1);
        if (kr >= mult)
            kr -= mult;
        else
        {
            rval = a[i] - kr / (n - i + 1);
            break;
        }
    }
    r = i;
    
    if (lval != -1 && rval != -1)
    {
        if (rval - lval == 0 && sum % n != 0)
            cout << 1 << '\n';
        else
            cout << rval - lval << '\n';
    }
    else
    {
        if (r - l > 1 && a[r] - a[l] != 0)
            cout << a[r] - a[l] << '\n';
        else if (sum % n == 0)
            cout << 0 << '\n';
        else
            cout << 1 << '\n';
    }
    
    return 0;
}