uses    math;
var     m       :int64;
        h1,a1   :int64;
        x1,y1   :int64;
        h2,a2   :int64;
        x2,y2   :int64;
        a,b,dd     :Array[0..trunc(1e7)] of int64;
        ta,tb   :longint;
        tmp     :int64;
        ok      :boolean;
        c1,c2   :boolean;
        vt1,vt2:int64;
        i       :longint;
        s1,s2   :longint;
        new,old,x,y:longint;
        t1,t2   :longint;
        dem     :longint;

function gcd(a,b:int64):int64;
var     r       :int64;
begin
        while b<>0 do
        begin
                r:=a mod b;
                a:=b;
                b:=r;
        end;
        exit(a);
end;

begin
        readln(m);
        readln(h1,a1);
        readln(x1,y1);
        readln(h2,a2);
        readln(x2,y2);
        ta:=1;
        tmp:=h1;
        a[1]:=h1;
        fillchar(Dd,sizeof(dd),0);
        dd[h1]:=1;
        while true do
        begin
                tmp:=(tmp*x1+y1) mod m;
                if dd[tmp]>0 then
                        break;
                inc(ta);
                a[ta]:=tmp;
        end;
        for i:=1 to ta do if a[i]=tmp then
        begin
                s1:=i;
                break;
        end;

        tb:=1;
        tmp:=h2;
        b[1]:=h2;
        fillchar(Dd,sizeof(dd),0);
        dd[h2]:=1;
        while true do
        begin
                tmp:=(tmp*x2+y2) mod m;
                if tmp=b[1] then break;
                inc(tb);
                b[tb]:=tmp;
        end;
        for i:=1 to tb do if b[i]=tmp then
        begin
                s2:=i;
                break;
        end;
        ok:=true;
        c1:=false;
        c2:=false;
        vt1:=0;
        vt2:=0;

        for i:=1 to ta do

        if a1=a[i] then
        begin
                c1:=true;
                vt1:=i;
        end;
        for i:=1 to tb do
        if a2=b[i] then
        begin
                c2:=true;
                vt2:=i;
        end;

        ok:=c1 and c2;
        if not ok then writeln(-1) else
        begin
                if (vt1<s1) or (vt2<s2) then
                begin
                        if vt1<>vt2 then writeln(-1)
                end
                else
                begin
                        if vt1=vt2 then
                        begin
                                writeln(vt1-1);
                                exit;
                        end;
                        x:=vt1;
                        y:=vt2;
                        t1:=ta-s1+1;
                        t2:=tb-s2+1;
                        old:=abs(x-y);
                        dem:=max(vt1,vt2)-1;
                        while true do
                        begin
                                x:=x+t1-1;
                                y:=y+t2-1;
                                inc(dem);
                                new:=abs(x-y);
                                if new>=old then
                                begin
                                        writeln(-1);
                                        exit;
                                end;
                                if x=y then
                                begin
                                        writeln(dem);
                                        exit;
                                end;
                        end;
                end;
        end;
end.