#include<bits/stdc++.h>
#define MAXN 509
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define lg(x) ceil(log2(x))
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
PII arr[MAXN*21];
int vis[MAXN];
multiset<int>adj[MAXN];
void dfs(int nd){
//	cout<<nd<<endl;
	vis[nd]=true;
	tr(i,adj[nd])
		if(!vis[*i])
			dfs(*i);
}
int main(){
	int n,m;
	cin>>n>>m;
	for(int i=1;i<=m;i++){
		int u,v;
		scanf("%d%d",&u,&v);
		arr[i]={u,v};
		adj[u].insert(v);
		adj[v].insert(u);
	}
	int k;
	cin>>k;
	while(k--){
		int l,r,ans=0;
		cin>>l>>r;
		for(int i=l;i<=r;i++){
			int u=arr[i].ff,v=arr[i].ss;
			adj[u].erase(adj[u].find(v));
			adj[v].erase(adj[v].find(u));
	//	wr
		}
		fill(vis,vis+MAXN,0);
		for(int i=1;i<=n;i++)
			if(!vis[i])
				ans++,dfs(i);
		cout<<ans<<endl;	
		for(int i=l;i<=r;i++){
			int u=arr[i].ff,v=arr[i].ss;
			adj[u].insert(v);
			adj[v].insert(u);
		}
	}
	return 0;
}

