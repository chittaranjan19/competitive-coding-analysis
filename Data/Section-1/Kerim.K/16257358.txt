#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
ll s[MAXN],wr;
vector<int>adj[MAXN];
int n;
void dfs(int nd,int pr){
	s[nd]=1;tr(it,adj[nd])
	if(*it!=pr){
		dfs(*it,nd);
		s[nd]+=s[*it];
	}
}
ll fup(ll x){
	return (x)*(x-1)/2LL;
}
void dfs2(int nd,int pr){
	ll num=0;tr(it,adj[nd])
		if(*it!=pr){
			dfs2(*it,nd);
			num+=s[*it]*(s[nd]-s[*it]-1);
		}
	num/=2;num+=s[nd]-1;	
	wr+=fup(num)*2+num*(n-s[nd])*s[nd]*2;
}
int main(){
	scanf("%d",&n);
	for(int i=2;i<=n;i++){
		int u,v;
		scanf("%d%d",&u,&v);
		adj[u].pb(v);
		adj[v].pb(u);
	}
	dfs(1,0);
	dfs2(1,0);
	printf("%lld",fup(n)*fup(n)-fup(n)-wr);
	return 0;
}
