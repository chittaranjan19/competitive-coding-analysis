#include <bits/stdc++.h>
using namespace std;

const int hx[4] = {1, 0, -1, 0};
const int hy[4] = {0, 1, 0, -1};
int n, m, k;
int a[55][55];
bool visited[55][55];
pair<int, int> c[5555];

bool cmp(pair<int, int> a, pair<int, int> b)
{
	return a.second < b.second;
}

int dfs(int d, int x, int y)
{
	bool ok = true;
	int num = 1;
	visited[x][y] = true;
	a[x][y] = d;
	for(int i = 0; i < 4; i++)
	{
		int mx = x + hx[i];
		int my = y + hy[i];
		if(mx < 0 || my < 0 || mx >= n || my >= m)
			ok = false;
		else
		if(!visited[mx][my] && a[mx][my] == 1)
		{
			int u = dfs(d, mx, my);
			if(u == -1) ok = false;
			num += u;
		}
	}
	if(!ok) return -1;
	return num;
}

int main()
{
	//freopen("in.txt", "r", stdin);
	cin >> n >> m >> k;
	for(int i = 0; i < n; i++)
	{
		string s;
		cin >> s;
		for(int j = 0; j < m; j++)
			if(s[j] == '.') a[i][j] = 1;
			else a[i][j] = 0;
	}
	int count = 0, d = 1;
	for(int i = 0; i < n; i++)
		for(int j = 0; j < m; j++)
			if(!visited[i][j] && a[i][j] == 1)
			{
				d++;
				int x = dfs(d, i, j);
				if(x != -1)
				{
					c[count].first = d;
					c[count].second = x;
					count++;
				}
			}
	sort(c, c + count, cmp);
	int rs = 0;
	for(int u = 0; u < count - k; u++)
	{
		rs += c[u].second;
		for(int i = 0; i < n; i++)
			for(int j = 0; j < m; j++)
				if(a[i][j] == c[u].first) a[i][j] = 0;
	}
	cout << rs << "\n";
	for(int i = 0; i < n; i++)
	{
		for(int j = 0; j < m; j++)
			if(a[i][j] == 0) cout << '*';
			else cout << '.';
		cout << "\n";
	}
	return 0;
}