#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>
#include<queue>
#include<set>
#include<stack>

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define scantype int
#define lli long long int
#define N 5010

lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}

using namespace std;

void scan(scantype &x);


vector<pair<int,lli> > edge[N];
vector<int> rev_edge[N];
stack<int> stk;
bool vis[N];

void topo(int s)
{
       vis[s]=true;
       for(int i=0;i<rev_edge[s].size();i++)
              if(!vis[rev_edge[s][i]])
                     topo(rev_edge[s][i]);

       stk.push(s);
}

bool poss(pair<int,int> p)
{
       if(p.first==-1 && p.second==-1)return false;
       return true;
}

pair< lli , pair<int,int> > dp[N][N];


int main(void)
{
  int n,m;
  lli t;
  cin>>n>>m>>t;

  for(int i=0;i<m;i++)
  {
         int x,y,z;
         scan(x);scan(y);scan(z);
         edge[x].pb({y,z});
         rev_edge[y].pb(x);
  }

  fill(vis,false);
  topo(n);

  vector<int> ordr;

  while(!stk.empty())
  {
         ordr.pb(stk.top());
         stk.pop();
  }

 // for(int i=0;i<ordr.size();i++)
   //    cout<<ordr[i]<<" ";

  //cout<<endl;

  fill(dp,-1);
  fill(vis,false);

  dp[n][1] = { 0,{-1,-1} };

  for(int i=1;i<ordr.size();i++)
  {
      int s = ordr[i];

             for(int k=0;k<edge[s].size();k++)
             {

                    for(int tnode=1;tnode<=n;tnode++)
                    {


                       int curr = edge[s][k].first;
                       lli dist = edge[s][k].second;

                       if(dp[curr][tnode-1].first==-1)continue;

                       lli f,sf,ss;

                       f=dp[curr][tnode-1].first+dist;
                       if(f>t)continue;
                       sf=curr;
                       ss=tnode-1;

                       if(dp[s][tnode].first==-1)
                            {
                             dp[s][tnode].first = f;
                             dp[s][tnode].second.first = sf;
                             dp[s][tnode].second.second = ss;
                            }
                       else
                            {
                             if(dp[s][tnode].first>f)
                                  {
                                  dp[s][tnode].first = f;
                                  dp[s][tnode].second.first = sf;
                                  dp[s][tnode].second.second = ss;
                                  }
                            }

                    }
             }
  }


      /*
      for(int j=0;j<edge[s].size();j++)
      {
             int node = edge[s][j].first;
             int dist = edge[s][j].second;

             for(int k=0;k<ans[node].size();k++)
             {
                    int tot,tdis;

                    tot = ans[node][k].first.first;
                    tdis = ans[node][k].first.second;

                    ans[s].pb({ {tot+1,tdis+dist}, {node,k} });
             }
      }*/





  int mx=0;
  int iy=0;
  int ix=1;

  for(int i=N;i>0;i--)
       if(dp[1][i].first!=-1)
        {
         iy=i;
         break;
        }

  vector<int> fans;

  fans.pb(1);

  pair<int,int> to;
  to = dp[1][iy].second;

  while(poss(to))
  {
         fans.pb(to.first);
         to = dp[to.first][to.second].second;
         if(to.first==-1)break;
  }
  cout<<fans.size()<<endl;

  for(int i=0;i<fans.size();i++)
       printf("%d ",fans[i]);
  return 0;
}











void scan(scantype &x)
{
    /*register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}*/

    register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
