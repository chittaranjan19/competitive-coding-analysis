#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 1e5 + 50;

int n, m;
vector <int> g[N];
vector <int> d[N];
bool mark[N];
int dead[N];
vector <int> c;
bool flag;

void dfs(int v){
	mark[v] = true;
	c.PB(v);
	for(int u : g[v]){
		if(!mark[u]) 
			dfs(u);
	}
}

void ddfs(int v){
	dead[v] = 1;
	for(int u : d[v]){
		if(dead[u] == 0)
			ddfs(u);
		if(dead[u] == 1)
			flag = true;
	}
	dead[v] = 2;
}

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> n >> m;
	for(int i = 0; i < m; ++i){
		int u, v;
		cin >> u >> v;
		u --; v--;
		g[u].PB(v);
		g[v].PB(u);
		d[u].PB(v);
	}
	int ans = n;
	for(int i = 0; i < n; ++i){
		if(!dead[i]){
			flag = false;
			ddfs(i);
			//for(int x : c){
			//	if(!dead[x])
			//		ddfs(x);
			//}
			ans -= (flag ? 0 : 1);
		}
	}
	cout << ans << "\n";
	return 0;
}
