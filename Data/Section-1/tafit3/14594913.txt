import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProblemD {
    public static final long B = 1_000_000_007L;
    BufferedReader rd;

    private ProblemD() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int[] a = intarr();
        int p = a[0];
        int k = a[1];
        long res;
        if(k == 0) {
            res = pow(p,p-1);
        } else if(k == 1) {
            res = pow(p,p);
        } else {
            int[] u = new int[p];
            for(int i=0;i<p;i++) {
                u[i] = (i * k) % p;
            }
            boolean[] used = new boolean[p];
            long c = 0;
            for(int i=1;i<p;i++) {
                if(!used[i]) {
                    c++;
                    int j = i;
                    while(!used[j]) {
                        used[j] = true;
                        j = u[j];
                    }
                }
            }
            res = pow(p,c);
        }
        out(res);
    }

    private long pow(long a, long b) {
        if(b == 0) {
            return 1;
        }
        if(b == 1) {
            return a;
        }
        long c = pow(a,b/2);
        c *= c;
        c %= B;
        if(b%2==1) {
            c *= a;
            c %= B;
        }
        return c;
    }

    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = split(s);
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }

    public String[] split(String s) {
        if(s == null) {
            return new String[0];
        }
        int n = s.length();
        int start = -1;
        int end = 0;
        int sp = 0;
        boolean lastWhitespace = true;
        for(int i=0;i<n;i++) {
            char c = s.charAt(i);
            if(isWhitespace(c)) {
                lastWhitespace = true;
            } else {
                if(lastWhitespace) {
                    sp++;
                }
                if(start == -1) {
                    start = i;
                }
                end = i;
                lastWhitespace = false;
            }
        }
        if(start == -1) {
            return new String[0];
        }
        String[] res = new String[sp];
        int last = start;
        int x = 0;
        lastWhitespace = true;
        for(int i=start;i<=end;i++) {
            char c = s.charAt(i);
            boolean w = isWhitespace(c);
            if(w && !lastWhitespace) {
                res[x++] = s.substring(last,i);
            } else if(!w && lastWhitespace) {
                last = i;
            }
            lastWhitespace = w;
        }
        res[x] = s.substring(last,end+1);
        return res;
    }

    private boolean isWhitespace(char c) {
        return c==' ' || c=='\t';
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemD();
    }
}