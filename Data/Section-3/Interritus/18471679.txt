/*input
4
insert 1
insert 1
removeMin
getMin 2
*/
#include <bits/stdc++.h>
using namespace std;
#define sd(x) scanf("%d",&x);
#define slld(x) scanf("%lld",&x);
#define ss(x) scanf("%s",x);
#define sc(x) scanf("%c",&x);
#define LL long long
#define LD long double
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define bit(x,i) (x&(1<<i))  //select the bit of position i of x
#define lowbit(x) ((x)&((x)^((x)-1))) //get the lowest bit of x
#define pc1(x) cout<<x<<" ";
#define pc2(x,y) cout<<x<<" "<<y<<" "<<endl;
#define pc3(x,y,z) cout<<x<<" "<<y<<" "<<z<<" "<<endl;
#define pc4(w,x,y,z) cout<<w<<" "<<x<<" "<<y<<" "<<z<<" "<<endl;
#define pce(x) cout<<x<<endl;
#define ps0() cout<<endl;
#define ps1(x) cout<<#x<<" ";
#define ps2(x,y) cout<<#x<<" "<<y<<" "<<endl;
#define ps3(x,y,z) cout<<#x<<" "<<y<<" "<<z<<" "<<endl;
#define ps4(w,x,y,z) cout<<#w<<" "<<x<<" "#y<<" "<<z<<" "<<endl;
#define pse(x) cout<<#x<<endl;
#define GET_MACRO(_0, _1, _2, _3, _4, NAME, ...) NAME
#define GET_MACRO1(_1, _2, _3, _4, NAME, ...) NAME
#define ps(...) \
		do{if (DEBUG) GET_MACRO(_0, ##__VA_ARGS__, ps4, ps3, ps2, ps1, ps0)(__VA_ARGS__)} while(0);
#define pc(...) \
 		do{if (DEBUG) GET_MACRO1(__VA_ARGS__, pc4, pc3, pc2, pc1)(__VA_ARGS__)} while(0);
#define READ(filename)  freopen(filename, "r", stdin);
#define WRITE(filename)  freopen(filename, "w", stdout);
#define SSTR( x ) static_cast< std::ostringstream & >( \
        ( std::ostringstream() << std::dec << x ) ).str()

typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector<VI> VVI; 

#define MOD 1000000007
#define DEBUG 1

int main()
{
	// int MAX=1000000000;
	int n,x,b;
	string a,z;
	sd(n)
	priority_queue<int,vector<int>,greater<int> > pq;
	vector<string> v;
	while(n--)
	{
		cin>>a;
		if(a=="removeMin")
		{
			if(pq.size()==0)
			{
				v.PB("insert 1");
				v.PB(a);
				// cout<<"insert 1"<<endl;
				// cout<<a<<endl;
			}
			else
			{
				pq.pop();
				v.PB(a);
				// cout<<a<<endl;
			}
			continue;
		}
		cin>>b;
		if(a=="insert")
		{
			z="";
			z.append(a);
			z.append(" ");
			z.append(SSTR(b));
			v.PB(z);
			// cout<<a<<" "<<b<<endl;
			pq.push(b);
		}
		else if(a=="getMin")
		{
			if(pq.size()==0)
			{
				pq.push(b);
				z="insert ";
				z.append(SSTR(b));
				v.PB(z);
				z="";
				z.append(a);
				z.append(" ");
				z.append(SSTR(b));
				v.PB(z);
				// cout<<"insert "<<b<<endl;
				// cout<<a<<" "<<b<<endl;
				continue;
			}

			x=pq.top();
			if(x==b)
			{
				z="";
				z.append(a);
				z.append(" ");
				z.append(SSTR(b));
				v.PB(z);
				// cout<<a<<" "<<b<<endl;
			}
			else if(x>b)
			{
				pq.push(b);
				z="insert ";
				z.append(SSTR(b));
				v.PB(z);
				z="";
				z.append(a);
				z.append(" ");
				z.append(SSTR(b));
				v.PB(z);
				// cout<<"insert "<<b<<endl;
				// cout<<a<<" "<<b<<endl;
			}
			else if(x<b)
			{
				while(pq.size()!=0&&pq.top()<b)
				{
					v.PB("removeMin");
					// cout<<"removeMin"<<endl;
					pq.pop();
				}
				if(pq.size()==0)
				{
					pq.push(b);
					z="insert ";
					z.append(SSTR(b));
					v.PB(z);
					z="";
					z.append(a);
					z.append(" ");
					z.append(SSTR(b));
					v.PB(z);
					// cout<<"insert "<<b<<endl;
					// cout<<a<<" "<<b<<endl;
				}
				else if(pq.top()==b)
				{
					z="";
					z.append(a);
					z.append(" ");
					z.append(SSTR(b));
					v.PB(z);
					// cout<<a<<" "<<b<<endl;
				}
				else 
				{
					pq.push(b);
					z="insert ";
					z.append(SSTR(b));
					v.PB(z);
					z="";
					z.append(a);
					z.append(" ");
					z.append(SSTR(b));
					v.PB(z);
					// cout<<"insert "<<b<<endl;
					// cout<<a<<" "<<b<<endl;
				}
			}

		}
	}
	cout<<v.size()<<endl;
	for(int i=0;i<v.size();i++)
	{
		cout<<v[i]<<endl;
	}
}
