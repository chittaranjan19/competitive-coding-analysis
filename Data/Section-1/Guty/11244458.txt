#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int main()
{
	int m;
	string s;
	cin >> s >> m;
	int largo = s.size();
	vector<int> changes (largo);
	forn(i,m)
	{
		int a;
		cin >> a;
		changes[a-1]++;
	}
	forn(i,largo)
	{
		if (changes[i] % 2 != 0 && i <= largo/2 - 1 )
		{
			char Aux = s[i];
			s[i] = s[largo - i - 1];
			s[largo - i - 1] = Aux;
			changes[i+1]++;
		}
	}
	cout << s << endl;
	
	return 0;
}
