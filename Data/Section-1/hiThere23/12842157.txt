#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 500
#define maxC 1000000007
#define task "CANDIES"
#define mp make_pair
#define F first
#define S second

using namespace std;
bool g[mn][mn];
string pre, cur;
int n, mark[mn];

void setup ()
{
    cin >> n >> pre;
    FOR(i, 2, n)
    {
        cin >> cur;
        FOR(i, 0, min(cur.length(), pre.length()) - 1)
        if (pre.length() > cur.length())
        {
            if (pre.substr(0, cur.length()) == cur)
            {
                cout << "Impossible";
                exit(0);
            }
        }
        if (cur[i] != pre[i])
        {
            if (g[cur[i]][pre[i]])
            {
                cout << "Impossible";
                exit(0);
            }
            g[pre[i]][cur[i]] = true;
            break;
        }
        pre = cur;
    }
    FOR(i, 'a', 'z')
    FOR(j, 'a', 'z')
    FOR(k, 'a', 'z')
    if (g[i][j] && g[j][k])
    {
        if(g[k][i])
        {
            cout << "Impossible";
            exit(0);
        }
        g[i][k] = true;
    }
}

void xuly ()
{
    char now;
    bool val;
    memset(mark, 0, sizeof(mark));
    FOR(i, 1, 26)
    FOR(j, 'a', 'z')
    if (!mark[j])
    {
        val = true;
        FOR(k, 'a', 'z')
        if (!mark[k] && g[k][j])
        {
            val = false;
            break;
        }
        if (!val)
            continue;
        cout << char(j);
        mark[j] = 1;
        break;
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
