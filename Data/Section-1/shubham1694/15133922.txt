#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define ll long long
#define f first
#define s second

typedef pair<int, int> pii;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

int n;
ll fact[20];
map<pair<int, pii>, int> m1;

int add(int x, int y)
{
    ll ret = x;
    ret+=y;
    if(ret>=mod)
        ret-=mod;
    return ret;
}

int solve(int cur, int mask1, int mask2)
{
    if(cur==n+1){
        if(mask2==(1<<n)-1)
            return fact[n];
        return 0;
    }
    if(m1.find(mp(cur, mp(mask1, mask2)))!=m1.end())
        return m1[mp(cur, mp( mask1, mask2))];
    int i, nw, nmask1, nmask2, ret=0;
    for(i=1; i<=n; i++){
        if(!(mask1&(1<<(i-1)))){
            nw = (i+cur-2)%n + 1;
            if(!(mask2&(1<<(nw-1)))){
                nmask1 = mask1|(1<<(i-1));
                nmask2 = mask2|(1<<(nw-1));
                ret = add(ret, solve(cur+1, nmask1, nmask2));
            }
        }
    }
    return m1[mp(cur, mp(mask1, mask2))] = ret;
}

int ans[] = {0, 1, 0, 18, 0, 1800, 0, 670320, 0, 734832000, 0, 890786230, 0, 695720788, 0, 150347555, 0};

int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    /*int i, j;
    fact[0] = 1;
    for(i=1; i<=16; i++)
        fact[i] = (fact[i-1]*1ll*i)%mod;
    for(i=1; i<=15; i++){
        n = i;
        m1.clear();
        int ans = solve(1, 0, 0);
        printf("%d\n", ans);
    }*/
    sd(n);
    printf("%d\n", ans[n]);
    return 0;
}
