#include <iostream>
#include <climits>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(b, 0, sizeof(arr)); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // getchar(), gets()
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); n - amount; pair
#include <iomanip>      // setw(4), setfill('.'), setprecision(2)
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#include <memory>       // shared_ptr<>, uniqu_ptr<>
#include <iterator>     // ostream_iterator<int, char> out_iter(cout, " ");
#include <set>
#include <map>
#include <list>
#include <queue>
#include <functional>   // function
#define SRT srand(int(time(0)))

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
ld pi = 3.14159265358979323846;
int ten[8] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};
inline void eatline() { while (getchar() != '\n'); }

typedef map<int, int> Map;
typedef Map::iterator mIter;
typedef pair<int, int> Pair;
typedef set<int> Set;
typedef Set::iterator sIter;
typedef multimap<int, int> mMap;
typedef mMap::iterator mmIter;
typedef multiset<int> mSet;
typedef mSet::iterator msIter;
typedef list<int> List;
typedef List::iterator lIter;
typedef deque<int> Deque;
typedef Deque::iterator dIter;

const int S = 1e5 + 1;
int a[4], ct, a1, a2;
char s[S];

int main()
{
    gets(s);
    int i = -1;
    while (s[++i])
    {
        switch (s[i])
        {
            case 'U': ++a[0]; break;
            case 'D': ++a[1]; break;
            case 'R': ++a[2]; break;
            case 'L': ++a[3]; break;
        }
    }
    if (i % 2)
    {
        cout << -1 << '\n';
        return 0;
    }
    
    a1 = abs(a[0] - a[1]);
    a2 = abs(a[2] - a[3]);
    ct = a1 / 2;
    ct += a2 / 2;
    
    if (a1 % 2)
        ++ct;
    
    cout << ct << '\n';
    
    return 0;
}