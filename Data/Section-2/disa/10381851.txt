
#include <fstream>
#include <cstdio>
#include <set>
#include <vector>
#include <algorithm>
#include <map>
#include <cassert>
using namespace std;
  
  
  
#ifdef DEBUG
ifstream cin("input.txt"); 
ofstream cout("output.txt");
#else                     
#include <iostream>
#endif
  
  
typedef long long ll;
typedef pair <int, int> pii;
typedef vector <int> vi;
 
 
const int sz = 30;
const ll LINF = 1e18 * 3;
const ll INF = 1e9 + 100;   


vector <pii> all;
int n;
int k;


int main() {

    cin >> n >> k;
    for (int i = 0; i < n; i++) {
    	int x;
    	cin >> x;
    	if (x == 1) {
    		all.push_back(pii(x, 1));
    		continue;
    	}
    	for (int j = 1; j <= k; j++) {
    		all.push_back(pii(x * j, j));
    	}
   	}
	
	sort(all.begin(), all.end());

	int q;
	cin >> q;
	for (int f = 0; f < q; f++) {
		int c;
		cin >> c;

		int mink = INF;
		for (int i = 0; i < all.size(); i++) {
			if (i > 0 && all[i].first == all[i - 1].first)  continue;
			int nowk = all[i].second;
			int need = c - all[i].first;
			
			if (need < 0) break;
			if (need == 0) {
				mink = min(mink, nowk);	
				continue;
			}
		
			int z = upper_bound(all.begin(), all.end(), pii(need, 0)) - all.begin();
			if (z == i) z++;
			if (z == n || all[z].first != need)	continue;
            
            nowk += all[z].second;				
			mink = min(mink, nowk);
		}

		if (mink > k) mink = -1;
		cout << mink << "\n";	
	}
	
	return 0;
} 
