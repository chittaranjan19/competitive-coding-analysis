#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>

using namespace std;

#define ll long long
#define sc second
#define fs first
#define mp make_pair

set<ll> s;
vector<ll> g[1000];
map<ll, ll> gnum, save;

ll poww(ll a, ll b)
{
    ll ans = 1;
    for (int i = 0; i < b; i++)
        ans *= a;
    return ans;
}

void add(string str, int id, int alr, int pos, ll vl)
{
    if (alr == 4) return;
    int len = str.length();
    for (int i = pos+1; i < len; i++)
    {
        ll tmp = vl;
        tmp += poww(27, alr)*(str[i] - 'a' + 1);
        s.insert(tmp);
        g[id].push_back(tmp);
        add(str, id, alr + 1, i, tmp);
    }
}

bool u[10000];
int mt[10000];

bool dfs(int v)
{
    if (u[v]) return 0;
    u[v] = 1;
    for (int i = 0; i < g[v].size(); i++)
    {
        int to = g[v][i];
        if (mt[to] == -1 || dfs(mt[to]))
        {
            mt[to] = v;
            return 1;
        }
    }
    return 0;
}

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    int n;
    string ms[300];
    cin >> n;
    for (int i = 0; i < n; i++){
        cin >> ms[i];
        add(ms[i], i, 0, -1, 0);
    }
    set<ll>::iterator it;
    int cnt = n;
    for (it = s.begin(); it != s.end(); it++)
    {
        ll tmp = *it;
        save[cnt] = tmp;
        gnum[tmp] = cnt++;
    }
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < g[i].size(); j++)
            g[i][j] = gnum[g[i][j]];
    }
    memset(mt, -1, sizeof(mt));
    for (int i = 0; i < n; i++)
    {
        memset(u, 0, sizeof(u));
        dfs(i);
    }
    string ans[300];
    int ok = 0;
    for (int i = n; i < n+cnt; i++)
    {
        if (mt[i] == -1)
        {

        }
        else
        {
            ok++;
            ll tans = save[i];
            int st = 1;
            while (poww(27, st) < st)
                st++;
            string res = "";
            for (int i = st-1; i >= 0; i--)
            {
                res += (tans/poww(27, i) - 1 + 'a');
                tans -= (tans / poww(27, i)) * poww(27, i);
            }
            reverse(res.begin(), res.end());
            ans[mt[i]] = res;
        }
    }
    if (ok != n)
        cout << -1;
    else
    {
        for (int i = 0; i < n; i++)
            cout << ans[i] << endl;
    }
    return 0;
}