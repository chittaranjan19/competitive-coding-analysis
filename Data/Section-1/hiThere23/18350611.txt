#include <bits/stdc++.h>
#define FOR(i, j, k) for(int i = j; i <= k; i ++)
#define FORD(i, j, k) for(int i = j; i >= k; i --)
#define maxC 2000000007
#define mn 100005
#define pb push_back
#define mp make_pair
#define base 29

using namespace std;
int n, k;
string s;
struct tries
{
    bool win, lose;
    vector<int> down;
    tries* child[26];

    tries()
    {
        win = lose = false;
        down.clear();
        FOR(i, 0, 25)
            child[i] = NULL;
    }
} t;

void setup()
{
    cin >> n >> k;
    FOR(i, 1, n)
    {
        cin >> s;
        tries* p = &t;
        FOR(j, 0, int(s.size()) - 1)
        {
            int z = s[j] - 'a';
            if (p -> child[z] == NULL)
            {
                p -> down.pb(z);
                p -> child[z] = new tries;
            }
            p = p -> child[z];
        }
    }
}

void dfs(tries *t)
{
    int sz = t -> down.size();
    if (sz == 0)
    {
        t -> win = false;
        t -> lose = true;
        return;
    }
    FOR(i, 0, sz - 1)
    {
        int z = t -> down[i];
        dfs(t -> child[z]);
        t -> win |= !(t -> child[z] -> win);
        t -> lose |= !(t -> child[z] -> lose);
    }
}

void xuly()
{
    dfs(&t);
    if (!t.win)
        cout << "Second";
    if (t.win && t.lose)
        cout << "First";
    if (t.win && !t.lose)
        cout << (k & 1? "First" : "Second");
}

int main()
{
    iostream::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup();
    xuly();
    return 0;
}
