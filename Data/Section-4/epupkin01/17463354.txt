#include <iostream>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(b, 0, sizeof(arr)); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // getchar(), gets()
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); a - массв, n - кол-во эл-тов
#include <iomanip>      // setw()
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#include <memory>       // shared_ptr<>, uniqu_ptr<>
#include <iterator>     // ostream_iterator<int, char> our_iter(cout, " ");
#include <set>
#include <map>
#define SRT srand(int(time(0)))
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
using namespace std;
struct ind_res
{
    int ind;
    int res;
};
bool operator<(const ind_res &ir1, const ind_res &ir2)
{
    if (ir1.ind < ir2.ind)
        return true;
    else if (ir1.ind == ir2.ind && ir1.res >= ir2.res)
        return true;
    return false;
}
int main()
{
    ios_base::sync_with_stdio(0);
    typedef map<ind_res, string> maps;
    typedef maps::value_type map_t;
    maps::iterator itl, itr;
    string s;
    int n, m;
    ind_res temp;
    maps pers;
    cin >> n >> m;
    for (int i = 0; i < n; ++i)
    {
        cin >> s >> temp.ind >> temp.res;
        pers.insert(map_t(temp, s));
    }
    for (itl = pers.begin(); itl != pers.end(); ++itl)
    {
        //cout << ' ' << (*itl).first.ind << ' ' << (*itl).first.res << ' ' << (*itl).second << '\n';
        ///*
        itr = itl;
        ++itr;
        int r1 = (*itl).first.res, r2 = (*itr).first.res, r3 = -1;
        if (++itr != pers.end() && (*--itr).first.ind == (*++itr).first.ind)
            r3 = (*itr).first.res;
        --itr;
        if (r1 == r2 || r2 == r3)
            cout << "?\n";
        else
            cout << (*itl).second << ' ' << (*itr).second << '\n';
        while (itr != pers.end() && (*itl).first.ind == (*itr).first.ind)
            itl = itr++;
        //*/
    }
    return 0;
}