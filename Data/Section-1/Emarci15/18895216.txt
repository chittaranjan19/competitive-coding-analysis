#include <iostream>
#include <algorithm>
#include <map>

using namespace std;

int n,m;
int a[100000];

int s;
pair<int,int> q[100000];
map<int,int> db;

bool cmp(pair<int,int> x, pair<int,int> y) {
    return ((x.first/s < y.first/s) || ((x.first/s == y.first/s) && (x.second < y.second)));
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(NULL);
    cin >> n >> m;
    for(int i=0; i<n; i++) {
        cin >> a[i];
        db[a[i]] = 0;
    }

    for(int i=0; i<m; i++) {
        cin >> q[i].first >> q[i].second; q[i].first--; q[i].second--;
    }

    s = (int)sqrt(n);
    sort(q,q+m,cmp);

    int x(0),y(0);
    int sol(a[0] == 1);
    db[a[0]]++;
    for(int i=0; i<m; i++) {
        while(y<q[i].second) {
            y++;
            if(db[a[y]] == a[y]) sol--;
            if(++db[a[y]] == a[y]) sol++;
        }
        while(x<q[i].first) {
            if(db[a[x]] == a[x]) sol--;
            if(--db[a[x]] == a[x]) sol++;
            x++;
        }
        while(x>q[i].first) {
            x--;
            if(db[a[x]] == a[x]) sol--;
            if(++db[a[x]] == a[x]) sol++;
        }
        cout << sol << endl;
    }

    return 0;
}
