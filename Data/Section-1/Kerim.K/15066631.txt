//Cok tavsanin pesinde kosan hicbrini yakalmaz!
#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define lg(x) ceil(log2(x))
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
ll dp[5][1009][1009];
int main(){
	int n,m;
	cin>>n>>m;
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			cin>>dp[0][i][j];
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			dp[1][i][j]=max(dp[1][i][j-1],dp[1][i-1][j])+dp[0][i][j];	
	for(int i=n;i>=1;i--)
		for(int j=m;j>=1;j--)
			dp[2][i][j]=max(dp[2][i][j+1],dp[2][i+1][j])+dp[0][i][j];		
	for(int i=1;i<=n;i++)
		for(int j=m;j>=1;j--)
			dp[3][i][j]=max(dp[3][i][j+1],dp[3][i-1][j])+dp[0][i][j];	
	for(int i=n;i>=1;i--)
		for(int j=1;j<=m;j++)
			dp[4][i][j]=max(dp[4][i][j-1],dp[4][i+1][j])+dp[0][i][j];
	ll mx=0;		
	//	t1=f2(i,j-1) + f4(i+1,j) + f1(i,j+1) + f3(i-1,j);
	//	t1=max(t1 , f4(i,j-1) + f2(i-1,j) + f1(i+1,j) + f3(i,j+1));
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++){
			ll jog=dp[1][i][j-1]+dp[2][i][j+1]+dp[3][i-1][j]+dp[4][i+1][j];	
			umax(jog,dp[1][i-1][j]+dp[2][i+1][j]+dp[3][i][j+1]+dp[4][i][j-1]);
			
			umax(mx,jog);	
		}
	cout<<mx<<endl;	
	return 0;
}
