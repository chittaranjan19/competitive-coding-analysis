const   maxn   =trunc(1e6)*2;

type    arr1    =array[0..maxn] of longint;

var     n       :longint;
        l       :arr1;
        a       :Arr1;
        r       :arr1;
        dd      :Arr1;
        max     :longint;
        i       :longint;
        c       :arr1;
        ll,rr   :longint;
        best    :longint;
begin
        readln(n);
        max:=0;
        for i:=1 to n do read(a[i]);
        fillchar(dd,sizeof(dd),0);
        for i:=1 to n do
        begin
                if dd[a[i]]=0 then l[a[i]]:=i;
                inc(dd[a[i]]);
                if max<dd[a[i]] then max:=dd[a[i]];
        end;
        fillchar(c,sizeof(c),0);
        for i:=n downto 1 do
        begin
                if c[a[i]]=0 then r[a[i]]:=i;
                inc(c[a[i]]);
        end;
        best:=trunc(1e9);
        for i:=0 to trunc(1e6)+3 do
                if dd[i]=max then
                begin
                        if r[i]-l[i]+1<best then
                        begin
                                best:=r[i]-l[i]+1;
                                ll:=l[i];
                                rr:=r[i];
                        end;
                end;
        writeln(ll,' ',rr);
end.
