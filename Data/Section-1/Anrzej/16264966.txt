#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

template<class T> T sqr(T x) { return x*x; }

const int N = 2222;

ld pi = 3.1415926535897932384626433832795;

int r[222222], h[222222], n;
ld tans[2222222], t[4 * 2222222];
pair<ld, int> v[2222222];
int id[2222222];

ld getV(int i){
	return pi * r[i] * r[i] * h[i];
}

void update(int v, int tl, int tr, int p, ld vl)
{
	if (tl > tr) return;
	if (tl == tr)
		t[v] = vl;
	else{
		int tm = (tl + tr)>>1;
		if (p <= tm)
			update(v * 2, tl, tm, p, vl);
		else update(v * 2 + 1, tm + 1, tr, p, vl);
		t[v] = max(t[v * 2], t[v * 2 + 1]);
	}
}

ld maxx(int v, int tl, int tr, int l, int r){
	if (tl > r || tr < l) return 0;
	if (tl > tr) return 0;
	if (l <= tl && tr <= r) return t[v];
	int tm = (tl + tr) >> 1;
	return max(maxx(v * 2, tl, tm, l, r), maxx(v * 2 + 1, tm + 1, tr, l, r));
}

int main()
{
	cin >> n;
	for (int i = 0; i < n; i++){
		cin >> r[i] >> h[i];
		v[i] = mp(getV(i), -i);
	}
	sort(v, v + n);
	for (int i = 1; i < n; i++){
		if (r[v[i].sc] == r[v[i - 1].sc] && h[v[i].sc] == h[v[i - 1].sc])
			id[v[i].sc] = -1;
	}
	for (int i = 0; i < n; i++){
		if (id[v[i].sc] != -1)
			id[v[i].sc] = i;
		else id[v[i].sc] = id[v[i - 1].sc];
	}

	set<pair<ld, ld> > wt;
	set<pair<ld, ld> >::iterator it;
	ld ans = 0;

	for (int i = n - 1; i > -1; i--){
		ans = max(ans, getV(i));
		ld vv = getV(i);
		ld add = maxx(1, 0, n - 1, id[i]+1, n);
		ans = max(vv + add, ans);
		update(1, 0, n - 1, id[i], vv + add);
	}
	printf("%.20lf", ans);
	return 0;
}