#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <iomanip>
#include <set>
#include <fstream>
#include <numeric>
#include <stdexcept>
#include <cassert>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int DP[100005];
int prob, ch = -1;

int solve(int n)
{
  if(n == 1) return 0;
  if(DP[n] != -1) return DP[n];
  vector<int> v;
  for(int i=2;;i++)
  {
    int temp = i * (i - 1) / 2;
    if(temp >= n) break;
    temp = n - temp;
    if(temp % i != 0) continue;
    int res = 0;
    temp/=i;
    for(int j=0;j<i;j++)
    {
      res^=solve(temp);
      temp++;
    }
    v.push_back(res);
    if(prob == n && !res)
    {
      ch = i;
      return 0;
    }
  }
  sort(v.begin(), v.end());
  for(int i=0;;i++)
    if(!binary_search(v.begin(), v.end(), i))
      return DP[n] = i;
}

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("suffix.in", "r", stdin);
  //freopen("suffix.out", "w", stdout);
  int n;
  cin >> n;
  prob = n;
  setdp(DP);
  solve(n);
  cout << ch;
  return 0;
}
