#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 200005
#define maxC 1000000007
#define pb push_back
#define F first
#define S second
#define mp make_pair

using namespace std;
int n, m, con[mn], adap[mn];
vector< pair<int, int> > com;
priority_queue< pair< int, pair<int, int> > > p;

void setup()
{
    cin >> n >> m;
    int a;
    FOR(i, 1, n)
    {
        cin >> a;
        com.pb(mp(a, i));
    }
    FOR(i, 1, m)
    {
        cin >> a;
        p.push(mp(a, mp(0, i)));
    }
}

void xuly()
{
    sort(com.begin(), com.end());
    int able = 0, need = 0;
    FORD(i, n - 1, 0)
    {
        while(!p.empty())
        {
            int v = p.top().F;
            if (v < com[i].F)
                break;
            int c = - p.top().S.F;
            int id = p.top().S.S;
            p.pop();
            if (v == com[i].F)
            {
                con[com[i].S] = id;
                adap[id] = c;
                able ++;
                need += c;
                break;
            }
            if (v != 1)
                p.push(mp((v + 1) >> 1, mp(- (c + 1), id)));
        }
        if (p.empty())
            break;
    }
    cout << able << ' ' << need << '\n';
    FOR(i, 1, m)
        cout << adap[i] << ' ' ;
    cout << '\n';
    FOR(i, 1, n)
        cout << con[i] << ' ';
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
