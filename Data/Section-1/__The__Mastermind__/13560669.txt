const
  tfi = '';//'586c.inp';
  tfo = '';//'586c.out';

var
  n,top : longint;
  stack,pre,next,v,d,p : array [0..4010] of int64;

procedure enter;
  var i : longint;
  begin
    assign(input,tfi);
    reset(input);
    read(n);
    for i := 1 to n do read(v[i],d[i],p[i]);
    for i := 0 to n do next[i] := i+1;
    for i := 1 to n+1 do pre[i] := i-1;
    close(input);
  end;

procedure clear(i : longint);
  begin
    pre[next[i]] := pre[i];
    next[pre[i]] := next[i];
  end;

procedure process;
  var
    i,j,t : longint;
    vv,dd : int64;
  begin
    repeat
      i := next[0];
      if i = n + 1 then break;
      vv := v[i];
      j := next[i];
      while (j < n+1) and (vv > 0) do
        begin
          dec(p[j],vv);
          dec(vv);
          j := next[j];
        end;
      dd := 0;
      j := next[i];
      while (j < n+1) do
        begin
          dec(p[j],dd);
          if p[j] < 0 then
            begin
              t := j;
              inc(dd,d[j]);
              j := next[j];
              clear(t);
            end
          else j := next[j];
        end;
      inc(top);
      stack[top] := i;
      clear(i);
    until next[0] = n+1;
  end;

procedure print;
  var i : longint;
  begin
    assign(output,tfo);
    rewrite(output);
    writeln(top);
    for i := 1 to top do write(stack[i],' ');
    close(output);
  end;

begin
  enter;
  process;
  print;
end.