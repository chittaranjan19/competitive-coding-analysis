#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint cantidad(tint &cnt, tint &x, tint &y)
{
	tint d = x*y-y;
	tint q = (cnt/d)*x*y;
	if (cnt % d == 0)
		return q-1;
	else
		return q + (cnt % d)/(x-1)*x + ((cnt % d) % (x-1));
}

int main()
{
	tint cnt1,cnt2,x,y;
	cin >> cnt1 >> cnt2 >> x >> y;
	cout << max(cantidad(cnt1,x,y),cantidad(cnt2,y,x)) << endl;
	
	return 0;
}
