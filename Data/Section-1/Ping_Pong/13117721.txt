#include <stdio.h>
#include <stdlib.h>

long long int *a;

void qs(long long int* s_arr, long long int first, long long int last)
{
    long long int i = first, j = last, x = s_arr[(first + last) / 2];

    do {
        while (s_arr[i] < x) i++;
        while (s_arr[j] > x) j--;

        if(i <= j) {
            if (s_arr[i] > s_arr[j])
            {
                s_arr[i] += s_arr[j];
                s_arr[j] = s_arr[i] - s_arr[j];
                s_arr[i] -= s_arr[j];
            }
            i++;
            j--;
        }
    } while (i <= j);

    if (i < last)
        qs(s_arr, i, last);
    if (first < j)
        qs(s_arr, first, j);
}

int main()
{
    long long int n, k, x, i, j, ans = 0, ans1;
    scanf("%I64d %I64d %I64d", &n, &k, &x);
    a = malloc(sizeof(long long int) * n);
    for (i = 0; i < n; i++)
        scanf("%I64d", &a[i]);
    qs(a, 0, n - 1);
    for (i = n - 1; i >= 0; i--)
    {
        ans1 = 0;
        int t = a[i];
        for (j = 0; j < k; j++)
            a[i] *= x;
        for (j = 0; j < n; j++)
            ans1 = ans1 | a[j];
        if (ans1 < ans)
        ans = ans1;
        a[i] = t;
    }
    printf("%I64d", ans);
    return 0;
}
