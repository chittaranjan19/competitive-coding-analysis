import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

public class ProblemA {
    private static int ERA_MAX = 10000;

    private boolean[] prime = new boolean[ERA_MAX];

    private void start() {
        prime[2] = true;
        for (int i = 2; i < ERA_MAX; i++) {
            if (i % 2 != 0) {
                prime[i] = true;
            }
        }
        int s = (int) Math.round(Math.floor(Math.sqrt(ERA_MAX)));
        for (int i = 3; i <= s; i += 2) {
            if(prime[i]) {
                for (int j = i * i; j < ERA_MAX; j += i) {
                    prime[j] = false;
                }
            }
        }
    }


    BufferedReader rd;

    ProblemA() throws IOException {
        start();
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int n = pint();
        boolean[] all = new boolean[n+1];
        int marked = 1;
        List<Integer> res = new ArrayList<>();
        all[1] = true;
        for(int i=2;i<=n;i++) {
            if(prime[i]) {
                all[i] = true;
                res.add(i);
                marked++;
                int j=i*i;
                while(j <= n) {
                    if(!all[j]) {
                        all[j] = true;
                        res.add(j);
                        marked++;
                    }
                    j*=i;
                }
                for(int k=2;k<=n;k++) {
                    if(i*k <= n) {
                        if(!all[i*k]) {
                            all[i*k] = true;
                            marked++;
                        }
                    } else {
                        break;
                    }
                }
            }
            if(marked >= n) {
                break;
            }
        }
        out(res.size());
        StringBuilder buf = new StringBuilder();
        for(Integer x: res) {
            if(buf.length() > 0) {
                buf.append(' ');
            }
            buf.append(x);
        }
        out(buf);
    }

    private int pint() throws IOException {
        return pint(rd.readLine());
    }

    private int pint(String s) {
        return Integer.parseInt(s);
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemA();
    }
}
