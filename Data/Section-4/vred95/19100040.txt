#include <bits/stdc++.h>
using namespace std;

char s[100005];

int main()
{
	scanf("%s", s);
	int len = strlen(s);
	int dotpos = -1, nbeforedot = -1, nafterdot = -1, lastnum;
	for (int i = 0; i < len; i++)
	{
		if (s[i] == '.') dotpos = i;
		else if (s[i]-'0' > 0 && dotpos == -1 && nbeforedot == -1) nbeforedot = i;
		else if (s[i]-'0' > 0 && dotpos != -1 && nafterdot == -1) nafterdot = i;
		if (s[i]-'0' > 0) lastnum = i;
	}
	//printf("dotpos = %d, nbeforedot = %d, nafterdot = %d, lastnum = %d\n", dotpos, nbeforedot, nafterdot, lastnum);
	
	if (dotpos != -1 && nbeforedot+1 == dotpos && nbeforedot != -1) // only remove '0'
	{
		for (int i = nbeforedot; i < dotpos; i++) printf("%c", s[i]);
		printf(".");
		for(int i = dotpos+1; i <= lastnum; i++) printf("%c", s[i]);
		printf("\n");
	}
	else if (nbeforedot == -1 && (dotpos == 0 || dotpos != -1)) // dot in front or dot after 0s
	{
		printf("%c", s[nafterdot]);
		if (nafterdot != lastnum) printf(".");
		for (int i = nafterdot+1; i <= lastnum; i++) printf("%c", s[i]);
		printf("E-%d\n", nafterdot-dotpos);
		
	}
	else if (dotpos != -1 && dotpos != len-1)
	{
		
		printf("%c.", s[nbeforedot]);
		for (int i = nbeforedot+1; i <= nafterdot; i++)
		{
			if (i == dotpos) continue;
			printf("%c", s[i]);
		}
		printf("E%d\n", dotpos - nbeforedot - 1);
		
	}
	else if ((dotpos == -1 || dotpos == len-1) && len > 1)
	{
		printf("%c", s[nbeforedot]);
		if (nbeforedot != lastnum) printf(".");
		for (int i = nbeforedot+1; i <= lastnum; i++) printf("%c", s[i]);
		if (dotpos != len-1)
			printf("E%d\n", len-nbeforedot-1);
		else printf("E%d\n", len-nbeforedot-2);
	}
	
	return 0;
}
