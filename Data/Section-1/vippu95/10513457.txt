#include<bits/stdc++.h>
using namespace std;

#define lli long long
#define mp make_pair
#define pb push_back

const int limit = 15;

struct node{
	int h;
	int m;
	node(){};
	node(int _h,int _m){
		h = _h;
		m = _m;
	}
	bool operator<(node a) const{
		if(h < a.h) return true;
		if(h > a.h) return false;
		if(m > a.m) return true;
		return false;
	}
};

vector<node> t0;
vector<node> t1;

int solve(int type,int idx0,int idx1,int ans,int cm){
	int newtype = 1-type;
	if(type==0){
		if(idx0 >= t0.size() ) return ans;
		if(t0[idx0].h > cm)
			return ans;
		cm = cm + t0[idx0].m;
		idx0++;
		ans++;
	}
	else{
		if(idx1 >= t1.size() ) return ans;
		if(t1[idx1].h > cm)
			return ans;
		cm = cm + t1[idx1].m;
		idx1++;
		ans++;
	}
	ans = solve(newtype,idx0,idx1,ans,cm);
	//cout<<ans<<endl;
	return ans;
}

int main(){
	int n,x;
	int t,he,ma;
	scanf("%d %d",&n,&x);
	for(int i=0;i<n;i++){
		scanf("%d %d %d",&t,&he,&ma);
		if(t==0)
			t0.pb(node(he,ma));
		else
			t1.pb(node(he,ma));
	}
	int ans = 0;
	sort(t0.begin(),t0.end());
	sort(t1.begin(),t1.end());
	if(t0[0].h <= x){
		ans = max(ans,solve(0,0,0,0,x));  //type,t0 idx , t1 idx,cur ans
	}
	if(t1[0].h <= x){
		ans = max(ans,solve(1,0,0,0,x));  //type,t0 idx , t1 idx,cur ans
	}
	cout<<ans<<"\n";
}

