#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

string quitarLeadingZeros(string p)
{
	while(p[0] == '0')
		p = p.substr(1,p.size()-1);
	return p;
}

int main()
{
	string n;
	cin >> n;
	vector<string> finalAnswer;
	string tuttizero (n.size(),'0');
	while (n != tuttizero)
	{
		string qbin;
		forn(i,n.size())
		{
			if (n[i] >= '1')
			{
				qbin += "1";
				n[i]--;
			}
			else
				qbin += "0";	
		}
		finalAnswer.push_back(quitarLeadingZeros(qbin));
	}
	cout << finalAnswer.size() << endl;
	forn(i,finalAnswer.size())
		cout << finalAnswer[i] << " ";
	cout << endl;
	
	return 0;
}
