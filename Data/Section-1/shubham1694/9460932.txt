#include <bits/stdc++.h>

using namespace std;

int graph[101][101][101];

int n, m;

int bfs(int src, int dest, int color)
{
    bool visited[110];
    memset(visited, false, sizeof(visited));
    visited[src]=true;
    int s, i;
    queue<int> q;
    q.push(src);
    while(!q.empty()){
        s=q.front();
        q.pop();
        for(i=0; i<=n; i++){
            if(!visited[i] && graph[s][i][color]==1){
                visited[i]=true;
                if(i==dest)
                    return 1;
                q.push(i);
            }
        }
    }
    return 0;
}

int main()
{
    memset(graph, 0, sizeof(graph));
    int q, i, j, k, a, b, c, p, u, v;
    scanf("%d%d", &n, &m);
    for(i=0; i<m; i++){
        scanf("%d%d%d", &a, &b, &c);
        graph[a][b][c]=1;
        graph[b][a][c]=1;
    }
    scanf("%d", &q);
    while(q--){
        scanf("%d%d", &u, &v);
        int cnt=0;
        for(i=1; i<=m; i++){
            cnt+=bfs(u, v, i);
        }
        printf("%d\n", cnt);
    }
    return 0;
}
