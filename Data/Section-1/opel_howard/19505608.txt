#include <cstdio>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <cmath>
#include <climits>
#ifdef DEBUG
	#include <ctime>
#endif
using namespace std;

// template

// abbreviations
#define vi vector<int>
#define vl vector<ll>
#define vb vector<bool>
#define vs vector<string>
#define ii pair<int, int>
#define a first
#define b second
#define vii vector<ii>
#define mii map<ii>
#define vvi vector<vi>
#define vvl vector<vl>
#define que queue
#define pque priority_queue
#define stk stack
#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define pu push
#define po pop
#define mp make_pair
#define sz(var) ((int) var.size())
#define rep(it, n) for(int it = 0; it < n; ++it)
#define rep1(it, n) for(int it = 1; it <= n; ++it)
#define loop(it, from, to) for(int it = (from); it <= (to); ++it)
#define iter(it, cont) for(__typeof((cont).begin()) it = (cont).begin(); it != (cont).end(); ++it)
#define riter(it, cont) for(__typeof((cont).rbegin()) it = (cont).rbegin(); it != (cont).rend(); ++it)
#define all(cont) (cont).begin(), (cont).end()
#define memclr(var) memset(var, 0, sizeof(var))

typedef unsigned long long ull;
typedef long long ll;

const int INF = INT_MAX;
const int NINF = INT_MIN;
const ll INF_LL = LLONG_MAX;
const ll NINF_LL = LLONG_MIN;
const double PI = acos(-1.0);
const int MOD = 1e9+7;

#ifdef DEBUG
	#define debug(fmt, args...) printf("Line %d, in %s\t: " fmt, __LINE__, __FUNCTION__, ##args)
	#define rep_rt() printf("[Run time: %.3fs]\n", ((double) clock()) / CLOCKS_PER_SEC)
#else
	#define debug(...)
#endif

// end of template

#define MAX_MN (int) (1e5)

int arr[MAX_MN + 2];
int arr_m[MAX_MN + 2];

int n, m;
int in[MAX_MN + 2];
int out[MAX_MN + 2];

int get_i(int val) {
	int l = 1, r = n;
	while (l < r) {
		int m = (l + r) >> 1;
		if (arr[m] < val) {
			l = m + 1;
		} else {
			r = m;
		}
	}
	return l;
}

bool check_poss(int dist) {
	memclr(in);
	memclr(out);
	rep(idx, m) {
		int pos = arr_m[idx];
		int lb = pos - dist, ub = pos + dist;
		int i_lb = get_i(lb);
		if (lb > arr[i_lb])
			i_lb++;
		in[i_lb]++;
		int i_ub = get_i(ub);
		if (ub < arr[i_ub])
			i_ub--;
		out[i_ub]++;
	}

	int c = 0;
	int tot_in = in[0];
	rep1(idx, n) {
		tot_in += in[idx];
		if (tot_in > 0)
			c++;
		tot_in -= out[idx];
	}
	return (c == n);
}
int main() {
#ifdef DEBUG
	freopen("702C.in", "r", stdin);
#endif
    
    scanf("%d %d", &n, &m);
    rep1(idx, n) {
    	scanf("%d", &arr[idx]);
    }
    rep(idx, m) {
    	scanf("%d", &arr_m[idx]);
    }

    ll l = 0, r = (int) (2e9);
    while (l < r) {
    	ll m = (l + r) >> 1;
    	if (check_poss(m)) {
    		r = m;
    	} else {
    		l = m + 1;
    	}
    }
    cout << l << endl;

#ifdef DEBUG
    rep_rt();
#endif
    return 0;
}