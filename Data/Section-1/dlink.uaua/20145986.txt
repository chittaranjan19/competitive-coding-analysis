#include <bits/stdc++.h>

#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
#define out_fayl freopen("packing.in", "r", stdin); freopen("packing.out", "w", stdout)
#define mp make_pair
#define pb push_back
#define ls else
#define rtn return
#define TAK "YES"
#define tak "yes"
#define Tak "Yes"
#define ft first
#define sd second
#define x1 xxxxx
#define x2 lucky
#define y0 the_luckiest
#define y1 more_lucky_then_lucky
#define y2 more_lucky_then_Mizhu
#define all(a) a.begin(),a.end()

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef vector< int > vi;
typedef pair< int, int > pii;
typedef vector< pii > vii;
typedef vector <vi> vvi;

const int maxint=numeric_limits<int>::max();
const ll maxll=numeric_limits<ll>::max();

vi prf_fun(string s){
    int n = (int)s.length();
    vi a(n,0);
    for(int i = 1; i < n; i++)
    {
        int j = a[i-1];
        while(j > 0 && s[i] != s[j])
            j = a[j-1];
        if(s[i] == s[j]) j++;
        a[i] = j;
    }
    rtn a;
}

template<typename xab> inline xab sqr(xab n){
    rtn n*n;
}

string ans = "";
ll a00, a01, a10, a11, a0, a1;

void zdvig(int n)
{
    ans = ans + '0';
    for(int i = ans.length()-1; i > n; i--)
        ans[i] = ans[i-1];
    ans[n] = '1';
}

bool chk()
{
    int b00 = 0;
    int b01 = 0;
    int b10 = 0;
    int b11 = 0;
    int r1 = 0;
    int r0 = 0;
    for(int i = 0; i < ans.length(); i++)
        if(ans[i] == '1') r1++; ls r0++;
    for(int i = 0; i < ans.length(); i++)
    {
        if(ans[i] == '1')
        {
            r1--;
            b11 += r1;
            //b01 += a0-r0;
            b10 += r0;
        } ls
        {
            r0--;
            b00 += r0;
            //b10 += a1-r1;
            b01 += r1;
        }
        //cout << i << ' ' << b00 << ' ' << b01 << ' ' << b10 << ' ' << b11 << '\n';
    }
    rtn (b01 == a01 && b10 == a10 && b11 == a11 && b00 == a00);
}


void to_do()
{
    string targ = "";
    if(a00 != 0 && a01 == 0 && a10 == 0 && a11 == 0)
    {
        for(int i = 0; i < a0; i++)
            targ = targ + '0';
            cout << targ;
        exit(0);
    }
    if(a00 == 0 && a01 != 0 && a10 == 0 && a11 == 0)
    {
        cout << (a01 == 1?"01":"Impossible");
        exit(0);
    }
    if(a00 == 0 && a01 == 0 && a10 != 0 && a11 == 0)
    {
        cout << (a10 == 1?"10":"Impossible");
        exit(0);
    }
    if(a00 == 0 && a01 == 0 && a10 == 0 && a11 != 0)
    {
        for(int i = 0; i < a1; i++)
            targ = targ + '1';
        cout << targ;
        exit(0);
    }

}


int main()
{
    cin >> a00 >> a01 >> a10 >> a11;
    if((int)sqrt(1+8*a11) - sqrt(1+8*a11) > 0.000000001) rtn cout <<"Impossible", 0;
    if((int)sqrt(1+8*a00) - sqrt(1+8*a00) > 0.000000001) rtn cout <<"Impossible", 0;
    a0 = (1+sqrt(1+8*a00))/2;
    a1 = (1+sqrt(1+8*a11))/2;
    to_do();
    if(a00 == 0 && a11 == 0 )
        rtn cout << 0, 0;
    //cout << a0 << ' ' << a1 << '\n';
    for(int i = 0; i < a0; i++)
        ans += '0';
    for(int i = 0; i < a01/a0; i++)
        ans = ans + '1';
    //cout << a00 << ' ' << a01 << ' ' << a10 << ' ' << a11 << ' ' << a0 << ' ' << a1 << '\n';
    //cout << a01%a0 << '\n';
    if(a01%a0 != 0)
        zdvig(a01%a0);
    for(int i = 0; i < a1 - (a01/a0 + (a01%a0!=0)); i++)
        ans = '1' + ans;
    if(chk())
        cout << ans << '\n';
    ls cout << "Impossible";
    chk();
    return 0;
}
