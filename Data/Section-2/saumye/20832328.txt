#include <bits/stdc++.h>
#define ll long long

using namespace std;

struct node
{
	int count;
	node *zero, *one;
	node(node *a = NULL, node *b = NULL)
	{
		zero = a;
		one = b;
		count = 1;
	}
};

//modify elem to binary
//eg. 3456 should become 1010
void insert(node *root, int elem, int len)
{
	if ( len >= 0 )
	{
		if ( elem & (1 << len) )
		{
			if ( root -> one )
			{
				((root -> one) -> count) ++;
			}
			else
			{
				root -> one = new node();
			}
			insert(root -> one, elem, len - 1);
		}
		else
		{
			if ( root -> zero )
			{
				((root -> zero) -> count) ++;
			}
			else
			{
				root -> zero = new node();
			}
			insert(root -> zero, elem, len - 1);
		}
	}
}

void remove(node *root, int elem, int len)
{
	if ( len >= 0 )
	{
		if ( elem & (1 << len) )
		{
			remove(root -> one, elem, len - 1);
			(root -> one) -> count --;
			if ( (root -> one) -> count == 0 )
			{
				free(root -> one);
				root -> one = NULL;
			}
		}
		else
		{
			remove(root -> zero, elem, len - 1);
			(root -> zero) -> count --;
			if ( (root -> zero) -> count == 0 )
			{
				free(root -> zero);
				root -> zero = NULL;
			}
		}
	}
}

int query(node *root, int elem, int len)
{
	if ( len > 0 )
	{
		if ( elem & (1 << len) )
		{
			if ( root -> one )
				return query(root -> one, elem, len - 1);
			else
				return 0;
		}
		else
		{
			if ( root -> zero )
				return query(root -> zero, elem, len - 1);
			else
				return 0;
		}
	}
	else if ( len == 0 )
	{
		if ( elem & 1 )
		{
			if ( root -> one )
				return (root -> one) -> count;
			else
				return 0;
		}
		else
		{
			if ( root -> zero )
				return (root -> zero) -> count;
			else
				return 0;
		}
	}
}

int main()
{
	int t;
	node *root;
	root = new node();
	scanf("%d", &t);
	while ( t-- )
	{
		ll a;
		char comm[2], s[25];
		scanf("%s", comm);
		if ( comm[0] == '?' )
		{
			scanf("%s", s);
			//query with s
			int elem = 0, i, len = strlen(s);
			for ( i = len - 1 ; i >= 0 ; i-- )
			{
				if ( s[i] == '1' )
				{
					elem = elem | (1 << (len - i - 1));
				}
			}
			printf("%d\n", query(root, elem, 18));
		}
		else if ( comm[0] == '+' )
		{
			cin >> a;
			//insert a in the trie

			ll tmp = a, i = 0, elem = 0;
			while ( tmp )
			{
				if ( (tmp % 10) & 1 )
				{
					elem = elem | (1 << i);
				}
				tmp = tmp / 10;
				i++;
			}
			insert(root, elem, 18);
		}
		else
		{
			cin >> a;
			//remove a from trie

			ll tmp = a, i = 0, elem = 0;
			while ( tmp )
			{
				if ( (tmp % 10) & 1 )
				{
					elem = elem | (1 << i);
				}
				tmp = tmp / 10;
				i++;
			}
			remove(root, elem, 18);
		}
	}
	return 0;
}