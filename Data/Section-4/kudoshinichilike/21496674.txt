#include <bits/stdc++.h>
#define maxn 200005
using namespace std;
    int n,m,k,c[maxn],deg[maxn],ds=0;
    vector<int> g[maxn];
    int cl[maxn],sl[maxn],q[maxn];
void bfs(int xp)
{
    int p=0;

    int L=1,R=0;
    cl[xp]=1; sl[c[xp]]++;
    q[++R]=xp;
    while(L<=R)
    {
        int u=q[L++];
        for(int i=0; i<deg[u]; i ++)
        {
            int v=g[u][i];
            if(cl[v]==0)
            {
                cl[v]=1;
                sl[c[v]]++;
                q[++R]=v;
            }
        }
    }

    for(int i=1; i<=k; i++)
    {
        ds+=sl[i];
        p=max(p,sl[i]);
        sl[i]=0;
    }
    ds-=p;
}
int main()
{
    //freopen("c.inp","r",stdin);
    //freopen("c.out","w",stdout);
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin>>n>>m>>k;
    for(int i=1; i<=n; i++) cin>>c[i];
    for(int i=1; i<=m; i++)
    {
        int u,v; cin>>u>>v;
        deg[u]++; g[u].push_back(v);
        deg[v]++; g[v].push_back(u);
    }
    for(int i=1; i<=n; i++)
    if(cl[i]==0) bfs(i);
    cout<<ds;
}
