#include<iostream>
using namespace std;
void conquer(int *left, int*right, int *parent, int leftCount, int RightCount){
	int i = 0, j = 0, k = 0;
	while (i<leftCount && j<RightCount){
		if (left[i] <= right[j]){
			parent[k] = left[i];
			i++;
		}
		else{
			parent[k] = right[j];
			j++;
		}
		k++;
	}
	while (i <leftCount){
		parent[k] = left[i];
		k++;
		i++;
	}
	while (j< RightCount){
		parent[k] = right[j];
		k++;
		j++;
	}
}
void divide(int *a, int N){
	if (N <2){
		return;
	}
	int mid = N / 2;
	int *left = (int*)malloc(mid*sizeof(int));
	for (int l = 0; l < mid; l++){
		left[l] = a[l];
	}
	int *right = (int*)malloc((N - mid)*sizeof(int));
	for (int l = mid; l < N; l++){
		right[l - mid] = a[l];
	}
	divide(left, mid);
	divide(right, N - mid);
	conquer(left, right, a, mid, N - mid);
	free(left);
	free(right);
}
int main(){
	int x1, x2, x3;
	int *arr = (int*) malloc(sizeof(int)*3);
	cin >> x1;
	cin >> x2;
	cin >> x3;
	arr[0] = x1; arr[1] = x2; arr[2] = x3;
	divide(arr,3);
	cout << (arr[1] - arr[0]) + (arr[2] - arr[1]) << endl;
	return 0;
}