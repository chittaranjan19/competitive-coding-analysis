#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <time.h>
#include <stdlib.h>
#include <iostream>
#include <vector>
#include <string>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
using namespace std;

typedef long long ll;
#define eps 1e-8
/*
int n, m;
int a[105][105], used[105], cnt;

void dfs(int i)
{
    used[i] = 1;
    for(int j = 0; j < n; j++)
        for(int k = 0; k < m; k++)
            if(!used[j] && a[i][k] == 1 && a[j][k] == 1)
                dfs(j);
}

int main()
{
    scanf("%d %d", &n, &m);
    int zero = 0;
    for(int i = 0; i < n; i++)
    {
        int k;
        scanf("%d", &k);
        if(k == 0) zero++;
        while(k--)
        {
            int j;
            scanf("%d", &j);
            a[i][j-1] = 1;
        }
    }
    for(int i = 0; i < n; i++)
        if(!used[i])
        {
            cnt++;
            dfs(i);
        }
    printf("%d\n", cnt - 1 + (zero == n));
    return 0;
}
*/

int main()
{
    int n, m;
    scanf("%d %d", &n, &m);
    if(m == 3)
    {
        if(n == 4)
        {
            printf("0 0\n");
            printf("2 1\n");
            printf("2 2\n");
            printf("4 0\n");
        }
        else
            printf("-1\n");
        return 0;
    }
    int k, cnt = 0;
    if(m % 2 == 1)
        k = (m / 2 + 1) * m / 2 / 2;
    else
        k = ((m - 1) / 2 + 1) * (m - 1) / 2 / 2 + 1;

    int i, x = k, y = 0;
    for(cnt = 0, i = 1; cnt < n; i++)
    {
        if(x < 0) break;
        printf("%d %d\n", x, y);
        cnt++;
        if(x <= 0) break;
        printf("%d %d\n", -x, y);
        cnt++;
        x -= i;
        y += 2;
    }
    for(x = k - 1, y = 1, i = 2; cnt < n; i++)
    {
        if(x < 0) break;
        printf("%d %d\n", x, y);
        cnt++;
        if(x <= 0) break;
        printf("%d %d\n", -x, y);
        cnt++;
        x -= i;
        y += 2;
    }
    if(cnt < n)
    {
        cnt++;
        printf("-10000000 -1\n");
    }
    if(cnt < n)
    {
        cnt++;
        printf("10000000 -1\n");
    }
    return 0;
}