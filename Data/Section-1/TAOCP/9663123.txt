#include <iostream>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <cstring>
#include <string>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <climits>
using namespace std;
#define pb push_back
#define VINT vector<int>
#define PII pair<int,int>
#define MP(x,y) make_pair((x),(y))
#define ALL(x) x.begin(),x.end()
#define REP(x,y) for(int i=x;i<=y;i++)
void showVector(vector<int > s){
        cout<<"----------"<<endl;for(auto x:s)cout<<x<<" ";cout<<endl<<"----------"<<endl;
}
void println(int n,int s1=0,int s2=0,int s3=0){
        if(n==1) cout<<s1;
        else if(n==2)cout<<s1<<" "<<s2;
        else cout<<s1<<" "<<s2<<" "<<s3;cout<<endl;
}
/****************************************/
const int MAX_V=11;//SET THE MAX NUM OF VERTEX
int head[MAX_V];
struct EDGE{
        int u,v,w;
        EDGE(int tu=0,int tv=0,int tw=0){u=tu,v=tv,w=tw;}
};
struct Triple{int f,s,t;};
int gcd(int a,int b){return b==0?a:gcd(b,a%b);}
//////////////////////////////////////
int vis[2222];
void print(const vector<PII>& s){
        bool first=true;
        for(auto p:s){
                if(first){
                        cout<<p.second;
                        first=false;
                }else{
                        cout<<" "<<p.second;
                }
        }
        cout<<endl;
}
int main(){
        #ifndef ONLINE_JUDGE
                freopen("in.txt","r",stdin);
        #endif // ONLINE_JUDGE
        int n;
        cin>>n;
        vector<PII > s;
        REP(1,n){
                int x;cin>>x;
                s.pb(MP(x,i));
                vis[x]++;
        }
        bool flag=false;
        int twoN=0;
        REP(1,2221){
                if(vis[i]>=3){
                        flag=true;break;
                }else if(vis[i]==2){
                        twoN++;
                }
        }
        if(flag || twoN>=2){
                ;
        }else{
                cout<<"NO"<<endl;
                return 0;
        }
        cout<<"YES"<<endl;
        sort(ALL(s),[](PII s1,PII s2){ return s1.first<s2.first;});

        //////
        print(s);

        int xx=0;
        REP(0,s.size()-2){
                if(s[i].first==s[i+1].first){
                        swap(s[i],s[i+1]);
                        xx=i;
                        break;
                }
        }

        ///////
        print(s);


        REP(0,s.size()-2){
                if(s[i].first==s[i+1].first && i!=xx){
                        swap(s[i],s[i+1]);
                        break;
                }
        }

        //////
        print(s);

        return 0;
}
