import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProblemB {
    BufferedReader rd;

    ProblemB() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int[] a = intarr();
        int n = a[0];
        int k = a[1];
        int x = a[3];
        int y = a[4];
        if(k > 0) {
            a = intarr();
        } else {
            a = new int[0];
        }
        int[] b = new int[n];
        int p1 = 0;
        int p2 = n/2;
        boolean ok1 = true;
        boolean ok2 = true;
        boolean ok3 = true;
        boolean ok4 = true;
        for(int i=0;i<k;i++) {
            if(a[i] < y) {
                if(ok1) {
                    b[p1] = a[i];
                    p1++;
                    if(p1 >= n/2) {
                        ok1 = false;
                    }
                } else {
                    ok3 = false;
                }
            } else {
                if(ok2) {
                    b[p2] = a[i];
                    p2++;
                    if(p2 >= n) {
                        ok2 = false;
                    }
                } else {
                    ok4 = false;
                }
            }
        }
        boolean ok = ok3&&ok4;
        int ones = 0;
        int ys = 0;
        if(ok) {
            ones += n/2-p1;
            ys = n-p2;
            int sum = 0;
            for(int i=0;i<n;i++) {
                sum += b[i];
            }
            sum += ones;
            sum += ys*y;
            ok = sum <= x;
        }
        if(ok) {
            StringBuilder buf = new StringBuilder();
            for(int i=0;i<ones;i++) {
                if(i > 0) {
                    buf.append(' ');
                }
                buf.append(1);
            }
            for(int i=0;i<ys;i++) {
                if(buf.length() > 0) {
                    buf.append(' ');
                }
                buf.append(y);
            }
            out(buf);
        } else {
            out(-1);
        }
    }

    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = split(s);
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }

    public String[] split(String s) {
        if(s == null) {
            return new String[0];
        }
        int n = s.length();
        int start = -1;
        int end = 0;
        int sp = 0;
        boolean lastWhitespace = true;
        for(int i=0;i<n;i++) {
            char c = s.charAt(i);
            if(isWhitespace(c)) {
                lastWhitespace = true;
            } else {
                if(lastWhitespace) {
                    sp++;
                }
                if(start == -1) {
                    start = i;
                }
                end = i;
                lastWhitespace = false;
            }
        }
        if(start == -1) {
            return new String[0];
        }
        String[] res = new String[sp];
        int last = start;
        int x = 0;
        lastWhitespace = true;
        for(int i=start;i<=end;i++) {
            char c = s.charAt(i);
            boolean w = isWhitespace(c);
            if(w && !lastWhitespace) {
                res[x++] = s.substring(last,i);
            } else if(!w && lastWhitespace) {
                last = i;
            }
            lastWhitespace = w;
        }
        res[x] = s.substring(last,end+1);
        return res;
    }

    private boolean isWhitespace(char c) {
        return c==' ' || c=='\t';
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemB();
    }
}
