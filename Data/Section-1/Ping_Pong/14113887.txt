#include <iostream>
#include <stdlib.h>
#include <string>
#include <vector>
#include <set>
#include <stack>
#include <queue>
#include <algorithm>
#include <math.h>

using namespace std;

typedef struct
{
    int l;
    int r;
} notes;

bool comp1(notes a, notes b)
{
    return (a.l < b.l);
}

int bin_search_left(notes *a, int x, int n)
{
    int l = -1, r = n, m;
    while (r - l > 1)
    {
        m = (r + l) / 2;
        if (x >= a[m].l)
            l = m;
        else
            r = m;
    }
    if (a[l].l == x)
        return l;
    else
        return -1;
}

int main()
{
    int n;
    cin >> n;
    notes a[n];
    for (int i = 0; i < n; i++)
        cin >> a[i].l >> a[i].r;
    sort(a, a + n, comp1);
    int ans[n];
    set<int> s;
    for (int i = 0; i < n; i++)
        s.insert(a[i].r);
    for (int i = 0; i < n; i++)
        if (!s.count(a[i].l))
        {
            ans[0] = a[i].l;
            break;
        }
    ans[1] = a[0].r;
    for (int i = 2; i < n; i += 2)
        ans[i] = a[bin_search_left(a, ans[i - 2], n)].r;
    for (int i = 3; i < n; i += 2)
        ans[i] = a[bin_search_left(a, ans[i - 2], n)].r;
    for (int i = 0; i < n; i++)
        cout << ans[i] << " ";
    return 0;
}