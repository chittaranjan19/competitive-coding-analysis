#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

vector<vector<int> > tree(2005);
int arr[2005],d;

int solve(int node, int parent, int maxi)
{
    int res = 1;
    for(int i=0;i<tree[node].size();i++)
    {
        int temp = tree[node][i];
        if(temp == parent || arr[temp] > arr[maxi] || arr[maxi] - arr[temp] > d || (arr[maxi] == arr[temp] && temp > maxi)) continue;
        res = (res * 1LL * (solve(temp, node, maxi) + 1) ) % mod;
    }
    return res;
}

int main()
{
    ios_base::sync_with_stdio(0);
    int n,x,y;
    cin >> d >> n;
    for(int i=1;i<=n;i++)
        cin >> arr[i];
    for(int i=0;i<n-1;i++)
    {
        cin >> x >> y;
        tree[x].pb(y);
        tree[y].pb(x);
    }
    int res = 0;
    for(int i=1;i<=n;i++)
        res+=solve(i, i, i), res%=mod;
    cout << res;
    return 0;
}