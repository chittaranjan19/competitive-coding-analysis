#include <iostream>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // without cin cout
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); a - массв, n - кол-во эл-тов
#include <cstdlib>      // min() max()
#include <iomanip>      // setw()
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#define SRT srand(int(time(0)))
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
using namespace std;
int main(void)
{
    const int S = 200001, A = 26;
    char s[S], t[S];
    cin.get(s, S).get();
    cin.get(t, S).get();
    int ura = 0, opa = 0, ls = int(strlen(s)), lt = int(strlen(t));
    int as[A], As[A], at[A], At[A];
    for (int i = 0; i < ls; ++i)
    {
        if (isupper(s[i]))
            As[s[i] - 'A']++;
        else
            as[s[i] - 'a']++;
    }
    for (int i = 0; i < lt; ++i)
    {
        if (isupper(t[i]))
            At[t[i] - 'A']++;
        else
            at[t[i] - 'a']++;
    }
    for (int i = 0; i < A; ++i)
    {
        if (as[i] < at[i])
        {
            ura += as[i];
            at[i] -= as[i];
            as[i] = 0;
        }
        else if (as[i] >= at[i])
        {
            ura += at[i];
            as[i] -= at[i];
            at[i] = 0;
        }
        if (As[i] < At[i])
        {
            ura += As[i];
            At[i] -= As[i];
            As[i] = 0;
        }
        else if (As[i] >= At[i])
        {
            ura += At[i];
            As[i] -= At[i];
            At[i] = 0;
        }
    }
    for (int i = 0; i < A; ++i)
    {
        if (as[i] < At[i])
        {
            opa += as[i];
            At[i] -= as[i];
            as[i] = 0;
        }
        else if (as[i] >= At[i])
        {
            opa += At[i];
            as[i] -= At[i];
            At[i] = 0;
        }
        if (As[i] < at[i])
        {
            opa += As[i];
            at[i] -= As[i];
            As[i] = 0;
        }
        else if (As[i] >= at[i])
        {
            opa += at[i];
            As[i] -= at[i];
            at[i] = 0;
        }
    }
    cout << ura << ' ' << opa << '\n';
    return 0;
}