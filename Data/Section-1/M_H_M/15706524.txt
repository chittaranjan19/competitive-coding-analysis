//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const ld eps = 1e-9;

ld x, y, z;

ld a[12];

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> x >> y >> z;
	a[0] = pow(x, pow(y, z));
	a[1] = pow(x, pow(z, y));
	a[2] = pow(pow(x, y), z);
	a[3] = pow(pow(x, z), y);
	a[4] = pow(y, pow(x, z));
	a[5] = pow(y, pow(z, x));
	a[6] = pow(pow(y, x), z);
	a[7] = pow(pow(y, z), x);
	a[8] = pow(z, pow(x, y));
	a[9] = pow(z, pow(y, x));
	a[10] = pow(pow(z, x), y);
	a[11] = pow(pow(z, y), x);
	for(int i = 0; i < 12; ++i){
		bool flag = 1;
		for(int j = i + 1; j < 12; ++j){
			if(eps < a[j] - a[i])
				flag = 0;
		}
		if(flag){
			if(i == 0) cout << "x^y^z\n";
			if(i == 1) cout << "x^z^y\n";
			if(i == 2) cout << "(x^y)^z\n";
			if(i == 3) cout << "(x^z)^y\n";
			if(i == 4) cout << "y^x^z\n";
			if(i == 5) cout << "y^z^x\n";
			if(i == 6) cout << "(y^x)^z\n";
			if(i == 7) cout << "(y^z)^x\n";
			if(i == 8) cout << "z^x^y\n";
			if(i == 9) cout << "z^y^x\n";
			if(i == 10) cout << "(z^x)^y\n";
			if(i == 11) cout << "(z^y)^x\n";
			return 0;
		}
	}
	return 0;
}
