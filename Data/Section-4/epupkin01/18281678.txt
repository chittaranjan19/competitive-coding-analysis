#include <iostream>
#include <climits>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(b, 0, sizeof(arr)); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // getchar(), gets()
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); n - amount; pair
#include <iomanip>      // setw(4), setfill('.'), setprecision(2)
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#include <memory>       // shared_ptr<>, uniqu_ptr<>
#include <iterator>     // ostream_iterator<int, char> out_iter(cout, " ");
#include <set>
#include <map>
#include <list>
#include <queue>
#include <functional>   // function
#define SRT srand(int(time(0)))

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
ld pi = 3.14159265358979323;
int ten[8] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};

typedef map<int, int> Map;
typedef Map::iterator mIter;
typedef pair<int, int> Pair;
typedef set<int> Set;
typedef Set::iterator sIter;
typedef list<int> List;
typedef List::iterator lIter;
typedef deque<int> Deque;
typedef Deque::iterator dIter;

const int S = 100001;
int n, amnt[S], oper[S];

int main()
{
    cin >> n;
    for (int i = 1, a, ct; i <= n; ++i)
    {
        scanf("%d", &a);
        
        ct = 0;
        while (a)
        {
            ++amnt[a];
            oper[a] += ct++;
            a >>= 1;
        }
    }
    
    int i;
    for (i = S - 1; i > 0 && amnt[i] != n; --i);
    
    int sum = oper[i];
    i *= 2;
    for (; i < S && 2 * amnt[i] >= n; i *= 2)
        sum = sum - amnt[i] + n - amnt[i];
    
    cout << sum << '\n';
    
    return 0;
}