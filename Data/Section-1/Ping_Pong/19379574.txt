#include <bits/stdc++.h>

#define ll long long
#define ld long double

using namespace std;

const ll inf = (ll)1e9;
const ll MOD = (ll)1e9 + 7;
const ll P = 239;
const ll MAX_N = 200000;
const ll CNT = 5;
const ld pi = 3.1415926535897932384626;
const ld eps = 1e-6;

int n;
vector<int> a(MAX_N), used(MAX_N, 0);
vector<int> root;
int r = -1;

void dfs(int x)
{
    used[x] = 1;
    if (used[a[x]] == 0)
        dfs(a[x]);
    else if (used[a[x]] == 1)
    {
        if (r == -1 && a[x] == x)
            r = x;
        else
        {
            a[x] = x;
            root.push_back(x);
        }
    }
    used[x] = 2;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin >> n;
    int b[n];
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
        a[i]--;
        b[i] = a[i];
    }
    for (int i = 0; i < n; i++)
        if (used[i] == 0)
            dfs(i);
    if (r == -1)
        for (int i = 1; i < root.size(); i++)
            a[root[i]] = root[0];
    else
        for (int i = 0; i < root.size(); i++)
            a[root[i]] = r;
    int cnt = 0;
    for (int i = 0; i < n; i++)
        cnt += (a[i] != b[i]);
    cout << cnt << endl;
    for (int i = 0; i < n; i++)
        cout << a[i] + 1 << " ";
    return 0;
}
