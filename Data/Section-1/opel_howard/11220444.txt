#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <string>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <cmath>
#include <iostream>
#include <fstream>
#include <sstream>
using namespace std;
// template

// abbreviations
#define vi vector <int>
#define ii pair <int, int>
#define a first
#define b second
#define vii vector <ii>
#define mii map <int, int>
#define que queue
#define pque priority_queue
#define stk stack
#define lsone(value) (value)&(-value)
#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define pu push
#define po pop
#define mp make_pair
#define loop(i, n) for(int i = 0; i < n; ++i)
#define loop1(i, n) for(int i = 1; i <= n; ++i)
#define reverse_iterate(a, b) for(typeof(b.rend()) a = b.rend(); a != b.rbegin(); --a)
#define iterate(a, b) for(typeof(b.begin()) a = b.begin(); a != b.end(); ++a)
#define all(i) i.begin(), i.end()

typedef unsigned long long ull;
typedef long long ll;

// end of template

int main() {
    // freopen("8B.in", "r", stdin);
    
    string path;
    cin >> path;

    bool v[150][150];

    loop(i, 150)
    	loop(j, 150)
    		v[i][j] = false;

   	ii bef = mp(100, 100);
    v[100][100] = true;

    int xMov[] = {1, 0, -1, 0};
    int yMov[] = {0, 1, 0, -1};
    iterate(mov, path) {
    	ii curr = bef;
    	if (*mov == 'U')
    		curr.a += 1;
    	if (*mov == 'D')
    		curr.a -= 1;
    	if (*mov == 'R')
    		curr.b += 1;
    	if (*mov == 'L')
    		curr.b -= 1;
    	
    	loop(it, 4) {
    		if (mp(curr.a+xMov[it], curr.b+yMov[it]) == bef)
    			continue;
    		if (v[curr.a+xMov[it]][curr.b+yMov[it]]) {
    			puts("BUG");
    			return 0;
    		}
    	}
    	bef = curr;
    }

    puts("OK");
    return 0;
}