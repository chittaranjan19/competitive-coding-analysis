//INOG
#include<bits/stdc++.h>
using namespace std;

#define mp make_pair
#define ll long long
#define int long long
#define lb long double
#define pb(x) push_back(x)
#define all(x) x.begin(),x.end()

const long long MAXN=1e6;
const long long MAXM=1e3;
const long long MOD=1e9+7;
const long long INF=1e15+5040;


vector<int>ver[MAXN];
bool vis[MAXN];
bool side[MAXN];
int dis[MAXM];
queue<int>q;
bool f=true;
int mx=0;
int n;
void bfs(int s)
{
	fill(dis,dis+n,INF);
	q.push(s);
	dis[s]=0;
	while(q.size()){
		int v=q.front();
		q.pop();
		for(auto u:ver[v])
			if(dis[u]>dis[v]+1){
				dis[u]=1+dis[v];
				q.push(u);
			}
	}
	for(int i=0;i<n;i++)mx=max(mx,dis[i]);
}

void dfs(int v){
	vis[v]=true;
	for(auto u:ver[v])
		if(vis[u])
			f=f&(side[v]!=side[u]);
		else{
			side[u]=!side[v];
			dfs(u);
		}
}
main(){
    ios_base::sync_with_stdio(false);
    cin.tie(false),cout.tie(false);
    int m;
    cin>>n>>m;
    for(int i=0;i<m;i++){
    	int x,y;
    	cin>>x>>y;
    	x--,y--;
    	ver[x].push_back(y);
    	ver[y].push_back(x);
    }
    dfs(0);
    if(!f)return cout<<-1,0;
    for(int i=0;i<n;i++)bfs(i);
    cout<<((mx==INF)?-1:mx);
    
}
