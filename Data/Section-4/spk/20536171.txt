#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>
#include<queue>
#include<set>
#include<stack>

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define scantype int
#define lli long long int
#define N 100000


lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}

using namespace std;

lli MOD = 1000000007;
lli dp[101][1001];

void scan(scantype &x);

int main(void)
{
  int a,b,k,t;
  cin>>a>>b>>k>>t;

  for(int i=-(k*t),j=0;i<=k*t;i++,j++)
  {
         lli prefsum = 0;
         if(i>=-k && i<=k)
              dp[1][j]=1;
  }

  for(int i=2;i<=t;i++)
  {
         lli prefsum = 0,lp=0,rp=0;

         for(;rp<=k;rp++)
                prefsum = (prefsum+dp[i-1][rp])%MOD;

         dp[i][0]=prefsum;

         int p=1;
         for(int j=(-k*t)+1;j<=0;j++,p++)
         {
                if(j>(-k))
                {
                     prefsum = (prefsum+dp[i-1][rp])%MOD;
                     rp++;
                     dp[i][p] = prefsum;
                }
                else
                {
                     prefsum = (prefsum-dp[i-1][lp]+MOD)%MOD;
                     lp++;
                     prefsum = (prefsum+dp[i-1][rp])%MOD;
                     rp++;
                     dp[i][p] = prefsum;
                }
         }

         for(int j=1,backptr=p-2;j<=k*t;j++,backptr--,p++)
           dp[i][p]=dp[i][backptr];
  }

  vector<int> arr;

  for(int j=(-k*t),p=0;j<=(k*t);p++,j++)
         arr.pb(dp[t][p]);


  for(int i=1;i<arr.size();i++)
         arr[i] = (arr[i-1]+arr[i])%MOD;

  int len = arr.size();

  lli ans=0;

  for(int i=arr.size()-1,p=k*t;i>-1;i--,p--)
  {
       lli scoreA = (p+a);

       int index = p+a-1-b+(t*k);

       lli scob;
       if(index>=len)
       {
              scob = arr[len-1];
       }else if(index<0)
       {
              scob = 0;
       }else
       {
              scob = arr[index];
       }

       lli now;

       if(i==0) now = arr[i];
       else now = (arr[i]-arr[i-1]+MOD)%MOD;

       //cout<<p<<" "<<arr[i]<<" "<<scob<<endl;
       ans =  (ans + (now*scob)%MOD)%MOD;
  }
  cout<<ans;
  return 0;
}









void scan(scantype &x)
{
    /*register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}*/

    register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
