#include <bits/stdc++.h>

using namespace std;

#define ll long long

const int maxn = 1000000;

int x[maxn], y[maxn];

char find_dir(char cur, char dest)
{
    return dest;
    if(cur=='X')
        return dest;
    if(cur=='L'){
        if(dest=='L')
            return 'U';
        if(dest=='U')
            return 'R';
        if(dest=='R')
            return 'D';
        if(dest=='D')
            return 'L';
    }
    if(cur=='U'){
        return dest;
    }
    if(cur=='R'){
        if(dest=='L')
            return 'D';
        if(dest=='U')
            return 'L';
        if(dest=='R')
            return 'U';
        if(dest=='D')
            return 'R';
    }
    if(cur=='D'){
        if(dest=='L')
            return 'R';
        if(dest=='U')
            return 'D';
        if(dest=='R')
            return 'L';
        if(dest=='D')
            return 'U';
    }
}

int main()
{
    int n, i, j;
    scanf("%d", &n);
    ll k = 0;
    for(i=0; i<n; i++){
        scanf("%d%d", &x[i], &y[i]);
        if(x[i]!=0)
            k+=2;
        if(y[i]!=0)
            k+=2;
        k+=2;
    }
    printf("%I64d\n", k);
    char dir = 'X', mov;
    for(i=0; i<n; i++){
        if(x[i]!=0){
            if(x[i]<0){
                mov = find_dir(dir, 'L');
                printf("1 %d %c\n", abs(x[i]), mov);
                dir = mov;
            }
            else{
                mov = find_dir(dir, 'R');
                printf("1 %d %c\n", abs(x[i]), mov);
                dir = mov;
            }
        }
        if(y[i]!=0){
            if(y[i]<0){
                mov = find_dir(dir, 'D');
                printf("1 %d %c\n", abs(y[i]), mov);
                dir = mov;
            }
            else{
                mov = find_dir(dir, 'U');
                printf("1 %d %c\n", abs(y[i]), mov);
                dir = mov;
            }
        }
        printf("2\n");
        x[i] = -1*x[i];
        y[i] = -1*y[i];
        if(x[i]!=0){
            if(x[i]<0){
                mov = find_dir(dir, 'L');
                printf("1 %d %c\n", abs(x[i]), mov);
                dir = mov;
            }
            else{
                mov = find_dir(dir, 'R');
                printf("1 %d %c\n", abs(x[i]), mov);
                dir = mov;
            }
        }
        if(y[i]!=0){
            if(y[i]<0){
                mov = find_dir(dir, 'D');
                printf("1 %d %c\n", abs(y[i]), mov);
                dir = mov;
            }
            else{
                mov = find_dir(dir, 'U');
                printf("1 %d %c\n", abs(y[i]), mov);
                dir = mov;
            }
        }
        printf("3\n");
    }
    return 0;
}