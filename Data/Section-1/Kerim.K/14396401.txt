//~  Inshaallah
/*
ID: omarmuh1
PROG: test
LANG: C++
*/
#include <iostream>
#include <cmath>
#include <algorithm>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <map>
#include <ctime>
#include <iomanip>
#include <string.h>
#include <stdio.h>
#include <set>

using namespace std;

#define ll long long
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define pp pop_back
#define pii pair<int ,int>
#define pil pair<int , ll>
#define pli pair<ll , int>
#define pll pair<ll , ll>
#define mid(x , y)	(x+y)/2
#define sz(x) int(x.size())
#define db		cout << "****" << endl;
#define all(x) 	x.begin() , x.end()
#define lgn 	19
#define maxn 	100007
#define INF 	1000000009
#define LLINF 	1000000000000000009
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
#define Help_me  ios_base::sync_with_stdio(false);

template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}

//~ ifstream cin("test.in");
//~ ofstream cout("test.out");

map <int , set <int> > mk;
int a , b , c , d[maxn] , n , m , p[maxn];
priority_queue <int , vector <int> , greater <int> > Q;
set <int> S;

int main()
{
	cin >> n >> m;
	
	for(int i = 1 ; i <= n ; i++)
		cin >> d[i] , Q.push(d[i]) , mk[d[i]].insert(i);
	
	while(!Q.empty())
	{
		int tr = Q.top();
		
		Q.pop();
		
		if(!m)
		{
			return 0;
		}
		
		if(S.count(tr) == 0)
		{
			cout << mk[tr].size() << " " ;
			
			for(int x : mk[tr])
				cout << d[x] << " ";
			cout << endl;
			m--;
			S.insert(tr);
		}
		
		p[++b] = tr;
		
		for(int i = 1 ; i <= n ; i++)
		{
			if(mk[tr].count(i) == 0)
				if(mk[tr+d[i]].size() == 0)
				{
					for(auto x : mk[tr])
						mk[tr + d[i]].insert(x);
					mk[tr + d[i]].insert(i);
					
					Q.push(tr+d[i]);
				}
		}
	}
	
	return 0;
}
