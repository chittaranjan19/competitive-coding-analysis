//why are you stalking me?
#include <iostream>
#include <cstdio>
#include <fstream>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <deque>
#include <sstream>
#include <cmath>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>
#include <functional>
#include <ctime>
#include <climits>
#include <cstdlib>
#include <complex>
//#define NDEBUG 1
#include <cassert>

using namespace std;

#define rep(it, v) for (__typeof((v).begin()) it = (v).begin(); it != (v).end(); it++)
#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()

typedef long long ll;
typedef pair<int, int> pii;
const int MAXN = 1e5 + 10;

int N;
char str[MAXN];

int main() {
	//why are you stalking me?
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	ios_base::sync_with_stdio(false);
	gets(str + 1);
	N = strlen(str + 1);
	int sharp = 0;
	for (int i = 1; i <= N; i++) {
		if (str[i] == '#') {
			sharp++;
		}
	}
	//now build the psum
	int psum = 0;
	for (int i = 1; i <= N; i++) {
		psum += (str[i] == '(' ? 1 : -1);
		if (psum < 0) {
			puts("-1");
			return 0;
		}
	}
	int p = 0, scnt = 0;
	for (int i = 1; i <= N; i++) {
		char c = str[i];
		if (c == '(') {
			p++;
		} else if (c == ')') {
			p--;
		} else {
			if (++scnt == sharp) {
				p -= (psum + 1);
			} else {
				p--;
			}
		}
		if (p < 0) {
			puts("-1");
			return 0;
		}
	}
	for (int i = 1; i < sharp; i++) {
		puts("1");
	}
	printf("%d\n", psum + 1);
}