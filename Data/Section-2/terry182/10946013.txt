#include<iostream>
#include <algorithm>
using namespace std;
int n,k,p,x,y;
int sum = 0, remain;
int a[1005], b[1005], ans[1005];
bool dfs(int t)
{   if (t == n-k)
    {
        sort(a, a+n);
        if (a[(n+1)/2-1] >= y){
            return true;
        }
        for (int i = 0; i < n-1; i++)
           if (i < k)
            a[i] = b[i];
           else a[i] = ans[i-k];
        return false;
    }
    else if (remain <= 0)
        return false;
    else {
        for (int i = 1; i <= remain; i++)
        {   a[k+t] = i;
            ans[t] = i;
            remain -= i;
            if (dfs(t+1)) return true;
            ans[t] = i;
            a[k+t] = i;
            remain += i;
        }
    }
    return false;
}
int main()
{
    cin >> n >> k >> p >> x >> y;
    for (int i = 0; i < k; i++)
    {   cin >> a[i];
        b[i] = a[i];
        sum += a[i];
    }

    if (n == k)
    {
        sort(a, a+k);
        if (a[(n+1)/2-1] >= y && sum < x) return 0;
        else  cout << -1 << endl;
    }
    else if (sum >= x)  cout << -1 << endl;
    else {
        remain = x - sum;
        if (x - sum < n - k) cout << -1 << endl;
        else { if(dfs(0)) for (int i = 0; i < n-k; i++) cout << ans[i] << " ";
               else cout << -1 << endl;
        }

    }
    return 0;
}
