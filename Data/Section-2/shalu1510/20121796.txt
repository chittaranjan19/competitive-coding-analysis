#include<bits/stdc++.h>
#define f(i,j,k) for(int i=j;i<k;i++)
typedef long long int lli;
using namespace std;

int main()
{  lli n,a;
    cin>>n>>a;
    long long int* arr=new long long int[n];
    f(i,0,n)
    cin>>arr[i];
    sort(arr,arr+n);
    lli index=-1;
     lli left_sum=0,right_sum=0;
     lli left_excl=0,right_excl=0;
     bool found=false;
     int i=0;
  for(;i<n;i++)
  {  if(arr[i]>=a)
      {
          index=i-1;
          break;
      }
  }
  if(i==n && index==-1)
    index=n-1;

  for(int j=index;j>=0;j--)
  {
      if(index==-1)
        break;
      if(j==index)
        {    if(j!=0)
            {left_sum+=(a-arr[j]);
            left_excl+=(a-arr[j]);}
            else
                left_sum+=(a-arr[j]);
        }
      else
        {if(j!=0)
            {left_sum+=(arr[j+1]-arr[j]);
            left_excl+=(arr[j+1]-arr[j]);}
            else
                left_sum+=(arr[j+1]-arr[j]);
        }

  }
  for(int j=index+1;j<n;j++)
  {
       if(index==n-1)
        break;
      if(j==index+1)
        {    if(j!=n-1)
            {right_sum+=(arr[j]-a);
            right_excl+=(arr[j]-a);}
            else
                right_sum+=(arr[j]-a);
        }
      else
        {if(j!=n-1)
            {right_sum+=(arr[j]-arr[j-1]);
            right_excl+=(arr[j]-arr[j-1]);}
            else
                right_sum+=(arr[j]-arr[j-1]);
        }
  }
  if(index==-1)
    cout<<right_excl;
  else if(index==n-1)
    cout<<left_excl;
  else
  cout<<min(2*left_excl+right_sum, min(2*right_excl+left_sum, min(2*right_sum+left_excl,2*left_sum+right_excl)));


}
