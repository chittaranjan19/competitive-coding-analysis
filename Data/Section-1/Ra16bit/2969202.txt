#include <cstdio>#include <algorithm>using namespace std;const long long inf=1000000000000000000LL;int n,m,i,v[100100],c[100100];long long a[100100],l[100100],r[100100],A,B,cur,oth,res;long long findl(int x) {  long long res=-inf;  for (int i=x; i>0; i&=i-1) res=max(res,l[i]);  return res;}long long findr(int x) {  long long res=-inf;  for (int i=x; i>0; i&=i-1) res=max(res,r[i]);  return res;}void upd(int x, long long v) {  if (v<=a[x]) return;  a[x]=v;  res=max(res,v);  for (int i=x; i<=n; i=(i<<1)-(i&(i-1))) l[i]=max(l[i],v);  for (int i=n-x+1; i<=n; i=(i<<1)-(i&(i-1))) r[i]=max(r[i],v);}int main() {  scanf("%d%d",&n,&m);  for (i=1; i<=n; i++) scanf("%d",&v[i]);  for (i=1; i<=n; i++) scanf("%d",&c[i]);  while (m--) {    scanf("%I64d%I64d",&A,&B);    res=0;    for (i=1; i<=n; i++) a[i]=l[i]=r[i]=-inf;    for (i=1; i<=n; i++) {      cur=a[c[i]]+v[i]*A;      oth=max(0LL,max(findl(c[i]-1),findr(n-c[i])))+v[i]*B;      upd(c[i],max(cur,oth));    }    printf("%I64d\n",res);  }  return 0;}