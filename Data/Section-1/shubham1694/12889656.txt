#include <bits/stdc++.h>

using namespace std;

#define ll long long

const ll mod = 1000000007;

ll modpow(ll a, ll b)
{
    ll x=1ll, y=a;
    while(b){
        if(b%2)
            x=(x*y)%mod;
        y=(y*y)%mod;
        b/=2;
    }
    return x;
}

ll dp[2100][2100], fact[2100], mfact[2100];
int n, h, arr[2100];

ll solve(int cur, int open)
{
    int req;
    ll ret;
    if(cur==(n-1)){
        if(open>1 || ((h-arr[cur])>1))
            return 0;
        if(open==1)
            return 2;
        else
            return 1;
    }
    if(dp[cur][open]!=-1)
        return dp[cur][open];
    if(arr[cur]>h)
        return 0;
    if((h-arr[cur])>(open+1))
        return 0;
    //cout << cur << " " << open << " ";
    
    req = h-arr[cur];
    if((open-req)>1)
        return 0;
    ret = (fact[open+1]*mfact[req])%mod;
    ret = (ret*mfact[open+1-req])%mod;
    //cout << ret << " " << req << "\n";
    ret = (ret*solve(cur+1, req))%mod;

    return dp[cur][open] = ret;
}

int main()
{
    ll i, j;
    fact[0] = 1ll;
    for(i=1; i<2100; i++)
        fact[i] = (fact[i-1]*i)%mod, mfact[i] = modpow(fact[i], mod-2);
    mfact[0] = mfact[1] = 1;
    scanf("%d%d", &n, &h);
    for(i=0; i<n; i++)
        scanf("%d", &arr[i]);
    memset(dp, -1, sizeof(dp));
    printf("%I64d\n", solve(0, 0));
    return 0;   
}