#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<bool> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int main()
{
	int n;
	cin >> n;
	vector<bool> pase (n);
	vector<int> a (n);
	forn(i,n)
		cin >> a[i];
	bool tuttiTrue = false;
	bool derecha = true;
	int cambios = 0;
	int information = 0;
	while (!tuttiTrue)
	{
		if (derecha)
		{
			forn(i,n)
			{
				if (a[i] <= information && !pase[i])
				{
					information++;
					pase[i] = true;
				}
				
			}
		}
		else
		{
			for( int i = n-1; i>= 0; i--)
			{
				if (a[i] <= information && !pase[i])
				{
					information++;
					pase[i] = true;
				}
				
			}
		}
		
		derecha = !derecha;
		tuttiTrue = true;
		forn(i,n)
			tuttiTrue &= pase[i];
		if (!tuttiTrue)
			cambios++;
		
	}
	cout << cambios << endl;
	
	return 0;
}


