#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 505;

int dp[maxn][maxn], n, m, a[maxn], b[maxn];
pii nxt[maxn][maxn], pmax[maxn];
vector<int> sol;

void print(int lcis, int sn, int sm)
{
    if(lcis==0)
        return;
    sol.pb(a[sn]);
    print(lcis-1, nxt[sn][sm].f, nxt[sn][sm].s);
}

int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    scanf("%d", &n);
    int i, j, k, ans=0;
    pii st;
    for(i=1; i<=n; i++)
        scanf("%d", &a[i]);
    scanf("%d", &m);
    for(i=1; i<=m; i++)
        scanf("%d", &b[i]);
    for(i=1; i<=n; i++){
        for(j=1; j<=m; j++){
            if(a[i]==b[j])
                dp[i][j] = 1;
        }
        for(j=1; j<i; j++){
            if(a[i]<=a[j])
                continue;
            pmax[0] = mp(0, 0);
            for(k=1; k<=m; k++){
                if(a[i]==b[k]){
                    if(dp[i][k] < 1+pmax[k-1].f){
                        dp[i][k] = 1+pmax[k-1].f;
                        nxt[i][k] = mp(j, pmax[k-1].s);
                    }
                }
                if(pmax[k-1].f < dp[j][k])
                    pmax[k] = mp(dp[j][k], k);
                else
                    pmax[k] = pmax[k-1];
            }
        }
    }
    for(i=1; i<=n; i++){
        for(j=1; j<=m; j++){
            if(ans < dp[i][j])
                st = mp(i, j);
            ans = max(ans, dp[i][j]);
        }
    }
    print(ans, st.f, st.s);
    printf("%d\n", ans);
    reverse(all(sol));
    for(auto it:sol)
        printf("%d ", it);
    printf("\n");
    return 0;
}
