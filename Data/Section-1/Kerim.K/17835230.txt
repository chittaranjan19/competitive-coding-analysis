#include<bits/stdc++.h>
#define MAXN 200009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<ll,long double>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
ll n,k;
ll arr[MAXN];
long double s[MAXN],p[MAXN],sp[MAXN],dp[MAXN][54];
void doldur(){
	for(ll i=1;i<=n;i++){
		s[i]=s[i-1]+arr[i];
		p[i]=p[i-1]+1.0/arr[i];
		sp[i]=sp[i-1]+s[i-1]*1.0/arr[i];
	}
	for(ll i=0;i<MAXN;i++)
		for(ll j=0;j<=25<<1;j++)
			dp[i][j]=1e18;//what the ******* error
}
//long double go(ll x,ll y){
//	long double sum=0;
//	for(ll i=x;i<=y;i++)
//		sum+=long double(par[i]-par[x-1])/long double(arr[i]);	
//	return sum;	
//}
vector<long double>b;
vector<ll>m;
long double intersect(ll l1,ll l2){
	return (b[l1]-b[l2])/(m[l1]-m[l2]);
}
ll pointer=0;
void upd(ll x,long double y){
	m.pb(x);b.pb(y);
	while(m.size()>=3 and intersect(m.size()-3,m.size()-1)<=intersect(m.size()-3,m.size()-2))
		m.erase(m.end()-2),b.erase(b.end()-2);
}
long double tap(long double x){
	umin(pointer,ll(m.size()-1));
	while(pointer<m.size()-1 and m[pointer]*x+b[pointer]>m[pointer+1]*x+b[pointer+1])
		pointer++;
	return m[pointer]*x+b[pointer];
}
int main(){
	cout.precision(12);
	scanf("%lld%lld",&n,&k);
	for(ll i=1;i<=n;i++)
		scanf("%lld",arr+i);
	doldur();dp[0][0]=0.0;
	for(ll y=1;y<=k;y++){
		m.resize(0);b.resize(0);
		pointer=0;
		for(ll x=1;x<=n;x++){
			upd((s[x-1]),(dp[x-1][y-1]-sp[x-1]+p[x-1]*s[x-1]));
			dp[x][y]=tap(-p[x])+sp[x];	
		}
	}
	cout<<fixed<<double(dp[n][k]+n)<<endl;
	return 0;
}
//LooK aT mY COde ONlinE `+_+
/*
4 2
100 3 5 7
*/