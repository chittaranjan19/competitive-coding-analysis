#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
#include <fstream>
#include <tuple>
#include <iomanip>
#include <time.h>
#include <stdlib.h>
#include <stdio.h>

using namespace std;

const int MAX = 4e5;
const long long MAX_MASK = (1 << 17);
const long long MAX_N = 20;
const long long INF = 1e16;

int main(){
    string s[MAX], t[MAX];
    int n;
    cin >> n;
    long long st[MAX];
    long long a[MAX], b[MAX];
    for (int i = 0; i < n; i++)
        cin >> st[i];
    for (int i = 0 ; i < n; i++){
        cin >> s[i];
        t[i] = string(s[i].rbegin(), s[i].rend());
    }
    b[0] = st[0];
    a[0] = 0;
    for (int i = 1; i < n; i++){
        a[i] = INF;
        b[i] = INF;
        if (s[i] >= s[i - 1])
            a[i] = a[i - 1];
        if (s[i] >= t[i - 1])
            a[i] = min(a[i], b[i - 1]);
        if (t[i] >= s[i - 1])
            b[i] = a[i - 1] + st[i];
        if (t[i] >= t[i - 1])
            b[i] = min(b[i], b[i - 1] + st[i]);
    }
    if (b[n - 1] == INF && a[n - 1] == INF){
        cout << -1;
        return 0;
    }
    if (b[n - 1] == INF)
        cout << a[n - 1];
    else if (a[n - 1] == INF)
        cout << b[n - 1];
    else
        cout << min(a[n - 1], b[n - 1]);
return 0;
}