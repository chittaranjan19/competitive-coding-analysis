#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

vector<int> desarrolloBinario (tint num)
{
	vector<int> des;
	while(num > 0)
	{
		des.insert(des.begin(),num % 2);
		num /= 2;
	}
	return des;
}

vector<int> cambiarUnoParaAdelante (vector<int> v1, vector<int> v2)
{
	forn(i,v1.size())
	{
		if (v1[i] != v2[i])
		{
			v1[i] = 0;
			forsn(j,i+1,v1.size())
				v1[j] = 1;
			break;
		}
		
	}
	return v1;
}

tint binary2Decimal (vector<int> v)
{
	tint q = 0;
	tint k = 1;
	forn(i,v.size())
	{
		q += v[v.size()-i-1] * k; 
		k *= 2;
	}
	return q;
}

int contarUnos (vector<int> v)
{
	int q = 0;
	forn(i,v.size())
		if (v[i] == 1)
			q++;
	return q;
}

int main()
{
	int n;
	cin >> n;
	forn(i,n)
	{
		tint l,r;
		cin >> l >> r;
		vector<int> lB2 = desarrolloBinario(l);
		vector<int> rB2 = desarrolloBinario(r);
		vector<int> tuttiOne (rB2.size(),1);
		vector<int> tuttiOneMenosUno (rB2.size()-1,1);
		if (rB2.size() > lB2.size() && rB2 == tuttiOne)
			cout << r << endl;
		else if (rB2.size() > lB2.size())
			cout << binary2Decimal(tuttiOneMenosUno) << endl;
		else
		{
			if (contarUnos(cambiarUnoParaAdelante(rB2,lB2)) >= contarUnos(rB2))
				cout << binary2Decimal(cambiarUnoParaAdelante(rB2,lB2)) << endl; 
			else
				cout << r << endl;
		}
	}
	return 0;
}
