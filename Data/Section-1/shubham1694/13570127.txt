#include <bits/stdc++.h>

using namespace std;

int dp[3][110][110], n;
string str[3];
vector<pair<int, int> > v[3];

int solve(int crow, int tim, int curn)
{
    //cout << crow << " " << tim << " " << curn << "\n";
    if(curn==n-1)
        return 1;
    if(dp[crow][tim][curn]!=-1)
        return dp[crow][tim][curn];
    int i, lx, rx, ret = 0, flag = 0;
    if(tim>0){
        for(i=0; i<v[crow].size(); i++){
            lx = v[crow][i].first - (tim-1)*2;
            rx = lx+v[crow][i].second-1;
            if(lx<=curn && rx>=curn){
                //ret = 0;
                //cout << "prev " << lx << " " << rx << " " << crow << " " << tim << " " << curn << " " << ret << "\n";
                return dp[crow][tim][curn] = 0;
            }
            //if(lx<=(curn+1) && rx>=(curn+1))
            //  flag = 1;
        }   
    }
    for(i=0; i<v[crow].size(); i++){
        lx = v[crow][i].first - tim*2;
        rx = lx+v[crow][i].second-1;
        if(lx<=curn && rx>=curn){
            //ret = 0;
            //cout << "cur " << " " << lx << " " << rx << " " << crow << " " << tim << " " << curn << " " << ret << "\n";
            return dp[crow][tim][curn] = 0;
        }
        if(lx<=(curn+1) && rx>=(curn+1))
                flag = 1;
    }
    if(flag){
        //cout << "flag " <<  crow << " " << tim << " " << curn << " " << 0 << "\n";
        return dp[crow][tim][curn] = 0;
    }
    //if(!ret){
    //  cout << crow << " " << tim << " " << curn << " " << ret << "\n";
        
    //}
    if(crow==0)
        ret = solve(crow, tim+1, curn+1)|solve(1, tim+1, curn+1);
    else if(crow==1)
        ret = solve(crow, tim+1, curn+1)|solve(0, tim+1, curn+1)|solve(2, tim+1, curn+1);
    else
        ret = solve(crow, tim+1, curn+1)|solve(1, tim+1, curn+1);
    //cout << crow << " " << tim << " " << curn << " " << ret << "\n";
    return dp[crow][tim][curn] = ret;
}

int main()
{
    //freopen("i.txt", "r", stdin);
    int t, i, j, sx, k, l, st, len;
    scanf("%d", &t);
    while(t--){
        memset(dp, -1, sizeof(dp));
        scanf("%d%d", &n, &k);
        for(i=0; i<3; i++){
            v[i].clear();
            cin >> str[i];
            if(str[i][0]=='s')
                sx = i;
            for(j=0; j<n; ){
                if(str[i][j]!='.' && str[i][j]!='s'){
                    l = st = j;
                    len = 0;
                    while(l<n){
                        if(str[i][l]=='.')
                            break;
                        l++;
                        len++;
                    }
                    v[i].push_back(make_pair(st, len));
                    j = l;
                }
                else
                    j++;
            }
        }
        /*for(i=0; i<3; i++){
            for(j=0; j<v[i].size(); j++)
                cout << i << " " << v[i][j].first << " " << v[i][j].second << "\n";
        }
        cout << sx << "\n";*/
        int ans = solve(sx, 0, 0);
        //for(i=0; i<3; i++){
        //  for(j=0; j<1;)
        //}
        if(ans)
            printf("YES\n");
        else
            printf("NO\n");
    }
    return 0;
}