#include<iostream>
#include<sstream>
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<bitset>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
using namespace std;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define ALL(c) (c).begin(),(c).end()
#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;
int total[1000005];
int cnt[1000005];
int main(){
  int k;
  cin >> k;
  string s;
  cin >> s;
  int n = s.length();
  for (int i = 0; i < n; i++){
    if (s[i] == '1'){
      total[i] = total[i-1] + 1;
      cnt[total[i]]++;
    }
    else{
      total[i] = total[i-1];
      cnt[total[i]]++;
    }
  }
  if (k == 0){
    long long ans = 0;
    for (int i = 0; i < n; i++)ans += (long long)(cnt[i] * (cnt[i] + 1))/2;
    cout << ans << endl;
  }
  else{
    long long ans = 0;
    for (int i = 0; i+k < n; i++)
      ans += (long long)(cnt[i] + 1)*(cnt[i+k] + 1)/2;
    cout << ans << endl;
  }
  return 0;
  
  
      


}
        
        
      
      



                            
    
  
