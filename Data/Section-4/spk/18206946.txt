#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>
#include<queue>
#include<set>
#include<stack>

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define scantype int
#define min(a,b) a<b?a:b
#define max(a,b) a>b?a:b

using namespace std;

long long MOD =1000000007;
void scan(scantype &x);


vector<int> vp;



long long modpow(int base, long long exp, long long modulus)
{
  base %= modulus;
  long long result = 1;
  while (exp > 0) {
    if (exp & 1) result = (result * base) % modulus;
    base = (base * base) % modulus;
    exp >>= 1;
  }
  return result;
}

int get(char c)
{
    if(c>='0' && c<='9') return c-'0';
    if(c>='A' && c<='Z') return c-'A'+10;
    if(c>='a' && c<='z') return c-'a'+36;
    if(c=='-') return 62;
    if(c=='_') return 63;
}

char st[100003];


int tobin(int x)
{
   int ans=0,no1=0;

   while(x)
   {
       if(x&1) no1++;
       x = x/2;
   }
   return 6-no1;
}

int main(void)
{
  long long tot=0;
  scanf("%s",st);

  for(int i=0;st[i]!='\0';i++)
  {
       int x = get(st[i]);
       //cout << x << " ";
       int zero = tobin(x);
       tot+= zero;
  }
  
  //ans++;
  cout << modpow(3,tot,MOD);
  return 0;
}









void scan(scantype &x)
{
    /*register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}*/

    register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
