#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>

using namespace std;

typedef long long ll;

const int maxn = 1e6 + 5;
const int block = 1e3;
const ll INF = 25e8;

struct coo
{
    int x, y, id;
} co[maxn];
int ans[maxn];

bool cmp1(const coo &a, const coo &b)
{
    if(a.x / block != b.x / block) return a.x / block < b.x / block;
    return a.y > b.y;
}

bool cmp2(const coo &a, const coo &b)
{
    if(a.y / block != b.y / block) return a.y / block < b.y / block;
    return a.x > b.x;
}

int dis(int i, int j)
{
    return abs(co[i].x - co[j].x) + abs(co[i].y - co[j].y);
}

bool solve(int n)
{
    ll sum = 0;
    for(int i = 2; i <= n; ++i)
    {
        sum += dis(i, i - 1);
        if(sum > INF) return false;
    }
    return sum + dis(n, 1) > INF;
}

int main()
{
    int n;
    scanf("%d", &n);
    for(int i = 1; i <= n; ++i)
    {
        scanf("%d%d", &co[i].x, &co[i].y);
        co[i].id = i;
    }
    sort(co + 1, co + n + 1, cmp1);
    if(solve(n))
    {
        for(int i = 1; i <= n; ++i)
        {
            printf("%d%c", co[i].id, " \n"[i == n]);
        }
    }
    else
    {
        sort(co + 1, co + n + 1, cmp2);
        for(int i = 1; i <= n; ++i)
        {
            printf("%d%c", co[i].id, " \n"[i == n]);
        }
    }
    return 0;
}
