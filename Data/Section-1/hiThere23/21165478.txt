#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 205
#define maxC 1000000007
#define pb push_back
#define F first
#define S second
#define mp make_pair

using namespace std;
int n, m, even, d[mn];
vector< pair<int, int> > g[mn], ans;
bool mark[mn * mn];

void setup()
{
    cin >> n >> m;
    FOR(i, 1, n)
        g[i].clear();
    int u, v;
    FOR(i, 1, m)
    {
        cin >> u >> v;
        g[u].pb(mp(v, i));
        g[v].pb(mp(u, i));
        mark[i] = false;
    }
}

void dfs(int u)
{
    FOR(i, 0, int(g[u].size()) - 1)
    {
        int v = g[u][i].F;
        int e = g[u][i].S;
        if (mark[e])
            continue;
        mark[e] = true;
        d[u] --, d[v] --;
        ans.pb(mp(u, v));
        dfs(v);
        return;
    }
}

bool existOdd()
{
    FOR(i, 1, n)
    if (d[i] & 1)
    {
        dfs(i);
        return true;
    }
    return false;
}

bool exist()
{
    FOR(i, 1, n)
    if (d[i])
    {
        dfs(i);
        return true;
    }
    return false;
}

void xuly()
{
    ans.clear();
    even = 0;
    FOR(i, 1, n)
    {
        d[i] = g[i].size();
        even += ((d[i] & 1) == 0);
    }
    while(existOdd());
    while(exist());
    cout << even << '\n';
    FOR(i, 0, m - 1)
        cout << ans[i].F << ' ' << ans[i].S << '\n';
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    int t;
    cin >> t;
    FOR(i, 1, t)
    {
        setup ();
        xuly ();
    }
    return 0;
}
