#include <cstdio>
#include <vector>
#include <algorithm>
#include <map>
using namespace std;

class Dragon
{
    public:
    int strength;
    int bonus;
    bool operator < (const Dragon& alt) const
    {
        if(this -> bonus > alt.bonus ||(this -> bonus== alt.bonus && this -> strength > alt.strength))
        return true;
        else
        return false;
    }
};

int main()
{
    int s, n, c = 0, a = 0;
    bool impossible = false, quit = false;
    scanf("%d %d", &s, &n);
    //priority_queue<Dragon> dragons;
    //vector<Dragon> list;
    vector<Dragon> dragons;
    map<Dragon, bool> check;

    for(int a = 0; a < n; a++)
    {
        Dragon d;
        scanf("%d %d", &d.strength, &d.bonus);
        dragons.push_back(d);
        check[d] = true;
    }
    /*while(!dragons.empty())
    {
        cout<<dragons.top().strength<<" "<<dragons.top().bonus<<endl;
        dragons.pop();
    }*/
    sort(dragons.begin(), dragons.end());
    while(1)
    {
        if(c == dragons.size())
            break;
        if(a == dragons.size())
        {
            impossible = true;
            break;
        }
        if(check[dragons[a]] && s > dragons[a].strength)
        {
            check[dragons[a]] = false;
            s += dragons[a].bonus;
            c = 0;
            a = 0;
            continue;
        }
        if(!check[dragons[a]])
            c++;
        a++;
    }
    if(impossible)
        printf("%s", "NO");
    else
        printf("%s", "YES");
    return 0;
}
