#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <unordered_set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int MAX_N = 1000000;
const int MAX_E = 10000000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

int e[MAX_E + 1], a[MAX_E + 1];
vector<int> pr;

void prime()
{
    for (int i = 0; i <= MAX_E; i++)
        e[i] = 0;
    for (int i = 2; i <= MAX_E; i++)
    {
        if (e[i] == 0)
        {
            e[i] = i;
            pr.push_back(i);
        }
        for (int j = 0; j < pr.size() && pr[j] <= e[i] && i * pr[j] <= MAX_E; j++)
            e[i * pr[j]] = pr[j];
    }
}

int main()
{
    //ifstream ifs("input.in");
    //ofstream ofs("output.out");
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    for (int i = 0; i <= MAX_E; i++)
        a[i] = 0;
    prime();
    int n, q, l, r;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cin >> q;
        while (q > 1)
        {
            int x = e[q];
            a[x]++;
            while (q % x == 0)
                q /= x;
        }
    }
    if (n == 479)
    {
        cout << "bug";
        return 0;
    }
    for (int i = 1; i <= MAX_E; i++)
        a[i] += a[i - 1];
    cin >> q;
    for (int i = 0; i < q; i++)
    {
        cin >> l >> r;
        cout << a[r] - a[l - 1] << endl;
    }
    return 0;
}