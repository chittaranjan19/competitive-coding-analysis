#include <iostream>
#include <vector>
#include <stack>
#include <math.h>
#include <algorithm>

using namespace std;

int n, m;
vector<pair<int, int> > ll;
pair<int, int> p;

int maxx(int a, int b){
    if (a > b)
        return a;
    else return b;
}

int main(){
    cin >> n >> m;
    for (int i = 0; i < m; i++){
        cin >> p.first >> p.second;
        ll.push_back(p);
    }
    int max = 0;
    for (int i = 1; i < m; i++){
        int dh = abs(ll[i].second - ll[i - 1].second);
        int dd = ll[i].first - ll[i - 1].first;
        if (dh > dd){
            cout << "IMPOSSIBLE";
            return 0;
        }
        else{
            int temp_m = (dd - dh) / 2 + maxx(ll[i].second, ll[i-1].second);
            if (temp_m > max)
                max = temp_m;
        }
    }
    if (ll[m - 1].first < n){
        int temp_m = ll[m - 1].second + n - ll[m - 1].first;
        if (temp_m > max)
            max = temp_m;
    }
    if (ll[0].first > 0){
        int temp_m = ll[0].first+ll[0].second-1;
        if (temp_m > max)
            max = temp_m;
    }
    cout << max;
    return 0;
}