#include <iostream>
#include <cstdio>
#include <cstring>
#include <queue>
using namespace std;
int sx,sy,n,flag;
char grid[3][105];
bool vis[105][105];
int mov[3]={1,0,-1};

struct node
{
   int x,y,step;
};

void bfs()
{
   memset(vis,false,sizeof(vis));
   queue<node> q;
   while(!q.empty())q.pop();
   node t1,t2;
   int i;
   t1.x=sx;t1.y=sy;t1.step=0;
   q.push(t1);
   while(!q.empty())
   {
      t1=q.front();
      q.pop();
      if(t1.step>=n-1)
      {
         flag=1;
         break;
      }
      if(grid[t1.x][t1.y+1]!='.')continue;
      for(i=0;i<3;i++)
      {
         t2.x=t1.x+mov[i];
         if(t2.x<0 || t2.x>=3 || grid[t2.x][t1.y+1]!='.')continue;
         if(t1.y+2<n && grid[t2.x][t1.y+2]!='.')continue;
         if(t1.y+3<n && grid[t2.x][t1.y+3]!='.')continue;
         t2.y=t1.y+3;
         if(vis[t2.x][t2.y>=n?n-1:t2.y])continue;
         vis[t2.x][t2.y>=n?n-1:t2.y]=true;
         t2.step=t1.step+3;
         q.push(t2);
      }
   }
}

int main()
{
   int t,k,i,j;
   scanf("%d",&t);
   while(t--)
   {
      scanf("%d%d",&n,&k);
      for(i=0;i<3;i++) scanf("%s",grid[i]);
      for(i=0;i<3;i++)
         for(j=0;j<n;j++)
            if(grid[i][j]=='s'){sx=i;sy=j;break;}
      flag=0;
      bfs();
      if(!flag) printf("NO\n");
      else printf("YES\n");
   }
   return 0;
}