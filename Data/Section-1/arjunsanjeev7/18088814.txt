/*	Arjun Sanjeev
	IIIT-Hyderabad	*/

/*	*************************************************
	*	"Never regret anything in life.		*
	*	 If it's good, it's wonderful.		*
	*	 If it's bad, it's experience."		*
	*************************************************	*/

#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define f first
#define s second
#define let(x,a) __typeof(a) x(a)
#define all(a) (a).begin(),(a).end() 
#define endl '\n'
#define present(c,x) ((c).find(x) != (c).end()) 
#define tr(v,it) for(let(it,v.begin()); it != v.end(); it++)
#define rtr(v,it) for(let(it,v.rbegin()); it != v.rend(); it++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define LL long long int
#define PII pair<int,int>
#define VI vector<int>
#define inf INT_MAX

using namespace std;

map<char,char> M[4];
map<char,int> cnt;

int n,m,a,b,x,y;
vector< vector<char> > arr;
vector< VI > marked;
set<char> S[4];

int foo()
{
	pair< PII,PII > temp;
	int xx,yy,rr,ans=0,flag,rot;
	char ch;
	queue< pair<PII,PII> > q;
	q.push(mp(mp(x,y),mp(0,0)));
	while(!q.empty())
	{
		queue< pair<PII,PII> > Q = q;
		while(!q.empty()) q.pop();
 	while(!Q.empty())
	{
		temp=Q.front();
		Q.pop();
		if(temp.f == mp(a,b))
		{
			return ans;
		}
		rot=temp.s.f;
		flag=temp.s.s; 
		xx=temp.f.f, yy=temp.f.s;
		if(marked[xx][yy] && flag>=4) continue;
		marked[xx][yy]=1;
		int rem=cnt[M[rot][arr[xx][yy]]];
		for(int i=1;i<=1 && flag<3;i++)
		{
			rr=(rot+i)%4;
			q.push(mp(mp(xx,yy),mp(rr,flag+1)));
		}
		if(M[rot][arr[xx][yy]]=='+')
		{
			if(present(S[0],M[rot][arr[xx+1][yy]])) q.push(mp(mp(xx+1,yy),mp(rot,0)));
			if(present(S[2],M[rot][arr[xx-1][yy]])) q.push(mp(mp(xx-1,yy),mp(rot,0)));
			if(present(S[3],M[rot][arr[xx][yy+1]])) q.push(mp(mp(xx,yy+1),mp(rot,0)));
			if(present(S[1],M[rot][arr[xx][yy-1]])) q.push(mp(mp(xx,yy-1),mp(rot,0)));
		}
		else if(M[rot][arr[xx][yy]]=='-')
		{
			if(present(S[3],M[rot][arr[xx][yy+1]])) q.push(mp(mp(xx,yy+1),mp(rot,0)));
			if(present(S[1],M[rot][arr[xx][yy-1]])) q.push(mp(mp(xx,yy-1),mp(rot,0)));
		}
		else if(M[rot][arr[xx][yy]]=='|')
		{
			if(present(S[0],M[rot][arr[xx+1][yy]])) q.push(mp(mp(xx+1,yy),mp(rot,0)));
			if(present(S[2],M[rot][arr[xx-1][yy]])) q.push(mp(mp(xx-1,yy),mp(rot,0)));
		}
		else if(M[rot][arr[xx][yy]]=='^')
		{
			if(present(S[2],M[rot][arr[xx-1][yy]])) q.push(mp(mp(xx-1,yy),mp(rot,0)));
		}
		else if(M[rot][arr[xx][yy]]=='v')
		{
			if(present(S[0],M[rot][arr[xx+1][yy]])) q.push(mp(mp(xx+1,yy),mp(rot,0)));
		}
		else if(M[rot][arr[xx][yy]]=='>')
		{
			if(present(S[3],M[rot][arr[xx][yy+1]])) q.push(mp(mp(xx,yy+1),mp(rot,0)));
		}
		else if(M[rot][arr[xx][yy]]=='<')
		{
			if(present(S[1],M[rot][arr[xx][yy-1]])) q.push(mp(mp(xx,yy-1),mp(rot,0)));
		}
		else if(M[rot][arr[xx][yy]]=='L')
		{
			if(present(S[2],M[rot][arr[xx-1][yy]])) q.push(mp(mp(xx-1,yy),mp(rot,0)));
			if(present(S[0],M[rot][arr[xx+1][yy]])) q.push(mp(mp(xx+1,yy),mp(rot,0)));
			if(present(S[3],M[rot][arr[xx][yy+1]])) q.push(mp(mp(xx,yy+1),mp(rot,0)));
		}
		else if(M[rot][arr[xx][yy]]=='R')
		{
			if(present(S[2],M[rot][arr[xx-1][yy]])) q.push(mp(mp(xx-1,yy),mp(rot,0)));
			if(present(S[0],M[rot][arr[xx+1][yy]])) q.push(mp(mp(xx+1,yy),mp(rot,0)));
			if(present(S[1],M[rot][arr[xx][yy-1]])) q.push(mp(mp(xx,yy-1),mp(rot,0)));
		}
		else if(M[rot][arr[xx][yy]]=='U')
		{
			if(present(S[1],M[rot][arr[xx][yy-1]])) q.push(mp(mp(xx,yy-1),mp(rot,0)));
			if(present(S[0],M[rot][arr[xx+1][yy]])) q.push(mp(mp(xx+1,yy),mp(rot,0)));
			if(present(S[3],M[rot][arr[xx][yy+1]])) q.push(mp(mp(xx,yy+1),mp(rot,0)));
		}
		else if(M[rot][arr[xx][yy]]=='D')
		{
			if(present(S[2],M[rot][arr[xx-1][yy]])) q.push(mp(mp(xx-1,yy),mp(rot,0)));
			if(present(S[1],M[rot][arr[xx][yy-1]])) q.push(mp(mp(xx,yy-1),mp(rot,0)));
			if(present(S[3],M[rot][arr[xx][yy+1]])) q.push(mp(mp(xx,yy+1),mp(rot,0)));
		}
	}
	ans++;
	}
	return -1;
}

int main()
{
	cnt['+']=0;
	M[0]['+']=M[1]['+']=M[2]['+']=M[3]['+']='+';
	cnt['-']=1;
	M[0]['-']=M[2]['-']='-';
	M[1]['-']=M[3]['-']='|';
	cnt['|']=1;
	M[0]['|']=M[2]['|']='|';
	M[1]['|']=M[3]['|']='-';
	cnt['^']=3;
	M[0]['^']='^';
	M[1]['^']='>';
	M[2]['^']='v';
	M[3]['^']='<';
	cnt['>']=3;
	M[0]['>']='>';
	M[1]['>']='v';
	M[2]['>']='<';
	M[3]['>']='^';
	cnt['v']=3;
	M[0]['v']='v';
	M[1]['v']='<';
	M[2]['v']='^';
	M[3]['v']='>';
	cnt['<']=3;
	M[0]['<']='<';
	M[1]['<']='^';
	M[2]['<']='>';
	M[3]['<']='v';
	cnt['L']=3;
	M[0]['L']='L';
	M[1]['L']='U';
	M[2]['L']='R';
	M[3]['L']='D';
	cnt['R']=3;
	M[0]['R']='R';
	M[1]['R']='D';
	M[2]['R']='L';
	M[3]['R']='U';
	cnt['U']=3;
	M[0]['U']='U';
	M[1]['U']='R';
	M[2]['U']='D';
	M[3]['U']='L';
	cnt['D']=3;
	M[0]['D']='D';
	M[1]['D']='L';
	M[2]['D']='U';
	M[3]['D']='R';
	cnt['*']=0;
	M[0]['*']=M[1]['*']=M[2]['*']=M[3]['*']='*';

	S[0].insert('+');
	S[0].insert('|');
	S[0].insert('^');
	S[0].insert('L');
	S[0].insert('R');
	S[0].insert('D');
	
	S[1].insert('+');
	S[1].insert('-');
	S[1].insert('>');
	S[1].insert('L');
	S[1].insert('U');
	S[1].insert('D');

	S[2].insert('+');
	S[2].insert('|');
	S[2].insert('v');
	S[2].insert('L');
	S[2].insert('R');
	S[2].insert('U');

	S[3].insert('+');
	S[3].insert('-');
	S[3].insert('<');
	S[3].insert('U');
	S[3].insert('R');
	S[3].insert('D');

	cin>>n>>m;
	arr.assign(n+2,vector<char>(m+2,'.'));
	marked.assign(n+2,VI(m+2,0));
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{
			cin>>arr[i][j];
		}
	}
	cin>>x>>y;
	cin>>a>>b;
	cout<<foo()<<endl;
	return 0;
}