#include <cstdio>
#include <map>
using namespace std;
int n, m, k, z=0, cnt=0;
char M[51][51], c;
bool v[51][51];
multimap<int, int> L;
bool b(int x, int y){
	return (0<=x&&x<n&&0<=y&&y<m);
}
int dfs(int x, int y){
	if(v[x][y]||M[x][y]!='.')
		return 0;
	v[x][y]=true;
	int res = 1;
	if(b(x+1, y)) res+=dfs(x+1, y);
	if(b(x-1, y)) res+=dfs(x-1, y);
	if(b(x, y+1)) res+=dfs(x, y+1);
	if(b(x, y-1)) res+=dfs(x, y-1);
	return res;
}
void fill(int x, int y, char c){
	if(v[x][y]||M[x][y]!='.')
		return;
	v[x][y]=true;
	M[x][y]=c;
	if(b(x+1, y))	fill(x+1, y, c);
	if(b(x-1, y))	fill(x-1, y, c);
	if(b(x, y+1))	fill(x, y+1, c);
	if(b(x, y-1))	fill(x, y-1, c);
}

int main(){
	scanf("%d%d%d%c", &n ,&m, &k, &c);
	for(int i=0; i<n; i++)
		scanf("%s", M[i]);
	for(int i=0; i<n; i++){
		fill(i, 0, 'o');
		fill(i, m-1, 'o');
	}
	for(int i=0; i<m; i++){
		fill(0, i, 'o');
		fill(n-1, i, 'o');
	}

	for(int i=0; i<n; i++)
		for(int j=0; j<m; j++){
			int t = dfs(i, j);
			if(0!=t)
				L.insert(pair<int, int>(t, 100*i+j));
		}
	for(int i=0; i<n; i++)
		for(int j=0; j<m; j++)
			v[i][j]=false;
	while(L.size()>k){
		fill(L.begin()->second/100, L.begin()->second%100, '*');
		cnt+=L.begin()->first;
		L.erase(L.begin());
	}
	printf("%d\n", cnt);
	for(int i=0; i<n; i++){
		for(int j=0; j<m; j++)
			printf("%c", (M[i][j]!='*')?'.':'*');
		puts("");
	}

	return 0;
}
