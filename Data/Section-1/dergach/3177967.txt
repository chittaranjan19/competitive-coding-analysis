/*#include <stdio.h>
#include <math.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <sstream>
#include <algorithm>
#include <iostream>
using namespace std;

int a[305][305], d[2][305][305], best = 1234567890;
int ok[305];

int main()
{
    int n, m, i, j, k, x, y;
    scanf("%d %d", &n, &m);
    for(i = 0; i < n; i++)
        for(j = 0; j < n; j++)
            a[i][j] = 1234567890;
    for(i = 0; i < m; i++)
    {
        scanf("%d %d %d %d", &j, &k, &x, &y);
        k--; j--;
        a[j][k] = -x;
        a[k][j] = -y;
    }

    for(i = 0; i < n; i++)
        for(j = 0; j < n; j++)
            d[0][i][j] = ((i == j) ? 0 : 1234567890);
    k = 0;
    for(j = 1; j <= n && j < best; j++)
    {
        k = 1 - k;
        for(i = 0; i < n; i++)
        {
            if(ok[i]) continue;
            ok[i] = 1;
            for(x = 0; x < n; x++)
                d[k][i][x] = d[1-k][i][x];
            for(x = 0; x < n; x++)
                for(y = 0; y < n; y++)
                    if(d[1-k][i][x] != 1234567890 && a[x][y] != 1234567890 && d[1-k][i][x] + a[x][y] < d[k][i][y])
                    {
                        ok[i] = 0;
                        d[k][i][y] = d[1-k][i][x] + a[x][y];
                    }
            if(d[k][i][i] < 0) {best = min(best, j); break;}
            if(clock() > 4774) {puts("0"); return 0;};
        }
    }
    printf("%d\n", best == 1234567890 ? 0 : best);
    return 0;
}
*/


#include <stdio.h>
#include <math.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <sstream>
#include <algorithm>
#include <iostream>
using namespace std;

int a[305][305], d[2][305], best = 1234567890, z[305];
int ok;

int main()
{
    int n, m, i, j, k, x, y;
    scanf("%d %d", &n, &m);
    for(i = 0; i < n; i++)
        for(j = 0; j < n; j++)
            a[i][j] = 1234567890;
    for(i = 0; i < m; i++)
    {
        scanf("%d %d %d %d", &j, &k, &x, &y);
        k--; j--;
        a[j][k] = -x;
        a[k][j] = -y;
    }


    for(i = 0; i < n; i++)
        z[i] = i;
    random_shuffle(z, z + n);


    for(int q = 0; q < n; q++)
    {
        i = z[q];
        k = 0;
        for(j = 0; j < n; j++)
            d[k][j] = 1234567890;
        d[k][i] = 0;
        for(j = 1; j <= n && j < best; j++)
        {
            ok = 1;
            k = 1 - k;
            for(x = 0; x < n; x++)
                d[k][x] = d[1-k][x];
            for(x = 0; x < n; x++)
                for(y = 0; y < n; y++)
                    if(d[1-k][x] != 1234567890 && a[x][y] != 1234567890 && d[1-k][x] + a[x][y] < d[k][y])
                    {
                        ok = 0;
                        d[k][y] = d[1-k][x] + a[x][y];
                    }
            if(d[k][i] < 0) {best = min(best, j); break;}
            if(ok) break;
        }
    }
    printf("%d\n", best == 1234567890 ? 0 : best);
    return 0;
}
