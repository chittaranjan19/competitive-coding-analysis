//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 1e6 + 50;

int kmm[N];
int mark[N];
bool is[N];
vector <int> P;

inline void f(int x){
	for(int i = 0; P[i] * P[i] <= x; ++i){
		int cnt = 0;
		while(x % P[i] == 0) x /= P[i], cnt ++;
		kmm[i] = max(kmm[i], cnt);
	}
	kmm[x] = max(kmm[x], 1);
}

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	for(int i = 2; i < N; ++i){
		if(!is[i]){
			P.PB(i);
			for(int j = i; j < N; j += i)
				is[j] = true;
		}	
	}
	int n, k;
	cin >> n >> k;
	for(int i = 0; i < n; ++i){	
		int c; cin >> c;
		f(c);
	}
	bool f = true, g = true;
	for(int i = 0; P[i] * P[i] <= k; ++i){
		int cnt = 0;
		while(k % P[i] == 0) k /= P[i], cnt ++;
		mark[k] = cnt;
	}
	mark[k] = 1;
	
	for(int i = 0; i < N; ++i){
		if(kmm[i] > mark[i]) f = false;
		if(kmm[i] < mark[i]) g = false;
	}
	
	if(!f && !g) cout << "No\n";
	else	cout << "Yes\n";
	return 0;
}
