#include<iostream>
#include<sstream>
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<bitset>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
using namespace std;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define ALL(c) (c).begin(),(c).end()
#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;

string s;
int palind[5005];
char is_palind[5005][5005];
int main(){
  cin >>s;
  int n = s.length();
  
  int q;
  cin >> q;
  for(int i = 1; i < n; i++)
    is_palind[i][i] = 1;
  palind[0] = 1;
  for(int i = 1; i < n; i++){
    palind[i] = palind[i-1]+ 1;
    for(int j = i-1; j >= 0; j++){
      if (s[i] == s[j] && is_palind[j+1][i-1]){
        palind[i]++;
        is_palind[j][i] = 1;
      }
    }
  }
  while(q--){
    int a,b;
    scanf("%d %d", &a, &b);
    if (a-1)
      printf("%d\n", palind[b] - palind[a-1]);
    else
      printf("%d\n", palind[b]);
  }
  return 0;
}
    
        
          
    
     
  
    
