const

        oo      =2000;
var     f       :Text;
        n, m       :longint;
        h       :array[1..oo] of longint;
        c       :array[1..oo] of longint;
        v       :array[1..oo] of longint;
procedure nhap;
var  i  :longint;
begin
        readln(n);
        m:=0;
        for i:=1 to n do read( h[i]);
        for i:=1 to n do v[i]:=i;
        for i:=1 to n do
                if m<h[i] then m:=h[i];
end;

Procedure QS(l,r:longint);
var     i, j, tg, x:longint;
begin
        i:=l;
        j:=r;
        x:=h[v[(i+j) div 2]];
        repeat
                while h[v[i]] < x do inc(i);
                while h[v[j]] > x do dec(j);
                if i<=j then
                        begin
                                tg:=v[i];
                                v[i]:=v[j];
                                v[j]:=tg;
                                inc(i);
                                dec(j);
                        end;
        until i>j;
        if l<j then QS(l,j);
        if i<r then QS(i,r);
end;

function giaithua(x:longint):longint;
var     i ,p      :longint;
begin
        p:=1;
        for i:=1 to x do p:=p*i;
        exit(p);
end;

procedure xuly;
var     i, tg,j :longint;
        r:int64;
begin
        QS(1,n);
        fillchar(c,m,0);
        for i:=1 to n do inc(c[h[i]]);
       // for i:=1 to m do write(c[i],' ');
        r:=1;
        for i:=1 to m do r:=r*P(c[i]);
        if r<3 then
                begin
                        writeln('NO');
                        halt;
                end
        else
                begin
                        writeln('YES');
                        for i:=1 to n do write(v[i],' ');
                        writeln;
                        for i:=2 to n do
                                if h[v[i]]=h[v[i-1]] then
                                        begin
                                                j:=i;
                                                tg:=v[j-1];
                                                v[j-1]:=v[j];
                                                v[j]:=tg;
                                        end;
                        for i:=1 to n do write(v[i],' ');
                        writeln;
                        //writeln(j);
                        for i:=2 to n do
                                if (h[v[i]]=h[v[i-1]]) and (j<>i) then
                                        begin
                                                tg:=v[j-1];
                                                v[j-1]:=v[j];
                                                v[j]:=tg;
                                        end;
                        for i:=1 to n do write(v[i],' ');
                        writeln;
                end;
end;

BEGIN
        nhap;
        xuly;
ENd.