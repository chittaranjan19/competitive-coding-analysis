#include <iostream>
#include <cstdio>
#include <algorithm>

using namespace std;

typedef long long ll;
typedef pair<ll, int> P;

const int MAXN = 100000 + 5;

struct point
{
    ll x, y;

    point(ll x = 0, ll y = 0) : x(x), y(y) {}
} p[MAXN];
P pp[MAXN];

point operator + (point a, point b)
{
    return point(a.x + b.x, a.y + b.y);
}

point operator - (point a, point b)
{
    return point(a.x - b.x, a.y - b.y);
}

ll Dot(point a, point b)
{
    return a.x * b.x + a.y * b.y;
}

ll length(point a)
{
    return Dot(a, a);
}

ll Cross(point a, point b)
{
    return a.x * b.y - a.y * b.x;
}

int solve(int n)
{
    int id = pp[2].second;
    for(int i = 3; i <= n; ++i)
    {
        if(Cross(p[1] - p[id], p[id] - p[pp[i].second])) return pp[i].second;
    }
}

int main()
{
    int n;
    while(~scanf("%d", &n))
    {
        for(int i = 1; i <= n; ++i)
        {
            scanf("%I64d%I64d", &p[i].x, &p[i].y);
            pp[i].first = length(p[i] - p[1]), pp[i].second = i;
//            cout << pp[i].first << endl;
        }
        sort(pp + 2, pp + n + 1);
        int pos = solve(n);
        printf("%d %d %d\n", 1, pp[2].second, pos);
    }
    return 0;
}
