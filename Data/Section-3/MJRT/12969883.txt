
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
//////////////////////
#include<iostream>
#include<algorithm>
#include<string>
#include <iterator>
#include<sstream>
#include<functional>
#include<numeric>
///////////////////////
#include<vector>
#include<map>
#include <stack>
#include<queue>
#include<set>
#include <bitset>
#include <list>
using namespace std;
#define lch(x)  ((x) << 1)
#define rch(x) ((x)<<1|1)
#define dad(x) ((x)>>1)
#define lowbit(x) ((x)&(-x))
typedef  long long int LL;
const int INF = ~0U>>1;
const double eps = 1e-6;
const long double PI = acos(0.0) * 2.0;
const int N = 5 + 1000000;
vector<int> ans;
int n;

int prime[N] = {0};
bool not_prime[N] = {1,1};
int make_prime(int n);
void js(int x);
int powint(int x,int y);

int main()
{
    //ios::sync_with_stdio(false);
#ifdef ONLINE_JUDGE
#else
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
#endif
    int l = make_prime(10000);

    scanf("%d",&n);
    for(int i = 0 ; prime[i] <= n ; i++)    js(prime[i]);
    printf("%d\n",ans.size());
    for(int i = 0 ; i < ans.size() ; i++)   printf("%d ",ans[i]);

    return 0;
}

void js(int x)
{
    int y;
    for(int i = 1 ; (y=powint(x,i)) <= n ; i++)
        ans.push_back(y);
}

int powint(int x,int y)
{
    int ans = 1;
    for(int i = 0 ; i < y ; i++)
        ans*=x;
    return ans;
}
int make_prime(int n)
{
    int num = 0;
    for(int i = 2 ; i < n ; i++)
    {
        if(!(not_prime[i]))
            prime[num++] = i;

        for(int j = 0 ; j < num && i*prime[j] < n ; j++)
        {
            not_prime[ prime[j]*i ] = 1;
            if(!(i%prime[j]))    break; //ֻɸȥ��С�������ӣ������ظ�ɸȥ����
        }
    }
    return num;
}

