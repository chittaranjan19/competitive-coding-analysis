import java.io.*;
import java.util.*;
import java.math.*;

public class Main implements Runnable {

	void solve() throws IOException {
		char[] s = br.readLine().toCharArray();
		int k = Integer.parseInt(br.readLine());
		int[] cnt = new int[26];
		for (char c:s) {
			cnt[c-'a']++;
		}
		k = Math.min(k, s.length);
		boolean[] f = new boolean[26];
		int ans = 26;
		while (k>=0) {
			int d = -1;
			for (int i=0; i<26; i++)
				if (!f[i] && (d==-1 || cnt[i]<cnt[d]))
					d = i;
			if (d==-1 || cnt[d]>k) 
				break;
			f[d] = true;
			ans--;
			k -= cnt[d];
		}
		out.println(ans);
		for (char c:s)
			if (!f[c-'a']) out.print(c);
		out.println();
		
	}

	BufferedReader br;
	StringTokenizer st;
	PrintWriter out;

	public void run() {
		try {
			br = new BufferedReader(new InputStreamReader(System.in));
			out = new PrintWriter(System.out);
			// br = new BufferedReader(new FileReader("input.txt"));
			// out = new PrintWriter("output.txt");
			solve();
			br.close();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
			System.exit(123);
		}
	}

	String next() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			String s = br.readLine();
			if (s == null)
				return null;
			st = new StringTokenizer(s,", \t");
		}
		return st.nextToken();
	}

	double nextDouble() throws IOException {
		return Double.parseDouble(next());
	}

	int nextInt() throws IOException {
		return Integer.parseInt(next());
	}

	long nextLong() throws IOException {
		return Long.parseLong(next());
	}

	public static void main(String[] args) {
		new Thread(new Main()).start();
	}
}
