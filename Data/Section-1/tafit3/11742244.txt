import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class ProblemA {
    private static final long B = 1_000_000_007L;
    BufferedReader rd;
    int[] c;
    int[] s;
    long[][] g;

    ProblemA() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int k = pint();
        c = new int[k];
        s = new int[k];
        for(int i=0;i<k;i++) {
            c[i] = pint();
            s[i] = c[i];
            if(i > 0) {
                s[i] += s[i-1];
            }
        }
        g = new long[1001][1001];
        Arrays.fill(g[0],1);
        for(int i=1;i<1001;i++) {
            g[i][1] = 1;
            for(int j=2;j<1001;j++) {
                g[i][j] = (g[i-1][j] + g[i][j-1])%B;
            }
        }
        out(solve(k-1));
    }

    private long solve(int i) {
        if(i == 0) {
            return 1;
        }
        if(c[i] == 1) {
            return solve(i-1);
        }
        long res = g[c[i]-1][s[i-1]+1];
        res *= solve(i-1);
        res %= B;
        return res;
    }

    private int pint() throws IOException {
        return pint(rd.readLine());
    }

    private int pint(String s) {
        return Integer.parseInt(s);
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemA();
    }
}
