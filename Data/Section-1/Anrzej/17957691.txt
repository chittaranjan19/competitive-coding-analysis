#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 5e5 + 10, lg = 20;

int gcd(int a, int b) {
	return b ? gcd(b, a % b) : a;
}

ll a[N], dp[N];
pair<ll, ll> t[N];

void update(int v, int tl, int tr, int p, int vl)
{
	if (tl == tr){
		t[v] = mp(vl, p);
		return;
	}
	int tm = (tl + tr) >> 1;
	if (tm >= p)
		update(v * 2, tl, tm, p, vl);
	else update(v * 2 + 1, tm + 1, tr, p, vl);
	t[v] = max(t[v * 2], t[v * 2 + 1]);
}

pair<ll,ll> _max(int v, int tl, int tr, int l, int r)
{
	if (tl > r || tr < l)
		return mp(-1, -1);
	if (l <= tl && tr <= r)
		return t[v];
	int tm = (tl + tr) >> 1;
	pair<ll, ll> lf = _max(v * 2, tl, tm, l, r);
	pair<ll, ll> rt = _max(v * 2 + 1, tm + 1, tr, l, r);
	return max(lf, rt);
}

int main()
{
	int n;
	cin >> n;
	for (int i = 0; i < n - 1; i++)
		cin >> a[i], a[i]--;
	dp[n - 1] = 0;
	ll ans = 0;
	update(1, 0, n - 1, n - 1, n - 1);
	for (int i = n - 2; i >= 0; i--){
		int m = _max(1, 0, n - 1, i+1, a[i]).sc;
		dp[i] = dp[m] - a[i] + m + n - i - 1;
		ans += dp[i];
		update(1, 0, n - 1, i, a[i]);
	}
	cout << ans;
	return 0;
}