#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;
 long long C[65][65];
#define de(i,A) for(int i=A-1;i+1;i--)
//c(n k) = c(n-1 k-1) + c(n-1 k)
 long long m, k;
typedef long long ll;

long long tinh(long long x){
    ll t=0,num=0;
    de(i,63)if(x&(1LL<<i)){
        if(k>=num)t+=C[i][k-num];
        num++;
    }return t;
}

int a[100];
long long check(long long n)
{
  //  cout<<"*";
    long long f=n,ans=0;
    for(int i=0;i<64;i++)
    {
        a[i]=f%2;
        f=f/2;
    }
    int x=0;
    for(int i=63;i>-1;i--)
    {
        if(a[i]==0)
            continue;
        if(x>k || x+i+1<k)
            break;
        ans+=C[i][k-x];
        x++;
    }
    return ans;
}
 long long calc( long long x)
{
     long long ans = 0;
     long long d1 = 0;
    FORD(i, 64, 1){
        if ((x >> (i - 1)) & 1){
            if (k - d1 >= 1) ans += (C[i - 1][k - d1]);
            //else if (k + 1 == d1) ans++;
            d1++;
        }
    }
    return ans + (__builtin_popcountll(x) >= k);
}

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("431D.inp", "r", stdin);
    freopen("431D.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> m >> k;
    memset(C, 0, sizeof(C));
    FORE(i, 1, 64) C[i][1] = i;
    FORE(i, 1, 64) C[i][0] = 1;
    FORE(i, 2, 64) FORE(k, 1, 64) C[i][k] = C[i - 1][k - 1] + C[i - 1][k];
     long long d = 1, c = 2234567891234567891, g, fin = -1;
    //cout << calc(190470) <<" "<< calc(95235)<<endl;
   // cout << check(190470) <<" "<< check(95235)<<endl;
    int dem = 0;
    FORE(i, 1, 190470) if (__builtin_popcount(i) == k){
        dem++;
      //  cout << i << endl;
    }
    //cout << (__builtin_popcount(95235) == k) << endl;
    //cout << dem << "wtf "<<endl;
    while (d <= c){
        g = (d + c) / 2;
         long long tmp = calc(g * 2LL) - calc(g);
        if (tmp >= m){
            if (tmp == m) fin = g;
            c = g - 1;
        }
        else d = g + 1;
    }
    cout << fin;
    return 0;
}

