 # include <iostream>
 # include <cstdio>
 # include <cstdlib>
 # include <algorithm>
 # include <queue>
 using namespace std;
 
 int n, a[1000000], d[102][100002], sx, sy, fx, fy, xf, yf, cnt1, cnt2;
 queue <int> x, y;
 
 int main ()
 {
     freopen ("input.txt", "r", stdin);
     freopen ("output.txt", "w", stdout);
     
     cin >> n;
     
     for (int i = 1; i <= n; ++i)
     {
         cin >> a[i];
         ++a[i];
     }
     
     cin >> sx >> sy >> fx >> fy;
     
     d[sx][sy] = 1;
     
     x.push (sx);
     y.push (sy);
     
     while (!x.empty())
     {
        xf = x.front ();
        yf = y.front ();
        cnt1 = min(yf, a[xf - 1]);
        cnt2 = min(yf, a[xf + 1]);
        if (xf == fx && yf == fy)
        {
           cout << d[xf][yf] - 1 << "\n";
           return 0;
        }
        if (xf > 1 && d[xf - 1][cnt1] == 0)
        {
           d[xf - 1][cnt1] = d[xf][yf] + 1;
           x.push (xf - 1);
           y.push (cnt1);
        }
        if (xf < n && d[xf + 1][cnt2] == 0)
        {
           d[xf + 1][cnt2] = d[xf][yf] + 1;
           x.push (xf + 1);
           y.push (cnt2);
        }
        if (yf > 1 && d[xf][yf - 1] == 0)
        {
           d[xf][yf - 1] = d[xf][yf] + 1;
           x.push (xf);
           y.push (yf - 1);
        }
        if (yf < a[xf] && d[xf][yf + 1] == 0)
        {
           d[xf][yf + 1] = d[xf][yf] + 1;
           x.push (xf);
           y.push (yf + 1);
        }
        x.pop();
        y.pop();
     }
     
     return 0;  
 }
