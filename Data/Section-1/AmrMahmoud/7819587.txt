#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

LL arr[21],facts[21];

LL power(LL a,LL b)
{
    if(b == 0) return 1;
    if(b & 1) return (a * power(a, b-1)) % mod;
    LL temp = power(a,b/2);
    temp*=temp;
    temp%=mod;
    return temp;
}

LL solve(LL x,LL y)
{
    LL temp = 1;
    for(int i=0;i<y;i++)
        temp*=(x - i) % mod,temp%=mod;
    temp*=power(facts[y],mod - 2);
    return temp;
}

int main()
{
    int n,counter;
    LL s;
    cin >> n >> s;
    for(int i=0;i<n;i++) scanf("%I64d",&arr[i]);
    facts[0] = 1;
    for(int i=1;i<=20;i++)
        facts[i] = facts[i-1] * i,facts[i]%=mod;
    LL res = 0;
    for(int i=0;i<(1 << n);i++)
    {
        LL temp = s;
        counter = 0;
        for(int j=0;j<n;j++)
            if(i & (1 << j))
                temp-=arr[j]+1,counter++;
        if(temp < 0) continue;
        if(counter & 1) res-=solve(temp+n-1,n-1);
        else res+=solve(temp+n-1,n-1);
        res%=mod;
        res+=mod;
        res%=mod;
    }
    cout << res;
    return 0;
}