#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

vector<pii> adj[maxn], ans;
int rnk[maxn], parent[maxn];
ll edgesum[maxn];
set<pair<ll, int> > mset;
set<pair<ll, int> > :: iterator it, jt;

int find(int x)
{
	if(parent[x]==x)
		return x;
	return parent[x] = find(parent[x]);
}

void merge(int x, int y, int e)
{
	int rx, ry;
	rx = find(x);
	ry = find(y);
	if(rx==ry){
		edgesum[rx]+=e;
		return;
	}
	if(rnk[rx] < rnk[ry]){
		parent[rx] = ry;
		edgesum[ry]+=(edgesum[rx]+e);
	}
	else if(rnk[ry] < rnk[rx]){
		parent[ry] = rx;
		edgesum[rx]+=(edgesum[ry]+e);
	}
	else{
		parent[ry] = rx;
		rnk[rx]++;
		edgesum[rx]+=(edgesum[ry]+e);
	}
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int n, m, p, q, u, v, l, c, i;
	ll sum, t1, t2;
	pair<ll, int> temp;
	scanf("%d%d%d%d", &n, &m, &p, &q);
	for(i=1; i<=n; i++)
		parent[i] = i;
	for(i=1; i<=m; i++){
		scanf("%d%d%d", &u, &v, &l);
		adj[u].pb(mp(v, l));
		adj[v].pb(mp(u, l));
		merge(u, v, l);
	}
	c = 0;
	for(i=1; i<=n; i++){
		u = find(i);
		if(mset.find(mp(edgesum[u], u))==mset.end()){
			c++;
			mset.insert(mp(edgesum[u], u));
		}
	}
	//cout << c << "\n";
	if(c<q || (c-p)>q){
		printf("NO\n");
		return 0;
	}
	for(i=1; i<=c-q; i++, p--){
		if(mset.size()==1){
			printf("NO\n");
			return 0;
		}
		it = mset.begin();
		jt = next(it);
		u = (*it).s, v = (*jt).s;
		t1 = (*it).f, t2 = (*jt).f;
		sum = min(1000000000ll, t1+t2+1);
		ans.pb(mp(u, v));
		mset.erase(it);
		mset.erase(jt);
		merge(u, v, sum);
		v = find(u);
		mset.insert(mp(edgesum[v], v));
	}
	v = -1;
	for(i=1; i<=n; i++){
		u = find(i);
		if(u!=i){
			v = i;
			break;
		}
	}
	if(p>0 && v==-1){
		printf("NO\n");
		return 0;
	}
	for(i=0; i<p; i++)
		ans.pb(mp(u, v));
	printf("YES\n");
	for(auto it:ans)
		printf("%d %d\n", it.f, it.s);
	return 0;
}
