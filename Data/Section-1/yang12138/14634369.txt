#include <cstdio>
#include <iostream>
#include <algorithm>
using namespace std;
const int N=1000050;
int a[N],b[N],n,m;
struct hehe
{
    int x,y;
}p[N];
int cmp(hehe a,hehe b)
{
    return a.x<b.x;
}
int seach(int x)
{
    int l=0,r=n;
    while(r>l)
    {
        int mm=(r+l)/2;
        if(x<p[mm].x) r=mm;
        else if(x>p[mm].x) l=mm+1;
        else return p[mm].y;
    }
    return 0;
}
int main()
{
    while(cin>>n>>m)
    {
        for(int i=0;i<n;i++)
        {
            scanf("%d",&p[i].x);
            p[i].y=i+1;
        }
        for(int i=0;i<m;i++)
            scanf("%d",&b[i]);
        sort(p,p+n,cmp);
        int flag1=0,flag2=0;
        for(int i=0;i<m;i++)
            if(seach(b[i])!=0) a[i]=seach(b[i]);
            else {flag1=1;break;}
        if(flag1) printf("Impossible\n");
        else
        {
            for(int i=0;i<n-1;i++)
                if(p[i].x==p[i+1].x) {flag2=1;break;}
            if(flag2) printf("Ambiguity\n");
            else
            {
                printf("Possible\n");
                for(int i=0;i<m;i++)
                    if(i==0) printf("%d",a[i]);
                    else printf(" %d",a[i]);
                printf("\n");
            }
        }
    }
    return 0;
}