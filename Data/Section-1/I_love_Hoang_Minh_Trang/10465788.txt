const   inf     =2*trunc(1e5);

var     n       :longint;
        a       :array[0..inf] of int64;
        dd      :array[0..trunc(1e6)] of longint;

procedure hv(var a, b:int64);
var     tg      :int64;
begin
        tg:=a;a:=b;b:=tg;
end;

procedure QS(l,r:longint);
var     i, j, x:longint;
begin
        i:=l;j:=r;
        x:=a[l+random(r-l+1)];
        repeat
                while a[i]<x do inc(i);
                while a[j]>X do dec(j);
                if i<=j then
                begin
                        hv(a[i],a[j]);
                        inc(i);
                        dec(j);
                end;
        until i>j;
        if l<j then QS(l,j);
        if i<r then QS(i,r);
end;

procedure run;
var     i       :longint;
        dai,rong:int64;
        last:longint;
begin
        readln(n);
        for i:=1 to n do read(a[i]);

        QS(1,n);
        fillchar(dd,sizeof(dd),0);
        for i:=1 to n do inc(dd[a[i]]);
        dai:=0;
        rong:=0;
        last:=0;
        for i:=n downto 1 do
        begin
                if dd[a[i]]>=2 then
                begin
                        dai:=a[i];
                        last:=i-2;
                        dec(dd[a[i]],2);
                        break;
                end
                else
                if (i<n) and (dd[a[i+1]]>0) and (a[i+1]-1=a[i]) then
                begin
                        dai:=a[i];
                        last:=i-1;
                        dec(dd[a[i]]);
                        dec(dd[a[i+1]]);
                        break;
                end;
        end;
        //
        rong:=0;
        for i:=last downto 1 do
        begin
                if dd[a[i]]>=2 then
                begin
                        rong:=a[i];
                        last:=i-2;
                        break;
                end
                else
                if (i<last) and (dd[a[i+1]]>0) and (a[i+1]-1=a[i]) then
                begin
                        rong:=a[i];
                        last:=i-1;
                        break;
                end;
        end;
        writeln(dai*rong);
end;

begin
                run;
end.