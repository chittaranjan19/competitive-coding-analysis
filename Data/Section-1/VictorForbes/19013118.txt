#include <bits/stdc++.h>

using namespace std;

#define N 1000

char str[N];

int main(){
	int maxPossible, minPossible;
	int positives, negatives;
	int n, i, j, len, x, sum;
	bool minus;

	scanf("%[^\n]", str);
	len = strlen(str);

	positives = count(str, str + len, '+') + 1;
	negatives = count(str, str + len, '-');

	n = atoi(str + (find(str, str + len, '=') - str) + 2);

	minPossible = positives - n * negatives;
	maxPossible = positives * n - negatives;

	if (n >= minPossible and n <= maxPossible){
		minus = false;
		sum = 0;

		printf("Possible\n");

		for (i = 0; i < len; i++){
			if (str[i] == '?'){
				if (minus){
					negatives--;

					for (j = 1; j <= n; j++){
						minPossible = sum + positives - n * negatives - j;
						maxPossible = sum + positives * n - negatives - j;

						if (n >= minPossible and n <= maxPossible){
							x = j;
							break;
						}
					}

					sum -= x;

					printf("%d", x);
				}
				else{
					positives--;

					for (j = 1; j <= n; j++){
						minPossible = sum + positives - n * negatives + j;
						maxPossible = sum + positives * n - negatives + j;

						if (n >= minPossible and n <= maxPossible){
							x = j;
							break;
						}
					}

					sum += x;
					
					printf("%d", x);
				}
			}
			else if (str[i] == '-'){
				printf("%c", str[i]);
				minus = true;
			}
			else if (str[i] == '+'){
				printf("%c", str[i]);
				minus = false;
			}
			else{
				printf("%c", str[i]);
			}
		}

		printf("\n");
	}
	else{
		printf("Impossible\n");
	}

	return 0;
}