/*


	/＼7　　　 ∠＿/
	　 /　│　　 ／　／
	　│　Z ＿,＜　／　　 /`ヽ
	　│　　　　　ヽ　　 /　　〉
	　 Y　　　　　`　 /　　/
	　ｲ●　､　●　　⊂⊃〈　　/
	　()　 へ　　　　|　＼〈		//去吧比卡丘！！！
	　　>ｰ ､_　 ィ　 │ ／／
	　 / へ　　 /　ﾉ＜| ＼＼
	　 ヽ_ﾉ　　(_／　 │／／
	　　7　　　　　　　|／	|
	　　＞―r￣￣`ｰ―＿

*/


#include <iostream>
#include <cstdio>
#include <cmath>
#include <string>
#include <cstring>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#define mem(a,b) memset(a,b,sizeof(a))
using namespace std;
typedef pair<int,int>P;
typedef long long ll;
const int maxn=150005;
int a[maxn],ok[maxn],n;
bool check(int x)
{
    if(x&1){
        if(x<n&&a[x]>=a[x+1]) return false;
        if(x>1&&a[x]>=a[x-1]) return false;
    }
    else{
        if(x<n&&a[x]<=a[x+1]) return false;
        if(x>1&&a[x]<=a[x-1]) return false;
    }
    return true;
}
int main()
{
    while(~scanf("%d",&n))
    {
        vector<int>g;
        mem(ok,0);
        for(int i=1;i<=n;i++) scanf("%d",&a[i]);
        int t=0,k=0;
        for(int i=1;i<=n;i++){
            if(!check(i)){
                ok[i]=1;
                g.push_back(i);
            }
        }
        if((int)g.size()>4) {printf("0\n");continue;}
        int ans=0;
        for(int i=0;i<g.size();i++){
            for(int j=1;j<=n;j++){
                if(!ok[j]||j>g[i]){
                    swap(a[g[i]],a[j]);
                    bool flag=check(g[i])&&check(j);
                    for(int k=0;k<g.size();k++){
                        if(!check(g[k])) flag=false;
                    }
                    if(flag) ans++;
                    swap(a[g[i]],a[j]);
                }
            }
        }
        printf("%d\n",ans);
    }
    return 0;
}
