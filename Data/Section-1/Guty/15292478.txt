#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint toNumber (string s)
{
	tint Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (tint number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}

tint comparar(const char s1[], const char s2[], tint c1, tint c2)
{
	if (s1[c1] == 0 && s2[c2] == 0)
		return 0;
	else
	{
		if (s1[c1] < s2[c2])
			return 1;
		else if (s1[c1] > s2[c2])
			return -1;
		else
			return comparar(s1,s2,c1+1,c2+1);
	}
}


int main()
{
	ios_base::sync_with_stdio(0);
	#ifdef ACMTUYO
		if(!freopen("entrada.in", "r", stdin))
			return 1;
	#endif
	const tint maxLength = 2000000;
	static char s1[maxLength];
	static char s2[maxLength];
	while (scanf("%s%s", s1, s2) != EOF)
	{
		
		tint c1 = -1, l1 = -1,c2 = -1, l2 = -1;
		forn(i,maxLength)
		{
			if (s1[i] != '0' && c1 == -1)
				c1 = i;
			if (s1[i] == 0)
			{
				l1 = i-c1;
				break;
			}
		}
		
		forn(i,maxLength)
		{
			if (s2[i] != '0' && c2 == -1)
				c2 = i;
			if (s2[i] == 0)
			{
				l2 = i-c2;
				break;
			}
		}	
		
		
		
		if (l1 > l2)
			cout << ">" << endl;
		else if (l1 < l2)
			cout << "<" << endl;
		else
		{
		
			if (comparar(s1,s2,c1,c2) == 1)
				cout << "<" << endl;
			else if (comparar(s1,s2,c1,c2) == 0)
				cout << "=" << endl;
			else
				cout << ">" << endl;
		}
	}
	return 0;
}



