#include <cstdlib>
#include <iostream>
#include <string>

using namespace std;

int n,k,pos,p,a[200100],b[200100],bridge[200100],mas[200100],fl[200100];
bool flag[200100],q[200100];

int DFS(int v)
{
    q[v] = true;
    int t;
    for (int i = 1; i < n; ++i)
    {
        if ((a[i] == v || b[i] == v) && fl[a[i]] != pos && fl[b[i]] != pos) return i; else
        if (b[i] == v && !q[a[i]]) t = DFS(a[i]); else
        if (b[i] == v && !q[a[i]] && t != -1) t = DFS(a[i]);
        if (t != -1) return i;
    }
    return -1;
}

int main()
{
    cin >> n;
    
    for (int i = 1; i < n; ++i) cin >> a[i] >> b[i];
    
    while (k < n-1)
    {
        ++pos;
        for (int i = 1; i < n; ++i) q[i] = false;
        for (int i = 1; i < n; ++i)
        if (!flag[i])
        {
            p = DFS(a[i]);
            if (p != -1)
            {
                ++k; 
                bridge[k] = i;
                fl[a[p]] = pos;
                fl[b[p]] = pos; 
            
                flag[i] = true;  
            }
        }
        mas[pos] = k;
    }
    
    cout << pos << endl;
    cout << mas[1] << ' ';
    for (int i = 1; i <= mas[1]; ++i) cout << bridge[i] << ' ';
    cout << endl;
    
    for (int i = 2; i <= pos; ++i)
    {
        cout << mas[i] - mas[i-1] << ' ';
        for (int j = mas[i-1]+1; j <= mas[i]; ++j) cout << bridge[j] << ' ';
        cout << endl;
    }
}
