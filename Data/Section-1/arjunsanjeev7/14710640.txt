/*	 Hello World!	*/

#include <bits/stdc++.h>

#define pb push_back
#define pf push_front
#define mp make_pair
#define f first
#define s second
#define let(x,a) __typeof(a) x(a)
#define all(a) (a).begin(),(a).end() 
#define endl '\n'
#define present(c,x) ((c).find(x) != (c).end()) 
#define tr(v,it) for( let(it,v.begin()) ; it != v.end() ; it++)
#define rtr(v,it) for( let(it,v.rbegin()) ; it != v.rend() ; it++)
#define rep1(i,n) for(int i=0; i<(int)n;i++)
#define rep2(i,a,b) for(int i=(int)a; i<=(int)b; i++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define LL long long int
#define PII pair<int,int>
#define VI vector<int>
#define inf INT_MAX

using namespace std;

void FastIO()
{
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	cout.tie(NULL);
}

int main()
{
	FastIO();
	int r,s,p;
	cin>>r>>s>>p;
	vector< vector < vector< double > > > dp(101,vector< vector< double > >(101, vector< double >(101,0)));
	vector< double > ans(3,0);
	dp[r][s][p]=1;
	for(double i=r;i>=0;i--)
	{
		for(double j=s;j>=0;j--)
		{
			for(double k=p;k>=0;k--)
			{
				double x=i*j+j*k+k*i;
				if(!i && !j && k) ans[2]+=dp[i][j][k];
				else if(!i && !k && j) ans[1]+=dp[i][j][k];
				else if(!j && !k && i) ans[0]+=dp[i][j][k];
				else if(x==0)
				{
					if(k) dp[i][j][k-1]+=dp[i][j][k];
					if(j) dp[i][j-1][k]+=dp[i][j][k];
					if(i) dp[i-1][j][k]+=dp[i][j][k];
				}
				else
				{
					if(k) dp[i][j][k-1]+=dp[i][j][k]*j*k/(i*j+j*k+k*i);
					if(j) dp[i][j-1][k]+=dp[i][j][k]*i*j/(i*j+j*k+k*i);
					if(i) dp[i-1][j][k]+=dp[i][j][k]*i*k/(i*j+j*k+k*i);
				}
			}
		}
	}
	rep1(i,3) cout<<setprecision(10)<<fixed<<ans[i]<<" ";
	cout<<endl;
	return 0;
}