#include <bits/stdc++.h>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int exam[100005], arr[100005], n, m;
int v[100005];
bool here[100005];

bool check(int x)
{
  setdp(v);
  setzero(here);
  int cnt = 0;
  for(int i=x;i>=0;i--)
  {
    if(exam[i] == 0) continue;
    if(v[exam[i]] == -1)
    {
      v[exam[i]] = true, here[i] = true;
      cnt++;
    }
  }
  if(cnt != m) return false;
  cnt = 0;
  for(int i=0;i<=x;i++)
  {
    if(!here[i])
    {
      cnt++;
      continue;
    }
    if(arr[exam[i] - 1] > cnt) return false;
    cnt -= arr[exam[i] - 1];
  }
  return true;
}

int main()
{
  cin >> n >> m;
  for(int i=0;i<n;i++) scanf("%d", &exam[i]);
  for(int i=0;i<m;i++) scanf("%d", &arr[i]);
  int L = 0, R = n - 1;
  if(!check(R))
  {
    cout << -1;
    return 0;
  }
  while(R > L)
  {
    int mid = L + (R - L) / 2;
    if(check(mid))
      R = mid;
    else L = mid + 1;
  }
  cout << L + 1;
  return 0;
}
