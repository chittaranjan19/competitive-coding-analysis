#include <iostream>

bool pn[1200001]={0};
bool pl[1200001]={0};
int dec[10]={1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000};

void prime_numbers(int);
void palindrome(int);

int main()
{
    using namespace std;
    int sizeArray=1200001, p=0, q=0, ans=-1, spn=0, spl=0;
    cin >> p >> q;
    prime_numbers(sizeArray);
    palindrome(sizeArray);
    for (int n=1 ; n<sizeArray; n++)
    {
        if (pn[n]==0)
            spn++;
        if (pl[n]==1)
            spl++;
        if (q*spn<=p*spl)
            ans=n;
    }
    if (ans!=-1)
        printf("%d\n", ans);
    else
        printf("Palindromic tree is better than splay tree\n");
    return 0;
}

void prime_numbers(int sizeArray)
{
    pn[0]=1;
    pn[1]=1;
    for (int j=4; j<=sizeArray; j++)
        if (!(pn[j]))
            if (!(j%2))
                pn[j]=1;
    for (int i=3; i*i<=sizeArray; i+=2)
        if (!(pn[i]))
            for (int j=i*i; j<=sizeArray; j+=2)
                if (!(pn[j]))
                    if (!(j%i))
                        pn[j]=1;
}

void palindrome(int sizeArray)
{
    for (int k=1; k<=9; k++)
        pl[k]=1;
    int n=1, r=0;
    for (; n<sizeArray; n++)
    {
        r=0;
        for (int i=1; n/i; i*=10)
            r++;
        
        int chislo[r];
        for (int i=r-1; i>=0; i--)
            chislo[r-1-i]=(n/dec[i])-(n/dec[i+1])*10;
        int kol=0;
        for (int k=0; k<r/2; k++)
            if (chislo[k]==chislo[r-1-k])
                kol++;
        if (kol==r/2)
            pl[n]=1;
    }
}