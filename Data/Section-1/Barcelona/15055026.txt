//  This code is written by Eric Sunli Chen ( OhWeOnFire ).
//  Don't copy my code, because my coding style is easy to recognize.
//  I hope my code will get 'Accepted'!

#include <algorithm>
#include <bitset>
#include <cctype>
#include <cerrno>
#include <clocale>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <limits>
#include <list>
#include <map>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <ostream>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <streambuf>
#include <string>
#include <utility>
#include <vector>
#include <cwchar>
#include <cwctype>

#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define rep(i,n) for(int i=0;i<n;i++)
#define fortodo(i,m,n) for(int i=m;i<=n;i++)
#define hash orzYJZ
#define exp orzTZN
#define generate orzTBY
#define next orzMX
#define sqr(x) ((x)*(x))
#define mem(x,y) memset((x),(y),sizeof(x))
#define abs(x) ((x)>0?(x):(-x))
#define get1(a) get_int(a)
#define get2(a,b) get1(a),get1(b)
#define get3(a,b,c) get1(a),get2(b,c)
#define printendl(a) print_int(a),puts("")
#define printspace(a) print_int(a),putchar(' ')

using namespace std;
typedef long long LL;
typedef unsigned long long uLL;
typedef long double LF;
typedef pair<int,int> pii;

const int inf=0x7fffffff;
const LL Linf=(1uLL<<63)-1;
const double EPS=1e-10;

namespace IOSpace
{
	void get_int(int &x)
	{
		char t=getchar();
		bool neg=false;
		x=0;
		for(; (t>'9'||t<'0')&&t!='-'; t=getchar());
		if(t=='-')neg=true,t=getchar();
		for(; t<='9'&&t>='0'; t=getchar())x=x*10+t-'0';
		if(neg)x=-x;
	}
	void get_int(LL &x)
	{
		char t=getchar();
		bool neg=false;
		x=0;
		for(; (t>'9'||t<'0')&&t!='-'; t=getchar());
		if(t=='-')neg=true,t=getchar();
		for(; t<='9'&&t>='0'; t=getchar())x=x*10+t-'0';
		if(neg)x=-x;
	}
	void print_int(int x)
	{
		if(x<0)putchar('-'),x=-x;
		short a[20]= {},sz=0;
		while(x>0)a[sz++]=x%10,x/=10;
		if(sz==0)putchar('0');
		for(int i=sz-1; i>=0; i--)putchar('0'+a[i]);
	}
	void print_int(LL x)
	{
		if(x<0)putchar('-'),x=-x;
		short a[20]= {},sz=0;
		while(x>0)a[sz++]=x%10,x/=10;
		if(sz==0)putchar('0');
		for(int i=sz-1; i>=0; i--)putchar('0'+a[i]);
	}
}
using namespace IOSpace;

const int maxlog=20;
const LL mod=1000000007;
const int maxn=300005;

vector<pair<pii,pii> >heng,shu,newheng,newshu;
int n;
pair<pii,pii> seg;
LL ans;
void go()
{
	for(int i=0,nxt; i<heng.size(); i=nxt)
	{
		for(nxt=i+1; nxt!=heng.size()&&heng[nxt].ff.ff==heng[i].ff.ff; nxt++);
		int begin=heng[i].ff.ss,end=heng[i].ss.ss;
		for(int j=i; j<nxt; j++)
		{
			if(heng[j].ff.ss>end+1)
			{
				newheng.pb(mp(mp(heng[i].ff.ff,begin),mp(heng[i].ff.ff,end)));
				begin=heng[j].ff.ss;
				end=heng[j].ss.ss;
			}
			else end=max(end,heng[j].ss.ss);
		}
		newheng.pb(mp(mp(heng[i].ff.ff,begin),mp(heng[i].ff.ff,end)));
	}
	for(int i=0; i<newheng.size(); i++)ans+=newheng[i].ss.ss-newheng[i].ff.ss+1;
	for(int i=0,nxt; i<shu.size(); i=nxt)
	{
		for(nxt=i+1; nxt!=shu.size()&&shu[nxt].ff.ss==shu[i].ff.ss; nxt++);
		int begin=shu[i].ff.ff,end=shu[i].ss.ff;
		for(int j=i; j<nxt; j++)
		{
			if(shu[j].ff.ff>end+1)
			{
				newshu.pb(mp(mp(begin,shu[i].ff.ss),mp(end,shu[i].ff.ss)));
				begin=shu[j].ff.ff;
				end=shu[j].ss.ff;
			}
			else end=max(end,shu[j].ss.ff);
		}
		newshu.pb(mp(mp(begin,shu[i].ff.ss),mp(end,shu[i].ff.ss)));
	}
	for(int i=0; i<newshu.size(); i++)ans+=newshu[i].ss.ff-newshu[i].ff.ff+1;
}
vector<pair<int,pii> > event;//time, insert or query or erase, number
set<int> line;//verticaltemplate < typename int >
struct BIT
{
	int c[maxn*2];
	int size;
	void Init(int n)
	{
		size=n;mem(c,0);
	}
	int Calc(int x)
	{
		int ans=0;
		for(; x!=0; x-=(x&-x))
			ans+=c[x];
		return ans;
	}
	int query(int l,int r)
	{
		return Calc(r)-Calc(l-1);
	}
	void add(int pos,int val)
	{
		for(; pos<=size; pos+=(pos&-pos))
			c[pos]+=val;
	}
}bit;
vector<int> vv;
int id(int x)
{
	return lower_bound(vv.begin(),vv.end(),x)-vv.begin()+1;
}
void go_2()
{
	for(int i=0; i<newheng.size(); i++)
	{
		event.pb(mp(newheng[i].ff.ss,mp(0,i)));
		event.pb(mp(newheng[i].ss.ss,mp(2,i)));
	}
	for(int i=0; i<newshu.size(); i++)event.pb(mp(newshu[i].ff.ss,mp(1,i)));
	sort(event.begin(),event.end());
	for(int i=0,x; i<event.size(); i++)
	{
		if(event[i].ss.ff==0)
			bit.add(id(newheng[event[i].ss.ss].ff.ff),1);
		else if(event[i].ss.ff==1)
		{
			x=event[i].ss.ss;
			ans-=bit.query(id(newshu[x].ff.ff),id(newshu[x].ss.ff));
		}
		else
			bit.add(id(newheng[event[i].ss.ss].ff.ff),-1);
	}
}
int main()
{
	get1(n);
	for(int i=1; i<=n; i++)
	{
		get2(seg.ff.ff,seg.ff.ss);
		get2(seg.ss.ff,seg.ss.ss);
		if(seg.ff>seg.ss)swap(seg.ff,seg.ss);
		if(seg.ff.ff==seg.ss.ff)heng.pb(seg);
		else shu.pb(seg);
		vv.pb(seg.ff.ff);
		vv.pb(seg.ss.ff);
	}
	sort(vv.begin(),vv.end());vv.erase(unique(vv.begin(),vv.end()),vv.end());
	bit.Init(vv.size()+5);
	sort(heng.begin(),heng.end());
	sort(shu.begin(),shu.end());
	go();
	go_2();
	printf("%I64d\n",ans);
	return 0;
}
/*
3
1 1 2 1
4 1 6 1
8 1 9 1
*/