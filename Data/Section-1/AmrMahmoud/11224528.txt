#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>
#include <fstream>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

set<pair<LL, LL> > s;
vector<int> v1, v2;

int main()
{
  ios_base::sync_with_stdio(0);
  int n, k, x;
  cin >> n >> k;
  for(int i=0;i<k;i++)
  {
    cin >> x;
    v1.pb(x);
  }
  cin >> k;
  for(int i=0;i<k;i++)
  {
    cin >> x;
    v2.pb(x);
  }
  int cnt = 0;
  while(1)
  {
    if(v2.size() == 0)
    {
      cout << cnt << " " << 1;
      return 0;
    }
    else if(v1.size() == 0)
    {
      cout << cnt << " " << 2;
      return 0;
    }
    cnt++;
    LL xx = 0, yy = 0;
    for(int i=0;i<v1.size();i++)
    {
      xx*=10;
      xx+=v1[i];
    }
    for(int i=0;i<v2.size();i++)
    {
      yy*=10;
      yy+=v2[i];
    }
    if(s.find(mp(xx, yy)) != s.end())
    {
      cout<<-1;
      return 0;
    }
    s.insert(mp(xx, yy));
    s.insert(mp(yy, xx));
    if(v1[0] > v2[0])
    {
      xx = v1[0], yy = v2[0];
      vector<int> vv1, vv2;
      for(int i=1;i<v1.size();i++) vv1.push_back(v1[i]);
      for(int i=1;i<v2.size();i++) vv2.push_back(v2[i]);
      v1 = vv1, v2 = vv2;
      v1.push_back(yy);
      v1.push_back(xx);
    }
    else
    {
      xx = v1[0], yy = v2[0];
      vector<int> vv1, vv2;
      for(int i=1;i<v1.size();i++) vv1.push_back(v1[i]);
      for(int i=1;i<v2.size();i++) vv2.push_back(v2[i]);
      v1 = vv1, v2 = vv2;
      v2.push_back(xx);
      v2.push_back(yy);
    }
  }
  return 0;
}
