using System;
using System.Linq;

namespace CF367B
{
	class Program
	{
		static int find(int m, int[] lst, int start, int end)
		{
			int length = end - start + 1;
			if (length == 1)
			{
				if (m >= lst[start])
					return start + 1;
				return start;
			}

			int z = start + length / 2;

			if (lst[z - 1] <= m && m < lst[z])
				return z;
			else if (m >= lst[z])
				return find(m, lst, z + 1, end);
			else
				return find(m, lst, start, z - 1);
		}

		static int task(int m, int n, int[] X)
		{
			if (m >= X[n - 1])
				return n;
			else if (m < X[0])
				return 0;
			else
				return find(m, X, 0, n - 1);
		}

		static void Main(string[] args)
		{
			var n = Convert.ToInt32(Console.ReadLine());
			int[] X = Console.ReadLine().Split(' ').Select(x => Convert.ToInt32(x)).OrderBy(x => x).ToArray();

			var q = Convert.ToInt32(Console.ReadLine());
			string res = "";
			for (int i = 0; i < q; i++)
				res += task(Convert.ToInt32(Console.ReadLine()), n, X) + "\n";
			Console.Write(res);
		}
	}
}
