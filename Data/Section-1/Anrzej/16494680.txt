#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

template<class T> T sqr(T x) { return x*x; }

const int N = 5222;

ld pi = 3.1415926535897932384626433832795;

ll n, m;
vector< pair<ll, char> > s, t;
int pf[422222];


int main()
{
	cin >> n >> m;
	for (int i = 0; i < n; i++){
		ll nm = 0;
		string ss;
		cin >> ss;
		char ch = ss[ss.size() - 1];
		for (int i = 0; i < ss.size() - 2; i++){
			nm = (ss[i] - '0') + nm * 10;
		}
		if (s.size() != 0 && s[s.size() - 1].sc == ch)
			s[s.size() - 1].fs += nm;
		else s.push_back(mp(nm, ch));
	}
	for (int i = 0; i < m; i++){
		ll nm = 0;
		string ss;
		cin >> ss;
		char ch = ss[ss.size() - 1];
		for (int i = 0; i < ss.size() - 2; i++){
			nm = (ss[i] - '0') + nm * 10;
		}
		if (t.size() != 0 && t[t.size() - 1].sc == ch)
			t[t.size() - 1].fs += nm;
		else t.push_back(mp(nm, ch));
	}
	if (t.size() == 1){
		ll ans = 0;
		for (int i = 0; i < s.size(); i++)
		{
			if (s[i].sc == t[0].sc && t[0].fs <= s[i].fs)
				ans += s[i].fs - t[0].fs + 1;
		}
		cout << ans;
	}
	else{
		ll ans = 0;
		int tk = t.size(), need = t.size();
		t.push_back(mp(0,'#'));
		for (int i = 0; i < s.size(); i++)
			t.push_back(s[i]);
		n = t.size();
		for (int i = 1; i < n; i++){
			int j = pf[i - 1];
			if (j == need - 1){
				if (t[i].sc == t[j].sc && t[j].fs <= t[i].fs)
					ans++;
			}
			while (j > 0 && t[i].sc != t[j].sc)
				j = pf[j - 1];
			if ((j == 0 && t[i].sc == t[j].sc && t[i].fs >= t[j].fs) || (t[i].fs == t[j].fs && t[i].sc == t[j].sc))
				j++;
			pf[i] = j;
		}
		cout << ans;
	}
	return 0;
}