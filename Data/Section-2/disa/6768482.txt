#include <string>
#include <vector>
#include <cmath>
#include <algorithm>
#include <iomanip>
#include <set>
#include <map>


using namespace std;

#if _DEBUG
#include <fstream>
ifstream cin ("input.txt");
ofstream cout ("output.txt");
#else
#include <iostream> 
#endif

bool d[100002];

int kol(int n) {
	int ans = 0;
	while(n > 0) {
		ans++;
		if(n % 2 == 1)
			break;
		n /= 2;
	}
	return ans - 1;
}

int power(int n) {
	int ans = 1;
	for(int i = 0; i < n; i++) {
		ans *= 2;
	}
	return ans;
}

int way[100002];


int main () {
	int sum, n;
	cin >> sum >> n;
	for(int i = 0; i <= sum; i++)
		d[i] = false;
	d[0] = true;
	for(int i = 1; i <= n; i++) {
		int st = kol(i);
		int m = power(st);
		for(int j = sum; j >= 0; j--) {
			if(d[j]) {
				d[j + m] = true;
				way[j + m] = j;
			}
		}
		if(d[sum])
			break;
	}
	if(!d[sum]) {
		cout << -1;
		return 0;
	}
	int now = sum;
	vector <int> ans;
	while(now != 0) {
		ans.push_back(now - way[now]);
		now = way[now];
	}
	cout << ans.size() << '\n';
	for(int i = ans.size() - 1; i >= 0; i--) {
		cout << ans[i] << ' ';
	}





	return 0;
}