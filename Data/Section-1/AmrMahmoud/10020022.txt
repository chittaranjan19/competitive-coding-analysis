#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

set<pair<pair<int, int>, int> > s;
int b1 = 13, b2 = 17;
int m1 = mod, m2 = mod + 2;
int p1[600005];
int p2[600005];

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("chipmunks.in", "r", stdin);
  //freopen("chipmunks.out", "w", stdout);
  int n, q;
  cin >> n >> q;
  string in;
  int h1 = 0, h2 = 0;
  p1[0] = p2[0] = 1;
  for(int i=1;i<600005;i++)
  {
    p1[i] = (p1[i-1] * 1LL * b1) % m1;
    p2[i] = (p2[i-1] * 1LL * b2) % m2;
  }
  for(int i=0;i<n;i++)
  {
    cin >> in;
    h1 = 0, h2 = 0;
    for(int j=0;j<in.size();j++)
    {
      h1 = ((h1 * 1LL * b1) + in[j] - 'a' + 1) % m1;
      h2 = ((h2 * 1LL * b2) + in[j] - 'a' + 1) % m2;
    }
    s.insert(mp(mp(h1, h2), in.size()));
  }
  while(q--)
  {
    cin >> in;
    bool test = 0;
    h1 = 0, h2 = 0;
    for(int j=0;j<in.size();j++)
    {
      h1 = ((h1 * 1LL * b1) + in[j] - 'a' + 1) % m1;
      h2 = ((h2 * 1LL * b2) + in[j] - 'a' + 1) % m2;
    }
    for(int j=0;j<in.size() && !test;j++)
    {
      for(char c = 'a';c <= 'c' && !test; c++)
      {
        if(c == in[j]) continue;
        int t1 = h1;
        int t2 = h2;
        t1 = (t1 + (p1[in.size() - j - 1] * 1LL * (c - in[j])) % m1) % m1;
        t2 = (t2 + (p2[in.size() - j - 1] * 1LL * (c - in[j])) % m2) % m2;
        if(t1 < 0) t1 = (t1 + m1) % m1;
        if(t2 < 0) t2 = (t2 + m2) % m2;
        test = (s.find(mp(mp(t1, t2), in.size())) != s.end());
      }
    }
    if(test) cout << "YES\n";
    else cout << "NO\n";
  }
  return 0;
}