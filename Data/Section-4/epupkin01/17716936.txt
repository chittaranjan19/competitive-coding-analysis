#include <iostream>
#include <climits>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(b, 0, sizeof(arr)); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // getchar(), gets()
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); a - массв, n - кол-во эл-тов
#include <iomanip>      // setw()
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#include <memory>       // shared_ptr<>, uniqu_ptr<>
#include <iterator>     // ostream_iterator<int, char> our_iter(cout, " ");
#include <set>
#include <map>
#include <list>
#include <queue>
#define SRT srand(int(time(0)))
using namespace std;
typedef long long ll;
typedef long double ld;
ld pi = 3.14159265358979323;
typedef unsigned long long ull;
int main()
{
    const int S = 10001;
    int n = 0, amount = 0;
    bool a[S] = {0};
    char s[S], c;
    set<string> st;
    set<string>::iterator it;
    while ((c = getchar()) != '\n')
    {
        s[n] = c;
        ++n;
    }
    s[n] = '\0';
    a[n-1] = true;
    string temp;
    for (int i = n - 1; i > 4; --i)
    {
        if (a[i])
        {
            if (i - 1 > 4)
            {
                temp = s[i-1];
                temp += s[i];
                if ((it = st.find(temp)) == st.end())
                {
                    ++amount;
                    st.insert(temp);
                    a[i-2] = true;
                }
            }
            if (i - 2 > 4)
            {
                temp = s[i-2];
                temp += s[i-1];
                temp += s[i];
                if ((it = st.find(temp)) == st.end())
                {
                    ++amount;
                    st.insert(temp);
                    a[i-3] = true;
                }
            }
        }
    }
    cout << amount << '\n';
    for (it = st.begin(); it != st.end(); ++it)
        cout << *it << '\n';
    return 0;
}