#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;
const double pi = 3.14159265358979323846;

map<double, int> m1;
double r[maxn], h[maxn], vol[maxn]; 
double st[maxn*10];

void init(int s, int e, int node)
{
	if(s==e){
		st[node] = 0;
		return;
	}
	int mid, lc, rc;
	mid = (s+e)>>1;
	lc = 2*node + 1;
	rc = lc+1;
	init(s, mid, lc);
	init(mid+1, e, rc);
	st[node] = 0;
}

void update(int s, int e, int q, int node, double val)
{
	if(s>e || s>q || q>e)
		return;
	if(s==e){
		st[node] = max(st[node], val);
		return;
	}
	int mid, lc, rc;
	mid = (s+e)>>1;
	lc = 2*node + 1;
	rc = lc+1;
	update(s, mid, q, lc, val);
	update(mid+1, e, q, rc, val);
	st[node] = max(st[lc], st[rc]);
}

double query(int s, int e, int qs, int qe, int node)
{
	if(s>e || s>qe || qs>e)
		return 0;
	if(s>=qs && qe>=e)
		return st[node];
	int mid, lc, rc;
	mid = (s+e)>>1;
	lc = 2*node + 1;
	rc = lc+1;
	double ret = max(query(s, mid, qs, qe, lc), query(mid+1, e, qs, qe, rc));
	return ret;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int n, i, j, ind;
	double ans=0, x;
	sd(n);
	for(i=1; i<=n; i++){
		scanf("%lf%lf", &r[i], &h[i]);
		vol[i] = r[i]*r[i]*h[i]*pi;
		m1[vol[i]] = 1;
	}
	init(0, n-1, 0);
	j = 0;
	for(auto it=m1.begin(); it!=m1.end(); ++it)
		it->s = j++;
	for(i=1; i<=n; i++){
		ind = m1[vol[i]];
		x = query(0, n-1, 0, ind-1, 0);
		update(0, n-1, ind, 0, x+vol[i]);
		ans = max(ans, x+vol[i]);
	}
	printf("%.10lf\n", ans);
	return 0;
}
