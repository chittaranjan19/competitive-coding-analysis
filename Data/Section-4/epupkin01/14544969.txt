#include <iostream>
#include <string>

int alphabet[26] = {0};
std::string word;

int main() {
    using namespace std;
    std::cin >> word;
    int n = int(word.length());
    for (int i = 0; i < n; i++) {
        alphabet[word[i] - 97]++;
    }
    int chngs = 0, koordinates[26] = {0};
    for (int i = 0, j = 0; i < 26; i++) {
        //printf("%d ", alphabet[i]);
        if (alphabet[i] % 2) {
            chngs++;
            koordinates[j] = i;
            j++;
        }
    }
    /*
    printf("\n");
    for (int i = 0; i < chngs; i++) {
        printf("%d ", koordinates[i]);
    }
    printf("\n");
     */
    int minChngs = chngs / 2;
    if (chngs % 2) {
        if (!(alphabet[koordinates[chngs - 1]] % 2))
            minChngs++;
    }
    for (int i = 0, j = chngs - 1; i < minChngs && j >= 0; i++, j--) {
        alphabet[koordinates[j]]--;
        alphabet[koordinates[i]]++;
    }
    /*
    for (int i = 0; i < 26; i++) {
        printf("%d ", alphabet[i]);
    }
     */
    int number = 0, odd = -1;
    for (int k = 0; k < 26; k++) {
        if (alphabet[k] % 2) {
            odd = k;
        }
        alphabet[k] /= 2;
        if (k < 26) {
            while (alphabet[k]) {
                word[number] = word[n - number - 1] = k + 97;
                number++;
                alphabet[k]--;
            }
        }
    }
    if (odd != -1) {
        word[n / 2] = odd + 97;
    }
    /*
    printf("\n");
    printf("chngs = %d; n = %d\n", chngs, n);
     */
    std::cout << word << '\n';
    return 0;
}
// [97; 122] = letters
/*
 abbccdeg
 abcddcba
 
 aabcd
 abcba
 
 aabbcccdd
 abcdcdcba
 
 aaabbbhhlhlugkjgckj
 aabbghjklclkjhgbbaa
 
 zza
 zaz
 */