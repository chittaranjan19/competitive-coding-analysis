#include <iostream>
using namespace std;
int p[200024], n;
int father[200024], weight[200024];
int find(int x)
{   return father[x] = (x == father[x]) ? x : find(father[x]);
}
int merge(int x, int y)
{   x = find(x); y = find(y);
    if (x == y) return 0;
    father[x] = y;
    return 1;
}
int main()
{   
    cin >> n;
    int root = 0, cnt = 0;
    for (int i = 1; i <= n; ++i) father[i] = i, weight[i] = 1;
    for (int i = 1; i <= n; ++i)
    {   cin >> p[i];
        if (i == p[i] && root == 0) root = i;
        else if (i == p[i])
        {   merge(i, root);
            p[i] = root;
            cnt++;
        }
        else if(!merge(i, p[i])) 
        {   cnt++; 
            int jj = find(i);
            if (root == 0) { root = i; p[i] = i; }
            else if (find(i) != find(root)){ 
                p[i] = root;
                merge(i, root);
            }
            else {
                 for (int j = 1; j <= n; ++j)
                     if (find(j) != jj)
                     {  
                         p[i] = j;
                         merge(i, j);
                         break;
                     }
            }
        }
    }
    
    int setroot = find(root);

    for (int i = 1; i <= n; ++i)
        if (find(i) != setroot)
        {   int jj = find(i);
            cnt++;
            p[jj] = root;
            merge(jj, setroot);
        }

    cout << cnt << endl;
    for (int i = 1; i <= n; ++i)
        cout << p[i] << " ";
    cout << endl;
}
