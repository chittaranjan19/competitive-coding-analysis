#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;
int f[MAXN][3][2];
int n;
string s;
int a[MAXN];
void mmax(int &a, int b)
{
    if (a < b) a = b;
}

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("604C.inp", "r", stdin);
    freopen("604C.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n >> s;
    s = '=' + s;
    FORE(i, 1, n) a[i] = s[i] - '0';
    f[1][0][a[1]] = 1;
    FOR(i, 1, n) FORE(k, 0, 2) FORE(x, 0, 1) if (f[i][k][x]){
        if (k < 2) mmax(f[i][k + 1][x], f[i][k][x]);
        if (k == 1){
            if ((x ^ 1) == (a[i + 1] ^ 1)) mmax(f[i + 1][k][x ^ 1], f[i][k][x] + 1);
        } else{
            //if (i == 1 && k == 0 && x == 1) cout<<"wtf"<<(x ^ 1 == a[i + 1])<<"??"<<i + 1<<" "<<k<<" "<<(x^1)<<endl;
            if ((x ^ 1) == a[i + 1]) mmax(f[i + 1][k][x ^ 1], f[i][k][x] + 1);
        }
        mmax(f[i + 1][k][x], f[i][k][x]);
    }
    //cout << f[2][0][0]<<"wtf"<<endl;
    cout << max(f[n][2][0], f[n][2][1]);
    return 0;
}

