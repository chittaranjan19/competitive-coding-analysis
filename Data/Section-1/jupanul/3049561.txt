#include<stdio.h>
#include<algorithm>
using namespace std;

struct MyStruct {int f,k;};
MyStruct a[100005];
int nr[100005];
class MyComp
{
    public:inline bool operator()(const MyStruct &a,const MyStruct &b)
    {
        return a.k<b.k;
    }
};
int log4(int f)
{
    int i;
    if(f<=4) return 1;
    if(f<=16) return 2;
    if(f<=64) return 3;
    if(f<=256)return 4;
    if(f<=1024) return 5;
    if(f<=4096) return 6;
    if(f<=4096*4) return 7;
    if(f<=4096*16)return 8;
    if(f<=4096*64)return 9;
    if(f<=4096*256)return 10;
    if(f<=4096*1024)return 11;
    if(f<=4096*4096)return 12;
    if(f<=4096*4096*4)return 13;
    if(f<=4096*4096*16)return 14;
    if(f<=4096*4096*64)return 15;
}
int acop(int k,int f)
{
    return k+log4(f);
}
int main()
{
    int n,i,s;
    //freopen("f.in","r",stdin);
    scanf("%d",&n);
    for(i=1;i<=n;i++)
        scanf("%d%d",&a[i].k,&a[i].f);
    sort(a+1,a+n+1,MyComp());
    s=0;
    for(i=n;i>=1;i--)
        s=max(s,acop(a[i].k,a[i].f));
    printf("%d\n",s);
    return 0;
}
