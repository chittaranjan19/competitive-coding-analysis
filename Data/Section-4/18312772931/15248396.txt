#include<iostream>
#include<algorithm>
#include<cstring>
#include<string>
#include<vector>
#include<cstdio>
#include<cmath>
using namespace std;
#define CRL(a) memset(a,0,sizeof(a))
typedef unsigned __int64 ll;
#define T 100005
#define mod 1000000007

int dp[T],v[T];

struct node
{
	int L,R;
	bool operator<(const node& a)const{
		return L<a.L||(L==a.L&&R<a.R);
	}
}a[T];


int main()
{
#ifdef zsc
    freopen("input.txt","r",stdin);
#endif

	int n,m,i,j,k,rc,lc;
	while(~scanf("%d%d",&n,&m))
	{
		for(i=0;i<=n;++i){
			dp[i] = 1,v[i] = 0;
		}
		for(i=0;i<m;++i){
			scanf("%d%d",&rc,&lc);
			v[lc]++,v[rc]++;
			if(lc<rc){
				lc ^= rc;
				rc = lc^rc;
				lc = rc^lc;
			}
			a[i].L = rc,a[i].R = lc;
			/*dp[lc] = max(dp[lc],dp[rc]+1);*/
		}

		sort(a,a+m);

		for(i=0;i<m;++i){
			dp[a[i].R] = max(dp[a[i].R],dp[a[i].L]+1);
		}

		ll ma=0;
		for(i=1;i<=n;++i){
			ma = max(ma,(ll)dp[i]*(ll)v[i]);
		}
		printf("%I64d\n",ma);
	}

    return 0;
}