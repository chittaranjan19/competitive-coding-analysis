#include <iostream>
#include <stdio.h>
#include <string.h>
using namespace std;

int road[2005];
int cnt[2005];

int serch(int m,int num)
{
    int val=1;
    for(int i=1 ; i<=m ; i++)
    {
        if(cnt[i]<num&&cnt[i]<cnt[val])
            val=i;
    }
    return val;
}

int main()
{
    int m,n;
    memset(road,0,sizeof(road));
    memset(cnt,0,sizeof(cnt));
    scanf("%d %d",&n,&m);
    int num=n/m;
    for(int i=0 ; i<n ; i++)
    {
        scanf("%d",&road[i]);
        if(road[i]<=m)
        {
            cnt[road[i]]++;
        }
    }
    int change=0;
    int save=n%m;
    int b=serch(m,num+(save>0));
    for(int i=0 ; i<n ; i++)
    {
        if(road[i]>m)
        {
            change++;
            road[i]=b;
            cnt[b]++;
            if(cnt[b]>=num+(save>0))
            {
                save--;
                b=serch(m,num+(save>0));
            }
        }
    }
    b=serch(m,num);
    if(cnt[b]<num)
    {
        for(int i=0 ; i<n ; i++)
        {
            if(cnt[road[i]]>num+1&&road[i]!=b)
            {
                cnt[road[i]]--;
                cnt[b]++;
                road[i]=b;
                change++;
                if(cnt[b]>=num)
                {
                    b=serch(m,num);
                }
            }
        }
    }
    for(int i=0 ; i<m ; i++)
    {
        if(cnt[i]>num+1)
        {
            b=serch(m,num+1);
            for(int j=0 ; j<n ; j++)
            {
                if(road[j]==i)
                {
                    change++;
                    road[j]=b;
                    cnt[i]--;
                    cnt[b]++;
                    if(cnt[b]==num+1)
                    {
                        b=serch(m,num+1);
                    }
                    if(cnt[i]==num+1)
                        break;
                }
            }
        }
    }
    /*
    if(cnt[b]>num+1)
    {

        for(int i=0 ; i<n ; i++)
        {
            if(cnt[road[i]]>num+1)
            {
                cnt[road[i]]--;
                cnt[b]++;
                road[i]=b;
                change++;
                if(cnt[b]>=num+1)
                {
                    b=serch(m,num+1);
                }
            }
        }
    }
*/
    printf("%d %d\n",num,change);
    printf("%d",road[0]);
    for(int i=1 ; i<n ; i++)
    {
        printf(" %d",road[i]);
    }
    printf("\n");
    return 0;
}
