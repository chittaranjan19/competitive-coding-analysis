#include <bits/stdc++.h>

using namespace std;

long long a1,b1,a2,b2,L,R,A,B,g,C,x,y,p;
long double l1,l2,l3,l4;
long long lim1,lim2;

void gcd(long long a, long long b, long long *d, long long *x, long long *y){
    if(b==0){
        *d=a;
        *x=1;
        *y=0;
    }
    else{
        long long x0,y0;
        gcd(b,a%b,d,&x0,&y0);
        *x=y0;
        *y=x0-(a/b)*y0;
    }
}

int main()
{
    cin >> a1 >> b1 >> a2 >> b2 >> L >> R;
    A=a1;B=-a2;C=b2-b1;
    gcd(A,B,&g,&x,&y);
    //cout << A << ' ' << B << ' ' << C << ' ' << g << ' ' << x << ' ' << y << ' ' <<  A/g << ' ' <<  B/g << '\n';
    if(C%g) cout << 0;
    else{
        //cout << x*C/g << ' ' << y*C/g << ' ' << '\n';
        l1=g*(L-b1-a1*x*C/g)/(long double)(B*a1);
        l2=g*(R-b1-a1*x*C/g)/(long double)(B*a1);
        if((g<0 && (B*a1)>0) || (g>0 && (B*a1)<0)) swap(l1,l2);
        l3=g*(L-b2-a2*y*C/g)/(long double)((-A)*a2);
        l4=g*(R-b2-a2*y*C/g)/(long double)((-A)*a2);
        if((g<0 && ((-A)*a2)>0) || (g>0 && ((-A)*a2)<0)) swap(l3,l4);
        //cout << l1 << ' ' << l2 << ' ' << l3 << ' ' << l4 << '\n';
        l1=max(l1,l3);
        l2=min(l2,l4);
        l3=(-x)*C/(long double)B;
        l4=y*C/(long double)A;
        if(g>0 && B>0) l1=max(l1,l3);
        else if(g>0 && B<0) l2=min(l2,l3);
        else if(g<0 && B>0) l2=min(l2,l3);
        else if(g<0 && B<0) l1=max(l1,l3);
        if(g>0 && (-A)>0) l1=max(l1,l4);
        else if(g>0 && (-A)<0) l2=min(l2,l4);
        else if(g<0 && (-A)>0) l2=min(l2,l4);
        else if(g<0 && (-A)<0) l1=max(l1,l4);
        lim1=(long long)l1;
        if(l1>lim1) lim1++;
        lim2=(long long)l2;
        if(l2<lim2) lim2--;
        //cout << lim1 << ' ' << lim2 << '\n';
        if(lim1>lim2) cout << 0;
        else cout << lim2-lim1+1;
        /*for(int i=l3;i<=l4;i++){
            cout << (x*C+B*i)/g << ' ' << (y*C-A*i)/g << ' ';
        }
        cout << '\n';
        for(int i=l3;i<=l4;i++){
            cout << a1*((x*C+B*i)/g)+b1 << ' ' << a2*((y*C-A*i)/g)+b2 << ' ';
        } */
    }
}
