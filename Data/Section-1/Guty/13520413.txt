#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int allVectors (vector<bool> v, int i, tint n, tint l, tint r, tint x, vector<tint> c)
{
	if (i == n)
	{
		tint suma = 0;
		tint mini = 1000000000000;
		tint maxi = -1;
		forn(j,v.size())
		{
			if (v[j])
			{
				suma += c[j];
				mini = min(mini,c[j]);
				maxi = max(maxi,c[j]);
			}
		}
		if (maxi - mini >= x && l <= suma && suma <= r)
			return 1;
		else
			return 0;
	}
	else
	{
		vector<bool> aux = v;
		v[i] = true;
		return allVectors(v,i+1,n,l,r,x,c) + allVectors(aux,i+1,n,l,r,x,c);
	}
	
}

int main()
{
	tint n,l,r,x;
	cin >> n >> l >> r >> x;
	vector<tint> c (n);
	forn(i,n)
		cin >> c[i];
	vector<bool> v (n,false);
	cout << allVectors(v,0,n,l,r,x,c) << endl;
	return 0;
}



