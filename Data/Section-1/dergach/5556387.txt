#include <stdio.h>
#include <math.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <sstream>
#include <algorithm>
#include <iostream>
#include <queue>
using namespace std;

#define INF 1000000000

int n, m, K;
char a[505][505];
int d[505][505];
vector <int> v[250005];
vector <int> p;
int dx[] = {-1, 1, 0, 0};
int dy[] = {0, 0, 1, -1};

int main()
{
    scanf("%d %d %d", &n, &m, &K);
    for(int i = 0; i < n; i++)
        scanf("%s", a[i]);
    queue <int> q;

    for(int i = 0; i < n; i++)
        for(int j = 0; j < m; j++)
            d[i][j] = INF;

    bool found = false;
    for(int i = 0; i < n && !found; i++)
        for(int j = 0; j < m && !found; j++)
            if(a[i][j] == '.')
            {
                q.push(i);
                q.push(j);
                d[i][j] = 0;
                found = true;
            }

    while(!q.empty())
    {
        int i = q.front(); q.pop();
        int j = q.front(); q.pop();
        v[d[i][j]].push_back(i);
        v[d[i][j]].push_back(j);
        for(int k = 0; k < 4; k++)
            if(i + dx[k] >= 0 && i + dx[k] < n && j + dy[k] >= 0 && j + dy[k] < m && a[i+dx[k]][j+dy[k]] == '.' && d[i+dx[k]][j+dy[k]] > 1 + d[i][j])
            {
                d[i+dx[k]][j+dy[k]] = 1 + d[i][j];
                q.push(i+dx[k]);
                q.push(j+dy[k]);
            }
    }
    
    for(int i = n * m; i >= 0; i--)
        for(int j = 0; j < v[i].size(); j += 2)
        {
            p.push_back(v[i][j]);
            p.push_back(v[i][j+1]);
        }
    for(int i = 0; i < 2 * K; i += 2)
        a[p[i]][p[i+1]] = 'X';
    for(int i = 0; i < n; i++)
        puts(a[i]);
    return 0;
}
