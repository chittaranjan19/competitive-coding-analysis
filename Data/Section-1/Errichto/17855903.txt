#include<bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define mp make_pair
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
const int inf = 1e9 + 5;
const int nax = 2e5 + 5;

int t[nax], lewy[nax], prawy[nax];

int main() {
	int n;
	scanf("%d", &n);
	REP(i, nax) lewy[i] = n + 1;
	RI(i, n) {
		scanf("%d", &t[i]);
		prawy[t[i]] = i;
	}
	FORD(i,n,1) lewy[t[i]] = i;
	int A = n + 1, B = 0;
	ll total = 0;
	FORD(val, 200 * 1000, 1) {
		int le = n+1, pr = 0;
		for(int x = val; x < nax; x += val) {
			mini(le, lewy[x]);
			maxi(pr, prawy[x]);
		}
		if(le >= pr) continue;
		//printf("> %d %d\n", le, pr);
		if(A == n + 1 && B == 0) {
			int tmp = pr - le - 1;
			total += (ll) tmp * (tmp + 1) / 2 * val;
			mini(A, le);
			maxi(B, pr);
		}
		else {
			int tmp = B - A + 1;
			ll memo = (ll) tmp * (tmp + 1) / 2;
			//printf("%d ", tmp);
			mini(A, le);
			maxi(B, pr);
			//printf("%d \n", tmp);
			tmp = B - A + 1;
			ll ple = (ll) tmp * (tmp + 1) / 2 - memo;
			total += ple * val;
		}
	}
	printf("%lld\n", total);
	return 0;
}
