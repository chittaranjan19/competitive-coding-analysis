#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
#include <fstream>
#include <tuple>
#include <iomanip>

#include <unordered_set>
#include <unordered_map>

using namespace std;

#define forn(i,n) for (int i = 0; i < int(n); i++)
#define ford(i,n) for (int i = int(n) - 1; i >= 0; i--)
#define fore(i,l,r) for (int i = int(l); i <= int(r); i++)
#define all(a) a.begin(), a.end()
#define sz(a) int(a.size())
#define mp make_pair
#define pb push_back
#define ft first
#define sc second

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pt;

const double pi = acos(-1.0);
const int INF = 1000000000;
const int MAX = 100007;
const int MAX2 = 2000000;
const int inf = (int) 1e9 + 5;
const long long mod =  1e9 + 7;
const int BASE = 10;
const int ST = 1000003;
const int CNT = 100;
const double eps=1e-9;
const long long base = 2204234849;
const long long l_inf = (long long) 4e18;
const int logn = 30;


int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    //forn(i,n) scanf("%d", &name);
    //forn(i,m) scanf("%d", &name);
    //forn(i,n) forn(i,m) scanf("%d", &name);
    long long n,sum=0;
    int q[1000001];
    cin >> n;
    forn(i, n) {cin >> q[i];sum+=q[i];}
    sort(q,q+n);
    long long sum1=0,sum2=0,sum3=0;
    int e=sum/3;
    for (int i=n-1;i>=0;i--)
    {
        if (sum1+q[i]<=e) sum1+=q[i];
        else if (sum2+q[i]<=e) sum2+=q[i];
        else if (sum3+q[i]<=e) sum3+=q[i];
        else if (sum1<=sum2 && sum1 <=sum3) sum1+=q[i];
        else if (sum2<=sum1 && sum2 <=sum3) sum2+=q[i];
        else sum3+=q[i];
    }
    cout << sum1-sum2+1-sum3;
    return 0;
}