#include <iostream>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // without cin cout
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); a - массв, n - кол-во эл-тов
#include <cstdlib>      // min() max()
#include <iomanip>      // setw()
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#define SRT srand(int(time(0)))
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
using namespace std;
int main()
{
    const int S = 200000;
    int n, m, s, d, a[S] {}, dist[3 * S] {};
    cin >> n >> m >> s >> d;
    for (int i = 0; i < n; ++i)
        cin >> a[i];
    sort(a + 0, a + n);
    if (a[0] - 1 < s)
    {
        cout << "IMPOSSIBLE\n";
        return 0;
    }
    dist[0] = a[0] - 1;
    int runner = a[0] - 1, let = 1, cmnds = 1;
    while (let < n)
    {
        while (a[let] - a[let-1] - 2 < s && let < n)
        {
            if (a[let-1] + 1 - runner > d)
            {
                cout << "IMPOSSIBLE\n";
                return 0;
            }
            ++let;
        }
        if (a[let-1] + 1 - runner > d)
        {
            cout << "IMPOSSIBLE\n";
            return 0;
        }
        if (let >= n) break;
        dist[cmnds++] = a[let-1] + 1 - runner;
        dist[cmnds++] = a[let] - a[let-1] - 2;
        runner = a[let++] - 1;
    }
    dist[cmnds++] = a[n-1] + 1 - runner;
    if (a[n-1] + 1 != m)
        dist[cmnds++] = m - a[n-1] - 1;
    for (int i = 0; i < cmnds; ++i)
    {
        if (i % 2 == 0)
            cout << "RUN " << dist[i] << '\n';
        else
            cout << "JUMP " << dist[i] << '\n';
    }
    return 0;
}