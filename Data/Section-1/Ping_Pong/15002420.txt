#include <bits/stdc++.h>
#include <iostream>
#include <cstdio>
#include <stdlib.h>
#include <cmath>
#include <algorithm>

using namespace std;
const int inf = (int)1e9;

int main()
{
    //freopen("slalom.in", "r", stdin);
    //freopen("slalom.out", "w", stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    vector<int> v;
    for (int i = 1; i <= 1000000; i++)
    {
        bool b = true;
        for (int x = i; x > 0; x /= 10)
            if (x % 10 > 1)
            {
                b = false;
                break;
            }
        if (b)
            v.push_back(i);
    }
    int n;
    cin >> n;
    int dp[n + 1];
    for (int i = 0; i <= n; i++)
        dp[i] = inf;
    dp[0] = 0;
    for (int i = 1; i <= n; i++)
        for (int j = 0; j < v.size() && v[j] <= i; j++)
            dp[i] = min(dp[i], dp[i - v[j]] + 1);
    vector<int> ans;
    int curr = n;
    while (curr > 0)
        for (int j = 0; j < v.size() && v[j] <= curr; j++)
            if (dp[curr - v[j]] + 1 == dp[curr])
            {
                ans.push_back(v[j]);
                curr = curr - v[j];
            }
    reverse(ans.begin(), ans.end());
    cout << ans.size() << endl;
    for (int i = 0; i < ans.size(); i++)
        cout << ans[i] << " ";
    return 0;
}