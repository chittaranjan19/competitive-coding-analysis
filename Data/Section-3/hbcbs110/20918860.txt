#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>
#include <algorithm>
#include <queue>
#include <map>
#include <set>
#include <vector>
#include <iostream>
using namespace std;
const double pi=acos(-1.0);
double eps=0.000001;
typedef long long  ll;
struct node
{
    int v;
    node *r,*d;
};
node aa[1005][1005];
int main()
{

    int n,m,q;
    cin>>n>>m>>q;
    for (int i=0; i<=n; i++) aa[i][0].r=&aa[i][1];
    for (int i=0; i<=m; i++) aa[0][i].d=&aa[1][i];
    for (int i=1; i<=m; i++) aa[0][i].r=&aa[0][i+1];
    for (int i=1; i<=n; i++) aa[i][0].d=&aa[i+1][0];

    for (int i=1; i<=n; i++)
        for (int j=1; j<=m; j++)
        {
            scanf("%d",&aa[i][j].v);
            aa[i][j].r=&aa[i][j+1];
            aa[i][j].d=&aa[i+1][j];
        }

    int a,b,c,d,h,w;
    while(q--)
    {
        scanf("%d%d%d%d%d%d",&a,&b,&c,&d,&h,&w);
        node *p1,*p2,*p3,*p4;
        p3=&aa[a-1][0];
        p4=&aa[c-1][0];
        for (int i=1; i<b; i++) p3=p3->r;
        for (int i=1; i<d; i++) p4=p4->r;

        p1=p3->r,p2=p4->r;
        for (int i=1; i<=w; i++)
        {
            swap(p1->d,p2->d);
            if (i<w)
            {
                p1=p1->r;
                p2=p2->r;
            }
        }
        p1=p1->d,p2=p2->d;
        for (int i=1; i<=h; i++)
        {
            swap(p1->r,p2->r);
            p1=p1->d;
            p2=p2->d;
        }

        p1=p3->d,p2=p4->d;
        for (int i=1; i<=h; i++)
        {
            swap(p1->r,p2->r);
            if (i<h)
            {
                p1=p1->d;
                p2=p2->d;
            }
        }
        p1=p1->r,p2=p2->r;
        for (int i=1; i<=w; i++)
        {
            swap(p1->d,p2->d);
            p1=p1->r;
            p2=p2->r;
        }

    }
    node *p;
    for (int i=1; i<=n; i++)
    {
        p=aa[i][0].r;
        for (int j=1; j<=m; j++)
        {
            printf("%d ",p->v);
            p=p->r;
        }
        printf("\n");
    }
    printf("\n");


    return 0;

}
