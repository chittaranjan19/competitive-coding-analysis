#include <stdio.h>
#include<stdlib.h>
#include<malloc.h>
#include<string.h>
#include<math.h>
#include<limits.h>
struct node{
    int info;
    struct node *next;
};
typedef struct node *que;
que getnode(){
    que p;
    p=(que)malloc((sizeof(struct node)));
    return p;
}

void freenode(que p){
    free(p);
}

void insert1(que *plist,int x){
    que q,w;
    q=getnode();    
    q->info=x;
 if(*plist==NULL){
    
    q->next=*plist;
    *plist=q;
}
else{
w=*plist;que m;
while(w->info<x&&w->next!=NULL){
    m=w;
w=w->next;}
if(w->next==0){
    if(w->info<=x){q->next=NULL;w->next=q;}
    else{q->next=w;m->next=q;}
}
else{
q->next=w;
m->next=q;}
}
    
}

void remove1(que *plist,int px){
    que p;
    
    if(*plist==NULL){
        printf("\nqueue is empty");
        exit(1);
    }
    p=*plist;
    if(p->info==px)
    *plist=p->next;
    while(p->info!=px)p=p->next;
    
    freenode(p);
}


int main(void) {
	// your code goes here
	que qt;
	int n;
	scanf("%d",&n);
	int i;
	for(i=0;i<n;i++){
	    char c;
	    int t;
	    scanf("%c ",&c);
	    scanf("%d",&t);
	    if(c=='+')insert1(&qt,t);
	    if(c=='-')remove1(&qt,t);
	    if(c=='?'){
	        
	        int k=-1,y;
	        que m=qt;
	        while(m->next!=NULL){ y=t^m->info;if(y>k)k=y;m=m->next;}
	        y=t^m->info;if(y>k)k=y;
	        printf("%d\n",k);
	    }
	}
	return 0;
}

