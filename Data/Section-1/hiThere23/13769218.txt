#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 5009
#define maxC 2000000000
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define bit(x, i) ((x >> i) & 1)

using namespace std;
int n, m, r, le = 0, numR[mn], sumR = 0, numS[mn], dem = 0, leng[mn];
map<string, int> Map;
string s1, s2;

string better(string x)
{
    r = 0;
    FOR(i, 0, int(x.length()) - 1)
    {
        if ('A' <= x[i] && x[i] <= 'Z')
            x[i] += 'a' - 'A';
        r += (x[i] == 'r');
    }
    return x;
}

void setup()
{
    cin >> n;
    FOR(i, 1, n)
    {
        cin >> s1;
        s1 = better(s1);
        if (Map[s1] <= 0)
        {
            Map[s1] = ++ dem;
            numR[dem] = r;
            leng[dem] = s1.length();
        }
        int z = Map[s1];
        numS[z] ++;
        sumR += r;
        le += s1.length();
    }
}

void xuly ()
{
    cin >> m;
    FOR(i, 1, m)
    {
        cin >> s1 >> s2;
        s1 = better(s1);
        s2 = better(s2);
        int r2 = r;
        int z = Map[s1];
        if (numR[z] > r2 || (numR[z] == r2 && leng[z] > int(s2.length())))
        {
            int ns = numS[z];
            le += ns * (s2.length() - s1.length());
            sumR += ns * (r2 - numR[z]);
            numR[z] = r2;
            leng[z] = s2.length();
        }
    }
    cout << sumR << " " << le;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
