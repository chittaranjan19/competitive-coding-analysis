#include<iostream>
#include<algorithm>
#include<cstring>
#include<string>
#include<vector>
#include<cstdio>
#include<cmath>
using namespace std;
#define CRL(a) memset(a,0,sizeof(a))
typedef __int64 ll;
#define T 100005
#define mod 1000000007
int v[T],n;
int dp_max[T][32];
int dp_min[T][32];
void RMQ_init()
{
    for(int i=0;i<n;++i)dp_max[i][0]=v[i],dp_min[i][0]=v[i];
    for(int j=1;(1<<j)<=n;++j)
        for(int i=0;i+(1<<j)-1<n;++i){
            dp_max[i][j] = max(dp_max[i][j-1],dp_max[i+(1<<(j-1))][j-1]);
            dp_min[i][j] = min(dp_min[i][j-1],dp_min[i+(1<<(j-1))][j-1]);
        }
}
int RMQ_max(int L,int R)
{
    int k=0;
    while((1<<(k+1))<=R-L+1)k++;
    return max(dp_max[L][k],dp_max[R-(1<<k)+1][k]);
}
int RMQ_min(int L,int R)
{
    int k=0;
    while((1<<(k+1))<=R-L+1)k++;
    return min(dp_min[L][k],dp_min[R-(1<<k)+1][k]);
}
int main()
{
#ifdef zsc
    freopen("input.txt","r",stdin);
#endif
    int i;
    while(~scanf("%d",&n))
    {
        for(i=0;i<n;++i){
            scanf("%d",&v[i]);
        }
        RMQ_init();
        int p=0,ma=0;
        for(i=1;i<n;++i){   
            while(RMQ_max(p,i)-RMQ_min(p,i)>1 && p<=i )
            {
                p++;
            }
            ma = max(ma,i-p+1);
        }
        printf("%d\n",ma);
    }
    return 0;
}