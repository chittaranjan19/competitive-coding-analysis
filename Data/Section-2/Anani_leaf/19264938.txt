#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<string>
#include<queue>
#include<vector>
#include<map>
#include<cmath>
#define lowbit(x) ((x)&(-x))
#define Max(a,b) (a>b?a:b)
#define Min(a,b) (a>b?b:a)
#define INF 0x3f3f3f3f
using namespace std;
//typedef __int64 ll;
//typedef long long ll;
int f[200010] = {0};
int root[200010] = {0};
int huan[200010] = {0};
int mphuan[200010] = {0}; 
int len = 0;
int l = 0;
int N;
bool mp[200010] = {0};
bool flag[200010] = {false};
int a[2000010] = {0};
int main()
{
	//freopen("xx.txt","r",stdin);
	//std::ios::sync_with_stdio(false);
	scanf("%d",&N);
	for (int i = 1; i < N+1; i++)
	{
		int num;
		scanf("%d",&num);
		a[i] = num;
		f[i] = num;
	}
	for (int j = 1; j < N+1; j++)
	{
		int i = j;
		bool ff[200010] = {false};
		while(i!=f[i])
		{
			if(!ff[i])
			{
				ff[i] = true;
				i = f[i];

			}
			else break;
		}

		if(i==f[i])//���� 
		{
			if(!mp[i])
			{
				root[len++] = i;
				mp[i] = true;
			}

		}
		if(i!=f[i])//�ǻ� 
		{
			f[i] = i;
			mphuan[i] = 1;
			if(!mp[i])
			{
				root[len++] = i;
				mphuan[l++] = i;
				mp[i] = true;
			}

		}
	}
	int ans = 0;
	if(len > 1)
	{
		int nod;
		if(len == l) nod = root[0],ans = len;
		else
		{
			ans = len-1;
			for(int i = 0; i < len; i++)
			{
				int num = root[i];
				if(!mphuan[num])
				{
					nod = num;
					break;
				}
			}
		}
		for (int i = 0; i < len; i++)
		{
			int num = root[i];
			f[num] = nod;
		}
	}
	ans = 0;
	for (int i = 1; i < N+1; i++) if(a[i] != f[i]) ans++;
	printf("%d\n",ans);
	printf("%d",f[1]);
	for (int i = 2; i < N+1; i++) printf(" %d",f[i]);
	printf("\n");
	return 0;
}

