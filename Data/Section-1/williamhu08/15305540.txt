#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
const int MOD = 1e9 + 7, HALF = (MOD + 1) / 2;

int gmod (ll x) {
	return x % MOD;
}

int add (int x, int y) {
	return (x + y) % MOD;
}

int subtr (int x, int y) {
	x -= y;
	return x < 0 ? x + MOD : x;
}

int mult (int x, int y) {
	return ll(x) * y % MOD;
}

int sumto (ll x) {
	x = gmod(x);	//hard to find
	return mult(HALF, mult(x, x + 1));
}

ll N, M;

int main() {
	scanf("%lld %lld", &N, &M);
	int ans = 0;
	for (int i = 1; i <= 1e7 && i <= M; i++) {
		ans = add(ans, mult(i, gmod(N / i)));
	}
	if (M > 1e7) {
		for (int i = 1; i <= 1e7 && i <= N; i++) {
			ll lt = N / (i + 1) + 1;
			lt = max(lt, ll(1e7) + 1);
			ll rt = min(N / i, M);
			if (lt > rt) {
				continue;
			}
			ans = add(ans, mult(subtr(sumto(rt), sumto(lt - 1)), i));
		}
	}
	printf("%d\n", subtr(mult(gmod(M), gmod(N)), ans));
}