#include<bits/stdc++.h>
using namespace std;

const int MAXN=100*100*10+100;
int val[MAXN];
bool vis[MAXN];
vector <int> ver[MAXN];
set<pair<int,int> >s;
vector <pair<int,int> >e;
void dfs(int v){
    vis[v]=true;
    for(auto u:ver[v])
        if(!vis[u])val[u]=val[v]+(s.find(make_pair(v,u))==s.end() ?-1:1),dfs(u);
}
int main()
{
    int n,m;
    cin>>n>>m;
    for(int i=0;i<m;i++){
        int x,y;
        cin>>x>>y;
        x--,y--;
        s.insert(make_pair(x,y));
        e.push_back(make_pair(x,y));
        ver[x].push_back(y);
        ver[y].push_back(x);
    }
    int gcd;
    bool flag=true;
    for(int i=0;i<n;i++)
        if(!vis[i])dfs(i);
    for(int i=0;i<m;i++)
        if(val[e[i].first]-val[e[i].second]+1 != 0){
            if(flag)gcd=abs(val[e[i].first]-val[e[i].second]+1),flag=false;
            else gcd=__gcd(gcd,abs(val[e[i].first]-val[e[i].second]+1));
        }
    cout<<(flag?n:gcd);
}
