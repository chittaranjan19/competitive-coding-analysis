import java.io.*;         
import java.util.*;         
import java.math.*;         

public class Main implements Runnable  {
StreamTokenizer ST;      
PrintWriter out;      
BufferedReader br;   
Scanner in;
int inf = 1000000000;
double x = 1e-8;

int nextInt() throws IOException{      
    ST.nextToken();      
    return (int)ST.nval;      
}
long nextLong() throws IOException{      
    ST.nextToken();      
    return (long)ST.nval;      
}      
String next() throws IOException{      
    ST.nextToken();      
    return ST.sval;      
}      
double nextD() throws IOException{      
    ST.nextToken();      
    return ST.nval;      
}      
public static void main(String[] args) throws IOException {       
    new Thread(new Main()).start();      
}

public void run()  {      
    try {
        br = new BufferedReader(new InputStreamReader(System.in));
        out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));  
        //in = new Scanner(br);
        ST = new StreamTokenizer(br);      
        solve();      
        out.close();
        //in.close();
        br.close();   
    }         
    catch (IOException e) {        
        throw new IllegalStateException(e);       
    }      
}

public void solve() throws IOException {
    char[] s = br.readLine().toCharArray();
    int n = s.length;
    
    Stack<Integer> st = new Stack<Integer>();
    Vector<Integer> v = new Vector<Integer>();
    for (int i=0; i<n; i++) if (s[i]=='(') st.push(i); else {
        if (!st.isEmpty()) {
            int pr = st.pop();          
            if (st.isEmpty()) v.add(i-pr+1);
        } else {
            v.add(-1);
        }
    }
    int res = 0, cnt = 1;
    int p = 0;
    while (p<v.size()) {
        int x = 0;
        while (p<v.size() && v.elementAt(p)>0) {x += v.elementAt(p++); };
        while (p<v.size() && v.elementAt(p)==-1)p++;
        if (x>res) {
            res = x; cnt = 1;
        } else {
            cnt++;
        }       
    }
    if (res==0) cnt = 1;
    out.println(res+" "+cnt);
}
}




