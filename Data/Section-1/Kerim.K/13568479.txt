#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define ff first
#define cs(x,y) cout<<"Case "<<y<<": "<<x<<endl;
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int dis[MAXN],a,x,p[MAXN],sum,sid[MAXN];
vector<PII>adj[MAXN];
int bf(int kk,int t){
	fill(sid,sid+109,INF);
	sid[kk]=0;
	queue<int>q;
	q.push(kk);
	while(!q.empty()){
		int u=q.front();
		q.pop();
		for(int i=0;i<adj[u].size();i++){
			int v=adj[u][i].ff,w=adj[u][i].ss;
			if((u==kk and v==t)or(u==t and v==kk))
				continue;
			if(sid[v]>sid[u]+w){
				sid[v]=sid[u]+w;
				q.push(v);
			}
		}
	}		
	return sid[a*2];
}
int bfs(){
	fill(dis,dis+109,INF);
	dis[1]=0;
	queue<int>q;
	q.push(1);
	while(!q.empty()){
		int u=q.front();
		q.pop();
		for(int i=0;i<adj[u].size();i++){
			int v=adj[u][i].ff,w=adj[u][i].ss;
			if(dis[v]>dis[u]+w){
				dis[v]=dis[u]+w;
				p[v]=u;
				q.push(v);
			}
		}
	}
	int r=a*2,mini=INF;
	while(r!=1){
		int q=p[r];
		for(int i=0;i<adj[q].size();i++){
			if(adj[q][i].ff!=r)
				mini=min((dis[adj[q][i].ff]+bf(adj[q][i].ff,q)),mini);		
		}
		r=p[r];
	}
	return dis[a*2]+mini;
}
int main(){
	cin>>a;
	for(int i=1;i<a;i++){
		cin>>x;
		adj[i].pb(mp(i+1,x));
		adj[i+1].pb(mp(i,x));
	}
	for(int i=1;i<a;i++){
		cin>>x;
		adj[i+a].pb(mp(i+a+1,x));
		adj[i+a+1].pb(mp(i+a,x));
	}
	for(int i=1;i<=a;i++){
		cin>>x;
		adj[i].pb(mp(i+a,x));
		adj[i+a].pb(mp(i,x));
	}
	cout<<bfs()<<endl;
	return 0;
}
