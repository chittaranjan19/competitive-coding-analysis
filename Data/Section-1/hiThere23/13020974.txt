#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mp make_pair
#define F first
#define S second
#define mn 10001
#define maxC 2000000000
#define pb push_back
#define bit(x, i) ((x >> (i - 1)) & 1)
#define p2 pair<int, int>

using namespace std;
int n, k, m;
long long pow1[mn], pow2[mn], dp[1001][101][2];

long long solve(int id, int rem, bool change)
{
    if (rem == 0 && change)
    {
        if (id == n)
            return 1;
        return ((1ll * pow1[n - id - 1] * 9) % m);
    }
    if (id == n)
        return 0;
    long long &temp = dp[id][rem][change];
    if (temp != -1)
        return temp;
    temp = 0;
    FOR(i, 0, 9)
    {
        int re = (rem + (1ll * i * pow2[id]) % k) % k;
        temp += solve(id + 1, re, change || i != 0);
        temp %= m;
    }
    return temp;
}

void setup ()
{
    cin >> n >> k >> m;
    memset(dp, -1, sizeof(dp));
    long long x = 1ll, y = 1ll;
    FOR(i, 0, n)
    {
        pow1[i] = x;
        pow2[i] = y;
        x *= 10;
        y *= 10;
        x %= m;
        y %= k;
    }
    cout << solve(0, 0, 0);
}

void xuly()
{

}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
