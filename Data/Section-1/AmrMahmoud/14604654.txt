#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int DP[100005][2][3];
bool v[100005][2][3];
int n;
string s;

int solve(int ind, bool last, int state)
{
  if(ind == n) return 0;
  int &temp = DP[ind][last][state];
  if(v[ind][last][state]) return temp;
  v[ind][last][state] = true;
  temp = solve(ind + 1, last, state);
  if(s[ind] - '0' != last)
  {
    if(state != 1) temp = max(temp, solve(ind + 1, !last, state) + 1);
    else temp = max(temp, solve(ind + 1, !last, 2) + 1);
  }
  else if(state != 2)
    temp = max(temp, solve(ind + 1, !last, 1) + 1);
  return temp;
}

int main()
{
  scanf("%d", &n);
  cin >> s;
  cout << max(solve(0, 0, 0), solve(0, 1, 0));
  return 0;
}
