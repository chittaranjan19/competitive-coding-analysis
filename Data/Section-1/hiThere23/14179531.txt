#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mp make_pair
#define F first
#define S second
#define maxC 20000000000000000ll
#define mn 100010
#define pb push_back

using namespace std;
int n, k;
pair< pair<long long, long long>, int > xx[mn], yy[mn];
pair<long long, long long> p[mn];
bool mark[mn];

void setup ()
{
    long long x1, y1, x2, y2;
    cin >> n >> k;
    FOR(i, 1, n)
    {
        cin >> x1 >> y1 >> x2 >> y2;
        xx[i] = mp(mp(x1 + x2, y1 + y2), i);
        yy[i] = mp(mp(y1 + y2, x1 + x2), i);
        p[i] = mp(x1 + x2, y1 + y2);
    }
    sort(xx + 1, xx + n + 1);
    sort(yy + 1, yy + n + 1);
    memset(mark, 0, sizeof(mark));
}

long long best(int lowX, int hiX, int lowY, int hiY, int k)
{
    while (mark[xx[lowX].S])
        lowX ++;
    while (mark[xx[hiX].S])
        hiX --;
    while (mark[xx[lowY].S])
        lowY ++;
    while (mark[xx[hiY].S])
        hiY --;
    if (k == 0)
    {
        int lxi, hxi, lyi, hyi;
        lxi = xx[lowX].S;
        hxi = xx[hiX].S;
        lyi = yy[lowY].S;
        hyi = yy[hiY].S;
        long long x = max(1ll, (p[hxi].F - p[lxi].F + 1) / 2);
        long long y = max(1ll, (p[hyi].S - p[lyi].S + 1) / 2);
        return x * y;
    }
    long long a;
    mark[xx[lowX].S] = true;
    a = best(lowX + 1, hiX, lowY, hiY, k - 1);
    mark[xx[lowX].S] = false;

    mark[xx[hiX].S] = true;
    a = min(a, best(lowX, hiX - 1, lowY, hiY, k - 1));
    mark[xx[hiX].S] = false;

    mark[yy[lowY].S] = true;
    a = min(a, best(lowX, hiX, lowY + 1, hiY, k - 1));
    mark[yy[lowY].S] = false;

    mark[yy[hiY].S] = true;
    a = min(a, best(lowX, hiX, lowY, hiY - 1, k - 1));
    mark[yy[hiY].S] = false;
    return a;
}

void xuly ()
{
    cout << best(1, n, 1, n, k);
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
