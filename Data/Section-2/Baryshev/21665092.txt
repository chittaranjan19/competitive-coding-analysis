#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
#include <fstream>
#include <tuple>
#include <iomanip>

using namespace std;

#define forn(i, n) for (int i = 0; i < int(n); ++i)
#define for1(i, n) for (int i = 1; i < int(n); ++i)
#define ford(i, n) for (int i = int(n) - 1; i >= 0; --i)
#define fore(i, l, r) for (int i = int(l); i <= int(r); ++i)
#define all(a) a.begin(), a.end()
#define sz(a) (int(a.size()))
#define mp make_pair
#define pb push_back
#define ft first
#define sc second
#define g(a, b) get<a> (b)

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pt;

const int MAX_N = 1e5 + 5;
const int mod = 1e15 + 7;


int arr[MAX_N];

int main()
{
    ll n, a;
    cin >> n >> a;
    ll st[MAX_N];
    for (int i = 0; i < n; i++)
        cin >> st[i];
    sort(st, st + n);
    ll ans = mod;
    ans = min(ans, 2 * abs(st[n - 1] - a) + abs(st[1] - a));
    ans = min(ans, abs(st[n - 1] - a) +  2 * abs(st[1] - a));
    ans = min(ans, 2 * abs(st[0] - a) + abs(st[n - 2] - a));
    ans = min(ans, abs(st[0] - a) + 2 * abs(st[n - 2] - a));
    if (a > st[n - 2]) {
        ans = min(ans, abs(st[0] - a));
    }
    if (a < st[1]){
        ans = min(ans, abs(st[n - 1] - a));
    }
    cout << ans;
    return 0;
}
