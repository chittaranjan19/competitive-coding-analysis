#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;

int n , m , t , tt , ttt , b , bb , shomare;
vector<pair<int , int > > caramel , kakao;
bool markk[100000] , markc[100000];

int cheakc(){
	int d = m;
	shomare = -1;
	for(int i = 0 ; i < caramel.size() ; i++){
		if(d <= caramel[i].first && markc[i] == false){
			d = caramel[i].first;
			shomare = i;
		}
	}
	if(shomare == -1)
		return 0;
	markc[shomare] = true;
	return 1;
}

int cheakk(){
	int d = m;
	shomare = -1;
	for(int i = 0 ; i < kakao.size() ; i++){
		if(d <= kakao[i].first && markk[i] == false){
			d = kakao[i].first;
			shomare = i;
		}
	}
	if(shomare == -1)
		return 0;
	markk[shomare] = true;
	return 1;
}

int main(){
	cin >> n >> m;
	for(int i = 0 ; i < n ; i++){
		cin >> t >> tt >> ttt;
		if(t == 0)
			caramel.push_back(make_pair(tt , ttt));
		else
			kakao.push_back(make_pair(tt , ttt));
	}
	int mmm = m;
	for(int i = 0 ; i < caramel.size() ; i++){
		int mm = cheakc();
		if(mm){
			b++;
			mmm += caramel[shomare].second;
			mm = cheakk();
			if(mm){
				b++;
				mmm += kakao[shomare].second;
			}
			else
				break;
		}
		else
			break;
	}
	for(int i = 0 ; i < max(kakao.size() , caramel.size()) ; i++){
		markc[i] = false;
		markk[i] = false;
	}
	mmm = m;
	for(int i = 0 ; i < kakao.size() ; i++){
		int mm = cheakk();
		if(mm){
			bb++;
			mmm += kakao[shomare].second;
			mm = cheakc();
			if(mm){
				bb++;
				mmm += caramel[shomare].second;
			}
			else
				break;
		}
		else
			break;
	}
	cout << max(b , bb);
}

/*
5 3
0 2 4
1 3 1
0 8 3
0 20 10
1 5 5*/

