import java.io.*;
import java.util.*;
import java.math.*;


public class Main{
	//static final String FileName = "test";

	void solve() throws IOException{
		/*char[] s = br.readLine().trim().toCharArray();
		for (int i=0; i<s.length; i++) {
			if (s[i]=='.') out.print(0); else {
				i++;
				if (s[i]=='.') out.print(1); else out.print(2);
			}
		}*/
		long n = nextInt();
		long m = nextInt();
		long s = nextInt();
		if (n%s!=0) n = (n/s+1)*(n%s); 
		if (m%s!=0) m = (m/s+1)*(m%s); 
		out.print(n*m);
					
	}
	static final int inf = 1000000000;
	BufferedReader br;
	StringTokenizer st;
	PrintWriter out;
	
	public void run() {
		try {
			//br = new BufferedReader(new FileReader(FileName+".in"));
			//out = new PrintWriter(FileName+".out");
			br = new BufferedReader(new InputStreamReader(System.in));
			out = new PrintWriter(System.out);	
			//br = new BufferedReader(new FileReader("input.txt"));
			//out = new PrintWriter("output.txt");
			solve();
			br.close();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

	String next() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			String s = br.readLine();
			if (s == null)
				return null;
			st = new StringTokenizer(s);
		}
		return st.nextToken();
	}
	
	double nextDouble() throws IOException {
		return Double.parseDouble(next());
	}
	
	int nextInt() throws IOException {
		return Integer.parseInt(next());
	}

	long nextLong() throws IOException {
		return Long.parseLong(next());
	}

	public static void main(String[] args) {
		new Main().run();
	}
}
