#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <iomanip>
#include <set>
#include <fstream>
#include <numeric>
#include <stdexcept>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int n, m;
string in[2005];

bool check(int x, int y)
{
  if(x < 0 || y < 0 || x == n || y == m) return true;
  return (in[x][y] != '*');
}

bool out(int x, int y)
{
  if(x < 0 || y < 0 || x == n || y == m) return true;
  return false;
}

bool test(int x, int y)
{
  if(out(x, y) || in[x][y] != '.')
      return true;
  return false;
}

bool lu(int x, int y)
{
  if(test(x + 1, y) || test(x + 1, y + 1) || test(x, y + 1))
    return true;
  return false;
}

bool ld(int x, int y)
{
  if(test(x - 1, y) || test(x - 1, y + 1) || test(x, y + 1))
    return true;
  return false;
}

bool ru(int x, int y)
{
  if(test(x + 1, y) || test(x + 1, y - 1) || test(x, y - 1))
    return true;
  return false;
}

bool rd(int x, int y)
{
  if(test(x - 1, y) || test(x - 1, y - 1) || test(x, y - 1))
    return true;
  return false;
}

void dfs(int x, int y)
{
  if(check(x, y)) return;
  if(lu(x, y) && ld(x, y) && ru(x, y) && rd(x, y)) return;
  in[x][y] = '.';
  dfs(x + 1, y);
  dfs(x - 1, y);
  dfs(x, y + 1);
  dfs(x, y - 1);
  dfs(x + 1, y + 1);
  dfs(x - 1, y - 1);
  dfs(x - 1, y + 1);
  dfs(x + 1, y - 1);
}

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("mtf.in", "r", stdin);
  //freopen("mtf.out", "w", stdout);
  cin >> n >> m;
  for(int i=0;i<n;i++)
    cin >> in[i];
  for(int i=0;i<n;i++)
    for(int j=0;j<m;j++)
      if(in[i][j] == '*')
        dfs(i, j);
  for(int i=0;i<n;i++)
    cout << in[i] << "\n";
  return 0;
}