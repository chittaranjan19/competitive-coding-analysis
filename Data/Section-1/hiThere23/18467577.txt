#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 100005
#define maxC 1000000007
#define pb push_back

using namespace std;
int n, m, p[mn], w[mn], h[mn], best[mn];
vector<int> g[mn], ans;
bool mark[mn];

void setup()
{
    cin >> n >> m;
    int u, v;
    FOR(i, 1, m)
    {
        cin >> u >> v;
        p[v] = u;
        g[u].pb(v);
    }
    FOR(i, 1, n)
        cin >> w[i];
}

void dfs(int u)
{
    mark[u] = true;
    FOR(i, 0, int(g[u].size()) - 1)
    {
        int v = g[u][i];
        h[v] = h[u] + 1;
        dfs(v);
        if (h[best[v]] < h[best[u]])
            best[u] = best[v];
        if(h[w[v]] < h[best[u]])
            best[u] = w[v];
    }
    if (h[best[u]] < h[u])
    {
        cout << -1;
        exit(0);
    }
}

bool comp(int a, int b)
{
    return h[a] > h[b];
}

void xuly ()
{
    h[0] = maxC;
    FOR(i, 1, n)
    if (!mark[i])
        dfs(i);
    sort(w + 1, w + n + 1, comp);
    FOR(i, 1, n)
    if (w[i] != w[i - 1])
        ans.pb(w[i]);
    cout << ans.size() << '\n';
    FOR(i, 0, int(ans.size()) - 1)
        cout << ans[i] << '\n';
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
