#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int main()
{
	int n;
	cin >> n;
	vector <tint> l (n);
	forn(i,n)
		cin >> l[i];
	sort(l.begin(),l.end());
	tint totalArea = 0;
	tint side1 = l.back(), side2 = 0, pairSides = 0;
	l.pop_back();
	while(!l.empty())
	{
		side2 = l.back();
		l.pop_back();
		if (side1 == side2 + 1)
			side1--;
		if (side1 == side2)
		{
			if (pairSides == 0)
				pairSides = side1;
			else
			{
				totalArea += pairSides*side1;
				pairSides = 0;
			}
			if (!l.empty())
			{
				side1 = l.back();
				l.pop_back();
			}
		}
		else
			side1 = side2;
	}
	cout << totalArea << endl;
	return 0;
}
