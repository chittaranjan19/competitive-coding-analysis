import java.util.*;
import java.io.*;

public class Main {
//	static TreeMap<Integer, Integer>[] cities;
	static String[] edges;
	static BitSet set;
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
		
		String line = bf.readLine();
		String[] tmp = line.split(" ");
		
		int N = Integer.parseInt(tmp[0]);
		int M = Integer.parseInt(tmp[1]);
		int K = Integer.parseInt(tmp[2]);
		
		int minRoad = Integer.MAX_VALUE;
		
//		cities = new TreeMap[N];
		edges = new String[M];
		set = new BitSet(N);
		
//		for(int i = 0 ; i < N ; i++){
//			cities[i] = new TreeMap<>();
//		}
		
		for(int i = 0 ; i < M ; i++){
			line = bf.readLine();
			edges[i] = line;
			tmp = line.split(" ");
			
			int a = Integer.parseInt(tmp[0]);
			int b = Integer.parseInt(tmp[1]);
			int w = Integer.parseInt(tmp[2]);
			a--;
			b--;
			minRoad = Math.min(w, minRoad);
			
//			cities[a].put(w, b);
//			cities[b].put(w, a);
		}
		
		if(K > 0){
			line = bf.readLine();
			tmp = line.split(" ");
			
			for(int i = 0 ; i < K ; i++){
				set.set(Integer.parseInt(tmp[i]) - 1);
			}
			
			minRoad = Integer.MAX_VALUE;
			
			for(String str : edges){
				tmp = str.split(" ");
				
				int a = Integer.parseInt(tmp[0]);
				int b = Integer.parseInt(tmp[1]);
				int w = Integer.parseInt(tmp[2]);
				a--;
				b--;
				
				if(set.get(a)){
					if(!set.get(b)){
						minRoad = Math.min(minRoad, w);
					}
				}
				else if(set.get(b)){
					if(!set.get(a)){
						minRoad = Math.min(minRoad, w);
					}
				}
			}
			
			if(minRoad == Integer.MAX_VALUE) System.out.println(-1);
			else System.out.println(minRoad);
		}
		else System.out.println(-1);
		
	}
}