#include <bits/stdc++.h>
using namespace std;

int main () {
	int n, m;
	cin >> n >> m;
	int C [n + 1], dist [n + 1], maxdist [n + 1];
	bool visited [n + 1];
	for (int i = 1; i <= n; ++i) cin >> C [i];
	vector <int> V [n + 1];
	visited [n] = 0;
	for (int i = 1; i < n; ++i){
		visited [i] = false;
		int p, q;
		cin >> p >> q;
		V [p].push_back (q);
		V [q].push_back (p);
	}

	queue <int> Q;
	Q.push(1);
	dist [1] = maxdist [1] =  C [1];
	while (!Q.empty()){
		int p = Q.front ();
		Q.pop ();
		visited [p] = true;
		for (int i = 0; i < V[p].size (); ++i){
			if (!visited [V[p][i]]){
				Q.push(V [p][i]);
				dist [V [p][i]] = (C [V[p][i]] == 1 ? dist [p] + 1 : 0);
				maxdist [V [p][i]] = max(dist[p], dist[V[p][i]]);
			}
		}
	}
	int ans = 0;
	for (int i = 2; i <= n; ++i){
		if (V [i].size () == 1 && maxdist [i] <= m){
			//cout << i << " ";
			ans++;
		}
	}
	cout << ans << endl;
}
