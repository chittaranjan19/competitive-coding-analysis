#include<iostream>
using namespace std;
#define PI 3.14159265
#define MIN(a,b) ((a) < (b) ? (a) : (b))
#define MAX(a,b) ((a) < (b) ? (b) : (a))
#include<math.h>
float maxno(float a, float b,float c)
{
	float temp;
	temp = MAX(a,b);
	return MAX(temp,c);
}
float distance(float a1, float a2, float b1, float b2)
{ return sqrt(((b2-a2)*(b2-a2))+((b1-a1)*(b1-a1)));
}
float diffangle(float a,float b)
{
	float diff;
	if((a-b)>0)
	{ if((a-b)<180)
       return a-b;
       else
       return 360-(a-b);
    }
    else
    { return diffangle(b,a);
	}
}
int main()
{
	float a1, a2, b1, b2, c1, c2;
	cin>>a1>>a2>>b1>>b2>>c1>>c2;
	float slp1, slp2, slp3; //calculating slopes
	slp1 = (b2-a2)/(b1-a1);
	slp2 = (c2-b2)/(c1-b1);
	slp3 = (a2-c2)/(a1-c1);
	float angab, angbc, angac;
	angab = atan(slp1)*180/PI; // calculating angles
	angbc = atan(slp2)*180/PI;
	angac = atan(slp3)*180/PI;
    float distab, distbc, distca; //calculating distance
	distab = distance(a1,a2,b1,b2);
	distbc =  distance(b1,b2,c1,c2);
	distca = distance(a1,a2,c1,c2);
	float maxnos = maxno(distab, distbc, distca); //side with max distance is the one to be neglected
	float intangle, extangle;
	int nosides;
	if(maxnos==distab)
	{
		intangle = diffangle(angac,angbc);
		extangle = 180 - intangle;
		nosides = 360/extangle;
		cout<<"Area :"<< 0.25*nosides*distbc*distbc*cos(PI/nosides)/sin(PI/nosides);
		
	}
    else if(maxnos==distbc)
	{
		intangle = diffangle(angac,angab);
		extangle = 180 - intangle;
		nosides = 360/extangle;
		cout<<"Area :"<< 0.25*nosides*distab*distab*cos(PI/nosides)/sin(PI/nosides);
		
	}
	else if(maxnos==distca)
	{
		intangle = diffangle(angab,angbc);
		extangle = 180 - intangle;
		nosides = 360/extangle;
		cout<<"Area :"<< 0.25*nosides*distbc*distbc*cos(PI/nosides)/sin(PI/nosides);
		
	}
	return 0;
	
}
