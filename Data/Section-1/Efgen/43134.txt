import java.io.*;         
import java.util.*;         
import java.math.*;         

 
public class Main  implements Runnable {
//public static final String FileName = "test";
StreamTokenizer ST;      
PrintWriter out;      
BufferedReader br;   
Scanner in;
static final int inf = 1000000000;
 
int nextInt() throws IOException{      
    ST.nextToken();      
    return (int)ST.nval;      
}
long nextLong() throws IOException{      
    ST.nextToken();      
    return (long)ST.nval;      
}      
String next() throws IOException{      
    ST.nextToken();      
    return ST.sval;      
}      
double nextD() throws IOException{      
    ST.nextToken();      
    return ST.nval;      
}      
public static void main(String[] args) throws IOException {       
   new Thread(new Main()).start();
//	new Main().run();
}
 
public void run()  {      
    try {
    	br = new BufferedReader(new InputStreamReader(System.in));
    	out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));    	
    	//br = new BufferedReader(new FileReader(new File(FileName+".in")));
    	//out = new PrintWriter(new BufferedWriter(new FileWriter(FileName+".out")));
    	in = new Scanner(br);
        ST = new StreamTokenizer(br);      
        solve();      
        out.close();
        //in.close();
        br.close();   
    }         
    catch (IOException e) {       
    	e.printStackTrace();
    	throw new IllegalStateException(e);  
    }      
}


public void solve() throws IOException {
	int n = nextInt();
	int p1 = nextInt();
	int p2 = nextInt();
	int p3 = nextInt();
	int t1 = nextInt();
	int t2 = nextInt();
	int res = 0;
	int st = nextInt();
	int t = nextInt();
	res += p1*(t-st);
	for (int i=1; i<n; i++) {
		int l = nextInt();
		int r = nextInt();
		t = l-t;
		if (t>t1) {
			res += t1*p1;
			t -= t1;
			if (t>t2) {
				res += t2*p2;
				res += (t-t2)*p3;
			} else res += (t-t2)*p2;
		} else res += (t-t1)*p1;
		res += (r-l)*p1;
		t = r;
	}
	out.println(res);
	
}
  
}
















 
 
  