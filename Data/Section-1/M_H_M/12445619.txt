#include <bits/stdc++.h>

#define SZ(x) (( (int)x.size() ) )

using namespace std;
typedef long long ll;
const int N = 5 * 1000 * 1000 + 100;

ll p,q;
bool prime[N];
ll primecnt[N];
ll palcnt[N];
char ch;

int ispal(int x){
	string s = "";
	while(x > 0){
		ch = ('0' + x % 10);
		s += ch;
		x /= 10;
	}
	for(int i = 0; i < SZ(s) / 2; ++i){
		if(s[i] != s[SZ(s) - i - 1])
			return 0;
	}
	return 1;
}

bool isval(int mid){
	if(primecnt[mid] * q <= p * palcnt[mid])
		return true;
	return false;
}

int main(){
	cin >> p >> q;
	prime[0] = prime[1] = 1;
	for(int i = 2; i < N; ++i){
		if(!prime[i]){
			for(int j = i; j < N; j += i)
				prime[j] = 1;
			primecnt[i] = primecnt[i - 1] + 1;
		}
		else{
			primecnt[i] = primecnt[i - 1];
		}
	}
	for(int i = 1; i < N; ++i){
		palcnt[i] = palcnt[i - 1] + ispal(i);
	}
	for(int i = N - 1; i > 0; --i){
		if(isval(i)){
			cout << i << "\n";
			return 0;
		}
	}
	cout << "Palindromic tree is better than splay tree\n";
	return 0;
}
