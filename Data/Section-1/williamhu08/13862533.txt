#include <bits/stdc++.h>
using namespace std;

#define MP make_pair
#define A first
#define B second

int n;
int a[113];
int b[113];

int has[113];
set<pair<int,int> > need;
bool check(int K) {
	for (int i=0;i<n;i++) has[i] = 0;
	need.clear();
	for (int i=0;i<10000;i++) {
		for (int j=0;j<n;j++) if (a[j]==i) {
			need.insert(MP(b[j],j));
		}
		if (need.size()==0) continue;
		int j = need.begin()->B;
		need.erase(need.begin());
		if (b[j]<i) return false;
		has[j]+=1;
		if (has[j]<K) need.insert(MP(b[j],j));
	}
	for (int i=0;i<n;i++) if (has[i]<K) return false;
	return true;
}

int main() {
	scanf("%d",&n);
	for (int i=0;i<n;i++) {
		scanf("%d%d",&a[i],&b[i]);
		b[i]-=1;
	}
	int low = 0;
	int high = 10001;
	while (high-low>1) {
		if (check((low+high)/2)) low = (low+high)/2;
		else high = (low+high)/2;
	}
	printf("%d\n",n*low);

	return 0;
}
