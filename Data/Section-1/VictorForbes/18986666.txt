#include <bits/stdc++.h>

#define PI 3.14159265358979323846

#define INF_1 0x3f // 0011 1111
#define INF_2 0x7f // 0111 1111

#define MOD_1 1000000007 // 10e9 + 7
#define MOD_2 1000000009 // 10e9 + 9

#define pb push_back
#define eb emplace_back

#define N 30001
#define L_MINUS_ONE 0
#define L 1
#define L_PLUS_ONE 2

using namespace std;

typedef unsigned long long ull;
typedef unsigned int ui;
typedef long long ll;

int n, d;
int gem[N];
int dp[N][500];

int solve(int cur, int relative_jump){
	int l, res, prev;

	prev = cur - (d + relative_jump);

	if (cur >= N or cur == prev){
		return 0;
	}

	if (dp[cur][relative_jump + 250] != -1){
		return dp[cur][relative_jump + 250];
	}

	res = 0;
	l = d + relative_jump;

	res = max(res, solve(cur + (l - 1), relative_jump - 1));
	res = max(res, solve(cur + l, relative_jump));
	res = max(res, solve(cur + (l + 1), relative_jump + 1));

	dp[cur][relative_jump + 250] = res + gem[cur];

	return res + gem[cur];
}

int main(){
	int i, x;

	scanf("%d%d", &n, &d);

	for (i = 0; i < n; i++){
		scanf("%d", &x);

		gem[x]++;
	}

	memset(dp, -1, sizeof(dp));

	printf("%d\n", solve(d, 0));

	return 0;
}