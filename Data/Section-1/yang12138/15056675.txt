/*

┏┛┻━━━┛┻┓
┃｜｜｜｜｜｜｜┃
┃　　　━　　　┃
┃　┳┛　┗┳　┃
┃　　　　　　　┃
┃　　　┻　　　┃
┃　　　　　　　┃
┗━┓　　　┏━┛
　　┃　　　┃　　
　　┃　　　┃　　
　　┃　　　┃　 　
　　┃　　　┃
　　┃　　　┗━━━┓
　　┃world_finals! ┃
　　┃感觉自己萌萌哒┃
　　┗┓┓┏━┳┓┏┛
　　　┃┫┫　┃┫┫
　　　┗┻┛　┗┻┛
*/

#include <cstdio>
#include <iostream>
#include <cstring>
#include <string>
#include <algorithm>
#include <cctype>
#include <stack>
#include <map>
#include <set>
#include <iomanip>
#include <cstdlib>
#include <queue>
#include <ctime>
#include <cmath>
using namespace std;
typedef long long ll;
const int maxn=100005;
int a[maxn],b[maxn],vis[maxn],dp[maxn],n;
int dfs(int x)
{
    if(vis[x]) return dp[x];
    vis[x]=1;
    int now=lower_bound(a+1,a+n+1,a[x]-b[x])-a;
    if(now-1>=1) return dp[x]=dfs(now-1)+(x-now);
    else return dp[x]=x-now;
}
int main()
{
    while(cin>>n)
    {
        memset(dp,0,sizeof(dp));
        memset(vis,0,sizeof(vis));
        for(int i=1;i<=n;i++)
            scanf("%d%d",&a[i],&b[i]);
        int ans=n;
        for(int i=n;i>=1;i--)
        {
            int temp=n-i+dfs(i);
            ans=min(temp,ans);
        }
        cout<<ans<<endl;
    }
    return 0;
}
