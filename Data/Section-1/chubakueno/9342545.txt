#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
int main(){
    std::ios::sync_with_stdio(false);
    int n;
    cin>>n;
    vector<int> dists;
    dists.push_back(0);
    vector<int> gsizes;
    vector<int> mayorigual(n+1);
    int x,l;
    cin>>x>>l;
    int maxreach=x+l;
    int gsize=0;
    for(int i=1;i<n;++i){
        cin>>x>>l;
        ++gsize;
        if(maxreach<x){
            dists.push_back(x-maxreach);
            gsizes.push_back(gsize);
            maxreach=x;
        }
        if(maxreach<x+l)
            maxreach=x+l;
    }
    gsizes.push_back(n);
    int ind=0;
    for(int i=1,ind=0;i<=n;++i){
        if(i>gsizes[ind]) ++ind;
        mayorigual[i]=ind;
    }
    int acc=0;
    for(int i=0;i<dists.size();++i){
        acc+=dists[i];
        dists[i]=acc;
    }
    int q;
    cin>>q;
    for(int i=0;i<q;++i){
        int x,y;
        cin>>x>>y;
        cout<<dists[mayorigual[y]]-dists[mayorigual[x]]<<endl;
    }
}
