#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 1000010;

struct node{
	node* arr[2];
	int cnt;
	node(){
		this->arr[0] = this->arr[1] = NULL;
		this->cnt = 0;
	}
};

node* root;
int n, k, arr[maxn];

int query(int val)
{
	int i, ret = 0, req_bit, opp_bit, cur_bit, next_bit;
	node* temp = root;
	for(i=30; i>=0; i--){
		req_bit = k&(1<<i);
		req_bit = req_bit>>i;
		cur_bit = val&(1<<i);
		cur_bit = cur_bit>>i;
		if(!req_bit){
			if(temp->arr[cur_bit^1])
				ret+=(temp->arr[cur_bit^1]->cnt);
			if(temp->arr[cur_bit])
				temp = temp->arr[cur_bit];
			else
				return ret;
		}
		else{
			if(temp->arr[cur_bit^1])
				temp = temp->arr[cur_bit^1];
			else
				return ret;
		}
	}
	ret+=(temp->cnt);
	return ret;
}

void insert(int val)
{
	int i, ret = 0, cur_bit;
	node* temp = root;
	for(i=30; i>=0; i--){
		cur_bit = val&(1<<i);
		cur_bit = cur_bit>>i;
		if(!temp->arr[cur_bit])
			temp->arr[cur_bit] = new node();
		temp = temp->arr[cur_bit];
		temp->cnt++;
	}
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	root = new node();
	int i, j, x = 0;
	ll ans = 0;
	scanf("%d%d", &n, &k);
	insert(0);
	for(i=1; i<=n; i++){
		scanf("%d", &arr[i]);
		x^=arr[i];
		ans+=query(x);
		insert(x);
	}
	printf("%lld\n", ans);
	return 0;
}
