#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <cstdlib>

struct Edge {
    int u, v, w, id, inmst;
    bool operator < (const Edge &rhs) const {
        return w < rhs.w;
    }
}e[100005];

int n, m;

bool cmp(const Edge &a, const Edge &b) {
    return a.id < b.id;
}

int main() {
    scanf("%d%d", &n, &m);
    
    for (int i = 1; i <= m; i++) {
        scanf("%d%d", &e[i].w, &e[i].inmst);
        e[i].id = i;
    }
    
    std::sort(e + 1, e + m + 1);
    
    int cho = 1, u = 1, v = 3;
    for (int i = 1; i <= m; i++) {
        if (e[i].inmst) {
            e[i].u = cho, e[i].v = ++cho;
            if (cho > n) {
                puts("-1"); return 0;
            }
        }
        else {
            if (v > cho || v > n) {
                puts("-1"); return 0;
            }
            else { 
                e[i].u = u, e[i].v = v;
                u++;
                if (v - u == 1) {
                    u = 1, v++;
                }
            }
        }
    }
    
    if (cho != n) {
        puts("-1"); return 0;
    }
    
    std::sort(e + 1, e + m + 1, cmp);
    
    for (int i = 1; i <= m; i++)
        printf("%d %d\n", e[i].u, e[i].v);
    
    return 0;
}