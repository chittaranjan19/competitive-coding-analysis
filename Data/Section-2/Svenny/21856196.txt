#include <iostream>
#include <cmath>
#include <cstdlib>
#include <cstdio>
#include <memory>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <string>
#include <memory.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned uint;

const ll posinf = 1000000000000000001;
const ll neginf = -1000000000000000001;

ll n, t, i, j, okr, ppos;
int dodec;
string oc;

inline int dec (char c)
{
	return c - '0';
}

inline void r2up (ll pos)
{
	ll j = pos - 1;
	while (j >= 0)
	{
		oc[j]++;
		if (oc[j] > '9')
		{
			oc[j] = '0';
			j--;
			if (j < 0)
			{
				dodec = 1;
				return;
			}
		}
		else break;
	}
}

inline bool rup (ll pos)
{
	ll j = pos - 1;
	if (j == ppos)
	{
		r2up (j);
		return true;
	}
	while (true)
	{
		oc[j]++;
		if (oc[j] > '9')
		{
			oc[j] = '0';
			j--;
			if (j == ppos)
			{
				r2up (j);
				return true;
			}
		}
		else break;
	}
	return false;
}

int main ()
{
#ifdef CONTEST_ONME
	freopen ("input.txt", "r", stdin);
	freopen ("output.txt", "w", stdout);
#endif

	cin >> n >> t;
	cin >> oc;
	okr = -1;
	bool wasp = false;
	dodec = 0;
	ppos = -1;
	for (i = 0; i < n; i++)
	{
		if (oc[i] == '.')
		{
			wasp = true;
			ppos = i;
			continue;
		}
		if (wasp && oc[i] >= '5')
		{
			okr = i;
			if (rup (i))
			{
				if (dodec) cout << 1;
				for (i = 0; oc[i] != '.'; i++)
					cout << oc[i];
				return 0;
			}
			t--;
			break;
		}
	}
	for (i = okr - 1; (i > ppos) && t; i--)
	{
		if (oc[i] >= '5')
		{
			okr = i;
			if (rup (i))
			{
				if (dodec) cout << 1;
				for (i = 0; oc[i] != '.'; i++)
					cout << oc[i];
				return 0;
			}
			t--;
		}
	}
	if (dodec) cout << 1;
	if (okr == -1)
		cout << oc;
	else
		for (i = 0; i < okr; i++)
			cout << oc[i];

#ifdef CONTEST_ONME
	//system ("pause");
#endif
	return 0;
}