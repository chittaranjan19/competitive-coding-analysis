#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <vector>
#include <set>
#include <queue>
#include <algorithm>
#define N 1010
#define INF 1000000009
#define ll long long
using namespace std;
const int dir[4][2]={-1, 0, 1, 0, 0, 1, 0, -1};
struct node
{
	int x, y;
};
char map[N][N];
int n, m, vis[N][N];
int bfs(int row, int col)
{
	int ans = 0, i;
	queue<node> q;
	node t, tt;
	t.x = row;
	t.y = col;
	memset(vis, 0, sizeof(vis));
	vis[row][col] = 1;
	q.push(t);
	while(!q.empty())
	{
		t = q.front();
		q.pop();
		ans++;
		for (i = 0; i < 4; i++)
		{
			tt.x = t.x + dir[i][0];
			tt.y = t.y + dir[i][1];
			if (tt.x >= 0 && tt.x < n && tt.y >= 0 && tt.y < m && map[tt.x][tt.y] == '.' && !vis[tt.x][tt.y])
			{
				vis[tt.x][tt.y] = 1;
				q.push(tt);
			}
		}
	}
	return ans;
}
int main()
{
#ifndef ONLINE_JUDGE
//	freopen("1.txt", "r", stdin);
#endif
//	ios::sync_with_stdio(false);
//	cin.tie(0);
	int i, j, ans;
	scanf("%d%d", &n, &m);
	getchar();
	for (i = 0; i < n; i++)
		gets(map[i]);
	for (i = 0; i < n; i++)
	{
		for (j = 0 ; j < m; j++)
		{
			if (map[i][j] == '*')
			{
				ans = bfs(i, j);
				ans %= 10;
				map[i][j] = ans + '0';
			}
		}
	}
	for (i = 0; i < n; i++)
		puts(map[i]);
	return 0;
} 

