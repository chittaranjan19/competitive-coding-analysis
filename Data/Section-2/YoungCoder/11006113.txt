# include <iostream>
# include <cstdlib>
# include <cstdio>
# include <cstring>
# include <set>
# include <algorithm>

using namespace std;

void zfunction (int &n, char *a, int *z)
{
    z[0] = 0;
    int L  = -1, R = -1;
    for (int i = 1; i < n; ++i)
    {
        if (i <= R) z[i] = min (z[i - L], R - i + 1);
        else z[i] = 0;
        while (i + z[i] < n && a[z[i]] == a[i + z[i]])
            ++z[i];
        if (z[i] && i + z[i] > R)
        {
            L = i;
            R = i + z[i] - 1;
        }
    }
}

void pfunction (int n, char *s, int *p)
{
    int j;
	for (int i = 1; i < n; ++i)
    {
		j = p[i - 1];
		while (j > 0 && s[i] != s[j])
			j = p[j-1];
		if (s[i] == s[j])  ++j;
		p[i] = j;
	}
}

const int N = 2000000;
char s[N];
int n, k, x, y, z[N], p[N], pi[N];

int main ()
{
    scanf ("%d %d ", &n, &k);
    gets (s);

    zfunction (n, s, z);
    for (int i = 0; i < n; ++i)
        if (z[i])
            p[i + z[i] - 1] = max (p[i + z[i] - 1], z[i]);
    x = 0;
    for (int i = n - 1; i >= 0; --i)
    {
        if (x) --x;
        x = max (x, p[i]);
        p[i] = max (p[i], x);
    }

    for (int i = 0; i < n; ++i)
    {
        x = i + 1;
        y = x - p[i];
        if ((x / y) % k == 0)
        {
            cout << '1';
            continue;
        }
        if (x % y == 0 && (x / y) % (k + 1) == 0)
        {
            cout << '1';
            continue;
        }
        cout << '0';
    }

    return 0;
}
