#include <stdio.h>
#include <bits/stdc++.h>

#define ll long long
#define ld long double

using namespace std;

const ll inf = (ll)2 * 1e9;
const ll MOD = (ll)1e9 + 7;
const ll P = 239;
const int ABC = 26;
const ll MAX_N = 100000;
const ld pi = 3.1415926535897932384626;
const ld eps = 1e-6;

int solve(vector<int> &a, int n, ll curr)
{
    int cnt = 0;
    multiset<int> m;
    for (int i = 0; i < n; i++)
    {
        curr += a[i];
        m.insert(a[i]);
        while (curr < 0)
        {
            curr -= *m.begin();
            m.erase(m.begin());
            cnt++;
        }
    }
    return cnt;
}

int main()
{
    //ios_base::sync_with_stdio(0);
    //cin.tie(0);
    int n, m;
    cin >> n >> m;
    vector<int> a(n);
    for (int i = 0; i < n; i++)
        scanf("%d", &a[i]);
    vector<ll> ans(n + 1);
    for (int i = 0; i <= n; i++)
    {
        ll l = -1, r = 1000000000000000, mid;
        while (r - l > 1)
        {
            mid = (l + r) / 2;
            if (solve(a, n, mid) <= i)
                r = mid;
            else
                l = mid;
        }
        ans[i] = r;
    }
    for (int i = 0; i < m; i++)
    {
        ll x;
        scanf("%lld", &x);
        int l = -1, r = n, mid;
        while (r - l > 1)
        {
            mid = (l + r) / 2;
            if (ans[mid] > x)
                l = mid;
            else
                r = mid;
        }
        printf("%d", &r);
    }
    return 0;
}
