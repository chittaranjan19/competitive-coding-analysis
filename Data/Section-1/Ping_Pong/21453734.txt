#include <stdio.h>
#include <bits/stdc++.h>

#define ll long long
#define ld long double

using namespace std;

const ll inf = (ll)2 * 1e9;
const ll MOD = (ll)1e9 + 7;
const ll P = 239;
const ll MAX_N = 100000;
const ld pi = 3.1415926535897932384626;
const ld eps = 1e-6;

const int ABC = 26;

vector<ll> p, h;
void build(string &a)
{
    ll n = a.size();
    p.resize(n + 1);
    p[0] = 1;
    for (ll i = 1; i <= n; i++)
        p[i] = (p[i - 1] * P) % MOD;
    h.resize(n + 1);
    h[0] = 0;
    for (ll i = 0; i < n; i++)
        h[i + 1] = (h[i] * P + a[i]) % MOD;
}

ll get(ll l, ll r)
{
    return (h[r] - h[l] * p[r - l] % MOD + MOD) % MOD;
}

ll ha(string &s)
{
    ll res = 0;
    for (ll i = 0; i < s.size(); i++)
        res = (res * P + s[i]) % MOD;
    return res;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n, k;
    cin >> n >> k;
    n *= k;
    string s, t;
    cin >> s;
    build(s);
    map<int, int> m;
    int g;
    cin >> g;
    for (int i = 0; i < g; i++)
    {
        cin >> t;
        int hh = ha(t);
        m[hh] = i;
    }
    s += s.substr(0, k - 1);
    vector<int> dp(n + k - 1, -1);
    for (int i = k - 1; i < n + k - 1; i++)
    {
        int hh = get(i - k + 1, i + 1);
        if (m.find(hh) != m.end())
            dp[i] = m[hh];
    }
    vector<int> used(n / k, -1);
    int temp = 0;
    vector<int> ans;
    for (int i = n - 1; i < n + k - 1; i++)
    {
        ans.clear();
        bool ok = true;
        int pos = i;
        for (int j = 0; j < n / k; j++)
        {
            if (dp[pos] == -1 || used[dp[pos]] == temp)
            {
                ok = false;
                break;
            }
            ans.push_back(dp[pos]);
            used[dp[pos]] = temp;
            pos -= k;
        }
        if (ok)
        {
            cout << "YES" << endl;
            for (int j = (int)ans.size() - 1; j >= 0; j--)
                cout << ans[j] + 1 << " ";
            cout << endl;
            return 0;
        }
        temp++;
    }
    cout << "NO" << endl;
    return 0;
}
