#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>
#include <fstream>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

vector<pair<int, int> > v;
bool can[55][55];
bool res[105][105];
string arr[55];
int n;

bool check(int x, int y)
{
  if(x < 0 || y < 0 || x >= n || y >= n) return true;
  return (arr[x][y] != '.');
}

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("3.txt", "r", stdin);
  //freopen("out.out", "w", stdout);
  cin >> n;
  for(int i=0;i<n;i++)
  {
    cin >> arr[i];
    for(int j=0;j<n;j++)
      if(arr[i][j] == 'o')
        v.pb(mp(i, j));
  }
  for(int i=-(n-1);i<n;i++)
  {
    for(int j=-(n-1);j<n;j++)
    {
      if(!i && !j) continue;
      bool test = true;
      for(int k=0;k<v.size() && test;k++)
      {
        int nxtx = v[k].f + i;
        int nxty = v[k].s + j;
        test &= check(nxtx, nxty);
      }
      if(test)
      {
        for(int k=0;k<v.size() && test;k++)
        {
          int nxtx = v[k].f + i;
          int nxty = v[k].s + j;
          if(nxtx < 0 || nxty < 0 || nxtx == n || nxty == n) continue;
          can[nxtx][nxty] = true;
        }
        //cout << i << " " << j << endl;
        res[n - i - 1][n - j - 1] = true;
      }
    }
  }
  bool test = true;
  for(int i=0;i<n && test;i++)
  {
    for(int j=0;j<n && test;j++)
    {
      if(arr[i][j] == 'x' && !can[i][j])
        test = false;
    }
  }
  if(!test)
  {
    cout << "NO";
    return 0;
  }
  cout << "YES\n";
  for(int i=0;i<2*n - 1;i++)
  {
    string tmp = "";
    for(int j=0;j<2*n - 1;j++)
    {
      if(i == n - 1 && j == n - 1) tmp+='o';
      else if(res[j][i]) tmp+='x';
      else tmp+='.';
    }
    cout << tmp << "\n";
  }
  return 0;
}
