#include <bits/stdc++.h>

using namespace std;

const int maxn = 1000000;

int arr[maxn];

map<int, int> m1, m2, m3;
map<int, int> :: iterator iter;

int main()
{
    //freopen("i.txt", "r", stdin);
    int n, i, j, temp, moves, ans, x;
    double y, z;
    scanf("%d", &n);
    for(i=0; i<n; i++)
        scanf("%d", &arr[i]);
    for(i=0; i<n; i++){
        m2.clear();
        temp = arr[i];
        while(temp>0){
            m2[temp] = 1;
            temp/=2;
        }
        temp = arr[i]*2;
        while(temp<=maxn){
            m2[temp] = 1;
            temp*=2;
        }
        if(i==0){
            for(iter=m2.begin(); iter!=m2.end(); ++iter)
                m1[iter->first] = 1;
        }
        else{
            m3.clear();
            for(iter=m2.begin(); iter!=m2.end(); ++iter){
                if(m1.find(iter->first)!=m1.end())
                    m3[iter->first] = 1;
            }
            m1.clear();
            for(iter=m3.begin(); iter!=m3.end(); ++iter){
                m1[iter->first] = 1;
            }
        }
    }
    ans = INT_MAX;
    z = log(2);
    for(iter=m1.begin(); iter!=m1.end(); ++iter){
        //cout << iter->first << "\n";
        moves = 0;
        for(i=0; i<n; i++){
            if(arr[i]>=(iter->first)){
                x = arr[i]/(iter->first);
                y = log(x);
                y = (double)y/z;
                moves += floor(y);
            }
            else{
                x = (iter->first)/arr[i];
                y = log(x);
                y = (double)y/z;
                moves += floor(y);
            }
        }
        ans = min(ans, moves);
    }
    printf("%d\n", ans);
    return 0;
}