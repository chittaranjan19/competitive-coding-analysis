#include<bits/stdc++.h>

using namespace std;

typedef unsigned long long u64;
typedef long long i64;
typedef vector<i64> vi64;
typedef vector<u64> vu64;
typedef pair<i64, i64> pi64;
typedef int huint;

int main()
{
    i64 n;
    cin >> n;
    vi64 v(n+100);
    u64 sol = 0;
    map<i64, i64>m;
     for (int i = 0; i < n; ++i)
    {
        cin >> v[i];
        v[i]=-v[i];
        m[v[i]]++;
    }
    if (n<4)
    {
        cout << 0;
        return 0;
    }
    for (map<i64, i64>::iterator i = m.begin(); i!=m.end(); ++i)
    {
        i64 cnt = i->second, l = i->first;
        if (cnt%2!=0 && m.count(l+1))
        {
            m[l]--;
            m[l+1]++;
        }
    }

    vector<pi64> s;
    for (map<i64, i64>::iterator i = m.begin(); i!=m.end(); ++i)
    {
        i64 cnt = i->second, l = i->first;
       // cout << -l << ' ' << cnt << endl;
        s.push_back(make_pair(-1*l, cnt));
    }
    for(int i=0;i<s.size();i++)
    {
        if (s[i].second>=4)
            sol+=abs(s[i].first*s[i].first*(s[i].second/4));
        s[i].second-=((s[i].second/4)*4);
        if (s[i].second<4 && s[i].second>1)
        {
            i64 j = i+1;
            while (1) {
                if (j>=s.size())
                    break;
                if (s[j].second>1)
                    break;
                ++j;
            }
            sol+=abs(s[i].first*s[j].first);
            s[i].second-=2;
            s[j].second-=2;
        }
    }
    cout << sol;
}
