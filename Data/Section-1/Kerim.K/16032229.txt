#include <bits/stdc++.h>
#define MAXN 100009
#define INF 1000000009
#define ff first
#define ss second
using namespace std;
int a, b, d, g, dx[] = {+1, -1, 0, 0}, dy[] = {0, 0, +1, -1}, nx, ny, dis[1009][1009];
char c[1009][1009];
int _x, _y, w;
long long sm;
queue <pair <int, int> > q;
int das(int xy, int yx)
{
	if(xy > a or xy < 1 or yx > b or yx < 1 or c[xy][yx] == 'T')
		return 0;
	return 1;	
}
void guys()
{
	while(!q.empty())
	{
		int x = q.front().ff;
		int y = q.front().ss;
		q.pop();
		for(int i = 0; i < 4; i++)
		{
			nx = x + dx[i];
			ny = y + dy[i];
			if(das(nx, ny) and dis[x][y] + 1 < dis[nx][ny])
			{
				q.push(make_pair(nx, ny));
				dis[nx][ny] = dis[x][y] + 1;
			}
		}
	}
}
int main()
{
	cin >> a >> b;
	for(int i = 1; i <= a; i++)
		for(int j = 1; j <= b; j++)
			dis[i][j] = INF;			
	for(int i = 1; i <= a; i++)
		for(int j = 1; j <= b; j++)
		{
			cin >> c[i][j];
			if(c[i][j] == 'E')
				dis[i][j] = 0, q.push(make_pair(i, j));
			if(c[i][j] == 'S')
				_x = i, _y = j;	
		}
	guys();
	w = dis[_x][_y];
	for(int i = 1; i <= a; i++)
	{
		for(int j = 1; j <= b; j++)
		{
			if(c[i][j] >= 48 and c[i][j] <= 57)
			{
				if(dis[i][j] <= dis[_x][_y])
					sm += c[i][j] - 48;
			}
		}
	}		
	cout << sm << endl;
return 0;
}

