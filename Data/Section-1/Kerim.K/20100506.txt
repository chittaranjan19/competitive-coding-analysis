#include "bits/stdc++.h"
#define MAXN 2009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second
#define y1 kerim

using namespace std;

typedef long long ll;
typedef pair<ll,ll> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
struct garland{
	ll x,y,z;
}arr[2003][2003];
char s[7];
ll sz[MAXN],query[MAXN];
ll F[MAXN][MAXN];
pair<PII,PII>cordin[MAXN];
vector<ll>adj[MAXN];
void upd(ll x,ll y,ll z){
	for(ll i=x;i<MAXN;i+=i&(-i))
		for(ll j=y;j<MAXN;j+=j&(-j))	
			F[i][j]+=z;
}
ll get(ll x,ll y){
	ll res=0;
	for(ll i=x;i>=1;i-=i&(-i))
		for(ll j=y;j>=1;j-=j&(-j))
			res+=F[i][j];
	return res;	
}
ll tap(ll x,ll y,ll x1,ll y1){
	//~ cout<<x<<" "<<y<<" "<<x1<<" "<<y1<<endl;
	return get(x1,y1)-get(x-1,y1)-get(x1,y-1)+get(x-1,y-1);
}
ll ans[MAXN];
int main(){
	#ifndef ONLINE_JUDGE
    freopen("file.in", "r", stdin);
	#endif	
	ll n,m,k;
	scanf("%lld%lld%lld",&n,&m,&k);
	for(ll i=1;i<=k;i++){
		scanf("%lld",sz+i);
		for(ll j=1;j<=sz[i];j++)
			scanf("%lld%lld%lld",&arr[i][j].x,&arr[i][j].y,&arr[i][j].z);
	}
	ll q,num=0;
	scanf("%lld",&q);
	for(ll i=1;i<=q;i++){
		scanf("%s",s);
		if(s[0]=='A'){
			ll x,y,x1,y1;
			scanf("%lld%lld%lld%lld",&x,&y,&x1,&y1);
			query[++num]=i;
			cordin[num]=mp(mp(x,y),mp(x1,y1));
			continue;	
		}
		ll kind;scanf("%lld",&kind);
		adj[kind].pb(i);
	}
//	for(ll i=1;i<=2;i++)
	//	cout<<cordin[i].ff.ff<<" "<<cordin[i].ff.ss<<" "<<cordin[i].ss.ff<<" "<<cordin[i].ss.ss<<endl;
	for(ll i=1;i<=k;i++){
		for(ll j=1;j<=sz[i];j++)
			upd(arr[i][j].x,arr[i][j].y,arr[i][j].z);
		bool flag=1;ll p=1;
		tr(it,adj[i]){
			if(p>num)
				break;
			if(*it<query[p]){
				flag^=1;
				continue;
			}	
			if(flag)
				ans[p]+=tap(cordin[p].ff.ff,cordin[p].ff.ss,cordin[p].ss.ff,cordin[p].ss.ss);
			p++;it--;
		}
		while(p<=num){
			if(flag)
				ans[p]+=tap(cordin[p].ff.ff,cordin[p].ff.ss,cordin[p].ss.ff,cordin[p].ss.ss);
			p++;	
		}
		for(ll j=1;j<=sz[i];j++)
			upd(arr[i][j].x,arr[i][j].y,-arr[i][j].z);
	}
	for(ll i=1;i<=num;i++)
		printf("%lld\n",ans[i]);
		
	return 0;
}
