/*	 Hello World!	*/

#include <bits/stdc++.h>

#define pb push_back
#define pf push_front
#define mp make_pair
#define f first
#define s second
#define let(x,a) __typeof(a) x(a)
#define all(a) (a).begin(),(a).end() 
#define endl '\n'
#define present(c,x) ((c).find(x) != (c).end()) 
#define tr(v,it) for( let(it,v.begin()) ; it != v.end() ; it++)
#define rtr(v,it) for( let(it,v.rbegin()) ; it != v.rend() ; it++)
#define rep1(i,n) for(int i=0; i<(int)n;i++)
#define rep2(i,a,b) for(int i=(int)a; i<=(int)b; i++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define LL long long int
#define PII pair<int,int>
#define VI vector<int>
#define inf INT_MAX

using namespace std;

void FastIO()
{
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	cout.tie(NULL);
}

int main()
{
	FastIO();
	LL n,a,b,c;
	LL ans=0;
	cin>>n;
	vector< vector<LL> > dist(n+1,vector<LL>(n+1,0));
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=n;j++)
		{
			cin>>dist[i][j];
			if(i>j) ans+=dist[i][j];
		}
	}
	int q;
	cin>>q;
	while(q--)
	{
		cin>>a>>b>>c;
		if(dist[a][b]<=c) {cout<<ans<<" "; continue;}
		ans=0;
		dist[a][b]=dist[b][a]=c;
		for(int i=1;i<=n;i++)
		{
			for(int j=i+1;j<=n;j++)
			{
				LL d1=dist[i][a]+dist[a][b]+dist[b][j];
				LL d2=dist[i][b]+dist[a][b]+dist[a][j];
				LL d=min(d1,d2);
				if(dist[i][j]>d)
				{
					dist[i][j]=dist[j][i]=d;
				}
			}
		}
		for(int i=1;i<=n;i++)
		{
			for(int j=1;j<i;j++)
			{
				ans+=dist[i][j];
			}
		}
		cout<<ans<<" ";
	}
	cout<<endl;
	return 0;
}