#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
ll n,k,l,m;
map<ll,ll> memo;
ll square(ll a) {return ((a%m)*(a%m))%m;}
ll modpow(ll b, ll p){//log p
    if(p==0) return 1;
    if(p%2==0) return square(modpow(b,p/2))%m;
    else return ((b%m)*modpow(b,p-1))%m;
}
ll fib(ll n){
    if(n==0) return 0;
    if(n==1) return 1;
    if(n==2) return 1;
    if(memo.count(n)) return memo[n];
    ll k=n/2;
    if(n%2==0){
        return memo[n]=(fib(k)*(2*fib(k+1)-fib(k)))%m;
    }else{
        return memo[n]=((fib(k+1)*fib(k+1))%m+(fib(k)*fib(k))%m)%m;
    }
}
int main(){
    cin>>n>>k>>l>>m;
    if(l<64&&k>=(1ULL<<l)){
        cout<<0<<endl;
        return 0;
    }
    //fib(3)=2
    //fib(4)=3
    //fib(5)=5
    ll num0=(fib(n+2))%m;
    ll num1=((modpow(2,n)-num0)%m+m)%m;
    ll ans=1;
    for(int i=0;i<l;++i){
        if((k>>i)&1) ans*=num1;
        else ans*=num0;
        ans%=m;
    }
    cout<<(ans%m+m)%m<<endl;
}