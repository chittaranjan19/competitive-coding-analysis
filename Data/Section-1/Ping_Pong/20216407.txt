#include <bits/stdc++.h>

#define ll long long
#define ld long double

using namespace std;

const int N = 100000;
const int inf = (int)1e9;
const int MOD = (int)1e9 + 7;
const ld eps = 1e-6;
const int ABC = 26;

vector<vector<int> > g;
vector<bool> used;

void dfs(int u)
{
    used[u] = true;
    for (int v : g[u])
        if (!used[v])
            dfs(v);
}

int main()
{
    //freopen("point.in", "r", stdin);
    //freopen("point.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    int n, m;
    cin >> n >> m;
    g.resize(n);
    used.resize(n, false);
    bool ok[n][m];
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            ok[i][j] = false;
    for (int i = 0; i < n; i++)
    {
        int k;
        cin >> k;
        for (int j = 0; j < k; j++)
        {
            int x;
            cin >> x;
            ok[i][x - 1] = true;
        }
    }
    for (int i = 0; i < n; i++)
        for (int j = i + 1; j < n; j++)
        {
            bool b = false;
            for (int k = 0; k < m; k++)
                if (ok[i][k] && ok[j][k])
                {
                    b = true;
                    break;
                }
            if (b)
            {
                g[i].push_back(j);
                g[j].push_back(i);
            }
        }
    int cnt = 0;
    for (int i = 0; i < n; i++)
        if (!used[i])
        {
            cnt++;
            dfs(i);
        }
    cout << cnt - 1 << endl;
    return 0;
}
