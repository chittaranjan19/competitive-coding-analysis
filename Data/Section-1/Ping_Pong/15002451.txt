#include <bits/stdc++.h>
#include <iostream>
#include <cstdio>
#include <stdlib.h>
#include <cmath>
#include <algorithm>

using namespace std;
const int inf = (int)1e9;
const int MAX_N = 100000;
const int MOD = (int)1e9 + 7;

int main()
{
    //freopen("slalom.in", "r", stdin);
    //freopen("slalom.out", "w", stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t, k;
    cin >> t >> k;
    int dp[MAX_N];
    for (int i = 0; i <= MAX_N; i++)
        dp[i] = 0;
    for (int i = 0; i <= MAX_N; i++)
    {
        if (i > 0)
            dp[i] = (dp[i] + dp[i - 1]) % MOD;
        else
            dp[i] = (dp[i] + 1) % MOD;
        if (i - k + 1 > 0)
            dp[i] = (dp[i] + dp[i - k]) % MOD;
        else if (i - k + 1 == 0)
            dp[i] = (dp[i] + 1) % MOD;
    }
    for (int i = 1; i <= MAX_N; i++)
        dp[i] = (dp[i] + dp[i - 1]) % MOD;
    for (int i = 0; i < t; i++)
    {
        int a, b;
        cin >> a >> b;
        if (a > 1)
            cout << (dp[b - 1] - dp[a - 2] + MOD) % MOD << endl;
        else
            cout << dp[b - 1] << endl;
    }
    return 0;
}