#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define isIn(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) find((v).begin(),(v).end(),(x)) - (v).begin()

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int main()
{
	int n;
	cin >> n;
	vector <int> prog;
	vector <int> math;
	vector <int> pe;
	forn(i,n)
	{
		int x;
		cin >> x;
		if (x == 1)
			prog.push_back(i+1);
		else if (x == 2)
			math.push_back(i+1);
		else
			pe.push_back(i+1);
	} 
	vector <int> sizes (3);
	sizes[0] = prog.size();
	sizes[1] = math.size();
	sizes[2] = pe.size();
	int w = *min_element(sizes.begin(),sizes.end());
	cout << w << endl;
	forn(i,w)
	{
		int a = prog[i];
		int b = math[i];
		int c = pe[i];
		cout << a << " " << b << " " << c << endl;
	}
	return 0;
}
