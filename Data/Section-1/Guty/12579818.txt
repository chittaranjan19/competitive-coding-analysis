#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int main()
{
	vector<bool> littleZ (2001,false);
	int p,q,l,r;
	cin >> p >> q >> l >> r;
	forn(i,p)
	{
		int a,b;
		cin >> a >> b;
		forsn(j,a,b+1)
			littleZ[j] = true;
	}
	int total = 0;
	vector<int> c (q);
	vector<int> d (q);
	forn(i,q)
		cin >> c[i] >> d[i];
	forsn(t,l,r+1)
	{
		forn(i,q)
		{
			bool termine = false;
			forsn(j,c[i]+t,d[i]+t+1)
				if(littleZ[j])
				{
					total++;
					termine = true;
					break;
				}
			if (termine)
				break;
			
		}
	}
	cout << total << endl;
	return 0;
}



