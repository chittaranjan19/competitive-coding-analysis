#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int p = 239;
const int MAX_N = 1000000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

int main()
{
    //ifstream ifs("input.txt");
    //ofstream ofs("output.txt");
    //freopen("candies.in", "r", stdin);
    //freopen("candies.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n, k;
    cin >> n >> k;
    int a[n];
    for (int i = 0; i < n; i++)
        cin >> a[i];
    map<int, int> m, cnt;
    int left = 0, right;
    long long ans = 0;
    for (right = 0; right < n; right++)
    {
        if (m.find(a[right]) == m.end())
        {
            m[a[right]] = 1;
            if (cnt.find(1) == cnt.end())
                cnt[1] = 0;
            cnt[1]++;
        }
        else
        {
            cnt[m[a[right]]]--;
            if (cnt[m[a[right]]] == 0)
                cnt.erase(m[a[right]]);
            m[a[right]]++;
            if (cnt.find(m[a[right]]) == m.end())
                cnt[m[a[right]]] = 0;
            cnt[m[a[right]]]++;
        }
        while (cnt.size() > 0 && ((--cnt.end())->first >= k) && left < n)
        {
            cnt[m[a[left]]]--;
            if (cnt[m[a[left]]] == 0)
                cnt.erase(m[a[left]]);
            m[a[left]]--;
            if (m[a[left]] == 0)
                m.erase(a[left]);
            if (m.find(a[left]) != m.end())
            {
                if (cnt.find(m[a[left]]) == cnt.end())
                    cnt[m[a[left]]] = 0;
                cnt[m[a[left]]]++;
            }
            left++;
        }
        ans += left;
    }
    cout << ans;
    return 0;
}
