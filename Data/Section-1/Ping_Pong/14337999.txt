#include <stdio.h>
#include <iostream>
#include <stdlib.h>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <string>
#include <math.h>

using namespace std;

int n, m, s, f;
char graph[500][500];

bool dfs(int x, int y, int x1, int y1)
{
    if (x == x1 && y == y1)
    {
        if (graph[x1][y1] == 'O' || (x > 0 && graph[x - 1][y] == '.') || (y > 0 && graph[x][y - 1] == '.') || (x < n - 1 && graph[x + 1][y] == '.') || (y < m - 1 && graph[x][y + 1] == '.'))
        {
            if (graph[x][y] == 'O')
                graph[x][y] = 'X';
            else
                graph[x][y] = '.';
            return true;
        }
        else
        {
            if (graph[x][y] == 'O')
                graph[x][y] = 'X';
            else
                graph[x][y] = '.';
            return false;
        }
    }
    graph[x][y] = 'X';
    bool b = false;
    if (x > 0 && (x - 1) == x1 && y == y1)
    {
        if (graph[x1][y1] == '.')
        {
            graph[x1][y1] = 'X';
            b = b || dfs(x1, y1, x1, y1);
        }
        else
        {
            graph[x1][y1] = 'O';
            b = b || dfs(x1, y1, x1, y1);
        }
    }
    else if (y > 0 && (y - 1) == y1 && x == x1)
    {
        if (graph[x1][y1] == '.')
        {
            graph[x1][y1] = 'X';
            b = b || dfs(x1, y1, x1, y1);
        }
        else
        {
            graph[x1][y1] = 'O';
            b = b || dfs(x1, y1, x1, y1);
        }
    }
    else if (x < n - 1 && (x + 1) == x1 && y == y1)
    {
        if (graph[x1][y1] == '.')
        {
            graph[x1][y1] = 'X';
            b = b || dfs(x1, y1, x1, y1);
        }
        else
        {
            graph[x1][y1] = 'O';
            b = b || dfs(x1, y1, x1, y1);
        }
    }
    else if (y < m - 1 && (y + 1) == y1 && x == x1)
    {
        if (graph[x1][y1] == '.')
        {
            graph[x1][y1] = 'X';
            b = b || dfs(x1, y1, x1, y1);
        }
        else
        {
            graph[x1][y1] = 'O';
            b = b || dfs(x1, y1, x1, y1);
        }
    }
    if (x > 0 && graph[x - 1][y] == '.')
        b = b || dfs(x - 1, y, x1, y1);
    if (y > 0 && graph[x][y - 1] == '.')
        b = b || dfs(x, y - 1, x1, y1);
    if (x < n - 1 && graph[x + 1][y] == '.')
        b = b || dfs(x + 1, y, x1, y1);
    if (y < m - 1 && graph[x][y + 1] == '.')
        b = b || dfs(x, y + 1, x1, y1);
    if (x != (s - 1) && y != (f - 1))
        graph[x][y] = '.';
    return b;
}

int main()
{
    int s, f, x1, y1;
    scanf("%d %d", &n, &m);
    for (int i = 0; i < n; i++)
    {
        scanf("%c", &graph[i][0]);
        for (int j = 0; j < m; j++)
            scanf("%c", &graph[i][j]);
    }
    scanf("%d %d", &s, &f);
    scanf("%d %d", &x1, &y1);
    if (dfs(s - 1, f - 1, x1 - 1, y1 - 1))
        printf("YES");
    else
        printf("NO");
    return 0;
}
