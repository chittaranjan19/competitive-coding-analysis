#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint toNumber (string s)
{
	tint Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (tint number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}

vector<tint> siguiente (vector<tint> v, tint k)
{
	tint d = v.size();
	while (v[--d] == k)
		v[d] = 1;
	v[d]++;
	
	return v;
}


int main()
{
	ios_base::sync_with_stdio(0);
	tint n,k,d;
	#ifdef ACMTUYO
		if (!freopen("C.in", "r", stdin))
			return 1;
	#endif
	while(cin >> n >> k >> d)
	{
		tint D = 0;
		tint kAlaD = 1;
		while (kAlaD < n && D < d)
		{
			kAlaD *= k;
			D++;
		}
		if (n <= kAlaD)
		{
			vector<vector<tint> > m (n, vector<tint> (d,1));
			forsn(i,1,n)
				m[i] = siguiente(m[i-1],k);
			forn(i,d)
			{
				forn(j,n)
					cout << m[j][i] << " ";
				cout << endl;
			}
			
		}
		else
			cout << -1 << endl;
	}
	return 0;
}



