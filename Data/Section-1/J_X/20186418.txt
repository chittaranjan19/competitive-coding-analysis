#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const int maxn = 1e6 + 5;

char s[maxn];

int cal(int n)
{
    int ret = 1, now = 0;
    while(now < n)
    {
        ++ret;
        now = ret * (ret - 1) / 2;
    }
    return now == n ? ret : -1;
}

int main()
{
    int a, b, c, d;
    cin >> a >> b >> c >> d;
    int aa = cal(a), dd = cal(d);
    if(aa == -1 || dd == -1 || aa * dd != b + c) cout << "Impossible" << endl;
    else
    {
        int len = aa + dd;
        for(int i = 0; i < aa; ++i) s[i] = '0';
        for(int i = aa; i < len; ++i) s[i] = '1';
        int now0 = 0, now1 = aa;
        while(c)
        {
            if(c >= aa)
            {
                swap(s[now0], s[now1]);
                ++now0, ++now1;
                c -= aa;
            }
            else
            {
                swap(s[now1 + c], s[now1]);
                c = 0;
            }
        }
        s[len] = 0;
        cout << s << endl;
    }
    return 0;
}
