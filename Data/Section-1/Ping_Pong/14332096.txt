#include <stdio.h>
#include <iostream>
#include <stdlib.h>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <string>
#include <math.h>

using namespace std;

long long bin_search_left(long long x, long long* a, long long n)
{
    long long l = 0, r = n, mid;
    while (r - l > 1)
    {
        mid = (l + r) / 2;
        if (x >= a[mid])
            l = mid;
        else
            r = mid;
    }
    if (a[l] == x)
        return l;
    else
        return -1;
}

long long bin_search_right(long long x, long long* a, long long n)
{
    long long l = -1, r = n - 1, mid;
    while (r - l > 1)
    {
        mid = (l + r) / 2;
        if (x > a[mid])
            l = mid;
        else
            r = mid;
    }
    if (a[r] == x)
        return r;
    else
        return -1;
}

int main()
{
    long long k, ans = 0;
    scanf("%I64d", &k);
    string s;
    cin >> s;
    long long a[s.size() + 1];
    for (long long i = 0; i < s.size() + 1; i++)
        a[i] = 0;
    for (long long i = 0; i < s.size() + 1; i++)
        if (s[i] == '1')
            a[i + 1] = 1;
    for (long long i = 1; i < s.size() + 1; i++)
        a[i] += a[i - 1];
    for (long long i = 1; i < s.size() + 1; i++)
        if (a[i] >= k && (bin_search_left(a[i] - k, a, i) != -1))
            ans += (bin_search_left(a[i] - k, a, i) - bin_search_right(a[i] - k, a, i) + 1);
    printf("%I64d", ans);
    return 0;
}
