#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define lcm(x,y) (x/_gcd(x,y)*y)
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN],mx=0,a;
PII rr[MAXN],s[MAXN<<2];
void build(int nd,int x,int y){
	if(x==y){
		s[nd]=mp(arr[x],x);
		return;
	}
	int mid=(x+y)>>1;
	build(nd<<1,x,mid);
	build(nd<<1|1,mid+1,y);
	s[nd]=max(s[nd<<1],s[nd<<1|1]);
}
PII tap(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return mp(0,0);
	if(l<=x and y<=r)
		return s[nd];
	int mid=(x+y)>>1;
	PII i1=tap(l,r,nd<<1,x,mid);
	PII i2=tap(l,r,nd<<1|1,mid+1,y);
	return max(i1,i2);
}
void calc(int tp,int l,int r,int k){
	if(l>r)
		return;
	PII p=tap(l,r,1,1,a);
	umax(mx,k^p.ff);
	if(tp==1)
		calc(tp,p.ss+1,r,k);
	else
		calc(tp,l,p.ss-1,k);	
}
int main(){
	scanf("%d",&a);
	for(int i=1;i<=a;i++)
		scanf("%d",arr+i);
	build(1,1,a);
	stack<int>s;s.push(0);
	arr[0]=INF;
	for(int i=1;i<=a;i++){
		while(!s.empty() and arr[s.top()]<=arr[i]){
			rr[s.top()].ss=i-1;
			s.pop();
		}
		if(arr[s.top()]==arr[i])
			rr[i].ff=rr[s.top()].ff;
		else	
			rr[i].ff=s.top()+1;
		rr[i].ss=a;
		s.push(i);
	}
	for(int i=1;i<=a;i++){
		calc(1,rr[i].ff,i-1,arr[i]);
		calc(2,i+1,rr[i].ss,arr[i]);
	}
	printf("%d\n",mx);
	return 0;
}
