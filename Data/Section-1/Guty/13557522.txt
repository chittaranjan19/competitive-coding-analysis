#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;



void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int toNumber (string s)
{
	int Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (int number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}




int main()
{
	int n;
	cin >> n;
	vector<int> v (n);
	forn(i,n)
		cin >> v[i];
	int primero = 0;
	int ultimo = n-1;
	
	while (primero < n && v[primero] == 0)
		primero++;
	while (ultimo >= 0 && v[ultimo] == 0)
		ultimo--;
	int estoy = primero;
	int total = 0; 
	while (estoy <= ultimo)
	{
		if ((estoy < ultimo - 1 && v[estoy] == 0 && v[estoy+1] != 0) or v[estoy] == 1)
			total++;
		estoy++;
	}
			
	cout << total << endl;
		
		
		
		
	
	return 0;
}



