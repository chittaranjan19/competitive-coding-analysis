//Cok tavsanin pesinde kosan hicbrini yakalayamaz!
#include<bits/stdc++.h>
#define MAXN 509
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int vis[MAXN][MAXN],cost[MAXN][3],git[MAXN],found;
	int n,m;
void dfs(int nd,int c){
	git[nd]=1;
	for(int i=1;i<=n;i++)
		if(i!=nd and !vis[nd][i])
			cost[i][c]=0;
	for(int i=1;i<=n;i++){
		for(int j=0;j<3;j++)
			if(!git[i] and vis[nd][i]==true and cost[i][j]==true)
				dfs(i,j);
	}
}
void barla(int nd,int c){
	git[nd]=true;
	for(int i=1;i<=n;i++)
		if(!git[i] and vis[nd][i]){
			vector<int>imp;
			for(int j=0;j<3;j++)
				if(cost[i][j])
					imp.pb(j);		
			int d=1;
			if(imp.size()==1){		
				if((imp[0]==2 and c==0) or (c==2 and imp[0]==0))	
					d=0;
			}
			if(!d)
				found=1;;		
			barla(i,imp[0]);
		}
}
int main(){
	scanf("%d%d",&n,&m);
	for(int i=1;i<=m;i++){
		int u,v;
		scanf("%d%d",&u,&v);
		vis[u][v]=vis[v][u]=1;
	}
	for(int i=1;i<=n;i++)
		for(int j=0;j<3;j++)
			cost[i][j]=true;
	dfs(1,0);
	vector<char>v;
	for(int i=1;i<=n;i++){
		int d=-1;
		for(int j=0;j<3;j++)
			if(cost[i][j]){
				d=j;
				break;
			}
		if(d==-1){
			printf("No\n");
			return 0;
		}
		v.pb(char(97+d));
	}
	fill(git,git+MAXN,0);
	barla(1,0);
	if(found){
		printf("No\n");
		return 0;
	}
	printf("Yes\n");
	for(int i=0;i<v.size();i++)
		cout<<v[i];
	cout<<endl;	
	return 0;
}

