#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e4 * 5 + 10;
const int INF = 1e9 + 7;

using namespace std;
string s;
int n;
int dp[MAXN][101];
int next[MAXN][101];
int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("335B.inp", "r", stdin);
    freopen("335B.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> s;
    n = s.size(); s = '=' + s;
    FORE(i, 0, n + 1) FORE(j, 0, 100) next[i][j] = n + 1;
    FORE(ch, 0, 25){
        int pos = n + 1;
        FORD(i, n, 1){
            next[i][ch] = pos;
            //if (ch == 1 && i == 8) cout << next[i][ch]<<"wtf"<<endl;
            if ((s[i] - 'a') == ch) pos = i;
            //if (ch == 1) cout <<pos<<"wtf"<<endl;
        }
    }
    FORE(i, 1, n) dp[i][1] = i;
    FORE(i, 1, n) dp[i][0] = i - 1;
    FORE(j, 0, 100) dp[n + 1][j] = n + 1;
    FORD(i, n, 1) FORE(k, 2, 100) dp[i][k] = min(dp[i + 1][k], next[dp[i + 1][k - 2]][s[i] - 'a']);

    FORD(k, 100, 1) FORE(i, 1, n) if (dp[i][k] < n + 1){
        int len = k;
        int pos = i;
        //cout << pos <<" "<<len<<endl;
        //cout << next[dp[pos + 1][len - 2]][s[len] - 'a'] << endl;
        string s1 = "", s2 ="";
        while (len){
            if (dp[pos][len] == next[dp[pos + 1][len - 2]][s[pos] - 'a']){
                if (len >= 2) s1 += s[pos], s2 = s[pos] + s2, len -= 2;
                else s1 += s[i], len--;
            }
            pos++;
        }
        cout<<s1 + s2;
        return 0;
    }
    return 0;
}

