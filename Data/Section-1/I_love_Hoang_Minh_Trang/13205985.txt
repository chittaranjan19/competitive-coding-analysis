using namespace std;
#include<bits/stdc++.h>
#define FOR(i, a, b) for (int i = a; i < b; i++)
#define FORE(i, a, b) for (int i = a; i <= b; i++)
#define FORD(i, a, b) for (int i = a; i >= b; i--)
const int MAXN = 200;
const int INF  = 1e9 + 7;

typedef pair<int, int> II;
vector< II > adj[MAXN];
int n, m, Q;
bool check[MAXN], color[MAXN][MAXN];
int  dd[MAXN];
int s, t;

void dfs(int u, int w)
{
    check[u] = true;
    color[u][w] = true;
    for(int i = 0; i < adj[u].size(); i++) {
        int ww = adj[u][i].first;
        int v = adj[u][i].second;
        if (ww == w && !check[v]) dfs(v, w);
    }
}

int main()
{
    ios::sync_with_stdio(false);
    //freopen("505B.inp", "r", stdin);
    //freopen("505B.out", "w", stdout);
    cin >> n >> m;
    FORE(i, 1, m) {
        int u, v, w;
        cin >> u >> v >> w;
        adj[u].push_back(II(w, v));
        adj[v].push_back(II(w, u));
    }
    cin >> Q;
    while (Q--) {

        cin >> s >> t;
        check[s] = true;
        int ans = 0;
        memset(dd, 0, sizeof(dd));
        for(int i = 0; i < adj[s].size(); i++){
            memset(check, 0, sizeof(check));
            memset(color, 0, sizeof(color));
            int v = adj[s][i].second;
            int w = adj[s][i].first;
            dfs(v, w);
            if (color[t][w]) {
                    dd[w]++;
                    if (dd[w] == 1) {
                            ans++;
                            //cout<<w<<"wtf"<<endl;
                    }
            }
        }
        cout<<ans<<endl;
    }
    return 0;
}
