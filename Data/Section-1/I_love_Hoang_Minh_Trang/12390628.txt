using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;



ll n, k;
int vt[200000 +10];

map<int, long long> dd, m;
map<int, long long> :: iterator it, it2;
int main()
{
    //freopen("codeforces.inp", "r", stdin);
    //freopen("codeforces.out", "w", stdout);

    cin>>n>>k;
    ll ans = 0;
    int num;

    FORE(i, 1, n) {
        cin>>num;
        it = dd.find(num);
        //if (i == 1) cout<< (it == dd.end() ) << true << endl;
        if (it != dd.end() ) (*it).second++;
        else dd.insert(pair<int, long long>(num,1));
            //
        //cout<<num<< "=="<<dd[num]<<endl;
        if (num % k == 0) {
            //cout<<i<<endl;
            it = dd.find(num / k);
            it2= m.find(num);
            if (it2 == m.end()) m.insert(pair<int, long long>(num, 0));
            it2= m.find(num);

            if (it != dd.end() ) (*it2).second += dd[num / k];
           // cout<<num<<"=="<<num / k <<"=="<<m[num]<<"=="<<dd[num / k]<<"=="<<(it == dd.end() ) <<endl;
        }

        if (num %(k*k) == 0) ans += m[num / k];
    }

    cout<<ans;
    return 0;
}

