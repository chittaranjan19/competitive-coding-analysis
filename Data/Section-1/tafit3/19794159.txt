import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProblemC {
    BufferedReader rd;

    ProblemC() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        rd.readLine();
        long[] c = longarr();
        int n = c.length;
        String prev1 = null;
        long total1 = 0;
        String prev2 = null;
        long total2 = 0;
        for(int i=0;i<n;i++) {
            String s = rd.readLine();
            if(prev1 == null) {
                prev1 = s;
                total1 = 0;
                String r = reverse(s);
                if(r.compareTo(s) < 0) {
                    prev2 = r;
                    total2 = c[i];
                } else {
                    prev2 = s;
                    total2 = 0;
                }
            } else {
                String r = reverse(s);
                if(total1 >= 0) {
                    if (s.compareTo(prev1) < 0) {
                        if (r.compareTo(prev1) >= 0) {
                            total1 += c[i];
                            prev1 = r;
                        } else {
                            total1 = -1;
                        }
                    } else {
                        prev1 = s;
                    }
                }
                if(total2 >= 0) {
                    if (s.compareTo(prev2) < 0) {
                        if (r.compareTo(prev2) >= 0) {
                            total2 += c[i];
                            prev2 = r;
                        } else {
                            total2 = -1;
                        }
                    } else {
                        prev2 = s;
                    }
                }
            }
        }
        long res = Long.MAX_VALUE;
        res = Math.min(res, total1);
        res = Math.min(res, total2);
        res = res == Long.MAX_VALUE ? -1 : res;
        out(res);
    }

    private String reverse(String s) {
        int n = s.length();
        char[] r = new char[n];
        for(int i=0;i<n;i++) {
            r[n-i-1] = s.charAt(i);
        }
        return new String(r);
    }

    private long[] longarr() throws IOException {
        return longarr(rd.readLine());
    }

    private long[] longarr(String s) {
        String[] q = split(s);
        int n = q.length;
        long[] a = new long[n];
        for(int i=0;i<n;i++) {
            a[i] = Long.parseLong(q[i]);
        }
        return a;
    }

    public String[] split(String s) {
        if(s == null) {
            return new String[0];
        }
        int n = s.length();
        int start = -1;
        int end = 0;
        int sp = 0;
        boolean lastWhitespace = true;
        for(int i=0;i<n;i++) {
            char c = s.charAt(i);
            if(isWhitespace(c)) {
                lastWhitespace = true;
            } else {
                if(lastWhitespace) {
                    sp++;
                }
                if(start == -1) {
                    start = i;
                }
                end = i;
                lastWhitespace = false;
            }
        }
        if(start == -1) {
            return new String[0];
        }
        String[] res = new String[sp];
        int last = start;
        int x = 0;
        lastWhitespace = true;
        for(int i=start;i<=end;i++) {
            char c = s.charAt(i);
            boolean w = isWhitespace(c);
            if(w && !lastWhitespace) {
                res[x++] = s.substring(last,i);
            } else if(!w && lastWhitespace) {
                last = i;
            }
            lastWhitespace = w;
        }
        res[x] = s.substring(last,end+1);
        return res;
    }

    private boolean isWhitespace(char c) {
        return c==' ' || c=='\t';
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemC();
    }
}
