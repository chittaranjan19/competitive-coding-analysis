#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;


int n;
int nm=0;

vector<int> adj[200200];
int col[200200];

bool has_child[200200];

void dfs(int nd,int p){
	for(int i=0;i<adj[nd].size();i++){
		int ch=adj[nd][i];
		if(ch==p)continue;
		dfs(ch,nd);
		if(has_child[ch] || col[ch]==-1){
			has_child[nd]=true;
		}
	}
}

void visit(int nd){
	if(nm==0)return;
	cout<<nd<<" ";
	if(col[nd]==1){
		nm++;
		col[nd]=-1;
	} else {
		nm--;
		col[nd]=1;
	}
}
void solve(int nd,int p){
	for(int i=0;i<adj[nd].size();i++){
		int ch=adj[nd][i];
		if(ch==p)continue;
		visit(ch);

		solve(ch,nd);
		visit(nd);
		if(col[ch]==-1){
			visit(ch);
			visit(nd);
		}

	}
}

int main(){
	cin.sync_with_stdio(false);
	cin>>n;
	for(int i=1;i<=n;i++){
		cin>>col[i];
		if(col[i]==-1){
			nm++;
		}
	}
	for(int i=1;i<n;i++){
		int a,b;
		cin>>a>>b;
		adj[a].push_back(b);
		adj[b].push_back(a);
	}
	if(col[1] == -1 && nm ==1){
		cout<<1<<" "<<adj[1][0]<<" "<<1<<" "<<adj[1][0]<<endl;
		return 0;
	}
	if(nm==0){
		cout<<1<<endl;
		return 0;
	}
	cout<<1<<" ";
	solve(1,1);
	if(col[1] == -1){
		cout<<1<<" "<<adj[1][0]<<" "<<1<<" "<<adj[1][0]<<endl;
		return 0;
	}
}