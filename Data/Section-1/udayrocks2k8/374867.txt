/* understand it at your own risk */
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <deque>
#include <stack>
#include <cmath>
#include <cstdio>
#include <cctype>
#include <cstdlib>
#include <climits>
#include <set>
#include <map>
#include <numeric>
#include <queue>
#include <cstring>
using namespace std;
#define NDEBUG
#ifndef NDEBUG
	#define debug(x) cerr<<#x<<"=\""<<x<<"\""<<" at line#"<<__LINE__<<endl;
	#define hline() cerr<<"-----------------------------------------"<<endl;
	#define print(x)  cerr<<(x)<<endl;
#else
	#define debug(x)
	#define hline()
	#define print(x)
#endif
#define si size()
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef vector<bool> vb;
typedef vector<vector<bool> > vvb;
typedef vector<string> vs;
typedef long long ii;
typedef long long i64;
typedef long long intint;
typedef pair<int,int> pii;
#define mod(A,B) ((((A) % (B)) + (B)) % (B))
#define b2e(A) (A).begin(), (A).end()
#define e2b(A) (A).rbegin(), (A).rend()
#define rev(A) std::reverse(b2e(A))
#define s(A) std::sort(b2e(A))
#define ss(A) std::stable_sort(b2e(A))
#define un(A) std::unique(b2e(A))
#define er(A) (A).erase(un(A), (A).end())
#define Fill(A,B) std::fill(b2e(A), B)
#define minelt(A) *min_element(b2e(A))
#define maxelt(A) *max_element(b2e(A))
#define For(i,a,b) for(int i=a;i<b;i++)
#define Forr(i,a,b) for(int i=b;i>=a;i--)
#define set(A,i) memset(A,i,sizeof A)
#define pb(A,i) A.push_back(i)
#define INF (1<<30)
#define S(x) scanf("%d",&x)
void swap(int &a,int &b) { int t=a;a=b;b=t; }
int __sign;
int __ch;
ii gcd(ii a, ii b) {if (a == 0 || b == 0) return max(a,b); if (b % a == 0) return a; return gcd(b%a, a);}
//int dx[] = {-1,0,1,0}, dy[] = {0,1,0,-1};
//int dx[] = {1,1,1,0,0,-1,-1,-1}, dy[] = {1,0,-1,1,-1,1,0,-1};
//----------------------main code----------------------//
typedef pair<string,int> psi;
vector<psi>v1,v2;
#define x first
#define y second
bool cmp1(psi p1,psi p2)
{
	if(p1.y==p2.y)
	return (p1.x).compare(p2.x)>0;
	return p1.y<p2.y;
}
bool cmp2(int p1,int p2)
{
	return p1>p2;
}
bool cmp3(psi p1,psi p2)
{
	if(p1.y==p2.y)
	return (p1.x).compare(p2.x)<0;
	return p1.y>p2.y;
}
int main()
{
	int n;
	S(n);
	v1.resize(n);
	For(i,0,n)
	{
		cin>>v1[i].x;
		cin>>v1[i].y;
	}
	int m;
	S(m);
	vi reward(n);
	For(i,0,m)
	cin>>reward[i];
	For(i,m,n)
	reward[i]=0;
	string st;
	cin>>st;
	psi cur;
	For(i,0,n)
	if(v1[i].x==st)
	cur=v1[i];
	else
	pb(v2,v1[i]);
	sort(b2e(v2),cmp1);
	sort(b2e(reward),cmp2);
	cur.y+=reward[0];

	For(i,1,n)
	v2[i-1].y+=reward[i];
	pb(v2,cur);
	sort(b2e(v2),cmp3);

	For(i,0,n)
	if(v2[i].x==st)
	{
		cout<<i+1<<" ";
		break;
	}

	v2.clear();
	For(i,0,n)
	if(v1[i].x==st)
	cur=v1[i];
	else
	pb(v2,v1[i]);
	sort(b2e(v2),cmp3);
	cur.y+=reward[n-1];
	For(i,0,n-1)
	v2[i].y+=reward[i];
	pb(v2,cur);
	sort(b2e(v2),cmp3);

	For(i,0,n)
	if(v2[i].x==st)
	{
		cout<<i+1<<endl;
		break;
	}
	return 0;
}
