// Dima And Continuous Line

#include <algorithm>
#include <bits/stdc++.h>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

int flag1[2000001],flag2[2000001];

int main()
{
	int n,i,x,j,pre,f=0;
	cin>>n;
	cin>>pre;
	pre+=1000001;
	for(i=1;i<n;i++)
	{
		cin>>x;
		x+=1000001;
		flag1[pre]=x;
		flag2[x]=pre;
		if(f==0)
		{
			if(x>pre)
			{
				for(j=pre+1;j<x;j++)
				{
					if(flag1[j]==0 && flag2[j]==0) continue;
					if((flag1[j]<pre && flag1[j]!=0) || (flag2[j]<pre && flag2[j]!=0) || flag1[j]>x || flag2[j]>x) {f=1; break;}
				}
			}
			else
			{
				for(j=pre-1;j>x;j--)
				{
					if(flag1[j]==0 && flag2[j]==0) continue;
					if(flag1[j]>pre || flag2[j]>pre || (flag1[j]<x && flag1[j]!=0) || (flag2[j]<x && flag2[j]!=0)) {f=1; break;}
				}
			}
		}
		pre=x;
	}
	if(f==0) cout<<"no"<<endl;
	else cout<<"yes"<<endl;
	return 0;
}
