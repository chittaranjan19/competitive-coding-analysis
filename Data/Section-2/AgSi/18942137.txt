#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <queue>
using namespace std;

const int maxn =200005;
int data[maxn];
int ans[maxn];
int n;
vector<int >vc[maxn];

queue<int >q;
void dfs(int st){
    q.push(st);
    while(!q.empty()){
        int now=q.front();
        q.pop();
        for(int i=0;i<vc[now].size();i++){
            if(ans[vc[now][i]]>ans[now]+1){
                ans[vc[now][i]]=ans[now]+1;
                q.push(vc[now][i]);
            }
        }
    }
}

int main(){

    scanf("%d",&n);
    int i,j;
    memset(ans,0x3f,sizeof(ans));
    for(i=1;i<=n;i++){
        scanf("%d",&data[i]);
        vc[i].push_back(data[i]);
    }
    for(i=1;i<=n;i++){
        if(i>1)
            vc[i].push_back(i-1);
        if(i<n)
            vc[i].push_back(i+1);
    }
    ans[1]=0;
    dfs(1);
    for(i=1;i<=n;i++)
        printf("%d ",ans[i]);
    printf("\n");
    return 0;
}
