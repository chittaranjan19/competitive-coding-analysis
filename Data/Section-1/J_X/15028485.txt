#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>

using namespace std;

typedef pair<int, int> P;

const int MAXN = 2e6 + 5;
const int INF = 1 << 30;

P a[MAXN];
vector<P> vec, ans;

int main()
{
    int n, k;
    while(~scanf("%d%d", &n, &k))
    {
        int c = -1;
        vec.clear();
        ans.clear();
        n <<= 1;
        for(int i = 0; i < n; ++i)
        {
            scanf("%d", &a[i].first);
            a[i].second = c;
            c = -c;
        }
        sort(a, a + n);
        int now = 1;
        for(int i = 1; i < n; ++i)
        {
            if(now >= k)
            {
                vec.push_back(P(a[i - 1].first, a[i].first));
            }
            now -= a[i].second;
        }
        int lf = INF, rg = INF;
        for(int i = 0; i < vec.size(); ++i)
        {
            if(lf == INF)
            {
                lf = vec[i].first, rg = vec[i].second;
            }
            else if(rg == vec[i].first)
            {
                rg = vec[i].second;
            }
            else
            {
                ans.push_back(P(lf, rg));
                lf = vec[i].first, rg = vec[i].second;
            }
        }
        if(lf != INF)
        {
            ans.push_back(P(lf, rg));
        }
        printf("%d\n", ans.size());
        for(int i = 0; i < ans.size(); ++i)
        {
            printf("%d %d\n", ans[i].first, ans[i].second);
        }
    }
    return 0;
}
