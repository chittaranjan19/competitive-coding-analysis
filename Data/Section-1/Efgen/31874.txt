import java.io.*;         
import java.util.*;         
import java.math.*;         

public class Main  implements Runnable {
//public static final String FileName = "test";
StreamTokenizer ST;      
PrintWriter out;      
BufferedReader br;   
Scanner in;
static final int inf = 1000000000+10;
static final double eps = 1e-8;

int nextInt() throws IOException{      
    ST.nextToken();      
    return (int)ST.nval;      
}
long nextLong() throws IOException{      
    ST.nextToken();      
    return (long)ST.nval;      
}      
String next() throws IOException{      
    ST.nextToken();      
    return ST.sval;      
}      
double nextD() throws IOException{      
    ST.nextToken();      
    return ST.nval;      
}      
public static void main(String[] args) throws IOException {       
   new Thread(new Main()).start();
//	new Main().run();
}

public void run()  {      
    try {
    	br = new BufferedReader(new InputStreamReader(System.in));
    	out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));  	
    	
    	//br = new BufferedReader(new FileReader(new File(FileName+".in")));
    	//out = new PrintWriter(new BufferedWriter(new FileWriter(FileName+".out")));
    	//br = new BufferedReader(new FileReader(new File("input.txt")));
    	//out = new PrintWriter(new BufferedWriter(new FileWriter("output.txt")));
    	//in = new Scanner(br);
        ST = new StreamTokenizer(br);      
        solve();      
        out.close();
        //in.close();
        br.close();   
    }         
    catch (IOException e) {        
    	throw new IllegalStateException(e);       
    }      
}

int[] zf (char [] s) {
	int n = s.length;
	int [] z = new int[n];	
	int l = 0, r = 0;
	for (int i=1; i<n; ++i)
		if (z[i-l]+i <= r)
			z[i] = z[i-l];
		else {	
			l = i;
			if (i > r) r = i;
			for (z[i] = r-i; r<n; ++r, ++z[i])
				if (s[r] != s[z[i]])
					break;
			--r;
		}
	return z;
}
public void solve() throws IOException {
	char[] s1 = (br.readLine()).toCharArray();
	int n = s1.length;
	char[] s = new char[2*n];
	for (int i=0; i<n; i++) s[i] = s[2*n-i-1] = s1[i];	
	int[] d = new int[n+1];
	int[] z = zf(s); d[0] = 1;
	for (int i=1; i<n; i++) {		
		int t = 2*n-i-1; 
		if (z[t]>=i+1) d[i] = 1+d[(i+1)/2-1];
	}
	
	
	
	
	long res = 0;	
	for (int x:d) res += x;
	out.println(res);
	
}
}










 