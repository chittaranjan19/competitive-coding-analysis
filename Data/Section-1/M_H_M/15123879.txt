//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 5000 + 100;
const int M = 1000 * 1000 * 1000 + 7;

string s;

int n;
ll dp[N][N];
ll ps[N][N];
bool isl[N][N];

string t[2][N];

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> n;
	cin >> s; 
	for(int i = 1; i <= n; ++i){
		for(int j = 0; i + j <= n; ++j){
			t[i % 2][j] = t[(i - 1) % 2][j] + s[j + i - 1];
			if(j >= i && t[i % 2][j - i] < t[i % 2][j])
				isl[i][j - i] = 1;
		}
	}
	for(int i = 1; i <= n; ++i){
		dp[i][i] = 1;
		ps[i][i + 1] = 1;
	}
	for(int i = 2; i <= n; ++i){
		for(int j = 1; j < i; ++j){
			if(s[i - j] == '0'){
				ps[i][j + 1] = ps[i][j];
				continue;
			}
			dp[i][j] = ps[i - j][min(i - j + 1, j)];
			if(i - 2 * j >= 0 && isl[j][i - 2 * j])
				dp[i][j] += dp[i - j][j];
//			cerr << "bug : " << i << " " << j << " " << dp[i][j] << " " << ps[i - j][min(i - j + 1, j)] << "\n";
			ps[i][j + 1] = ps[i][j] + dp[i][j];
			ps[i][j + 1] %= M;
		}
		ps[i][i + 1] = ps[i][i] + 1;
		ps[i][i + 1] %= M;
	}
	ll ans = 0;
	for(int i = 1; i <= n; ++i){
		ans += dp[n][i];
		ans %= M;
	}
	cout << ans << "\n";
	return 0;
}
