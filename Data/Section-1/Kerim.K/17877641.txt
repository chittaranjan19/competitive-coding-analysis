#include<bits/stdc++.h>
#define MAXN 4009 
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN][MAXN];
int dp[MAXN][MAXN];
int cost[MAXN][MAXN];
int par[109][109];
int main(){
	int n,k;
	scanf("%d%d",&n,&k);
	for(int i=1;i<=n;i++)
		for(int j=1;j<=n;j++){
			scanf("%d",&arr[i][j]);
			par[i][j]=par[i][j-1]+arr[i][j];
		}
	for(int i=1;i<=n;i++)
		for(int j=i+1;j<=n;j++)
			cost[i][j]=cost[i][j-1]+par[j][j]-par[j][i-1];	
	for(int i=1;i<=n;i++)
		dp[i][1]=dp[i-1][1]+cost[1][i];
	for(int j=2;j<=k;j++)
		for(int i=1;i<=n;i++){
			dp[i][j]=INF;
			for(int k=1;k<=i;k++)
				umin(dp[i][j],dp[k-1][j-1]+cost[k][i]);	
		}
	cout<<dp[n][k]<<endl;
	return 0;
}
//LooK aT mY COde ONlinE +_+
