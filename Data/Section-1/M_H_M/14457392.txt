//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <cstring>
#include <ctime>
#include <iomanip>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 400 + 50;

int n, m;
int mat[N][N];

int d[N][N];
queue <pii> q;

void bfs(){
	q.push(MP(0, 0));
	d[0][0] = 0;
	while(!q.empty()){
		int x = q.front().X;
		int y = q.front().Y;
		q.pop();
		for(int i = 0; i < n; ++i){
			if(mat[x][i] == 0) continue;
			for(int j = 0; j < n; ++j){
				if(mat[y][j] == 1) continue;
				if(i == j && i != n - 1) continue;
				if(d[i][j] == -1){
					d[i][j] = d[x][y] + 1;
					q.push(MP(i, j));
				}
			}
		}
	}
}

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	memset(d, -1, sizeof d);
	cin >> n >> m;
	for(int i = 0; i < m; ++i){
		int u, v;
		cin >> u >> v;
		u --; v --;
		mat[u][v] = 1;
		mat[v][u] = 1;
	}
	mat[n - 1][n - 1] = 2;
	bfs();
	cout << d[n - 1][n - 1] << "\n";
	return 0;
}
