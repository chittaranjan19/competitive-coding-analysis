#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>
#include <iostream>
#include <sstream>
#include <vector>
#include <algorithm>
#include <set>
#include <queue>
#include <map>
#include <string>

using namespace std;

char a[1001][1001];
int n,m,i,j,dist,ans;
int d[1001][1001];

struct T
{
    int i,j;
}t,tt,e;

queue<T>q;

int di[]={1,0,-1,0};
int dj[]={0,1,0,-1};

int main()
{
    scanf("%d%d",&n,&m);
    for(i=0;i<n;i++)
    {
        scanf("%s",&a[i]);
        for(j=0;j<m;j++)
            if(a[i][j]=='S')
            {
                t.i=i;
                t.j=j;
            }
            else if(a[i][j]=='E')
            {
                e.i=i;
                e.j=j;
            }
    }
    memset(d,-1,sizeof(d));
    d[t.i][t.j]=0;
    q.push(t);
    while(!q.empty())
    {
        t=q.front();
        q.pop();
        for(i=0;i<4;i++)
        {
            tt.i=t.i+di[i];
            tt.j=t.j+dj[i];
            if(tt.i>=0 && tt.j>=0 && tt.i<n && tt.j<m && a[tt.i][tt.j]!='T' && d[tt.i][tt.j]==-1)
            {
                d[tt.i][tt.j]=d[t.i][t.j]+1;
                q.push(tt);
            }
        }
    }
    dist=d[e.i][e.j];
    memset(d,-1,sizeof(d));
    q.push(e);
    d[e.i][e.j]=0;
    while(!q.empty())
    {
        t=q.front();
        q.pop();
        for(i=0;i<4;i++)
        {
            tt.i=t.i+di[i];
            tt.j=t.j+dj[i];
            if(tt.i>=0 && tt.j>=0 && tt.i<n && tt.j<m && a[tt.i][tt.j]!='T' && d[tt.i][tt.j]==-1)
            {
                d[tt.i][tt.j]=d[t.i][t.j]+1;
                q.push(tt);
            }
        }
    }
    for(i=0;i<n;i++)
        for(j=0;j<m;j++)
            if(d[i][j]!=-1 && d[i][j]<=dist && a[i][j]>='0' && a[i][j]<='9')
                ans+=a[i][j]-'0';
    printf("%d\n",ans);
    return 0;
}