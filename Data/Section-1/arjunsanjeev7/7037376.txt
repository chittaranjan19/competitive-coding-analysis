// Combination

#include <algorithm>
#include <bits/stdc++.h>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

bool cmp1(pair<int,int> p1, pair<int,int> p2)
{
	return (p1.first>p2.first);
}

bool cmp2(pair<int,int> p1, pair<int,int> p2)
{
	return (p1.second>p2.second);
}

int main()
{
	int n,i,x,y,ans=0,ans1=0,ans2=0,cnt;
	cin>>n;
	set<pair<int,int> > S;
	for(i=0;i<n;i++)
	{
		cin>>x>>y;
		S.insert(pair<int,int>(y,x));
	}
	set<pair<int,int> >::reverse_iterator it1;
	set<pair<int,int> >::iterator it2;
	it2=S.begin();
	it1=S.rbegin();
	int flag=0;
	while(1)
	{
		if(flag==0)
		{
			cnt=it1->first;
			x=it1->second;
			ans1+=x;
			while(cnt--)
			{
				it1++;
				y=it1->first;
				x=it1->second;
				ans1+=x;
				cnt+=y;
				if(*it1==*it2) break;
			}
			if(*it1==*it2) break;
			it1++;
			flag=1;
		}
		else
		{
			cnt=it2->first;
			x=it2->second;
			ans2+=x;
			while(cnt--)
			{
				it2++;
				y=it2->first;
				x=it2->second;
				ans2+=x;
				cnt+=y;
				if(*it1==*it2) break;
			}
			if(*it1==*it2) break;
			it2++;
			flag=0;
		}
	}
	if(ans1>ans2) ans=ans1;
	else ans=ans2;
	cout<<ans<<endl;
	return 0;
}
