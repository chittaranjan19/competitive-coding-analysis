#include<stdio.h>
#include<math.h>
#include<string.h>
#include<iostream>
#include<algorithm>
#define FOR(i,n) for(i=0;i<(n);i++)
#define CLR(a) memset(a,0,sizeof(a))
using namespace std;
int M[505][505];
int q[505];
int fa[505];
int Find(int fa[],int p)
{
    int r=p,q;
    while(r!=fa[r]) r=fa[r];
    while(p!=r)/*若不需要压缩 删除此段*/
    {
        q=fa[p];
        fa[p]=r;
        p=q;
    }
    return r;
}
/*合并u和v所在的集合，uv属于同一集合返回0*/
int Union(int fa[],int u,int v)
{
    int s1=Find(fa,u),s2=Find(fa,v);
    if(s1!=s2)
    {
        fa[s1]=s2;
        return 1;
    }
    return 0;
}
int main()
{
    int n,m,x,y,z,i,j;
    int v,e;
    cin>>n>>m;
    for(i=0;i<n;i++)
    {
        scanf("%d",&q[i]);
    }
    CLR(M);
    int mi,mj;
    for(i=0;i<m;i++)
    {
        scanf("%d%d",&x,&y);
        x--,y--;
        scanf("%d",&z);
        M[x][y]=M[y][x]=z;

        if(i==0) mi=x,mj=y;
        else if(1.0*(q[i]+q[j])/z>1.0*(q[mi]+q[mj])/M[mi][mj])
        {
            mi=x,mj=y;
        }
        v=q[mi]+q[mj];
        e=M[mi][mj];
        //cout<<v<<" "<<e<<endl;
    }
    if(m>=1)
    {
        for(j=0;j<n;j++) fa[j]=j;
        Union(fa,mi,mj);
    }
    else
    {
        cout<<"0.000000000000000"<<endl;
        return 0;
    }
        while(1)
        {
            int mav,mae;
            int mai=-1;
            int vv=v;
            int ee=e;
            bool bo=false;
            for(i=0;i<n;i++)
            {
                if(Find(fa,i)!=Find(fa,mi))
                {
                    //假设加入i点
                    bo=true;
                    vv+=q[i];
                    for(j=0;j<m;j++)
                    {
                        ee+=M[i][j];
                    }
                    if(mai==-1||1.0*vv/ee>1.0*mav/mae)
                    {
                        mai=i;
                        mav=vv;
                        mae=ee;
                    }
                }
            }
            if(!bo)
            {
                v=vv;
                e=ee;
                break;
            }
            else if(1.0*mav/mae>1.0*v/e)
            {
                Union(fa,mi,mai);
                v=mav;
                e=mae;
            }
            else break;
        }
        printf("%.15lf\n",1.0*v/e);
    }
    return 0;
}
