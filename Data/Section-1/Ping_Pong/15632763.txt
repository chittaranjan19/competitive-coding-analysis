#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <unordered_set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int MAX_N = 100000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

bool mod(string s, int x)
{
	int l = s.size();
	bool ans = true;
	for (int i = 0; i < l / x; i++)
	{
		for (int j = 0; j < x; j++)
			if (s[j] != s[i * x + j])
			{
				ans = false;
				break;
			}
		if (!ans)
			break;
	}
	return ans;
}

int main()
{
	//ifstream ifs("input.in");
	//ofstream ofs("output.out");
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	string s1, s2;
	cin >> s1 >> s2;
	int ans = 0, l1 = s1.size(), l2 = s2.size();
	for (int i = 1; i * i <= l1; i++)
	{
		if ((l1 % i == 0) && (l2 % i == 0) && (l2 >= i) && mod(s1, i) && mod(s2, i) && (s1.substr(0, i) == s2.substr(0, i)))
			ans++;
		if ((l1 % i == 0) && (l2 % i == 0) && (l2 % (l1 / i) == 0) && (i * i != l1) && (l2 >= l1 / i) && mod(s1, l1 / i) && mod(s2, l1 / i) && (s1.substr(0, l1 / i) == s2.substr(0, l1 / i)))
			ans++;
	}
	cout << ans;
	return 0;
}