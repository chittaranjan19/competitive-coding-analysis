#include<stdio.h>
#include<vector>
using namespace std;
#define min(a,b) (a<b?a:b)
typedef long long int ll;
vector<ll> G[100005];
ll dp[100005],mn[100005],L[100005];
ll gcd(ll a,ll b)
{
    if(b==0)
        return a;
    return gcd(b,a%b);
}
ll lcm(ll a,ll b)
{
    return (a*b)/gcd(a,b);
}
void dfs(ll u,ll par)
{
    ll si=G[u].size(),i,temp=1,minn=200000000000000007;
    for(i=0;i<si;i++)
    {
        ll v=G[u][i];
        if(par!=v)
        {
            dfs(v,u);
            if(L[v])
                temp=lcm(temp,L[v]);
            minn=min(minn,dp[v]);
        }
    }
    if(si!=1)
    {
        L[u]=(si-1)*temp;
        if(u==1)
            L[u]=si*temp;
        dp[u]=(minn/temp)*L[u];
    }
    //printf("u=%lld L=%lld dp=%lld\n",u,L[u],dp[u]);
}
int main()
{
    ll n,i,sum=0;
    scanf("%I64d",&n);
    for(i=1;i<=n;i++)
    {
        scanf("%I64d",&dp[i]);
        if(dp[i])
        {
            L[i]=1;
        }
        sum+=dp[i];
    }
    for(i=0;i<n-1;i++)
    {
        ll u,v;
        scanf("%I64d%I64d",&u,&v);
        G[u].push_back(v);
        G[v].push_back(u);
    }
    dfs(1,-1);
    printf("%I64d\n",sum-dp[1]);
    return 0;
}
