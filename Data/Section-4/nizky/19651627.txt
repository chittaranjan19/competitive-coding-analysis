#include <iostream>
#include <cstdint>
using namespace std;

int main()
{
    /*
    int n, k;
    cin >> n;
    cin >> k;
    int64_t* c = new int64_t[n];
    bool* isCapital = new bool[n];
    for (int i = 0; i < n; i++) {
        cin >> c[i];
        isCapital[i] = false;
    }
    for (int i = 0; i < k; i++) {
        int id;
        cin >> id;
        isCapital[id - 1] = true;
    }
    int64_t sum = 0;
    for (int i = 0; i < n - 1; i++) {
        int j = i + 1;
        sum += c[i] * c[j];
        for (j = i + 2; j < n; j++) {
            if (isCapital[i] || (isCapital[j])) {
                sum += c[i] * c[j];
            }
        }
    }
    if (!isCapital[0] && !isCapital[n - 1]) {
        sum += c[0] * c[n - 1];
    }
    delete[] c;
    delete[] isCapital;
    cout << sum;
    return 0;
    */

    /*
    int n, k;
    cin >> n;
    cin >> k;
    int64_t* c = new int64_t[n];
    int* id = new int[k];
    bool* isCapital = new bool[n];
    for (int i = 0; i < n; i++) {
        cin >> c[i];
        isCapital[i] = false;
    }
    for (int i = 0; i < k; i++) {
        int idd;
        cin >> idd;
        id[i] = idd - 1;
        isCapital[idd - 1] = true;
    }
    int64_t sum = 0;
    for (int ii = 0; ii < k; ii++) {
        int i = id[ii];
        for (int j = 0; j < i - 1; j++) {
            sum += c[i] * c[j];
        }
        for (int j = i + 2 ; j < n; j++) {
            if (!isCapital[j]) {
                sum += c[i] * c[j];
            }
        }
    }
    for (int i = 0; i < n - 1; i++) {
        sum += c[i] * c[i + 1];
    }
    if ((id[0] != 0) && (id[k - 1] != n - 1)) {
        sum += c[0] * c[n - 1];
    }
    delete[] c;
    delete[] id;
    delete[] isCapital;
    cout << sum;
    return 0;
    */

    int n, k;
    cin >> n;
    cin >> k;
    int64_t* c = new int64_t[n];
    int* id = new int[k];
    bool* isCapital = new bool[n];
    int64_t sumAll = 0;
    int64_t sumCapital = 0;
    int64_t sumSquareCapital = 0;
    for (int i = 0; i < n; i++) {
        cin >> c[i];
        sumAll += c[i];
        isCapital[i] = false;
    }
    for (int i = 0; i < k; i++) {
        int idd;
        cin >> idd;
        id[i] = idd - 1;
        isCapital[idd - 1] = true;
        sumCapital += c[idd - 1];
        sumSquareCapital += c[idd - 1] * c[idd - 1];
    }
    int64_t sum = 0;
    for (int ii = 0; ii < k; ii++) {
        int i = id[ii];
        sum += ((sumAll - c[i]) * c[i]);
    }
    sum -= (sumCapital * sumCapital - sumSquareCapital) / 2;
    for (int i = 0; i < n - 1; i++) {
        if ((!isCapital[i]) && (!isCapital[i + 1])) {
            sum += c[i] * c[i + 1];
        }
    }
    if ((!isCapital[0]) && (!isCapital[n - 1])) {
        sum += c[0] * c[n - 1];
    }
    delete[] c;
    delete[] id;
    delete[] isCapital;
    cout << sum;
    return 0;
}