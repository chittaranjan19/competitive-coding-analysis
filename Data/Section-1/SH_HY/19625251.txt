#include <bits/stdc++.h>
using namespace std;

typedef long long LL;

LL c[100010];
int vis[100010];

int main () {
    ios::sync_with_stdio (false);
    int n, k;
    cin >> n >> k;
    LL sum = 0, ans = 0;
    memset (c, 0, sizeof c);
    for (int i = 1; i <= n; i++) {
        cin >> c[i];
        if (i != 1) {
            if (i != n)
                ans += c[i] * c[i - 1];
            else
                ans += c[i] * c[i - 1] + c[i] * c[1];
        }
        sum += c[i];
    }
    memset (vis, 0, sizeof vis);
    for (int i = 1; i <= k; i++) {
        int num;
        cin >> num;
        if (num == 1) {
            ans = ans + (sum - c[num] - c[n] - c[num + 1]) * c[num];
        } else if (num < n){
            int cnt = 0;
            if (vis[num - 1]) {
                ans = ans + (sum - c[num] - c[num + 1]) * c[num];
            } else {
                ans = ans + (sum - c[num] - c[num - 1] - c[num + 1]) * c[num];
            }
        } else {
            if (vis[num - 1] && vis[1]) {
                ans = ans + (sum - c[num]) * c[num];
            } else if (vis[num - 1] && !vis[1]) {
                ans = ans + (sum - c[num] - c[1]) * c[num];
            } else if (!vis[num - 1] && vis[1]) {
                ans = ans + (sum - c[num] - c[num - 1]) * c[num];
            } else {
                ans = ans + (sum - c[num] - c[num - 1] - c[1]) * c[num];
            }
        }
        vis[num] = 1;
        sum -= c[num];
    }
    cout << ans << endl;
    return 0;
}
