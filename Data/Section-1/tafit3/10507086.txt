main =>
  N = read_int(),
  A = 0,
  M = new_map(),
  while(A < N)
    B = read_int(),
    C = read_int(),
    put(M, [B, C], 1),
    A := A + 1
  end,
  R = 0,
  I = 1,
  while(I <= 10)
    P = new_map(),
    put(P, [0, 0], 1),
    L = [[0,0]],
    while(length(L) > 0)
      E = L[1],
      L := slice(L, 2, length(L)),
      foreach(F in [[-1,0],[1,0],[0,1],[0,-1]])
        G = [ E[1]+F[1]*I , E[2]+F[2]*I ],
        if get(M, G, 0) == 1, get(P, G, 0) == 0 then
          append(L, [G], Z),
          L := Z,
          put(P, G, 1),
          R := max(R, abs(G[1]) + abs(G[2]))
        end
      end
    end,
    I := I+1
  end,
  println(R).
