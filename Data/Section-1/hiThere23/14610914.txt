#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 1000005
#define maxC 1000000007
#define pb push_back

using namespace std;
int p, k, dem = 0;
vector<int> g[mn];
bool mark[mn];

long long quickUp(int u)
{
    long long re = 1, t = p;
    while(u)
    {
        if (u & 1)
            re = (re * t) % maxC;
        t = (t * t) % maxC;
        u >>= 1;
    }
    return re;
}

void setup()
{
    cin >> p >> k;
    if (k == 0)
    {
        cout << quickUp(p - 1);
        exit(0);
    }
    if (k == 1)
    {
        cout << quickUp(p);
        exit(0);
    }
    FOR(i, 0, p - 1)
    {
        long long v = (1ll * k * i) % p;
        if (i != v)
        {
            g[i].pb(v);
            g[v].pb(i);
        }
    }
    FOR(i, 0, p - 1)
    {
        sort(g[i].begin(), g[i].end());
        g[i].resize(distance(g[i].begin(), unique(g[i].begin(), g[i].end())));
    }
}

void dfs(int u)
{
    mark[u] = true;
    FOR(i, 0, int(g[u].size()) - 1)
    {
        int v = g[u][i];
        if (mark[v])
            continue;
        dfs(v);
    }
}

void xuly ()
{
    FOR(i, 0, p - 1)
    if (!mark[i])
    {
        dem ++;
        dfs(i);
    }
    cout << quickUp(dem - 1);
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
