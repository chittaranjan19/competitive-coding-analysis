#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<string>
#include<queue>
#include<vector>
#include<map>
#include<cmath>
#define lowbit(x) ((x)&(-x))
#define Max(a,b) (a>b?a:b)
#define Min(a,b) (a>b?b:a)
#define INF 0x3f3f3f3f
using namespace std;
//typedef __int64 ll;
//typedef long long ll;
struct node
{
	int x,y;
};
char s[1005][1005];
int cnt = 0;
queue<node>que;
int m,n; 
bool bfs(int x,int y)
{
	bool flag = true;
	int c = cnt;
	if(s[x][y]=='*') c++; 
	for(int i = 0; i < m; i++)
	{
		if(s[x][i] == '*') c--;
	}
	for(int j = 0; j < n ; j++)
	{
		if(s[j][y] == '*') c--;
	}
	if(c == 0)
	{
		printf("YES\n");
		printf("%d %d\n",x+1,y+1);
		return true;
	 } 
	 return false;
} 
int main()
{
	//freopen("xx.txt","r",stdin);
	//std::ios::sync_with_stdio(false);
	cin >> n >> m;
	node tmp;
	for (int i = 0; i < n; i++)
	{
		cin >> s[i];
		for(int j = 0; j < m; j++)
		{
			if(s[i][j] == '*')
			{
				cnt++;
				tmp.x = i;
				tmp.y = j;
				que.push(tmp); 
			}
		}
	}
	if(cnt > m+n-1)
	{
		printf("NO\n");
	}
	else if(cnt == 0)
	{
		printf("YES\n1 1\n");
	}
	else
	{
		for(int i = 0; i < n; i++)
		{
			for(int j = 0; j < n; j++)
			{
				if(bfs(i,j)) return 0;
			}
		}
		printf("NO\n");
	}
	return 0;
}

