#include<bits/stdc++.h>
#define MAXN 200009
#define INF 1000000000
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN];
PII s[MAXN<<2],t[MAXN<<2];
void build(int nd,int x,int y){
	if(x==y){
		s[nd]=mp(arr[x],x);
		t[nd]=mp(arr[x],x);
		return;
	}
	int mid=(x+y)>>1;
	build(nd<<1,x,mid);
	build(nd<<1|1,mid+1,y);
	s[nd]=min(s[nd<<1],s[nd<<1|1]);
	t[nd]=max(t[nd<<1],t[nd<<1|1]);
}
PII tap(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return mp(0,0);
	if(l<=x and y<=r)
		return t[nd];
	int mid=(x+y)>>1;
	PII i1=tap(l,r,nd<<1,x,mid);
	PII i2=tap(l,r,nd<<1|1,mid+1,y);		
	return max(i1,i2);
}
PII tp(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return mp(INF,0);
	if(l<=x and y<=r)
		return s[nd];
	int mid=(x+y)>>1;
	PII i1=tp(l,r,nd<<1,x,mid);
	PII i2=tp(l,r,nd<<1|1,mid+1,y);		
	return min(i1,i2);
}
int main(){
	int n,q;
	scanf("%d%d",&n,&q);
	for(int i=1;i<=n;i++)
		scanf("%d",arr+i);
	build(1,1,n);	
	while(q--){
		int l,r,x;
		scanf("%d%d%d",&l,&r,&x);
		PII k1=tap(l,r,1,1,n);
		PII k2=tp(l,r,1,1,n);
		if(k1.ff!=x)
			printf("%d\n",k1.ss);
		else if(k2.ff!=x)
			printf("%d\n",k2.ss);	
		else
			printf("-1\n");	
	}
	return 0;
}
