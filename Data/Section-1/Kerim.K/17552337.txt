//~  Inshaallah
/*
ID: omarmuh1
PROG: test
LANG: C++
*/
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define ll long long
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define pp pop_back
#define pii pair<int ,int>
#define pll pair<ll , ll>
#define mid(x , y)	(x+y)/2
#define sz(x) int(x.size())
#define db		cout << "****" << endl;
#define all(x) 	x.begin() , x.end()
#define lgn 	19
#define N 		5009
#define INF 	1000000007
#define LLINF 	1000000000000000009
#define tr(i, c) for(__typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
#define Help_me  ios_base::sync_with_stdio(false);

typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> omar;

template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}

//~ freopen("test.out" , "r" , stdin);
//~ freopen("test.out" , "w",  stdout);

int a , in , mx , b , c , v1 , v2 , dp[N] , from[N] , n , m , a1 , b1;
pair <pii , int> q[N];
vector <int> v;

int main()
{
	scanf("%d%d%d" , &n , &v1 , &v2);
	
	for(int i = 1 ; i <= n ; i++)
	{
		scanf("%d%d" , &a , &b);
		
		q[i] = {{a , b} , i};
	}
	
	sort(q + 1 , q + n + 1);
	
	for(int i = 1 ; i <= n ; i++)
	{
		a = q[i].ff.ff , b = q[i].ff.ss;
		
		if(a > v1 && b > v2)	dp[i] = 1;
	}
	
	for(int i = 1 ; i <= n ; i++)
	{
		a = q[i].ff.ff , b = q[i].ff.ss;
		
		for(int j = 1 ; j < i ; j++)
		{
			a1 = q[j].ff.ff , b1 = q[j].ff.ss;
			
			if(a > a1 && b > b1)
			{
				if(dp[i] < dp[j]+1)
				{
					dp[i] = dp[j]+1;
					
					from[i] = j;
				}
			}
		}
	}
	
	for(int i = 1 ; i <= n ; i++)
		if(dp[i] > mx)
			mx = dp[i] , in = i;
	
	printf("%d\n" , mx);
	
	while(in)	v.pb(q[in].ss) , in = from[in];
	
	for(int i = sz(v)-1 ; i >= 0 ; i--)
		printf("%d " , v[i]);
	puts("");
	
	return 0;
}
