#include <iostream>
#include <climits>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(b, 0, sizeof(arr)); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // getchar(), gets()
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); n - amount; pair
#include <iomanip>      // setw(4), setfill('.'), setprecision(2)
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#include <memory>       // shared_ptr<>, uniqu_ptr<>
#include <iterator>     // ostream_iterator<int, char> out_iter(cout, " ");
#include <set>
#include <map>
#include <list>
#include <queue>
#include <functional>   // function
#define SRT srand(int(time(0)))

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
ld pi = 3.14159265358979323;
int ten[8] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};

typedef map<int, int> Map;
typedef Map::iterator mIter;
typedef pair<int, int> Pair;
typedef set<int> Set;
typedef Set::iterator sIter;
typedef list<int> List;
typedef List::iterator lIter;

const int S = 1000001;
int n, am[S], l[S], r[S];

int main()
{
    cin >> n;
    for (int i = 1, a; i <= n; ++i)
    {
        scanf("%d", &a);
        if (am[a] == 0)
            l[a] = r[a] = i;
        else
            r[a] = i;
        ++am[a];
    }
    
    int maxi = 0, d = 2 * S;
    for (int i = 1; i < S; ++i)
    {
        if (am[i] && am[maxi] < am[i])
        {
            d = r[i] - l[i];
            maxi = i;
        }
        else if (am[i] && am[maxi] == am[i] && d > r[i] - l[i])
        {
            d = r[i] - l[i];
            maxi = i;
        }
    }
    
    cout << l[maxi] << ' ' << r[maxi] << '\n';
    
    return 0;
}