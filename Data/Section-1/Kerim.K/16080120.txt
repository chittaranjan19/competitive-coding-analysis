#include<bits/stdc++.h>
#define MAXN 300009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
PII arr[MAXN];
ll s[MAXN<<2];
map<int,int>pm;
ll mod(ll x){
	return (x%INF);
}
void upd(int p,ll v,int nd,int x,int y){
	if(x==y){
		s[nd]=mod(s[nd]+v);
		return;
	}
	int mid=(x+y)>>1;
	if(p<=mid)	
		upd(p,v,nd<<1,x,mid);
	else
		upd(p,v,nd<<1|1,mid+1,y);
	s[nd]=mod(s[nd<<1]+s[nd<<1|1]);		
}
ll tap(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return 0LL;
	if(l<=x and y<=r)
		return s[nd];	
	int mid=(x+y)>>1;
	ll i1=tap(l,r,nd<<1,x,mid);
	ll i2=tap(l,r,nd<<1|1,mid+1,y);
	return mod(i1+i2);
}
int main(){
	int n,m,c=0;
	scanf("%d%d",&n,&m);
	for(int i=0;i<m;i++){
		int st,en;
		scanf("%d%d",&st,&en);
		pm[st]=pm[en]=pm[en-1]=1;
		arr[i]=mp(en,st);
	}
	sort(arr,arr+m);pm[n]=1;
	tr(it,pm)
		it->ss=++c;
	upd(1,1,1,1,c);	
	for(int i=0;i<m;i++){
		int x=pm[arr[i].ff],y=pm[arr[i].ss],z=pm[arr[i].ff-1];
		ll ans=tap(y,z,1,1,c);
		upd(x,ans,1,1,c);
	}
	printf("%lld\n",tap(pm[n],pm[n],1,1,c));
	return 0;
}

