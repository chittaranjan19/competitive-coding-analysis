import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class ProblemEDiv2_Riding_in_a_Lift {
    private static final long B = 1000000007;
    BufferedReader rd;

    private ProblemEDiv2_Riding_in_a_Lift() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        int[] q = intarr();
        int n = q[0];
        int a = q[1];
        int b = q[2];
        int k = q[3];
        long pos = 0;
        if(Math.abs(a-b) > 1) {
            if(a > b) {
                n = n - b;
                a = a - b;
            } else {
                n = b;
                a = b - a;
            }
            long[][] p = new long[2][n];
            p[0][a] = 1;
            for(int i=0;i<k;i++) {
                p[0][1] = 0;
                long[] s = new long[n+1];
                s[0] = p[0][0];
                for(int j=1;j<n;j++) {
                    s[j] = s[j-1] + p[0][j];
                    s[j] %= B;
                }
                for(int j=1;j<n;j++) {
                    long x = s[n-1] - s[j];
                    int m = (j/2+1);
                    x += s[j-1] - s[m-1];
                    x %= B;
                    p[1][j] = x;
                }
                System.arraycopy(p[1], 0, p[0], 0, n);
                Arrays.fill(p[1], 0);
            }
            for(int i=0;i<n;i++) {
                pos += p[0][i];
                pos %= B;
            }
        }
        out(pos);
    }

    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = s.split(" ");
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemEDiv2_Riding_in_a_Lift();
    }
}
