#include <bits/stdc++.h>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int arr[2505][2505];
vector<pair<int, pair<int, int> > > v;
bitset<2500> mask[2500];

int main()
{
  int n;
  scanf("%d", &n);
  for(int i=0;i<n;i++)
    for(int j=0;j<n;j++)
    {
      scanf("%d", &arr[i][j]);
      v.pb(mp(arr[i][j], mp(i, j)));
    }
  for(int i=0;i<n;i++)
  {
    if(arr[i][i])
    {
      printf("NOT MAGIC");
      return 0;
    }
    for(int j=i+1;j<n;j++)
    {
      if(arr[i][j] != arr[j][i])
      {
        printf("NOT MAGIC");
        return 0;
      }
    }
  }
  sort(v.begin(), v.end());
  int x, y;
  for(int i=0;i<n*n;i++)
  {
    int last = i;
    while(v[last].f == v[i].f)
    {
      x = v[i].s.f;
      y = v[i].s.s;
      if((mask[x] & mask[y]).count())
      {
        printf("NOT MAGIC");
        return 0;
      }
      i++;
    }
    i--;
    for(int j=last;j<=i;j++)
    {
      x = v[j].s.f;
      y = v[j].s.s;
      mask[x].set(y);
      mask[y].set(x);
    }
  }
  printf("MAGIC");
  return 0;
}
