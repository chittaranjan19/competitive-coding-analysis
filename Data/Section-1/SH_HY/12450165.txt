#include <bits/stdc++.h>
using namespace std;
const int maxn = 2000000;
int a[maxn], b[maxn], pri[maxn], l[10];
int main()
{
    int p, q;
    cin >> p >> q;
    memset(pri, 0, sizeof pri);
    pri[1] = 1, a[0] = 0, b[0] = 0;
    for(int i = 2; i < sqrt(maxn); i++) {
        for(int j = i+i; j <= maxn; j+=i) {
            pri[j] = 1;
        }
    }
    for(int i = 1; i <= maxn; i++) {
        if(pri[i])
            a[i] = a[i-1];
        else
            a[i] = a[i-1] + 1;
        int k = i, t = 0, flag = 0;
        while(k) {
            l[t++] = k%10;
            k /= 10;
        }
        for(int j = 0, q = t-1; j < q; j++, q--) {
            if(l[j] != l[q]) {
                flag = 1;
                break;
            }
        }
        if(flag)
            b[i] = b[i-1];
        else
            b[i] = b[i-1] + 1;
    }
    int ans = 0;
    for(int i = 1; i <= maxn; i++) {
        if(b[i] * p / q >= a[i])
            ans = i;
    }
    if(ans == 0)
        cout << "Palindromic tree is better than splay tree\n";
    else
        cout << ans << "\n";
    return 0;
}
