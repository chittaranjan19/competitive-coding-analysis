
/* Author:
    * Rohit Laddha */
#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <iostream>
#include <sstream>
#include <string>
#include <utility>
#include <vector>
#include <cassert>
#include <ctime>
#include <queue>
#include <tr1/random>
#include <tr1/unordered_map>
using namespace std;
using namespace std::tr1;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define ALL(c) (c).begin(),(c).end()
#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;
int main()
{
	int n;
	cin >>n;
	int a[n];
	int i;
	for(i=0;i<n;i++)cin >> a[i];
	long long int l,r,ref,num,incre,ans=0;
	while(1)
	{
		l=n;
		for(i=1;i<n;i++)
		{
			if(a[i]<a[i-1])
			{
				l=i;
				break;
			}
		}
		if(l==n)
		{
			cout << ans << endl;
			return 0;
		}
		for(i=l;i<n;i++)
		{
			if(a[i]<a[l-1])
			{
				r=i;
			}
			else break;
		}
		ref=l;
		num=a[ref];
		for(i=l;i<=r;i++)
		{
			if(num<a[i])
			{
				num=a[i];
				ref=i;
			}
		}
		incre=a[l-1]-num;
		for(i=l;i<=r;i++)
		{
			a[i]=a[i]+incre;
		}
		ans=ans+incre;
	}
	return 0;
}
