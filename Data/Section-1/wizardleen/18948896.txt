import java.util.*;

/**
 * Created by leen on 7/7/16.
 */
public class _687CV2 {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);

        int n = scan.nextInt();
        int k = scan.nextInt();

        int[] c = new int[n + 1];
        Node[][]  matrix = new Node[k + 1][n + 1];

        for(int i = 0; i <= n; i++) {
            if(i > 0)
                c[i] = scan.nextInt();
            matrix[0][i] = new Node().addValue(0);
        }

        for(int i = 1; i <=k; i++)
            matrix[i][0] = new Node().setValues(new HashSet<Integer>());

        for(int i = 1; i <= k; i++) {
            for(int j = 1; j <= n; j++) {

                int lastK = i - c[j];
                Node node = new Node();
                matrix[i][j] = node;

                if(lastK < 0 || matrix[lastK][j-1].values.isEmpty())
                    node.values = matrix[i][j-1].values;

                else {
                    Node upLeft = matrix[lastK][j-1];
                    for(Integer value : upLeft.values) {
                        node.addValue(value);
                        node.addValue(value + c[j]);
                    }
                    Node left = matrix[i][j -1];
                    for(Integer value : left.values)
                        node.addValue(value);
                }
            }
        }

        List<Integer> values = new ArrayList<Integer>(matrix[k][n].values);
        Collections.sort(values);

        System.out.println(values.size());

        StringBuilder buf = new StringBuilder();
        boolean isFirst = true;
        for(Integer val : values) {
            if(isFirst)
                isFirst = false;
            else
                buf.append(' ');
            buf.append(val);
        }

        System.out.println(buf.toString());
        System.out.flush();
    }


    static class Node {
        Set<Integer> values;

        Node setValues(Set<Integer> values) {
            this.values = values;
            return this;
        }

        Node addValue(int value) {
            if(values == null)
                values = new HashSet<Integer>();
            values.add(value);
            return this;
        }
    }
}
