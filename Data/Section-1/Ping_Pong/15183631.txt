#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const long long inf = (long long)2 * 1e9;
const long long MOD = (long long)1e9 + 7;
const long long MAX_N = 200000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

long long a[MAX_N];
map<long long, long long> m1, m2;

int main()
{
    //ifstream ifs("input.in");
    //ofstream ofs("output.out");
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    long long n, k;
    cin >> n >> k;
    for (long long i = 0; i < n; i++)
        cin >> a[i];
    for (long long i = 0; i < n; i++)
        if (m2.find(a[i]) != m2.end())
            m2[a[i]]++;
        else
            m2[a[i]] = 1;
    long long ans = 0;
    for (long long i = 0; i < n; i++)
    {
        if (m2[a[i]] == 1)
            m2.erase(a[i]);
        else
            m2[a[i]]--;
        if (a[i] % k == 0)
        {
            long long cnt1 = 0, cnt2 = 0;
            if (m1.find(a[i] / k) != m1.end())
                cnt1 = m1[a[i] / k];
            if (m2.find(a[i] * k) != m2.end())
                cnt2 = m2[a[i] * k];
            ans += cnt1 * cnt2;
        }
        if (m1.find(a[i]) != m1.end())
            m1[a[i]]++;
        else
            m1[a[i]] = 1;
    }
    cout << ans;
    return 0;
}