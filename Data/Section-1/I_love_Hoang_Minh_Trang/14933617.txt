#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;
int n;
int a[MAXN];

void add(int &a, int b)
{
    a += b;
    if (a >= INF) a -= INF;
}
int b[MAXN], m = 0;
int power(int a, int x)
{
    int ans = 1;
    while (x){
        if (x & 1) ans = (1LL * ans * a) % INF;
        a = (1ll * a * a) % INF;
        x >>= 1;
    }
    return ans;
}
int calc(int x)
{
    if (x == 1) return 1;
    m = 0;
    for(int i = 1; i * i <= x; i++) if (x % i == 0){
        b[++m] = i;
        if (x / i != i) b[++m] = x / i;
    }
    sort(b + 1, b + m + 1);
    b[m + 1] = a[n] + 1;
    //calc <= m
    int ans = 1;
    //if (x == 2) cout <<
    for(int i = 1; i <= m; i++){
        //int value = b[i];
        int d = lower_bound(a + 1, a + n + 1, b[i]) - a;
        int c = lower_bound(a + 1, a + n + 1, b[i + 1]) - a;
        ans = (1LL * ans * power(i, c - d)) % INF;
        //if (x == 2) cout <<i<<" "<<b[i]<<":"<<d<<" "<<c<<" "<<"??"<<mu[i][c - d]<<endl;
    }

    m--;
    int res = 1;
    b[m + 1] = a[n] + 1;
    FORE(i, 1, m){
        int d = lower_bound(a + 1, a + n + 1, b[i]) - a;
        int c = lower_bound(a + 1, a + n + 1, b[i + 1]) - a;
        res = (1LL * res * power(i, c - d)) % INF;
    }
    //if (x == 4) cout << ans<<" "<<res << endl;
    return (ans - res + INF) % INF;
}

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("258C.inp", "r", stdin);
    freopen("258C.out", "w", stdout);
    #endif //MIKELHPDATKE
    int x[] = {0, 1, 2, 3};
    //cout << lower_bound(x, x + 3, 4) - x <<endl;
    cin >> n;
    FORE(i, 1, n) cin >> a[i];
    sort(a + 1, a + n + 1);
    int ans = 0;
    FORE(i, 1, a[n]){
        add(ans, calc(i));
        //cout << calc(i)<<endl;
    }
    cout << ans;
    return 0;
}

