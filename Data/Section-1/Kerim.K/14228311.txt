#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp>
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
ordered_set s,h;
int vis[200009];
vector<int>adj[30];
int main(){
	int k,m;
	string v,w;
	cin>>k>>v>>m;
	while(m--){
		int a;
		char b;
		cin>>a>>b;
		adj[b-'a'].push_back(a);
	}
	for(int i=0;i<26;i++){
		s.clear();vector<int>x;
		for(int j=0;j<v.size();j++)
			if(v[j]==char(i+97))
				x.push_back(j),s.insert(j);
		for(int j=1;j<k;j++)
			for(int l=0;l<x.size();l++)
				s.insert(x[l]+(v.size()*j));
		for(int j=0;j<adj[i].size();j++){
			int a=adj[i][j],b=*s.find_by_order(a-1);
				vis[b]=1;s.erase(b); 
		}
	}
	for(int i=1;i<=k;i++)
		w+=v;
	for(int i=0;i<w.size();i++)
		if(!vis[i])
			cout<<w[i];
	cout<<endl;	
//	cout << *s.find_by_order(1) << endl; // 1-st elemt in s (in sorted order, 0-based)
}
