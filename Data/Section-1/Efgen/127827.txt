import java.io.*;
import java.util.*;
import java.math.*;

public class Main implements Runnable{

	
	void solve() throws IOException {		
		int a = nextInt();
		int b = nextInt();
		int n = nextInt();
		if (a==0) {
			if (b==0) out.print(1);
			else out.print("No solution");
			return;
		}
		if (b%a!=0) out.print("No solution"); else {
			b /= a;
			int t = (int)Math.floor(Math.pow(Math.abs(b), 1./n)+1e-8);
			if (n%2==1 && b<0) t = -t;
			for (int i=-10; i<10; i++) {
				if (BigInteger.valueOf(t+i).pow(n).equals(BigInteger.valueOf(b))) {
					out.println(t+i);
					return;
				}
			}
			out.print("No solution");
		}
		
	}
	
	
	BufferedReader br;
	StringTokenizer st;
	PrintWriter out;
	
	public void run() {
		try {
			//br = new BufferedReader(new FileReader(FileName+".in"));
			//out = new PrintWriter(FileName+".out");
			br = new BufferedReader(new InputStreamReader(System.in));
			out = new PrintWriter(System.out);	
			//br = new BufferedReader(new FileReader("input.txt"));
			//out = new PrintWriter("output.txt");
			solve();
			br.close();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
			System.exit(0);
		}
	}

	String next() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			String s = br.readLine();
			if (s == null)
				return null;
			st = new StringTokenizer(s);
		}
		return st.nextToken();
	}
	double nextDouble() throws IOException {
		return Double.parseDouble(next());
	}
	int nextInt() throws IOException {
		return Integer.parseInt(next());
	}

	long nextLong() throws IOException {
		return Long.parseLong(next());
	}

	public static void main(String[] args) {
		new Thread(new Main()).start();
	}
}
