#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
vector <int> inp;

int main() {
	ios_base::sync_with_stdio(false);
	int n, q, x, m; //x/m
	cin >> n;
	for(int i=0; i<n; i++){
		cin >> x;
		inp.push_back(x);
	}

	sort(inp.begin(), inp.end());
	cin >> q;
	while(q--){
		cin >> m;
		int val = m;
		int l = 0, mid = (inp.size()-1)/2, h = inp.size()-1;
		while(l <= h && l>=0 && h<inp.size()){
			//cout << l << " "<<mid << " "<<h << "\n";
			mid = (l+h)/2;
			//if(inp[mid] == val){
			//	break;
			//}
			if(inp[mid] > val){
				h = mid-1;
			}
			else if(inp[mid] <= val){
				l = mid+1;
			}
		}
		if(m < inp[mid])
			mid--;
		cout << mid+1<<"\n";
		//cout << mid << " ";
		/*if(mid == 0 && inp[0] > m){
			cout << "0\n";
		}
		else if(mid == inp.size()-1 && inp[inp.size()-1] <= m)
			cout << inp.size() << "\n";
		else{
			cout << mid << "\n";
		}*/
	/*	int i;
		for(i=0; i<inp.size(); i++){
			if(inp[i] > m){
			//	cout << i << "\n";
				break;
			}/*
			else if(inp[i] == m){
				cout << i+1 << "\n";
				break;
			}
			else if(i == inp.size()-1){
				cout << inp.size() << "\n";
				break;
			}*/
	//	}
		//if(i == inp.size())
	//	cout << i << "\n";*/
		//binary_search(m, 0, (inp.size()-1)/2 , inp.size()-1);
	}
	return 0;
}