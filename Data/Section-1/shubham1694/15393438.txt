#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

ll pos[maxn], neg[maxn], moves[maxn], val[maxn];
vector<int> adj[maxn];

void dfs(int cur, int parent)
{
    neg[cur] = pos[cur] = 0;
    for(auto it:adj[cur]){
        if(it!=parent){
            dfs(it, cur);
            neg[cur] = max(neg[it], neg[cur]);
            pos[cur] = max(pos[it], pos[cur]);
        }
    }
    ll x = val[cur]-neg[cur]+pos[cur];
    if(x<0)
        pos[cur]+=abs(x);
    else
        neg[cur]+=abs(x);
    moves[cur] = neg[cur]+pos[cur];
    //cout << cur << " " << neg[cur] << " " << pos[cur] << " " << moves[cur] << "\n";
}

int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    int n, i, j, u, v;
    scanf("%d", &n);
    for(i=1; i<n; i++){
        scanf("%d%d", &u, &v);
        adj[u].pb(v);
        adj[v].pb(u);
    }
    for(i=1; i<=n; i++)
        scanf("%lld", &val[i]);
    dfs(1, 0);
    ll ans = moves[1];
    printf("%lld\n", ans);
    
    return 0;
}
