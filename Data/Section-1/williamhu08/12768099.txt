#include <bits/stdc++.h>

using namespace std;

#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define rep(it, v) for (auto it = (v).begin(); it != (v).end(); it++)
#define fi first
#define se second

typedef long long ll;
typedef pair<int, int> pii;
const int MAXN = 1e5 + 10;

int N;
vector<int> adj[MAXN];
int leg[MAXN];
bool del[MAXN];

void dfs (int x, int p) {
	if (adj[x].size() <= 2) {
		del[x] = true;
		for (int t : adj[x]) {
			if (t != p) {
				dfs(t, x);
			}
		}
	}
}

int main() {
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	scanf("%d", &N);
	for (int i = 1, x, y; i < N; i++) {
		scanf("%d %d", &x, &y);
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	for (int i = 1; i <= N; i++) {
		if (adj[i].size() == 1) {
			dfs(i, 0);
		}
	}
	for (int i = 1; i <= N; i++) {
		for (int t : adj[i]) {
			if (del[t] && leg[x] < 2) {
				leg[x]++;
			}
		}
	}
	for (int i = 1; i <= N; i++) {
		if (!del[i]) {
			//don't delete it
			int diff = 0;
			for (int t : adj[i]) {
				if (!del[t]) {
					if (int(adj[t].size()) - leg[t] > 1) {
						//more than 1 non-leg
						diff++;
					}
				}
			}
			if (diff > 2) {
				puts("No");
				return 0;
			}
		}
	}
	puts("Yes");
}