#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 10010;

struct node{
	int we;
	node* arr[26];
};	

node* root;
int n, l1, l2, start[maxn], en[maxn];
string str, s1, s2;

node* new_node()
{
	node* ret = (node*)(malloc(sizeof(node)));
	for(int i=0; i<26; i++){
		ret->arr[i] = NULL;
	}
	ret->we = -1;
	return ret;
}

int insert(int ind)
{
	int i, nxt, ret = 0;
	node* temp = root;
	for(i=ind; i<n; i++){
		nxt = str[i]-'a';
		if(temp->arr[nxt])
			temp = temp->arr[nxt];
		else{
			if(en[i] && (i-ind+1)>=max(l1, l2))
				ret++;
			temp->arr[nxt] = new_node();
			temp = temp->arr[nxt];
		}
	}
	temp->we = ind;
	return ret;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int i, j, k, ans = 0;
	string temp;
	boost
	cin.tie(0);
	cout.tie(0);
	root = new_node();
	cin >> str >> s1 >> s2;
	n = (int)str.size();
	l1 = (int)s1.size();
	l2 = (int)s2.size();
	for(i=0; i<n; i++){
		temp = str.substr(i, l1);
		if(temp==s1)
			start[i] = 1;
		if((n-i)>=l2){
			temp = str.substr(i, l2);
			if(temp==s2)
				en[i+l2-1] = 1;
		}
	}
	for(i=n-1; i>=0; i--){
		if(start[i]){
			ans+=insert(i);
		}
	}
	printf("%d\n", ans);
	return 0;
}
