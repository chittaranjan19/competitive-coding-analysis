//FTW

#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

vector<pii> nodes[2];
vector<pair<int, pii> > edges;

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int n, i, j, c, s;
	scanf("%d", &n);
	for(i=1; i<=n; i++){
		scanf("%d%d", &c, &s);
		nodes[c].pb(mp(s, i));
	}	
	sort(all(nodes[0]));
	sort(all(nodes[1]));
	for(i=0, j=0; i<nodes[0].size() && j<nodes[1].size(); ){
		if(nodes[0][i].f < nodes[1][j].f){
			edges.pb(mp(nodes[0][i].f, mp(nodes[0][i].s, nodes[1][j].s)));
			nodes[1][j].f-=nodes[0][i].f;
			i++;
		}
		else if(nodes[0][i].f == nodes[1][j].f){
			edges.pb(mp(nodes[0][i].f, mp(nodes[0][i].s, nodes[1][j].s)));
			nodes[1][j].f = nodes[0][i].f = 0;
			if(i+1 < nodes[0].size())
				i++;
			else
				j++;
		}
		else{
			edges.pb(mp(nodes[1][j].f, mp(nodes[0][i].s, nodes[1][j].s)));
			nodes[0][i].f-=nodes[1][j].f;
			j++;
		}
	}
	for(auto it:edges)
		printf("%d %d %d\n", it.s.f, it.s.s, it.f);
	return 0;
}
