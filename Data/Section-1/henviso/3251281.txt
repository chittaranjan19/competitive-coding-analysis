#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <cctype>
#include <vector>
#include <queue>
#include <tr1/unordered_map>
#include <cmath>
#include <map>
#include <bitset>
 
using namespace std;
 
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef long double real;
 
///////////////////////////////UTIL/////////////////////////////////
#define ALL(x) (x).begin(),x.end()
#define CLEAR(v) memset(v, 0, sizeof(v))
#define COPY(a, b) memcpy(a, b, sizeof(a))
#define REP(i,n) for(int i = 0; i<n; i++)
#define REPP(i,a,n) for(int i = a; i<n; i++)
#define REPD(i,n) for(int i = n-1; i>-1; i--)
#define REPDP(i,a,n) for(int i = a; i>-1; i--)
#define pb push_back
#define pf push_front
#define sz size()
#define mp make_pair
/////////////////////////////NUMERICAL//////////////////////////////
#define MOD 1000000007
#define INCMOD(a,b) a = (a+b)%MOD
#define DECMOD(a,b) a = (a+MOD-b)%mod
#define ROUNDINT(a) (int)((double)a + 0.5)
#define INF 2000000000
#define EPS 10e-7
/////////////////////////////BITWISE////////////////////////////////
#define CHECK(S, j) (S & (1 << j))
#define CHECKFIRST(S) (S & (-S)) //PRECISA DE UMA TABELA PARA TRANSFORMAR EM INDICE
#define SET(S, j) S |= (1 << j)
#define SETALL(S, j) S = (1 << j)-1 //J PRIMEIROS
#define UNSET(S, j) S &= ~(1 << j)
#define TOOGLE(S, j) S ^= (1 << j)
//scanf(" %d ", &t);

typedef long long int ll;

int a[100100];
int ndec[100100];
int ncres[100100];

bool naodec(int b, int e){
	return ((ndec[e]-ndec[b]) == (e-b));
}

bool naocres(int b, int e){
	return ((ncres[e]-ncres[b]) == (e-b));
}

bool q(int a, int b){
	int lo = a, hi = b+1, mid, ans = a;
	while(hi-lo > 1){
		mid = (hi+lo)/2;
		//cout << " VENDO NAO DEC DE " << a << " ATE " << mid << endl;
		if(naodec(a, mid)){
			//cout << " EH " << endl;
			ans = mid;
			lo = mid; 
		}
		else{
			//cout << " NAO EH " << endl;
			hi = mid;
		}
	}
	if(ans < b) return naocres(ans+1, b);
	return true;
}

int main(){
	int n, m;
	int b, e;
	while(scanf(" %d %d ", &n, &m) != EOF){
		ndec[1] = ncres[1] = 1;
		scanf(" %d ", &a[1]);
		REPP(i, 2, n+1){
			ndec[i] = ndec[i-1];
			ncres[i] = ncres[i-1];
			scanf(" %d ", &a[i]);
			if(a[i] >= a[i-1]){
				ndec[i]++;
			}
			if(a[i] <= a[i-1]){
				ncres[i]++;
			}
		}
		
		/*
		cout << " NONCRESC " << endl;
		REPP(i, 1, n+1) cout << ncres[i] << " ";
		cout << endl;
		cout << " NON DECRESCENTE " << endl;
		REPP(i, 1, n+1) cout << ndec[i] << " ";
		cout << endl;
		*/
		
		REP(i, m){
			scanf(" %d  %d ", &b, &e);
			if(q(b, e)) printf("Yes\n");
			else printf("No\n");
		}
	} 
}

























