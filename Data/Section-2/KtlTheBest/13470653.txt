#include <iostream>
#include <vector>
using namespace std;

#define pb push_back

int n, x, y, mx, a[2 * int(1e5)];
vector <int> v[2 * int(1e5) + 1];
bool u[2 * int(1e5) + 1];

int dfs(int x, int cnt){
	u[x] = 1;
	for(int i = 0; i < v[x].size(); ++ i){
		int to = v[x][i];
		if(u[to] == 0 && a[to - 1] > a[x - 1]){
			mx = max(dfs(to, cnt + 1), mx);
		}
	}
	u[x] = 0;
	return cnt;
}

int main(){
	cin >> n;
	for(int i = 0; i < n; ++ i)
		cin >> a[i];
	for(int i = 1; i < n; ++ i){
		cin >> x >> y;
		v[x].pb(y);
		v[y].pb(x);
	}
	for(int i = 1; i <= n; ++ i){
		mx = max(dfs(i, 1), mx);
	}
	cout << mx;
	return 0;
}