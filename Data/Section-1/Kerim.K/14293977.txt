#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
/*
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
ordered_set s;
*/
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN];
int main(){
	ll x,y,m,ans=0;
	cin>>x>>y>>m;
	if(y>=m or x>=m){
		cout<<"0"<<endl;
		return 0;
	}
	if(m>0){
		if(x<=0 and y<=0)	{
			cout<<"-1";
			return 0;
		}
		int a=min(x,y);
		int b=max(x,y);
		ll c=0;
		if(a<0){
			ans+=(abs(a)/b)+1;
			if(abs(a)%b==0)
				ans--;
			else
				c=b-(abs(a)%b);
		}
		else
			c=a;
		while(c<m and b<m){
			if(c<=b)
				c+=b;
			else
				b+=c;
			ans++;		
		}
		cout<<ans<<endl;		
	}
	else
		cout<<"-1"<<endl;
	return 0;
}
