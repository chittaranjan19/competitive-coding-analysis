#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <climits>

using namespace std;

int x[100], y[100];
bool used[100];

void dfs(int current, int n)
{
	if(!used[current])
	{
		used[current] = true;
		for(int i = 0; i < n; ++i)
		{
			if((x[current] == x[i] || y[current] == y[i]) && i != current)
			{
				dfs(i, n);
				break;
			}
		}
	}
}

int main()
{
	int n;
	cin >> n;
	for(int i = 0; i < n; ++i)
	{
		cin >> x[i] >> y[i];
	}
	int res = -1;
	while(true)
	{
		int current = -1;
		int minX = INT_MAX;
		int minY = INT_MAX;
		for(int i = 0; i < n; ++i)
		{
			if(!used[i] && x[i] < minX)
			{
				if(y[i] < minY)
				{
					minX = x[i];
					minY = y[i];
					current = i;
				}
			}
		}
		if(current > -1)
		{
			dfs(current, n);
			++res;
		}
		else
		{
			break;
		}
	}
	cout << res << endl;
	return 0;
}