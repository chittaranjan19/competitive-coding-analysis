#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 100005
#define maxC 1000000007
#define pb push_back
#define F first
#define S second
#define mp make_pair

using namespace std;
int n, r = 0, a[mn], b[mn];
vector<int> g[mn];
map< vector<int> , int > Map;
map<int, int> mark;

int reform(vector<int>& vec)
{
    while(int(vec.size()) < 4)
        vec.pb(-1);
    sort(vec.begin(), vec.end());
    if (Map[vec] == 0)
        Map[vec] = ++ r;
    return Map[vec];
}

void dfs(int u, int p)
{
    vector<int> child = vector<int>();
    FOR(i, 0, int(g[u].size()) - 1)
    {
        int v = g[u][i];
        if (v == p)
            continue;
        dfs(v, u);
        child.pb(a[v]);
    }
    a[u] = reform(child);
    //cout << u << ' ' << a[u] << '\n';
}

void dfs2(int u, int p, int up)
{
    vector<int> child = vector<int>();
    FOR(i, 0, int(g[u].size()) - 1)
    {
        int v = g[u][i];
        if (v == p)
            continue;
        child.pb(a[v]);
        vector<int> type = vector<int>();
        FOR(j, 0, int(g[u].size()) - 1)
        if (j != i && g[u][j] != p)
            type.pb(a[g[u][j]]);
        type.pb(up);
        int t = reform(type);
        //cout << u << " check " << v << ' ' << t << '\n';
        dfs2(v, u, t);
    }
    child.pb(up);
    b[u] = reform(child);
    //cout << u << ' ' << b[u] << '\n';
}

void setup()
{
    cin >> n;
    int u, v;
    FOR(i, 2, n)
    {
        cin >> u >> v;
        g[u].pb(v);
        g[v].pb(u);
    }
    dfs(1, 0);
    dfs2(1, 0, -1);
    int ans = 0;
    FOR(i, 1, n)
        if (int(g[i].size()) < 4 && !mark[b[i]])
            mark[b[i]] = 1, ans ++;
    cout << ans;
}

void xuly()
{

}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
