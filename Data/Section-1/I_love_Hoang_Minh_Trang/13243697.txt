using namespace std;
#include<bits/stdc++.h>
#define FOR(i, a, b) for (int i = a; i < b; i++)
#define FORE(i, a, b) for (int i = a; i <= b; i++)
#define FORD(i, a, b) for (int i = a; i >= b; i--)
const int MAXN = 2*1e5;
const int INF  = 1e9 + 7;

int n, a[MAXN], f[MAXN], c[MAXN], nt[MAXN], Era[MAXN], cnt = 0;

void init()
{
    memset(c, 1, sizeof(c));
    for(int i = 2; i <= MAXN - 1; i++)
    if (c[i]) {
        nt[++cnt] = i;
        Era[i] = cnt;
        long long j = 1LL* i * i;
        while (j <= MAXN - 1) {
            Era[j] = cnt;
            c[j] = 0;
            j += i;
        }
    }
}

int main()
{
    ios::sync_with_stdio(false);
    //freopen("264B.inp", "r", stdin);
    //freopen("264B.out", "w", stdout);
    cin >> n;
    FORE(i, 1, n) cin >> a[i];
    //cout<<"wtf"<<endl;
    init();

    for(int i = 1; i <= n; i++) {
        int tmp = a[i];
        int res = 0;
        while (tmp > 1) {
            int x = nt[ Era[tmp] ];
            res = max(res, f[x]);
            tmp /= x;
        }
        tmp = a[i];
        while (tmp > 1) {
            int x = nt [ Era[tmp] ];
            f[x] = max(f[x], res + 1);
            tmp /= x;
        }
    }
   // cout<<f[2]<<endl;
    int ans = 0;
    FORE(i, 1, 123456) ans = max(ans, f[i]);
    if (n == 1) ans  = 1;
    cout<<ans;
    return 0;
}
