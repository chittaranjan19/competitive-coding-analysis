/*
    ━━━━━┒
    ┓┏┓┏┓┃让老子先跳！
    ┛┗┛┗┛┃＼○／
    ┓┏┓┏┓┃ //
    ┛┗┛┗┛┃ノ)
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┃┃┃┃┃┃
    ┻┻┻┻┻┻
*/
#include <cstdio>
#include <iostream>
#include <cstring>
#include <string>
#include <algorithm>
#include <cctype>
#include <stack>
#include <map>
#include <set>
#include <iomanip>
#include <cstdlib>
#include <queue>
#include <ctime>
#include <cmath>
using namespace std;
typedef long long ll;
const int MAXN=100000+5;

const double pi=acos(-1);

int n;
ll  a[MAXN];
ll  x[MAXN];
ll dp[MAXN];
ll bit[MAXN];

ll sum(int x){
    ll ans=0;
    while(x>0){
        ans=max(ans,bit[x]);
        x-=x&-x;
    }
    return ans;
}

void add(int x,ll p){
    while(x<=n){
        bit[x]=max(bit[x],p);
        x+=x&-x;
    }
}


int main()
{
    scanf("%d",&n);
    ll r,h;
    for(int i=1;i<=n;i++){
        scanf("%I64d%I64d",&r,&h);
        a[i]=r*r*h;
        x[i]=a[i];
    }
    ll ans=0;
    sort(x+1,x+n+1);
    for(int i=1;i<=n;i++){
        dp[i]=a[i];
        int tmp=lower_bound( x+1,x+n+1,a[i]  )-(x+1);
        dp[i]=max( dp[i], dp[i]+sum(tmp)  );
        add(tmp+1,dp[i]);
        ans=max(ans,dp[i]);
    }
    printf("%.15f\n",ans*pi);

	return 0;
}
