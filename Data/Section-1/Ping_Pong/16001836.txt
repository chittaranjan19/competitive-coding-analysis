#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const long long inf = (long long)2 * 1e9;
const long long MOD = (long long)1e8;
const long long P = 239;
const long long MAX_N = 500;
const long double pi = 3.1415926;
const long double eps = 1e-6;

int main()
{
    //ifstream ifs("input.in");
    //ofstream ofs("output.out");
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    long long n;
    scanf("%I64d", &n);
    long long a[n];
    for (long long i = 0; i < n; i++)
        scanf("%I64d", &a[i]);
    long long b[5000];
    for (long long i = 0; i < 5000; i++)
        b[i] = 0;
    for (long long i = 0; i < n; i++)
        for (long long j = 0; j < n; j++)
            if (a[i] - a[j] > 0)
                b[a[i] - a[j]]++;
    long long c[5000];
    for (long long i = 0; i < 5000; i++)
        c[i] = 0;
    for (int i = 0; i < 5000; i++)
        c[i] = b[i];
    long long cnt = 0;
    for (long long i = 4998; i >= 0; i--)
        b[i] += b[i + 1];
    /*for (int i = 0; i < 10; i++)
        cout << c[i] << " ";
    cout << endl;
    for (int i = 0; i < 10; i++)
        cout << b[i] << " ";
    cout << endl;*/
    for (int i = 0; i < 5000; i++)
        for (int j = 0; j < 5000; j++)
        {
            int x = i + j;
            if (x < 4999)
            {
                if (i == j)
                    cnt += c[i] * c[i] * b[x + 1];
                else
                    cnt += c[i] * c[j] * b[x + 1];
            }
        }
    long long cnt1 = n * (n - 1) / 2;
    cout.precision(20);
    cout << (long double)cnt / (cnt1 * cnt1 * cnt1);
    return 0;
}
