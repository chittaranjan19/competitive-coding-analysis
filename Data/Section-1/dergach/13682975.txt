#include <cstdio>
#include <cstring>
#include <cassert>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string> 
#include <map>
#include <iostream>
#include <queue>
#include <time.h>
#include <set>
#include <bitset>
using namespace std;

typedef long long ll;

#define INF 1000000000
#define eps 1e-9
#define mod 1000000007

int a[4005], b[4005], n, w[8005];

ll volume(int w, int h)
{
    int cnt = 0;
    for(int i = 0; i < n; i++)
        if(a[i] >= w && b[i] >= h || a[i] >= h && b[i] >= w)
            cnt++;
    return (ll)cnt * w * h;
}

int main()
{
    scanf("%d", &n);
    for(int i = 0; i < n; i++)
    {
        scanf("%d %d", &a[i], &b[i]);
        w[2*i] = a[i];
        w[2*i+1] = b[i];
        if(a[i] < b[i])
            swap(a[i], b[i]);
    }
    sort(w, w + 2 * n);
    ll maxv = 0;
    int maxw = 0, maxh = 0;
    for(int i = 0; i < 2 * n; i++)
    {
        multiset <int> s;
        for(int j = 0; j < n; j++)
        {
            if(b[j] >= w[i])
                s.insert(a[j]);
            else
                if(a[j] >= w[i])
                    s.insert(b[j]);
        }
        for(int j = 0; j < 2 * n; j++)
        {
            while(!s.empty() && *s.begin() < w[j])
                s.erase(s.begin());
            if(maxv < (ll)w[i] * w[j] * s.size())
            {
                maxv = (ll)w[i] * w[j] * s.size();
                maxw = w[i];
                maxh = w[j];
            }
        }
    }
    cout << maxv << endl;
    printf("%d %d\n", maxw, maxh);
    return 0;
}