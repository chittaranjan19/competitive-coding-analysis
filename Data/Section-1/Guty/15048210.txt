#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint toNumber (string s)
{
	tint Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (tint number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}




int main()
{
	ios_base::sync_with_stdio(0);
	tint n;
	cin >> n;
	vector<tint> a (n);
	forn(i,n)
		cin >> a[i];
		
	tint mini = 50000000000;
	forn(i,n)
		if (a[i] <= mini)
			mini = a[i];
			
	deque<tint> losMinis;
	forn(i,n)
		if (a[i] == mini)
			losMinis.push_back(i);
			
	tint dmax = 0, dmaxIndex = 0;
	tint l = losMinis.size();
	forsn(i,1,l)
	{
		if (losMinis[i] - losMinis[i-1] > dmax)
		{
			dmax = losMinis[i] - losMinis[i-1];
			dmaxIndex = losMinis[i-1];
		}
	}
	if (losMinis[0] + n - losMinis[l-1] > dmax)
		dmaxIndex = losMinis[l-1];
		 
	forn(i,n)
		a[i] -= mini;
	tint i = (dmaxIndex + 1) % n;
	tint ans = n*mini;
	while (a[i] != 0)
	{
		ans++;
		i = (i+1) % n;
	}
	
	cout << ans << endl;
	
	
	return 0;
}



