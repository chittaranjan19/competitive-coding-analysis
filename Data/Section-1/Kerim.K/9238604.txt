//Handle : kerim.turkmen
#include<bits/stdc++.h>

/*
#include<fstream>
#include<cmath>
#include<prison/break>
#include<algorithm>
#include<vector>
*/
using namespace std;

//ifstream cin ("");
//ofstream cout ("");
char arr[1009][1009];
int visit[1009][1009];
int found,k,l,a,b;
vector<int>v;
int bfs(int x,int y,char z)
{   
    visit[x][y]=1;
    if(z=='D')
    {
        if(arr[x+1][y]=='I' and visit[x+1][y]==0 and x+1<a)
        bfs(x+1,y,'I');
        else if(arr[x][y+1]=='I' and visit[x][y+1]==0 and y+1<b)
        bfs(x,y+1,'I');
        else if(arr[x-1][y]=='I' and visit[x-1][y]==0 and x-1>=0)
        bfs(x-1,y,'I');
        else if(arr[x][y-1]=='I' and visit[x][y-1]==0 and y-1>=0)
        bfs(x,y-1,'I');
    }
    else if(z=='I')
    {
        if(arr[x+1][y]=='M' and visit[x+1][y]==0 and x+1<a)
        bfs(x+1,y,'M');
        else if(arr[x][y+1]=='M' and visit[x][y+1]==0 and y+1<b)
        bfs(x,y+1,'M');
        else if(arr[x-1][y]=='M' and visit[x-1][y]==0 and x-1>=0)
        bfs(x-1,y,'M');
        else if(arr[x][y-1]=='M' and visit[x][y-1]==0 and y-1>=0)
        bfs(x,y-1,'M');
    }
    else if(z=='M')
    {
        if(arr[x+1][y]=='A' and visit[x+1][y]==0 and x+1<a)
        bfs(x+1,y,'A');
        else if(arr[x][y+1]=='A' and visit[x][y+1]==0 and y+1<b)
        bfs(x,y+1,'A');
        else if(arr[x-1][y]=='A' and visit[x-1][y]==0 and x-1>=0)
        bfs(x-1,y,'A');
        else if(arr[x][y-1]=='A' and visit[x][y-1]==0 and y-1>=0)
        bfs(x,y-1,'A');
    }
    else if(z=='A')
    {
        if((x+1==k and y==l and arr[x+1][y]=='D' and x+1<a) or (x==k and y+1==l and arr[x][y+1]=='D' and y+1<a) or (x-1==k and y==l and arr[x-1][y]=='D' and x-1>=0) or (x==k and y-1==l and arr[x][y-1]=='D' and y-1>=0))
            v.push_back(-1);
        else if(arr[x+1][y]=='D' and visit[x+1][y]==0 and x+1<a)
        {
            found++;
            bfs(x+1,y,'D');
        }
        else if(arr[x][y+1]=='D' and visit[x][y+1]==0 and y+1<b)
        {
            found++;
            bfs(x,y+1,'D');
        }
        else if(arr[x-1][y]=='D' and visit[x-1][y]==0 and x-1>=0)
        {
            
            found++;
            bfs(x-1,y,'D');
        }
        else if(arr[x][y-1]=='D' and visit[x][y-1]==0 and y-1>=0)
        {
            found++;
            bfs(x,y-1,'D');
        }
        else
        {   
            v.push_back(found);
            found=0;
        }
    }
}
int main()
{
    cin>>a>>b;
    for(int i=0;i<a;i++)
    {
        for(int j=0;j<b;j++)
        cin>>arr[i][j];
    }
    for(int i=0;i<a;i++)
    {
        for(int j=0;j<b;j++)
        {
            if(arr[i][j]=='D')
            {
                found=0;
                k=i;
                l=j;
                bfs(i,j,'D');
            }
        }
    }
    if(v.size()==0)
    cout<<"Poor Dima!"<<endl;
    else
    {
        sort(v.begin(),v.end());
        if(v[v.size()-1]==-1)
        cout<<"Poor Inna!"<<endl;
        else
        cout<<v[v.size()-1]+1<<endl;
    }
    return 0;
}
