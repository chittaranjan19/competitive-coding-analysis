#include <bits/stdc++.h>

#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SET(a,b) memset(a,b,sizeof(a))
#define LET(x,a) __typeof(a) x(a)
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d",n)
#define piw(n) printf("%d ",n)
#define pin(n) printf("%d\n",n)
#define sorti(a) sort(a.begin(),a.end())
#define sortd(a) sort(a.begin(),a.end(),greater<__typeof(a[0])>()) 

#define LL long long int
#define PII pair<int,int>
#define VI vector<int>
#define VPII vector< PII >

using namespace std;

VI ans,edge[100001],visited;

int init[100001],goal[100001];

void dfs(int pos, int level, int odd, int even)
{
	visited[pos]=1;
	if(level%2==1)
	{
		if((odd && init[pos]==goal[pos]) || (!odd && init[pos]!=goal[pos])) 
		{
			odd=1-odd;
			ans.PB(pos);
		}
	}
	else
	{
		if((even && init[pos]==goal[pos]) || (!even && init[pos]!=goal[pos])) 
		{
			even=1-even;
			ans.PB(pos);
		}
	}
	for(int i=0;i<edge[pos].size();i++)
	{
		if(!visited[edge[pos][i]]) dfs(edge[pos][i],level+1,odd,even);
	}
}

int main()
{
	int n,a,b,i;
	cin>>n;
	for(i=0;i<n-1;i++)
	{
		cin>>a>>b;
		edge[a].PB(b);
		edge[b].PB(a);
	}
	for(i=1;i<=n;i++) cin>>init[i];
	for(i=1;i<=n;i++) cin>>goal[i];
	for(i=0;i<100001;i++) visited.PB(0);
	dfs(1,1,0,0);
	cout<<ans.size()<<endl;
	for(i=0;i<ans.size();i++) cout<<ans[i]<<endl;
	return 0;
}