import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;

public class ValeraAndNumber {
    Double[][] dp = new Double[400][400];
    double pr;

    private ValeraAndNumber() throws IOException {
        BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
        String h = rd.readLine();
        String[] q = h.split("\\s+");
        int x = Integer.parseInt(q[0]);
        int k = Integer.parseInt(q[1]);
        int p = Integer.parseInt(q[2]);
        pr = p/100.0;
        out(e(new BigInteger(""+x),k,0));
    }

    private double e(BigInteger cur, int depth, int from) {
        if(depth == 0) {
            return cur.getLowestSetBit();
        }
        if(from > 20) {
            return d(cur.getLowestSetBit(), depth);
        }
        double a = pr*e(cur.multiply(TWO), depth-1, from+1);
        double b = (1-pr)*e(cur.add(BigInteger.ONE), depth-1, from+1);
        return a+b;
    }

    BigInteger TWO = BigInteger.ONE.add(BigInteger.ONE);

    private double d(int logCur, int depth) {
        Double res = dp[logCur][depth];
        if(res == null) {
            if(depth == 0) {
                res = (double)logCur;
            } else {
                double a = pr * d(logCur+1,depth-1);
                double b = (1-pr)*d(0,depth-1);
                res = a + b;
            }
            dp[logCur][depth] = res;
        }
        return res;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ValeraAndNumber();
    }
}
