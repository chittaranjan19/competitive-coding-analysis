//Author: ACChampionEric
//Verdict: Accepted

#include <assert.h>
#include <ctype.h>
#include <errno.h>
#include <float.h>
#include <iostream>
#include <limits.h>
#include <locale.h>
#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <wchar.h>
#include <wctype.h>
#include <algorithm>
#include <bitset>
#include <cctype>
#include <cerrno>
#include <clocale>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <limits>
#include <list>
#include <map>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <ostream>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <streambuf>
#include <string>
#include <utility>
#include <vector>
#include <cwchar>
#include <cwctype>
#include <complex.h>
#include <fenv.h>
#include <inttypes.h>
#include <stdbool.h>
#include <stdint.h>
#include <tgmath.h>
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define rep(i,n) for(int i=0;i<n;i++)
#define forn(i,m,n) for(int i=m;i<=n;i++)
#define all(i,j) for(i::iterator it=j.begin();it!=j.end();it++)
using namespace std;
typedef long long LL;
const int INF=2147483647;
const LL LINF=1ll<<62;
const int maxn=30005;
map<int,int> g[maxn];
int n,d,pos[maxn],cnt[maxn],res,cal;
int main()
{
	scanf("%d%d",&n,&d);
	for(int i=0;i<n;i++)
	{
		scanf("%d",pos+i);
		cnt[pos[i]]++;
	}
	g[d][d]=cnt[d];
	for(int i=d;i<=30000;i++)
	{
		int tt=g[i].begin()->second;
		for(map<int,int>::iterator it=g[i].begin();it!=g[i].end()&&it->second<tt*2;it++)
		{
			if(it->second >res)
				res=it->second;
			for(int k=-1;k<=1;k++)
			{
				int ni=i+it->first+k;
				if(ni>i&&ni<=30000)
				{
					int t=g[ni][it->first+k];
					if(t<it->second)
						t=it->second;
					g[ni][it->first+k]=t;
				}
			}
			cal++;
		}
		g[i].clear();
		g[i].swap(g[i]);
	}
	printf("%d %d\n",res,cal);
	return 0;
}