#include <bits/stdc++.h>
using namespace std;

const long long base = 257;
const long long mod = 1000007707;
int n, k;
long long p[2000111];
long long d[2000111];
int c[2000111];
string s;

void init()
{
	p[0] = 1;
	for(int i = 1; i < 1000111; i++)
		p[i] = (p[i - 1]*base)%mod;
	d[0] = 0;
	for(int i = 1; i <= n; i++)
		d[i] = ((d[i - 1]*base)%mod + int(s[i]))%mod;
}

long long get(int u, int v)
{
	return(d[v] - d[u]*p[v - u] + mod*mod)%mod;
}

int main()
{
	//freopen("in.txt", "r", stdin);
	cin >> n >> k;
	cin >> s;
	s = "0" + s;
	init();
	memset(c, 0, sizeof c);
	//cout << get(3, 6) <<"\n";
	for(int i = 1; i <= n/k; i++)
	{
		long long u = get(0, i);
		//cout << u << "\n";
		bool ok = true;
		for(int j = 1; j < k; j++)
		{
			if(u != get(i*j, i*(j + 1)))
				ok = false;
		}
		if(ok)
		{
			long long l = 0, r = i, res = 0, mid;
			while(l <= r)
			{
				mid = (l + r)/2;
				long long h = get(0, mid);
				if((i*k + mid <= n)&&(h == get(i*k, i*k + mid)))
					{
						res = mid;
						l = mid + 1;
					}
				else r = mid - 1;
			}
			c[i*k] += 1;
			c[i*k + res + 1] -= 1;
		}
	}
	//for(int i = 1; i <= n; i++) cout << c[i];
		//cout << "\n";
	for(int i = 1; i <= n; i++)
		c[i] = c[i - 1] + c[i];
	for(int i = 1; i <= n; i++)
		if(c[i] > 0) cout << 1;
		else cout << 0;
	return 0;
}