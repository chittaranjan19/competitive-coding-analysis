#include <algorithm>
#include <fstream>
#include <iostream>
#include <vector>
using namespace std;
const int MAX_N = 100005;
int a[MAX_N];
int main() {
    //ifstream cin("f.in");
    int n;
    cin >> n;
    for(int i = 1; i <= n; ++ i) {
        cin >> a[i];
    }
    sort(a + 1, a + n + 1);
    if(n == 1) {
        cout << "-1\n";
        return 0;
    }
    if(n == 2) {
        if((a[1] + a[2]) % 2 == 0) {
            cout << 3 << endl;
            cout << a[1] - (a[2] - a[1]) << " " << (a[1] + a[2]) / 2 << " " << a[2] + (a[2] - a[1]) << "\n";
        } else {
            cout << 2 << endl;
            cout << a[1] - (a[2] - a[1]) << " " << a[2] + (a[2] - a[1]) << "\n";
        }
        return 0;
    }
    vector<int> sol;
    if((a[1] + a[2]) % 2 == 0) {
        bool flag = true;
        int new_a = (a[1] + a[2]) / 2;
        int ratio = new_a - a[1];
        if(new_a - a[1] != ratio || a[2] - new_a != ratio) {
            flag = false;
        }
        for(int i = 3; i <= n; ++ i) {
            if(a[i] - a[i - 1] != ratio) {
                flag = false;
            }
        }
        if(flag == true) {
            sol.push_back(new_a);
        }
    }
    bool flag = true;
    int ratio = a[2] - a[1];
    for(int i = 2; i <= n; ++ i) {
        if(a[i] - a[i - 1] != ratio) {
            flag = false;
        }
    }
    if(flag == true) {
        sol.push_back(a[1] - ratio);
        sol.push_back(a[n] + ratio);
    } else {
        flag = true; int new_a;
        for(int i = 2; i <= n; ++ i) {
            if(a[i] - a[i - 1] != ratio) {
                if(flag == false) {
                    new_a = -2000000000;
                    break;
                }
                flag = false;
                new_a = a[i - 1] + ratio;
                if(a[i] - new_a != ratio) {
                    new_a = -2000000000;
                    break;
                }
            }
        }
        if(new_a > -2000000000) {
            sol.push_back(new_a);
        }
    }
    sort(sol.begin(), sol.end());
    cout << sol.size() << endl;
    for(vector<int> :: iterator it = sol.begin(); it != sol.end(); ++ it) {
        cout << *it << (it + 1 == sol.end() ? '\n' : ' ');
    }
    return 0;
}
