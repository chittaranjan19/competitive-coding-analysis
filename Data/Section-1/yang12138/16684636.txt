/*


	/＼7　　　 ∠＿/
	　 /　│　　 ／　／
	　│　Z ＿,＜　／　　 /`ヽ
	　│　　　　　ヽ　　 /　　〉
	　 Y　　　　　`　 /　　/
	　ｲ●　､　●　　⊂⊃〈　　/
	　()　 へ　　　　|　＼〈				//去吧比卡丘！！！
	　　>ｰ ､_　 ィ　 │ ／／
	　 / へ　　 /　ﾉ＜| ＼＼
	　 ヽ_ﾉ　　(_／　 │／／
	　　7　　　　　　　|／	|
	　　＞―r￣￣`ｰ―＿

*/


#include <iostream>
#include <cstdio>
#include <cmath>
#include <string>
#include <cstring>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
typedef long long ll;
const double pi=acos(-1.0);
using namespace std;
const int maxn=200005;
int same[maxn];
struct node
{
	int x,y;
}p[maxn];

bool cmp(node a,node b)
{
	if(a.x==b.x) return a.y<b.y;
	return a.x<b.x;
}

bool cmp2(node a,node b)
{
	return a.y<b.y;
}

ll C(int x)
{
	return (ll)x*(x-1)/2;
}

int  main()
{
	int n,t=0,now;scanf("%d",&n);

	for(int i=0;i<n;i++) scanf("%d%d",&p[i].x,&p[i].y);

	sort(p,p+n,cmp);

	for(int i=1;i<n;i++){
		same[t]=1;
		while(i<n&&p[i].x==p[i-1].x&&p[i].y==p[i-1].y) same[t]++,i++;
		t++;
	}

	ll ans=0;
	for(int i=1;i<n;i++){
		now=1;
		while(i<n&&p[i].x==p[i-1].x) now++,i++;
		ans+=C(now);
	}

	sort(p,p+n,cmp2);
	for(int i=1;i<n;i++){
		now=1;
		while(i<n&&p[i].y==p[i-1].y) now++,i++;
		ans+=C(now);
	}

	for(int i=0;i<t;i++) ans-=C(same[i]);
	//printf("%I64d\n",ans);
	cout<<ans<<endl;
	return 0;
}








