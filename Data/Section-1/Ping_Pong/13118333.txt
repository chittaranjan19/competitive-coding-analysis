#include <stdio.h>
#include <stdlib.h>

int *a;

typedef struct pair
{
    int x;
    int y;
} pair;

void qs(int *s_arr, int first, int last)
{
    int i = first, j = last, x = s_arr[(first + last) / 2];
    do
    {
        while (s_arr[i] < x)
            i++;
        while (s_arr[j] > x)
            j--;
        if(i <= j)
        {
            if (s_arr[i] > s_arr[j])
            {
                int o = s_arr[i];
                s_arr[i] = s_arr[j];
                s_arr[j] = o;
            }
            i++;
            j--;
        }
    } while (i <= j);
    if (i < last)
        qs(s_arr, i, last);
    if (first < j)
        qs(s_arr, first, j);
}

int main()
{
    int n, i, j, u = 0, ans = 0, ansi, st = 0, fin = 1000000000, st1, fin1, ee;
    scanf("%d", &n);
    int b[n];
    int *ww;
    a = malloc(sizeof(int) * n);
    for (i = 0; i < n; i++)
    {
        scanf("%d", &a[i]);
        b[i] = a[i];
    }
    qs(a, 0, n - 1);
    for (i = 0; i < n; i++)
        if (u == 0)
            u++;
        else if (a[i] == a[i - 1] && i == n - 1)
        {
            u++;
            if (u > ww[0].x)
            {
                free(ww);
                ww = malloc(sizeof(pair));
                ww[0].x = u;
                ww[0].y == a[i - 1];
                ee = 1;
            }
            else if (u == ww[0].x)
            {
                int *ww1;
                ee++;
                ww1 = malloc(sizeof(pair) * ee);
                for (j = 0; j < ee - 1; j++)
                {
                    ww1[j].x = ww[j].x;
                    ww1[j].y = ww[j].y;
                }
                ww1[ee - 1].x = u;
                ww1[ee - 1].y = a[i - 1];
                free(ww);
                ww = ww1;
            }
            u = 0;
        }
        else if (a[i] == a[i - 1])
            u++;
        else
        {
            if (u > ww[0].x)
            {
                free(ww);
                ww = malloc(sizeof(pair));
                ww[0].x = u;
                ww[0].y == a[i - 1];
                ee = 1;
            }
            else if (u == ww[0].x)
            {
                int *ww1;
                ee++;
                ww1 = malloc(sizeof(pair) * e);
                for (j = 0; j < ee - 1; j++)
                {
                    ww1[j].x = ww[j].x;
                    ww1[j].y = ww[j].y;
                }
                ww1[ee - 1].x = u;
                ww1[ee - 1].y = a[i - 1];
                free(ww);
                ww = ww1;
            u = 1;
        }
    for (i = 0; i < ee; i++)
    {
        for (j = 0; j < n; j++)
            if (b[j] == ww[i].y)
            {
                st1 = j + 1;
                break;
            }
        for (j = n - 1; j >= 0; j--)
            if (b[j] == ww[i].y)
            {
                fin1 = j + 1;
                break;
            }
        if (fin1 - st1 < fin - st)
        {
            fin = fin1;
            st = st1;
        }
    }
    printf("%d %d", st, fin);
    return 0;
}