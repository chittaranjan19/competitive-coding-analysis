#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007
#define inf 1000000000
#define maxn 1000000

#define ll long long
#define pii pair<int, int>
#define pb push_back
#define sin scanint
#define bitcount(x) __builtin_popcount(x)
#define fill(s, p) memset(s, p, sizeof(s));

#ifdef ONLINE_JUDGE
#define gc getchar
#endif

#ifndef ONLINE_JUDGE
#define gc getchar
//freopen("input.txt", "r", stdin)
//freopen("output.txt", "w", stdout)
#endif

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

ll modpow(ll a, ll b)
{
    ll x=1ll, y=a;
    while(b){
        if(b%2)
            x=(x*y)%MOD;
        y=(y*y)%MOD;
        b/=2;
    }
    return x;
}

ll gcd(ll a, ll b)
{
    if(a%b==0)
        return b;
    else
        return gcd(b, a%b);
}

vector<int> qb;
vector<int> temp;
vector<int> sol;

void solve(int num)
{
    //if(num>0)
    //cout << num << endl;
    if(num==0)
        return;
    int it;
    it = lower_bound(qb.begin(), qb.end(), num)-qb.begin();
    if(qb[it]>num)
        it--;
    sol.pb(qb[it]);
    solve(num-qb[it]);
}

int main()
{
    int i, j, num;
    qb.pb(1);
    for(i=2; i<=6; i++){
        num = modpow(10, i-1);
        temp.clear();
        for(j=0; j<qb.size(); j++){
            temp.pb(num+qb[j]);
        }
        qb.pb(num);
        for(j=0; j<temp.size(); j++)
            qb.pb(temp[j]);
    }
    /*for(i=0; i<qb.size(); i++)
        cout << qb[i] << " ";
    cout << endl;*/
    sin(num);
    solve(num);
    printf("%d\n", sol.size());
    for(i=0; i<sol.size(); i++)
        printf("%d ", sol[i]);
    printf("\n");
    return 0;
}