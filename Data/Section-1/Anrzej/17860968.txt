#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 5e5 + 10, lg = 20;

int gcd(int a, int b) {
	return b ? gcd(b, a % b) : a;
}

ll a[N], pf[N], sf[N];

int main()
{
	ll n;
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];

	ll ans = 0;
	pf[0] = a[0];
	for (int i = 1; i < n; i++)
		pf[i] = gcd(a[i], pf[i - 1]);

	sf[n - 1] = a[n - 1];
	for (int i = n - 2; i > -1; i--)
		sf[i] = gcd(a[i], sf[i + 1]);


	map<int, int> cnt;

	sf[n] = sf[n - 1];
	cnt[pf[0]]++;
	for (int i = 1; i < n-1; i++)
	{
		int sff = sf[i+1];
		map<int, int>::iterator it;
		for (it = cnt.begin(); it != cnt.end(); it++){
			ans += ((ll)it->sc)*((ll)gcd(it->fs, sff));
		}
		if (i != n-2)
			ans += sf[i+1];
		else
			ans +=  pf[i];
		cnt[pf[i]]++;
	}
	cout << ans + sf[1];
	return 0;
}