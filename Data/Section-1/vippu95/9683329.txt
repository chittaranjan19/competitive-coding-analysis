//Coder: Vipin Singh
#include<bits/stdc++.h>
using namespace std;

#define lli long long
#define pb push_back
#define mp make_pair
const int limit = 60;
char mat[limit][limit];
bool visited[limit][limit];

int dx[]={1,0,-1,0};
int dy[]={0,1,0,-1};

bool DFS(int i,int j,int pi,int pj,int n,int m,char ch){
	visited[i][j]=true;
	bool ans = false;
	//cout<<"For parent "<<i<<" "<<j<<endl;
	for(int k=0;k<4;k++){
		int nr = i+dy[k];
		int nc = j+dx[k];
		//cout<<nr<<" "<<nc<<" ";
		if(nr>=0 && nc>=0 && nr<n && nc<m){
			if(visited[nr][nc] && mat[nr][nc]==ch){
				if(nr!=pi && nc!=pj)
					ans = true;
				else
					continue;
			}
			else if(mat[nr][nc]==ch){
				ans = ans | DFS(nr,nc,i,j,n,m,ch);
			}
			//cout<<ans<<endl;
		}
	}
	return ans;
}

int main(){
	int n,m;
	scanf("%d %d",&n,&m);
	for(int i=0;i<n;i++){
		scanf("%s",mat[i]);
	}
	for(int i=0;i<limit;i++){
		for(int j=0;j<limit;j++){
			visited[i][j]=false;
		}
	}
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(!visited[i][j]){
				if(DFS(i,j,-1,-1,n,m,mat[i][j])){
					printf("Yes\n");
					return 0;
				}	
			}
		}
	}
	printf("No\n");
}
