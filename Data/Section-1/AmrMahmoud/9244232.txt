#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int from[100005], to[100005], ans[100005];
int add[100005][30], sub[100005][30], sum[100005][30];
int counter[30];
int arr[100005];

int main()
{
    ios_base::sync_with_stdio(0);
    int n, q;
    cin >> n >> q;
    for(int i=0;i<q;i++)
    {
        cin >> from[i] >> to[i] >> ans[i];
        from[i]--, to[i]--;
        for(int j=0;j<30;j++)
            add[from[i]][j] += ((ans[i] & (1 << j)) != 0), sub[to[i]][j] += ((ans[i] & (1 << j)) != 0);
    }
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<30;j++)
        {
            sum[i][j] = (i == 0 ? 0 : sum[i-1][j]);
            counter[j]+=add[i][j];
            if(counter[j])
                arr[i] |= 1 << j, sum[i][j]++;
            counter[j]-=sub[i][j];
        }
    }
    bool test = true;
    for(int i=0;i<q && test;i++)
    {
        for(int j=0;j<30 && test;j++)
        {
            if(!(ans[i] & (1 << j)))
            {
                 int temp = sum[to[i]][j] - (from[i] == 0 ? 0 : sum[from[i] - 1][j]);
                 if(temp == to[i] - from[i] + 1) test = 0;
            }
        }
    }
    if(test)
    {
        cout << "YES\n";
        for(int i=0;i<n;i++)
            cout << arr[i] << " ";
    }
    else cout << "NO\n";
    return 0;
}