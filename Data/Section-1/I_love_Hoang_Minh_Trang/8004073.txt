const   fi      ='';
        fo      ='';
        oo      =2000;

var     f       :text;
        n, k    :longint;
        a       :array[1..oo] of longint;
        ans     :longint;
procedure QS(l, h:longint);
var     i, j, x, tmp    :longint;
begin
        i:=l;
        j:=h;
        x:=a[(i+j) div 2];
        repeat
                while a[i]<x do inc(i);
                while a[j]>x do dec(j);
                if i<=j then
                        begin
                                tmp:=a[i];
                                a[i]:=a[j];
                                a[j]:=tmp;
                                inc(i);
                                dec(j);
                        end;
        until  i>j;
        if L<j then QS(L,j);
        if i<H then QS(i, H);
end;

Procedure nhap;
var     i :longint;

begin
        assign(f, fi);
        reset(f);
        readln(f, n, k);
        for i:=1 to n do
                read(f, a[i]);
        close(f);
end;

Procedure xuly;
var     i, j, c, maxtm, go, l:longint;
        ok:boolean;
begin
        j:=0;
        c:=n;
        maxtm:=k;
        QS(1,n);
        repeat
                i:=j+1;
                j:=i+maxtm-1;
                go:=a[i];
                c:=c-(j-i+1);
                ok:=false;
                for l:=i to j do
                        if a[l] > go then
                                begin
                                        ok:=true;
                                        break;
                                end;
                if not ok then l:=j+1;
                ans:=ans+(go-1)*2;
                //writeln(ans);
                maxtm:=k-(j-l+1);
        until c<=0;
end;

Procedure xuat;
begin
        assign(f, fo);
        rewrite(f);
        write(f, ans);
        close(f);
end;

BEGIN
        nhap;
        xuly;
        xuat;
END.
