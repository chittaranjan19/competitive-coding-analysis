#include <cstdio>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <cmath>
#include <climits>
#ifdef DEBUG
	#include <ctime>
#endif
using namespace std;

// template

// abbreviations
#define vi vector<int>
#define vl vector<ll>
#define vb vector<bool>
#define vs vector<string>
#define ii pair<int, int>
#define a first
#define b second
#define vii vector<ii>
#define mii map<ii>
#define vvi vector<vi>
#define vvl vector<vl>
#define que queue
#define pque priority_queue
#define stk stack
#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define pu push
#define po pop
#define mp make_pair
#define sz(var) ((int) var.size())
#define rep(it, n) for(int it = 0; it < n; ++it)
#define rep1(it, n) for(int it = 1; it <= n; ++it)
#define loop(it, from, to) for(int it = (from); it <= (to); ++it)
#define iter(it, cont) for(__typeof((cont).begin()) it = (cont).begin(); it != (cont).end(); ++it)
#define riter(it, cont) for(__typeof((cont).rbegin()) it = (cont).rbegin(); it != (cont).rend(); ++it)
#define all(cont) (cont).begin(), (cont).end()
#define memclr(var) memset(var, 0, sizeof(var))

typedef unsigned long long ull;
typedef long long ll;

const int INF = INT_MAX;
const int NINF = INT_MIN;
const ll INF_LL = LLONG_MAX;
const ll NINF_LL = LLONG_MIN;
const double PI = acos(-1.0);
const int MOD = 1e9+7;

#ifdef DEBUG
	#define debug(fmt, args...) printf("Line %d, in %s\t: " fmt, __LINE__, __FUNCTION__, ##args)
	#define rep_rt() printf("[Run time: %.3fs]\n", ((double) clock()) / CLOCKS_PER_SEC)
#else
	#define debug(...)
#endif

// end of template
#define MAX_N (int) (1e6)
int arr[MAX_N + 2];

struct Q {
	int l, r;
	int i;
};

int sqrt_n;
bool operator< (Q a, Q b) {
	if (a.l / sqrt_n != b.l / sqrt_n)
		return a.l / sqrt_n < b.l / sqrt_n;
	return a.r > b.r;
}

int main() {
#ifdef DEBUG
	freopen("703D.in", "r", stdin);
#endif

    int n;
    scanf("%d", &n);
    sqrt_n = sqrt(n);
    rep1(idx, n) {
    	scanf("%d", &arr[idx]);
    }

    vector<Q> qs;
    int m;
    scanf("%d", &m);
    rep(idx, m) {
    	int l, r;
    	scanf("%d %d", &l, &r);
    	Q q;
    	q.l = l;
    	q.r = r;
    	q.i = idx;
    	qs.pub(q);
    }

    sort(all(qs));

    map<int, int> c;
    vector<int> ans_arr(m);
    int ans = 0;
    int l = 1, r = 0;
    rep(idx, sz(qs)) {
    	Q q = qs[idx];
    	while (r < q.r) {
    		++r;
    		int val = arr[r];
    		if (c[val] % 2)
    			ans ^= val;
    		c[val]++;
    		if ((c[val] % 2) and (c[val] > 1))
    			ans ^= val;
    	}
    	while (r > q.r) {
    		int val = arr[r];
    		if (c[val] % 2 == 0) {
    			ans ^= val;
    		}
    		c[val]--;
    		if ((c[val] % 2 == 0) and (c[val] > 0)) {
    			ans ^= val;
    		}
    		--r;
    	}
    	while (l < q.l) {
    		int val = arr[l];
    		if (c[val] % 2 == 0)
    			ans ^= val;
    		c[val]--;
    		if ((c[val] % 2 == 0) and (c[val] > 0)) {
    			ans ^= val;
    		}
    		++l;
    	}
    	while (l > q.l) {
    		--l;
    		int val = arr[l];
    		if (c[val] % 2)
    			ans ^= val;
    		c[val]++;
    		if ((c[val] % 2) and (c[val] > 1))
    			ans ^= val;
    	}
    	ans_arr[q.i] = ans;
    }
    rep(idx, m) {
    	printf("%d\n", ans_arr[idx]);
    }


#ifdef DEBUG
    rep_rt();
#endif
    return 0;
}