#include <bits/stdc++.h>

using namespace std;
const int MAXN = 1e6 + 10;

int N;
char S[MAXN];
char ans[MAXN];

int main() {
	scanf("%s", S);
	N = strlen(S);
	int posd = find(S, S + N, '.') - S;
	if (posd == N) {
		S[N++] = '.';
	}
	//delete the first few 0 chars
	for (int i = 0; i < N; i++) {
		if (S[i] != '0' || S[i] == '.') {
			for (int j = 0, k = i; k < N; j++, k++) {
				S[j] = S[k];
			}
			break;
		}
	}
	N = strlen(S);
	posd = find(S, S + N, '.') - S;
	//now, remove all 0s before decimal point
	int ex;
	if (S[0] == '.') {
		//negative exponent
		for (int i = 1; i < N; i++) {
			if (S[i] != '0') {
				sprintf(ans, "%c.%s", S[i], S + i + 1);
				ex = -i;
				break;
			}
		}
	} else {
		int spos = 0;
		ans[spos++] = S[0];
		if (N == 2) {
			putchar(S[0]);
			return 0;
		}
		ans[spos++] = '.';
		for (int i = 1; i < N; i++) {
			if (S[i] != '.') {
				ans[spos++] = S[i];
			}
		}
		ex = posd - 1;
	}

	//now after dec pt. remove 0s
	int len = strlen(ans);
	while (ans[len - 1] == '0') {
		ans[len - 1] = 0;
		len--;
	}
	if (ans[len - 1] == '.') {
		ans[len - 1] = 0;
		len--;
	}
	printf("%s", ans);
	if (ex) {
		printf("E%d\n", ex);
	}
}
