#include <iostream>
using namespace std; 

int main()
{
    int n;
    cin >> n;
    if (n == 1) {
        cout << 1;
        return 0;
    }
    int** table = new int*[n];
    for (int i = 0; i < n; i++) {
        table[i] = new int[n];
    }
    int zeroI, zeroJ;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> table[i][j];
            if (table[i][j] == 0) {
                zeroI = i;
                zeroJ = j;
            }
        }
    }
    int rightSum = 0;
    if (zeroI > 0) {
        for (int j = 0; j < n; j++) {
            rightSum += table[0][j];
        }
    }
    else {
        for (int j = 0; j < n; j++) {
            rightSum += table[1][j];
        }
    }
    int wrongSum = 0;
    for (int j = 0; j < n; j++) {
        wrongSum += table[zeroI][j];
    }
    int candidate = rightSum - wrongSum;
    table[zeroI][zeroJ] = candidate;
    for (int i = 0; i < n; i++) {
        int testSum = 0;
        for (int j = 0; j < n; j++) {
            testSum +=  table[i][j];
        }
        if (testSum != rightSum) {
            cout << -1;
            return 0;
        }
    }
    for (int j = 0; j < n; j++) {
        int testSum = 0;
        for (int i = 0; i < n; i++) {
            testSum +=  table[i][j];
        }
        if (testSum != rightSum) {
            cout << -1;
            return 0;
        }
    }
    int diagonalSum = 0;
    for (int i = 0; i < n; i++) {
        diagonalSum +=  table[i][i];
    }
    if (diagonalSum != rightSum) {
        cout << -1;
        return 0;
    }
    diagonalSum = 0;
    for (int i = 0; i < n; i++) {
        diagonalSum +=  table[i][n - 1 - i];
    }
    if (diagonalSum != rightSum) {
        cout << -1;
        return 0;
    }
    cout << candidate;
    return 0;
}