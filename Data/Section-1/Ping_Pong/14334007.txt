#include <stdio.h>
#include <iostream>
#include <stdlib.h>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <string>
#include <math.h>

using namespace std;

typedef struct
{
    long long l;
    long long r;
    long long d;
} oper;

int main()
{
    long long n, m, k, p, q, curr;
    scanf("%I64d %I64d %I64d", &n, &m, &k);
    long long a[n];
    for (int i = 0; i < n; i++)
        scanf("%I64d", &a[i]);
    oper o[m];
    for (long long i = 0; i < m; i++)
        scanf("%I64d %I64d %I64d", &o[i].l, &o[i].r, &o[i].d);
    long long cnt[m];
    for (long long i = 0; i < m; i++)
        cnt[i] = 0;
    for (long long i = 0; i < k; i++)
    {
        scanf("%I64d %I64d", &p, &q);
        cnt[p - 1]++;
        if (q < m)
            cnt[q]--;
    }
    curr = 0;
    for (long long i = 0; i < m; i++)
    {
        curr += cnt[i];
        cnt[i] = curr;
    }
    for (long long i = 0; i < m; i++)
        o[i].d *= cnt[i];
    long long cnt1[n];
    for (long long i = 0; i < n; i++)
        cnt1[i] = 0;
    for (long long i = 0; i < m; i++)
    {
        cnt1[o[i].l - 1] += o[i].d;
        if (o[i].r < n)
            cnt1[o[i].r] -= o[i].d;
    }
    curr = 0;
    for (long long i = 0; i < n; i++)
    {
        curr += cnt1[i];
        cnt1[i] = curr;
    }
    for (long long i = 0; i < n; i++)
        a[i] += cnt1[i];
    for (long long i = 0; i < n; i++)
        printf("%I64d ", a[i]);
    return 0;
}
