import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

public class ProblemC3 {
    BufferedReader rd;

    ProblemC3() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int[] q = intarr();
        int n = q[0];
        int d = q[1];
        int h = q[2];
        List<int[]> res = new ArrayList<>();
        if(d == 1) {
            if(n == 2) {
                res.add(new int[] { 0, 1 });
            }
        } else if(d <= h*2) {
            for(int i=0;i<h;i++) {
                res.add(new int[] { i, i+1 });
            }
            if(d == h) {
                for(int i=h;i<n-1;i++) {
                    res.add(new int[] { 1, i+1 });
                }
            } else {
                for(int i=h;i<d;i++) {
                    res.add(new int[] { i==h?0:i, i+1 });
                }
                for(int i=d;i<n-1;i++) {
                    res.add(new int[] { 0, i+1 });
                }
            }
        }
        if(res.isEmpty()) {
            out(-1);
        } else {
            StringBuilder buf = new StringBuilder();
            for(int[] a: res) {
                if(buf.length() > 0) {
                    buf.append('\n');
                }
                buf.append(a[0]+1).append(' ').append(a[1]+1);
            }
            out(buf);
        }
    }

    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = split(s);
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }

    public String[] split(String s) {
        if(s == null) {
            return new String[0];
        }
        int n = s.length();
        int start = -1;
        int end = 0;
        int sp = 0;
        boolean lastWhitespace = true;
        for(int i=0;i<n;i++) {
            char c = s.charAt(i);
            if(isWhitespace(c)) {
                lastWhitespace = true;
            } else {
                if(lastWhitespace) {
                    sp++;
                }
                if(start == -1) {
                    start = i;
                }
                end = i;
                lastWhitespace = false;
            }
        }
        if(start == -1) {
            return new String[0];
        }
        String[] res = new String[sp];
        int last = start;
        int x = 0;
        lastWhitespace = true;
        for(int i=start;i<=end;i++) {
            char c = s.charAt(i);
            boolean w = isWhitespace(c);
            if(w && !lastWhitespace) {
                res[x++] = s.substring(last,i);
            } else if(!w && lastWhitespace) {
                last = i;
            }
            lastWhitespace = w;
        }
        res[x] = s.substring(last,end+1);
        return res;
    }

    private boolean isWhitespace(char c) {
        return c==' ' || c=='\t';
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemC3();
    }
}
