//zhaoruifeng
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>
#include <time.h>
#include <limits.h>
#include <iostream>
#include <sstream>
#include <string>
#include <stack>
#include <queue>
#include <vector>
#include <set>
#include <map>
#include <bitset>
#include <algorithm>

#define PI acos(-1.0)
#define INF 0x3f3f3f3f
#define MAX 100000007
#define MOD 1000000007
#define EPS 1e-6
#define N 11
#define M 1123456
using namespace std;

int n,m;
int flag,sum,ave,ans,res,len,ans1,ans2;
//int a[N],b[N];
int g[N][N];
//vector<int>g[N];
int dir[4][2]={-1,0,0,1,1,0,0,-1};
bool vis[N][N][4];
char s[101];
//string s;
//stringstream ss;
struct node
{
    int x,y;
    int r,w;
    int to,next;
    friend bool operator < (node a, node b)
    {
//        if(a.y==b.y)return a.x > b.x;
        return a.r > b.r;
    }
}tn;

int main()
{
    int i,j,k,T,cas,t,x,y,z,xx,yy,zz;
    #ifndef ONLINE_JUDGE
        freopen("test.txt","r",stdin);
    #endif
//    scanf("%d",&T);
//    cas=0;
//    while(T--)
    while(scanf("%d%d",&n,&m)!=EOF&&n)
    {
        memset(g,0,sizeof(g));
        memset(vis,false,sizeof(vis));
        for(i=1;i<=n;i++)
        {
            scanf("%s",s);
            for(j=0;j<m;j++)
            {
                if(s[j]=='*')continue;
                g[i][j+1] = 1;
                if(s[j]!='.')
                {
                    x=i;y=j+1;
                    if(s[j]=='U')z=0;
                    else if(s[j]=='R')z=1;
                    else if(s[j]=='D')z=2;
                    else z=3;
                }
            }
        }
        vis[x][y][z]=true;sum=1;
        while(1)
        {
            for(i=0;i<4;i++)
            {
                zz=(z+i)%4;
                xx=x+dir[zz][0];yy=y+dir[zz][1];
                if(g[xx][yy])
                    break;
            }
            if(vis[xx][yy][zz])break;
            if(!vis[xx][yy][0]&&!vis[xx][yy][2]&&!vis[xx][yy][3]&&!vis[xx][yy][1])sum++;
            vis[xx][yy][zz]=true;
            x=xx;y=yy;z=zz;
        }
        printf("%d\n",sum);
    }
    return 0;
}






