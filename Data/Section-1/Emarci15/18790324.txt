#include <iostream>
#include <vector>

using namespace std;

int n,m;
vector<int> h[100000];

bool eler[100000];
bool szin[100000];

bool dfs(int p) {
    eler[p] = 1;
    for(int q:h[p]) {
        if((eler[q]) && (szin[q] == szin[p])) return 0;
        if(!eler[q]) {
            szin[q] = !szin[p];
            if(!dfs(q)) return 0;
        }
    }
    return 1;
}

vector<int> sol[2];

int main()
{
    ios::sync_with_stdio(0);
    cin >> n >> m;
    for(int i=0; i<m; i++) {
        int x,y; cin >> x >> y; x--; y--;
        h[x].push_back(y); h[y].push_back(x);
    }

    for(int i=0; i<n; i++) {
        if(eler[i]) continue;
        if(!dfs(i)) {
            cout << -1 << endl;
            return 0;
        }
    }

    for(int i=0; i<n; i++) sol[szin[i]].push_back(i);

    for(int i=0; i<2; i++) {
        cout << sol[i].size() << endl;
        for(int j:sol[i]) cout << (j+1) << ' ';
        cout << endl;
    }

    return 0;
}
