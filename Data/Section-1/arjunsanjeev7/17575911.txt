/*	 Hello World!	*/

#include <bits/stdc++.h>

#define pb push_back
#define pf push_front
#define mp make_pair
#define f first
#define s second
#define let(x,a) __typeof(a) x(a)
#define all(a) (a).begin(),(a).end() 
#define endl '\n'
#define present(c,x) ((c).find(x) != (c).end()) 
#define tr(v,it) for( let(it,v.begin()) ; it != v.end() ; it++)
#define rtr(v,it) for( let(it,v.rbegin()) ; it != v.rend() ; it++)
#define rep1(i,n) for(int i=0; i<(int)n;i++)
#define rep2(i,a,b) for(int i=(int)a; i<=(int)b; i++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define LL long long int
#define PII pair<int,int>
#define VI vector<int>
#define inf INT_MAX

using namespace std;

void FastIO()
{
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	cout.tie(NULL);
}

int main()
{
	FastIO();
	LL n,sum=0,ans=1e18;
	cin>>n;
	vector<LL> a(n,0),cum(n,0),cam(n,0);
	for(int i=0;i<n;i++)
	{
		cin>>a[i];
		sum+=a[i];
	}
	sort(all(a));
	for(int i=0;i<n;i++)
	{
		if(i) cum[i]=a[i]+cum[i-1];
		else cum[i]=a[i];
	}
	for(int i=n-1;i>=0;i--)
	{
		if(i!=n-1) cam[i]=a[i]+cam[i+1];
		else cam[i]=a[i];
	}
	reverse(all(cam));
	for(int i=0;i<n;i++)
	{
		LL temp=sum/2-cum[i];
		if(temp<0) continue;
		int l=lower_bound(all(cam),temp)-cam.begin();
		ans=min(ans,2*(cum[i]+cam[l])-sum);
		l--;
		if(l==-1) ans=min(ans,sum-2*cum[i]);
		else ans=min(ans,sum-2*(cum[i]+cam[l]));
	}
	cout<<ans+1<<endl;
	return 0;
}