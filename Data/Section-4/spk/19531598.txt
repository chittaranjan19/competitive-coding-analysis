#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>
#include<queue>
#include<set>
#include<stack>

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define scantype int
#define min(a,b) a<b?a:b
#define max(a,b) a>b?a:b
#define lli long long int

using namespace std;

void scan(scantype &x);

vector<int> edge[100001];
int current[100002],goal[100002];


int main(void)
{

  int n;
  cin>>n;
  bool vis[n+1];

  for(int i=1;i<n;i++)
  {
      int x,y;
      scan(x);
      scan(y);
      edge[x].pb(y);
      edge[y].pb(x);
  }


  for(int i=1;i<=n;i++)
      scan(current[i]);

  for(int i=1;i<=n;i++)
      scan(goal[i]);

  queue< pair<int , pair<int,int> > > line; // node,(last,last to last)


    line.push({1,{0,0}});

  for(int i=1;i<=n;i++)vis[i]=false;

  vector<int> ans;

  while(!line.empty())
  {
         int now = line.front().first;
         int toggle = line.front().second.first;
         int last_toggle = line.front().second.second;

         vis[now]=true;

         line.pop();

         int pass;

         if(toggle)
            current[now]= current[now]==0?1:0;


         if(current[now]==goal[now])
         {
             pass=0;
         }
         else
         {
             ans.pb(now);
             pass=1;
         }

         for(int i=0;i<edge[now].size();i++)
          {
              int ed = edge[now][i];
              if(vis[ed]==false)
                   {
                       vis[ed]=true;
                       line.push({ed,{last_toggle,pass}});
                   }
          }

  }


  cout<<ans.size()<<endl;
  for(int i=0;i<ans.size();i++)
  {
      printf("%d\n",ans[i]);
  }
  return 0;
}









void scan(scantype &x)
{
    /*register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}*/

    register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
