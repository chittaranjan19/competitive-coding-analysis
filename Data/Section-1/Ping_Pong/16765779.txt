#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

#define ll long long
#define ld long double

using namespace std;

const int inf = (int)1e9;
const int MOD = (int)1e9 + 7;
const int p = 239;
const int MAX_N = 10;
const long double pi = 3.1415926535897932384626;
const long double eps = 1e-6;

pair<string, string> make()
{
    string s;
    cin >> s;
    s = s.substr(7, s.size() - 7);
    int pos = -1;
    for (int i = 0; i < s.size(); i++)
        if (s[i] == '/')
        {
            pos = i;
            break;
        }
    if (pos == -1)
        return make_pair(s, "");
    else
        return make_pair(s.substr(0, pos), s.substr(pos, s.size() - pos));
}

int main()
{
    //ifstream ifs("input.txt");
    //ofstream ofs("output.txt");
    //freopen("candies.in", "r", stdin);
    //freopen("candies.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin >> n;
    vector<pair<string, string> > a;
    for (int i = 0; i < n; i++)
        a.push_back(make());
    /*for (int i = 0; i < n; i++)
        cout << '"' << a[i].first << '"' << " " << '"' << a[i].second << '"' << endl;*/
    sort(a.begin(), a.end());
    vector<pair<string, string> > v;
    v.push_back(make_pair(a[0].second + '#', a[0].first));
    for (int i = 1; i < n; i++)
        if (a[i].first == a[i - 1].first)
        {
            if (a[i].second != a[i - 1].second)
                v[v.size() - 1].first += (a[i].second + '#');
        }
        else
            v.push_back(make_pair(a[i].second + '#', a[i].first));
    sort(v.begin(), v.end());
    /*for (int i = 0; i < v.size(); i++)
        cout << v[i].second << "   " << v[i].first << endl;*/
    vector<vector<string> > ans;
    vector<string> c;
    ans.push_back(c);
    ans[ans.size() - 1].push_back(v[0].second);
    for (int i = 1; i < v.size(); i++)
        if (v[i].first == v[i - 1].first)
            ans[ans.size() - 1].push_back(v[i].second);
        else
        {
            ans.push_back(c);
            ans[ans.size() - 1].push_back(v[i].second);
        }
    int cnt = 0;
    for (int i = 0; i < ans.size(); i++)
        if (ans[i].size() > 1)
            cnt++;
    cout << cnt << endl;
    for (int i = 0; i < ans.size(); i++)
        if (ans[i].size() > 1)
        {
            for (int j = 0; j < ans[i].size(); j++)
                cout << "http://" << ans[i][j] << " ";
            cout << endl;
        }
    return 0;
}
