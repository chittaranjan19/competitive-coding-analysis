/*
          ______      
||  //   | _____|   ||  //
|| //    ||         || //
||//     ||_____    ||//
||\\     | _____|   ||\\
|| \\    ||         || \\   ll Once(ll KEK){
||  \\   ||_____    ||  \\ 		return Forever(KEK);
||   \\  |______|   ||   \\ }
                     
*/
#include<bits/stdc++.h>

using namespace std;
const int N6 = 1e6 + 6, N3 = 1e3 + 6, oo =  1e9 + 9, base = 1e9 + 7;
const long long ool = 1e18 + 9;

typedef unsigned long long ull;
typedef long long ll;
typedef double ld;
typedef pair <int, int> PII;
typedef pair <ll, ll> PLL;

#define F first
#define S second
#define pb push_back
#define right(x) x << 1 | 1
#define left(x) x << 1	
#define	forn(x, a, b) for (int x = a; x <= b; ++x)
#define for1(x, a, b) for (int x = a; x >= b; --x)
#define mp make_pair

int n;
int d[N6];
char a[N6];
bool u[N6];

void dfs(int v){
	if(v <= 0 || v > n){
		cout << "FINITE\n";
		exit(0);
	}	
	if(u[v]){
		cout << "INFINITE\n";
		exit(0);
	}
	u[v] = 1;
	if(a[v] == '>')
		dfs(v + d[v]);
	else
		dfs(v - d[v]);
}

int main(){
	ios_base :: sync_with_stdio(0);
	cin.tie(0);	

	cin >> n;
	forn(i, 1, n){
		cin >> a[i];
	}               

	forn(i, 1, n){
		cin >> d[i];
	}

	dfs(1);
	
	return 0;
}