#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>
#include<queue>
#include<set>
#include<stack>

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define scantype int
#define lli long long int
#define N 100003

lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}

using namespace std;

void scan(scantype &x);

struct node{
       int occ;
       node* next[2];
}*head;

string toString(lli num)
{
    string st;
    lli ten=10;
    while(num)
    {
       int last = num%ten;
       st+= (last+'0');
       num/=ten;
    }

    for(int i=st.length();i<=18;i++)
       st+="0";

    reverse(st.begin(),st.end());

    return st;
}

node* create(node* np)
{
       np = new node;
       (*np).next[0]=(*np).next[1]=NULL;
       (*np).occ=0;
       return np;
}


void add(lli num)
{
       string st = toString(num);

       node* curr=head;

       for(int i=0;i<st.length();i++)
       {
            int nxt = st[i]-'0';

            if(nxt%2==0)
              nxt=0;
            else
              nxt=1;

            if((*curr).next[nxt]==NULL)
            {
                   node* newnode = create(newnode);
                   (*curr).next[nxt]=newnode;
            }

            curr = (*curr).next[nxt];
           // cout<<curr<<endl;
            if(i==st.length()-1)
              (*curr).occ++;
       }
}

void rem(lli num)
{
       string st = toString(num);

       node* curr=head;

       for(int i=0;i<st.length();i++)
       {
            int nxt = st[i]-'0';

             if(nxt%2==0)
              nxt=0;
            else
              nxt=1;

            curr = (*curr).next[nxt];

            if(i==st.length()-1)
            {
              (*curr).occ--;
            }
       }
}

int get(lli num)
{
       string st = toString(num);

       node* curr=head;

       for(int i=0;i<st.length();i++)
       {
            int nxt = st[i]-'0';

            curr = (*curr).next[nxt];

            if(curr==NULL)
            {
                   return 0;
            }

            if(i==st.length()-1)
            {
               if((*curr).occ<=0)return 0;
               else return (*curr).occ;
            }
       }
}

void init()
{
       head = new node();
       (*head).next[0]=(*head).next[1]=NULL;
}


int main(void)
{
  int t;
  cin>>t;
  init();
  while(t--)
  {
        char c;
        lli num;
        cin>>c>>num;
        //cout<<c<<" "<<num<<endl;
        if(c=='+')
              add(num);
        else if(c=='-')
              rem(num);
        else
              printf("%d\n",get(num));
  }
  return 0;
}









void scan(scantype &x)
{
    /*register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}*/

    register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
