#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <stack>
#include <algorithm>
#include <cctype>
#include <vector>
#include <queue>
#include <tr1/unordered_map>
#include <cmath>
#include <map>
#include <bitset>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef long double real;
///////////////////////////////UTIL/////////////////////////////////
#define ALL(x) (x).begin(),x.end()
#define CLEAR0(v) memset(v, 0, sizeof(v))
#define CLEAR(v, x) memset(v, x, sizeof(v))
#define INRANGE0(x, n) ((x) > -1 && (x) < n)
#define INRANGE(x, a, b) ((x) >= a && (x) <= b)
#define COPY(a, b) memcpy(a, b, sizeof(a))
#define REP(i,n) for(int i = 0; i<n; i++)
#define REPP(i,a,n) for(int i = a; i<n; i++)
#define REPD(i,n) for(int i = n-1; i>-1; i--)
#define REPDP(i,a,n) for(int i = a; i>-1; i--)
#define pb push_back
#define pf push_front
#define sz size()
#define mp make_pair
/////////////////////////////NUMERICAL//////////////////////////////
#define INCMOD(a,b,c) (((a)+b)%c)
#define DECMOD(a,b,c) ((a)+c-b)%c)
#define ROUNDINT(a) (int)((double)(a) + 0.5)
#define INF 2000000000
/////////////////////////////BITWISE////////////////////////////////
#define CHECK(S, j) (S & (1 << j))
#define CHECKFIRST(S) (S & (-S))  //PRECISA DE UMA TABELA PARA TRANSFORMAR EM INDICE
#define SET(S, j) S |= (1 << j)
#define SETALL(S, j) S = (1 << j)-1  //J PRIMEIROS
#define UNSET(S, j) S &= ~(1 << j)
#define TOOGLE(S, j) S ^= (1 << j)
//scanf(" %d ", &t);

char c[4][10];

bool can(){
	int t;
	char p;
	REP(k, 3){
		REP(l, 3){
			p = c[k][l];
			if(c[k][l+1] == p && c[k+1][l] == p && c[k+1][l+1] == p) return true;
		}
	}
	REP(i, 4){
		t = strlen(&c[i][0]);
		REP(j, 4){
			if(c[i][j] == '.') p = c[i][j] = '#';
			else p = c[i][j] = '.';
			REP(k, 3){
				REP(l, 3){
					p = c[k][l];
					if(c[k][l+1] == p && c[k+1][l] == p && c[k+1][l+1] == p) return true;
				}
			}
			if(c[i][j] == '.') p = c[i][j] = '#';
			else p = c[i][j] = '.';
		}
	}
	return false;
}

int main(){
	REP(i, 4) scanf(" %s", &c[i][0]);
	if(can()) printf("YES\n");
	else printf("NO\n");
}





