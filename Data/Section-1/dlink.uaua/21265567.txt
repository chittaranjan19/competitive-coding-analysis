#include <bits/stdc++.h>

#define out_file freopen("olymp.in", "r", stdin); freopen("olymp.out", "w", stdout)
#define ls else
#define all(a) a.begin(),a.end()
#define rall(a) a.rbegin(),a.rend()
#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
#define timer int timer=clock()
#define rtn return
#define maxint 2147483647
#define I "%d"
#define II "%d%d"
#define III "%d%d%d"
#define L "%lf"
#define sqr(x) (x)*(x)
#define mp make_pair
#define pb push_back
#define sd second
#define ft first
#define TAK "YES"
#define Tak "Yes"
#define tak "yes"
#define y0 sklfgnjkdnhfxfhn
#define y1 sklfgnjkdnhfxfh
#define y2 sklfgnjkdnhfxfhnv
#define y3 sklfgnjkdnhfxfhna
#define y5 sklfgnjkdnhfxfhns
#define y4 sklfgnjkdnhfxfhnd
#define y6 sklfgnjkdnhfxfhnf

using namespace std;

typedef pair <int,int> pii;
typedef vector < pii > vii;
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef long double ld;
typedef long long ll;
typedef unsigned long long ull;

multiset <int> a;
vector < pair <string, int> > ans;

int main()
{
    fast;
    int n;
    cin >> n;
    for(int i = 0; i < n; i++)
    {
        string s;
        cin >> s;
        if(s == "insert")
        {
            int x;
            cin >> x;
            a.insert(x);
            ans.pb(mp("insert", x));
        }
        if(s == "removeMin")
        {
            if(a.size() == 0)
            {
                a.insert(1);
                ans.pb(mp("insert", 1));
            }
            ans.pb(mp("removeMin", -1));
            a.erase(a.begin());
        }
        if(s == "getMin")
        {
            int x;
            cin >> x;
            while(*a.begin() < x && a.size() > 0)
            {
                ans.pb(mp("removeMin", 0));
                a.erase(a.begin());
            }
            if(a.size() == 0 || *a.begin() > x)
            {
                a.insert(x);
                ans.pb(mp("insert", x));
            }
            ans.pb(mp("getMin", x));
        }
    }
    cout << ans.size() << '\n';
    for(int i = 0; i < ans.size(); i++)
    {
        cout << ans[i].ft;
        if(ans[i].ft != "removeMin")
            cout << ' ' << ans[i].sd;
        cout << '\n';
    }
}
