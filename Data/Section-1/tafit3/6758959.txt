import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Map;
import java.util.SortedMap;
import java.util.TreeMap;

public class KuriyamaMirai2 {

    private KuriyamaMirai2() throws IOException {
        BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
        String h = rd.readLine();
        h = rd.readLine();
        String[] q = h.split("\\s+");
        int n = q.length;
        int[][] v = new int[2][n];
        long[][] s = new long[2][n+1];
        SortedMap<Integer, Integer> sm = new TreeMap<Integer, Integer>();
        for(int i=0;i<n;i++) {
            v[0][i] = Integer.parseInt(q[i]);
            Integer x = sm.get(v[0][i]);
            if(x == null) {
                x = 1;
            } else {
                x++;
            }
            sm.put(v[0][i], x);
        }
        int idx = 0;
        for(Map.Entry<Integer, Integer> e: sm.entrySet()) {
            int single = e.getKey();
            int cnt = e.getValue();
            for(int i=0;i<cnt;i++) {
                v[1][idx++] = single;
            }
        }
        /*v[1] = Arrays.copyOf(v[0], v[0].length);
        Arrays.sort(v[1]);*/

        for(int k=0;k<2;k++) {
            for(int i=0;i<n;i++) {
                s[k][i+1] = s[k][i] + v[k][i];
            }
        }

        h = rd.readLine();
        int m = Integer.parseInt(h);
        for(int j=0;j<m;j++) {
            h = rd.readLine();
            q = h.split("\\s+");
            int t = Integer.parseInt(q[0]);
            int a = Integer.parseInt(q[1]);
            int b = Integer.parseInt(q[2]);
            out(s[t-1][b] - s[t-1][a-1]);
        }
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new KuriyamaMirai2();
    }
}
