#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}


int main()
{
	int n;
	cin >> n;
	vector<int> pilesize (n);
	forn(i,n)
		cin >> pilesize[i];
	vector<int> label (n);
	label[0] = pilesize[0];
	forsn(i,1,n)
		label[i] = label[i-1] + pilesize[i];
	int m;
	cin >> m;
	forn(i,m)
	{
		int worm;
		cin >> worm;
		if (worm <= label[0])
			cout << 1 << endl;
		else
		{
			int a = 0;
			int b = n-1;
			int c = (a+b)/2;
			while (b - a > 1)
			{
				c = (a+b)/2;
				if (worm <= label[c])
					b = c;
				else
					a = c;
			}
			cout << b+1 << endl;
		}
	}
	return 0;
}
