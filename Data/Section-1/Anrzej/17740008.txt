#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 5e5 + 10, l = 20;

int gcd(int a, int b) {
	return b ? gcd(b, a % b) : a;
}

ll a[N], b[N], n, m, p;
string s, c;

ll _l[N], _r[N];

stack<int> st;

int main()
{
	cin >> n >> m >> p;
	cin >> s >> c;

	for (int i = 0; i < s.length(); i++){
		_l[i] = i - 1, _r[i] = i + 1;
		char ch = s[i];
		if (ch == '(')
			st.push(i);
		else{
			int f = st.top();
			st.pop();
			a[f] = i, a[i] = f;
		}
	}

	int cur = p-1;
	for (int i = 0; i < c.length(); i++)
	{
		char ch = c[i];
		if (ch == 'L')
		{
			cur = _l[cur];
		}
		if (ch == 'R')
		{
			cur = _r[cur];
		}
		if (ch == 'D')
		{
			int l = cur, r = a[cur];
			if (l > r)
				swap(l, r);
			for (int j = l; j <= r; j++)
			{
				//update_max(1, 0, n - 1, j, -1);
				//update_min(1, 0, n - 1, j, 1e9);
				a[j] = -1;
			}
			_r[l - 1] = _r[r];
			_l[r + 1] = _l[l];
			int _cur = _r[r];
			if (a[_cur] == -1)
				cur = _l[l - 1];
			else cur = _cur;
		}
	}
	for (int i = 0; i < s.length(); i++)
	{
		if (a[i] != -1)
			cout << s[i];
	}
	return 0;
}