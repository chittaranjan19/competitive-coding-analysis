
#include <cstdio>
#include <cstdlib>
#include <string>
#include <vector>
#include <set>
#include <algorithm>
#include <iomanip>
#include <map>
#include <cmath>
#include <queue>
using namespace std;

typedef long long ll;
int cmp(double, double);
#if _DEBUG 
#include <fstream>
ifstream cin("input.txt");
ofstream cout("output.txt");
#else
#include <iostream>
#endif

vector < vector <int> > vv;

vector < set <int> > ss;

int cnt[30];


int main() {
	int n;
	cin >> n;
	vv.resize(30);
	ss.resize(30);
	string s, t;
	cin >> s >> t;
	for (int i = 0; i < s.size(); i++) {
		if (s[i] != t[i])
			cnt[s[i] - 'a']++;
		if (s[i] != t[i]) {
			vv[s[i] - 'a'].push_back(t[i] - 'a');
			ss[s[i] - 'a'].insert(t[i] - 'a');
		}
	}
	bool good = false;
	int from, to;
	for (int i = 0; i < 30; i++) {
		for (int j = 0; j < vv[i].size(); j++) {
			from = i;
			to = vv[i][j];
			if (ss[to].find(from) != ss[to].end()) {
				good = true;
				break;
			}
		}
		if (good)
			break;
	}
	int f1 = -1, f2 = -1;
	if (good) {
		for (int i = 0; i < s.size(); i++) {
			if (s[i] == t[i]) continue;
			if (f1 == -1 && s[i] - 'a' == from && t[i] - 'a' == to) {
				s[i] = t[i];
				f1 = i;
			}
			if (f2 == -1 && s[i] - 'a' == to && t[i] - 'a' == from) {
				s[i] = t[i];
				f2 = i;
			}
		}
		int ans = 0;
		for (int i = 0; i < s.size(); i++)
			if (s[i] != t[i])
				ans++;
		cout << ans << '\n';
		cout << f1 + 1 << ' ' << f2 + 1;
		return 0;
	}
	good = false;
	f1 = -1;
	f2 = -1;
	for (int i = 0; i < s.size(); i++) {
		if (s[i] == t[i]) continue;
		if (cnt[t[i] - 'a'] > 0) {
			for (int j = 0; j < s.size(); j++) {
				if (s[j] == t[j]) continue;
				if (i == j) continue;
				if (s[j] == t[i]) {
					swap(s[i], s[j]);
					int ans = 0;
					for (int k = 0; k < s.size(); k++)
						if (s[k] != t[k])
							ans++;
					cout << ans << '\n' << i + 1 << ' ' << j + 1;
					return 0;
				}
			}
		}
	}
	int ans = 0;
	for (int i = 0; i < s.size(); i++){
		if (s[i] != t[i])
			ans++;
	}
	cout << ans << '\n' << -1 << ' ' << -1;
	return 0;
}