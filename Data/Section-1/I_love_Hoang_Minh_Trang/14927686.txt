#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 + 1;
const int INF = 1e9 + 7;

using namespace std;
int n, m, k;
struct data{
    int l, r, c;
    bool operator<(const data &op) const
    {
        if (l != op.l) return l < op.r;
        else if (r != op.r) return r < op.r;
        else return c < op.c;
    }
} a[MAXN];
long long f[301][301];
void mmin(long long &a, long long b)
{
    if (a > b) a = b;
}
vector< int > v[301];
int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("313D.inp", "r", stdin);
    freopen("313D.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n >> m >> k;
    FORE(i, 1, m) cin >> a[i].l >> a[i].r >> a[i].c;
    sort(a + 1, a + m + 1);
    FORE(i, 1, m) v[a[i].r].push_back(i);
    FORE(i, 0, 300) FORE(j, 0, 300) f[i][j] = 123456789123456LL;
    f[0][0] = 0;
    long long ans = 123456789123456LL;
    //FORE(i, 1, m) cout << a[i].l << " "<<a[i].r<<" "<<a[i].c<<endl;
    FORE(i, 1, n) FORE(len, 0, n){
        mmin(f[i][len], f[i - 1][len]);
        FOR(j, 0, v[i].size()){
            int pos = v[i][j];
            int l = a[pos].l, r = a[pos].r, w = a[pos].c;
            //
            //if (len < (r - l + 1)) continue;
            //if (i == 3 && len == 2) cout << l<<" "<<r<<"? "<<w<<"??"<<f[l - 1][len - (r - l + 1)]<<endl;
            if (len >= (r - l + 1)) mmin(f[i][len], f[l - 1][len - (r - l + 1)] + w);
            FORE(h, l, i - 1) if (len >= (i - h)) mmin(f[i][len], f[h][len - (i - h)] + w);
            //if (i == 3 && len == 2) cout << l<<" "<<r<<"? "<<w<<"??"<<f[i][len]<<endl;
        }
        if (len >= k) mmin(ans, f[i][len]);
    }
    //cout << f[8][7]<<endl;
    cout << (ans == 123456789123456LL ? -1 : ans);
    return 0;
}

