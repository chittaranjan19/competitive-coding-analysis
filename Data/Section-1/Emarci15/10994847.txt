#include <iostream>
#include <map>

using namespace std;

long long n;

bool jo[8192];
long long ert[8192];
long long legn[8192];
long long div[8192];
int divv;

map<long long,int> h;

bool primefact(long long x) {
    if(x<=1) return 0;
    for(long long i=2; i*i<=x; i++) {
        if(!(x%i)) {
            while(!(x%i)) {
                x /= i;
            }
            return (x==1);
        }
    }

    return 1;
}

int main()
{
    cin >> n;

    if(n==1) {
        cout << 1 << endl;
        return 0;
    }

    long long i;
    for(i=1; i*i<=n; i++) {
        if(!(n%i)) {
            div[divv] = i;
            h[i] = divv++;
        }
        if(i*i == n) break;
    }
    for(i--; i>=1; i--) {
        if(!(n%i)) {
            div[divv] = n/i;
            h[n/i] = divv++;
        }
    }

    for(int i=0; i<divv; i++) {
        jo[i] = primefact(div[i]-1);
    }

    for(int i=1; i<divv; i++) {
        ert[i] = jo[i];
        if(jo[i]) legn[i] = div[i];
        cerr << div[i] << ": " << endl;
        cerr << " " << jo[i] << endl;
        for(int j=0; j<i; j++) {
            if(div[i]%div[j]) continue;
            if(legn[h[div[i]/div[j]]] >= div[j]) continue;
            if(jo[j]) {
                cerr << " " << div[i]/div[j] << " -> " << ert[h[div[i]/div[j]]] << endl;
                ert[i] += ert[h[div[i]/div[j]]];
                legn[i] = max(legn[i],div[j]);
            }
        }
        cerr << ert[i] << ", " << legn[i] << endl;
    }

    cout << ert[divv-1] << endl;

    return 0;
}
