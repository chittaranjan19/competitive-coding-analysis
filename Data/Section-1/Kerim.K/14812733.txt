#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int x,n,k,l,lgN;
int P[MAXN][27],M[MAXN][27],arr[MAXN],s[MAXN*4],dp[MAXN];
void build(){
	for(int j=1;j<lgN;j++)
		for(int i=1;i<=n;i++)	
			if(i+(1<<j)-1<=n){
				P[i][j]=min(P[i][j-1],P[i+(1<<(j-1))][j-1]);
				M[i][j]=max(M[i][j-1],M[i+(1<<(j-1))][j-1]);
			}
}
int query1(int x,int y){
	int z=log2(y-x+1);
	return min(P[x][z],P[y-(1<<z)+1][z]);
}
int query2(int x,int y){
	int z=log2(y-x+1);
	return max(M[x][z],M[y-(1<<z)+1][z]);
}
int rec(int x,int y){	
	int last=y;
	while(x<y){
		int mid=(x+y)>>1;
		if(query2(mid,last)-query1(mid,last)<=k)
			y=mid;
		else
			x=mid+1;	
	}
	return x;
}
int tap(int l,int r,int nd,int x,int y){
	if(l>r)
		return INF;
	if(l==0)
		return 0;	
	if(l>y or x>r)
		return INF;
	if(l<=x and y<=r)
		return s[nd];
	int mid=(x+y)>>1;
	return min(tap(l,r,nd*2,x,mid),tap(l,r,nd*2+1,mid+1,y));	
}
void upd(int v,int p,int nd,int x,int y){
	if(x==y and x==p){
		s[nd]=v;
		return;	
	}
	int mid=(x+y)>>1;
	if(p<=mid)
		upd(v,p,nd*2,x,mid);
	else
		upd(v,p,nd*2+1,mid+1,y);
	s[nd]=min(s[nd*2],s[nd*2+1]);		
}
int main(){
	cin>>n>>k>>l;
	lgN=log2(n)+1;
	for(int i=1;i<=n;i++){
		scanf("%d",&x);
		P[i][0]=M[i][0]=x;
	}
	build();
	for(int i=1;i<=n;i++)
		arr[i]=rec(1,i);
	for(int i=1;i<=n;i++){
		dp[i]=tap(arr[i]-1,i-l,1,1,n)+1;
		upd(dp[i],i,1,1,n);
	}
	if(dp[n]>INF)
		cout<<"-1"<<endl;
	else
		cout<<dp[n]<<endl;	
	return 0;
}

