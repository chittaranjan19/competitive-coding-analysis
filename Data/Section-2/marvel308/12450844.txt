#include<stdio.h>
#include<queue>
#include<vector>
#include<algorithm>
using namespace std;
typedef long long int ll;
ll prime[10000005]={0},pal[10000005]={0};
int main()
{
    ll i,j;
    queue<ll> q;
    vector<ll> G;
    for(i=1;i<=9;i++)
    {
        q.push(i);
        q.push(i*10+i);
    }
    G.push_back(0);
    ll x=100;
    for(ll len=1;len<=7;len++)
    {
        for(i=1;i<=9;i++)
        {
            if(x*i + i <=10000000)
                q.push(x*i+i);
        }
        x*=10;
    }
    //printf("si=%d\n",G.size());
    for(i=2;i<=1000000;i++)
    {
        if(prime[i]==0)
        {
            //count++;
            for(j=i;i*j<=10000000;j++)
            {
                prime[i*j]=1;
            }
        }
    }
    while(!q.empty())
    {
        ll u=q.front();
        q.pop();
        ll temp=u,len=10;
        while(temp>0)
        {
            len*=10;
            temp/=10;
        }
        G.push_back(u);
        for(i=1;i<=9;i++)
        {
            if(i*len + u*10 +i<=10000000)
            {
                q.push(i*len + u*10 +i);
            }
        }
    }
    sort(G.begin(),G.end());
    for(i=0;i<G.size();i++)
    {
        pal[G[i]]=1;
    }
    ll p,q1,count1=0,count2=0,ans=0;
    scanf("%I64d%I64d",&p,&q1);
    for(i=1;i<=10000000;i++)
    {
        if(prime[i]==0 && i>=2)
        {
            count1++;
        }
        if(pal[i])
        {
            count2++;
        }
        if(q1*count1<=p*count2)
        {
            ans=i;
            //break;
        }
    }
    if(ans)
        printf("%I64d\n",ans);
    else
        printf("Palindromic tree is better than splay tree\n");
    return 0;
}
