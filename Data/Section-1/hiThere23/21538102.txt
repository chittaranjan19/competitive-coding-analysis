#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 200005
#define maxC 1000000007
#define pb push_back
#define F first
#define S second
#define mp make_pair

using namespace std;
int n, m, con[mn], adap[mn];
bool mark[mn];
vector< pair<int, int> > com;
vector< pair<int, pair<int, int> > > all;

void setup()
{
    cin >> n >> m;
    int a;
    FOR(i, 1, n)
    {
        cin >> a;
        com.pb(mp(a, i));
    }
    FOR(i, 1, m)
    {
        cin >> a;
        int dem = 0;
        while(a != 1)
        {
            all.pb(mp(a, mp(dem, i)));
            a = (a + 1) >> 1;
            dem ++;
        }
        all.pb(mp(1, mp(dem, i)));
    }
}

void xuly()
{
    sort(com.begin(), com.end());
    sort(all.begin(), all.end());
    int r = all.size() - 1, able = 0, need = 0;
    FORD(i, n - 1, 0)
    {
        if (r < 0)
            break;
        while(r >= 0 && (all[r].F > com[i].F || mark[all[r].S.S]))
            r --;
        if (r < 0)
            break;
        if (all[r].F == com[i].F)
        {
            able ++;
            need += all[r].S.F;
            adap[all[r].S.S] = all[r].S.F;
            con[com[i].S] = all[r].S.S;
            mark[all[r].S.S] = true;
            r --;
        }
    }
    cout << able << ' ' << need << '\n';
    FOR(i, 1, m)
        cout << adap[i] << ' ';
    cout << '\n';
    FOR(i, 1, n)
        cout << con[i] << ' ';
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
