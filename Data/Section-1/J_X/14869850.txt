#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const int MAXN = 2000 + 5;
const int INF = 1 << 29;

double dp[MAXN][MAXN][2][2], p, q;
bool vis[MAXN][MAXN][2][2];
int a[MAXN], dl[MAXN], dr[MAXN], h;

double dfs(int l, int r, int f1, int f2)
{
    if(l > r) return 0;
    if(vis[l][r][f1][f2]) return dp[l][r][f1][f2];
    vis[l][r][f1][f2] = true;
    double ret = 0;
    ret += 0.5 * p * (min(h, a[l] - a[l - 1] - h * f1) + dfs(l + 1, r, 0, f2));
    ret += 0.5 * q * (min(h, a[r + 1] - a[r] - h * !f2) + dfs(l, r - 1, f1, 1));
    int L = dl[r], R = dr[l];
    ret += 0.5 * q * (R >= r ? 0.0 + min(h, a[r + 1] - a[r] - h * !f2) + a[r] - a[l] : dfs(R + 1, r, 1, f2) + h + a[R] - a[l]);
    ret += 0.5 * p * (L <= l ? 0.0 + min(h, a[l] - a[l - 1] - h * f1) + a[r] - a[l] : dfs(l, L - 1, f1, 0) + h + a[r] - a[L]);
    return dp[l][r][f1][f2] = ret;
}

int main()
{
    int n;
    while(~scanf("%d%d%lf", &n, &h, &p))
    {
        q = 1 - p;
        memset(vis, 0, sizeof(vis));
        a[0] = -INF, a[n + 1] = INF;
        for(int i = 1; i <= n; ++i)
        {
            scanf("%d", a + i);
        }
        sort(a, a + n + 2);
        dl[0] = 0;
        for(int i = 1; i <= n + 1; ++i)
        {
            dl[i] = a[i] - a[i - 1] < h ? dl[i - 1] : i;
        }
        dr[n + 1] = n + 1;
        for(int i = n; i >= 0; --i)
        {
            dr[i] = a[i + 1] - a[i] < h ? dr[i + 1] : i;
        }
        printf("%.10f\n", dfs(1, n, 0, 1));
    }
    return 0;
}
