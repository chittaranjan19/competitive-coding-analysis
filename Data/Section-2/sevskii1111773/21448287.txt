using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;

namespace SevskiiOlymp
{
    class Program
    {
        static void Main(string[] args)
        {
            string s = Console.ReadLine();
            int a = int.Parse(s.Split(' ')[0]);
            int b = int.Parse(s.Split(' ')[1]);
            List<int> l = check(a, b, new List<int>());
            if (l.Count > 0)
            {
                Console.WriteLine("YES");
                Console.WriteLine(l.Count + 1);
                Console.Write(a+ " ");
                for (int i = l.Count-1; i >= 0; i--)
                    Console.Write(l[i] + " ");
            }
            else
                Console.WriteLine("NO");
            Console.WriteLine();
            Console.ReadLine();
        }
        static public List<int> check(int a,int b,List<int> i)
        {
            try
            {
                if (b < a)
                    return new List<int>();
                if (b == a)
                    return i;
                int r1 = -1, r2 = -1;
                i.Add(b);
                if (b % 2 == 0)
                {
                    List<int> t = check(a, b / 2, i);
                    r1 = t[t.Count - 1];
                }
                if (b % 10 == 1)
                {
                    List<int> t = check(a, b / 10, i);
                    r2 = t[t.Count - 1];
                }
                if (r1 != -1)
                    return i;
                if (r2 != -1)
                    return i;
                return new List<int>();
            }
            catch (Exception)
            {
                return new List<int>();
            }
        }
        public void tmp()
        {
            List<string> prices = new List<string>();
            string s = Console.ReadLine();
            foreach (Match m in Regex.Matches(s, @"[^\d]+([^a-z]+)"))
            {
                prices.Add(m.Groups[1].Value);
            }
            int result = 0;

            foreach (string p in prices)
            {
                if (Regex.IsMatch(p, @"\.\d\d$"))
                {
                    result += int.Parse((p.Substring(0, p.Length - 3).Replace(".", ""))) * 100 + int.Parse(p.Substring(p.Length - 2, 2));
                }
                else
                {
                    result += int.Parse((p.Replace(".", ""))) * 100;
                }
            }
            string resultStr = result.ToString();
            if (resultStr.Length == 1)
                resultStr = "00" + resultStr;
            if (resultStr.Length == 2)
                resultStr = "0" + resultStr;

            if (result % 100 == 0)
            {
                for (int i = 0; i < resultStr.Length - 2; i++)
                {
                    Console.Write(resultStr[i]);
                    if ((resultStr.Length - i) % 3 == 0 && i != resultStr.Length - 3)
                        Console.Write(".");
                }
            }
            else
            {
                for (int i = 0; i < resultStr.Length - 2; i++)
                {
                    Console.Write(resultStr[i]);
                    if ((resultStr.Length - i - 3) % 3 == 0 && i != resultStr.Length - 3)
                        Console.Write(".");
                }
                Console.Write("." + resultStr.Substring(resultStr.Length - 2, 2));
            }
            Console.ReadLine();
        }
    }
}
