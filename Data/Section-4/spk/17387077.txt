#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>

using namespace std;

void scan(int &x); //IMPORTANT: for positive only

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define MOD 1000000007

vector<int> edge[100002];
bool visited[100002],inc[100002]={false},out[100002]={false};
long tmin,cost[100002],nowa;

void dfs(int s)
{
    visited[s] = true;

    for(int i=0;i<edge[s].size();i++)
    {
        if(!visited[edge[s][i]])
        {
            //cout << "now : "  << edge[s][i]+1 << endl;
            if(cost[edge[s][i]]<tmin)
            {
              //  cout << "   passed: " << edge[s][i] << " and " << cost[edge[s][i]] << endl;
                nowa = 1;
                tmin = cost[edge[s][i]];
            }
            else if(cost[edge[s][i]]==tmin)
            {
               // cout << "   passed1: " << edge[s][i] << endl;
                nowa++;
            }
            dfs(edge[s][i]);
        }
    }
}

int main(void)
{
  int n,m,x,y;
  long long totw = 1,totc=0;
  cin >> n;


  for(int i=0;i<n;i++)
  {
      scanf("%ld",&cost[i]);
  }
  cin >>m;


  for(int i=0;i<m;i++)
  {
      scan(x);
      scan(y);
      x--;
      y--;
      edge[x].pb(y);
      inc[y] = true;
      out[x] = true;
  }

  for(int i=0;i<n;i++)
  {
      if(inc[i] && out[x])
      {
        if(!visited[i])
         {
         // cout << "from: " << i+1 << endl;
          tmin = cost[i];
          nowa = 1;
          dfs(i);
         // cout << "cost: " << tmin << " " << "no way" << nowa << endl;
          totw = (totw*nowa)%MOD;
          totc += tmin;
         }
      }
   }

   for(int i=0;i<n;i++)
   {
       if(!inc[i] || !out[i])
         totc+= cost[i];
   }

  cout << totc << " " << totw;
  return 0;
}













void scan(int &x)
{
    register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}

   /* register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x; */
}
