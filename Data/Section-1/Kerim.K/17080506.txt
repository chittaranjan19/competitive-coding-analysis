#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
char arr[2009][2009],ans[2009][2009];
int vis[2009][2009],n,m;
int ok(int x,int y){
	if(x<1 or y<1 or x>n or y>m)
		return 0;
	return 1;	
}
int dx[]={+1,-1,0,0,-1,+1,-1,+1};
int dy[]={0,0,+1,-1,-1,-1,+1,+1};
int blok(int x,int y,int xx,int yy){
	int dot=0,aster=0;
	for(int i=min(x,xx);i<=max(x,xx);i++)
		for(int j=min(y,yy);j<=max(y,yy);j++)
			(arr[i][j]=='.'?dot++:aster++);
	return (dot==3 and aster==1);		
}
PII tap(int x,int y,int xx,int yy){
	for(int i=min(x,xx);i<=max(x,xx);i++)
		for(int j=min(y,yy);j<=max(y,yy);j++)
			if(arr[i][j]=='*')
				return mp(i,j);
}
int main(){
	queue<PII>q;
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			scanf(" %c",&arr[i][j]);
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++){
			if(arr[i][j]=='*'){
				for(int k=4;k<8;k++){
					int nx=i+dx[k],ny=j+dy[k];
					if(ok(nx,ny) and blok(nx,ny,i,j)){
						q.push(mp(i,j));
						break;
					}
				}
			}
		}
	while(!q.empty()){
		int nx=q.front().ff,ny=q.front().ss;
		//cout<<nx<<" "<<ny<<endl;
		q.pop();
		if(arr[nx][ny]=='.')
			continue;
		arr[nx][ny]='.';
		vector<PII>v;
		for(int k=4;k<8;k++){
			int zx=nx+dx[k],zy=ny+dy[k];
			if(ok(zx,zy) and blok(zx,zy,nx,ny))
				q.push(tap(zx,zy,nx,ny));
		}
	}
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++)
			printf("%c",arr[i][j]);
		printf("\n");
	}
	return 0;
}
/*
5 3
.**
*.*
**.
..*
*..
*/