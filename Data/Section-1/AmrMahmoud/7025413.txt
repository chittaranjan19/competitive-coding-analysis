#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair

using namespace std;

bool visited[50];

LL res = 1;

vector<vector<int> > graph(55);

void dfs(int node,int level)
{
    if(visited[node])
        return;
    visited[node] = true;
    if(level)
        res *= 2;
    for(int i=0;i<graph[node].size();i++)
        dfs(graph[node][i],level+1);
}

int main()
{
    int n,m,x,y;
    cin >> n >> m;
    for(int i=0;i<m;i++)
    {
        cin >> x >> y;
        graph[x].pb(y);
        graph[y].pb(x);
    }
    for(int i=1;i<=n;i++)
        if(!visited[i])
            dfs(i,0);
    cout << res;
    return 0;
}