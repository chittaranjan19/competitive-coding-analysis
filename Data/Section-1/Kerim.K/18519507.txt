#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"--------------"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
char s[MAXN];
int four[MAXN],seven[MAXN];
void go(int x){
	for(int i=1;i<=x;i++)
		printf("4");
	for(int i=1;i<=x;i++)
		printf("7");
	printf("\n");
	exit(0);
}
int ok(int x){
	int fir=0,sec=0;
	for(int i=1;i<=x;i++){
		if(s[i]=='4')
			fir++;
		else
			sec++;	
	}
	return (fir==sec);
}
int main(){
	scanf("%s",s+1);
	int n=strlen(s+1);
	if(n&1)
		go((n+1)/2);
	int st=n;	
	for(int i=1;i<=n;i++)
		if(s[i]!='4' and s[i]!='7'){
			st=i-1;
			break;
		}
	for(int i=1;i<=n;i++){
		four[i]=four[i-1]+(s[i]=='4');
		seven[i]=seven[i-1]+(s[i]=='7');
	}
	if(st==n and ok(n)){
		for(int i=1;i<=n;i++)
			printf("%c",s[i]);
		printf("\n");	
		return 0;
	}
	for(int i=st;i>=0;i--){
		int dort=four[i];
		int yedi=seven[i];
		int galan=n-i-1,d=0;
		if(s[i+1]>='7')
			continue;
		else if(s[i+1]<'4' and dort+1<=yedi+galan)
			dort++,d=1;
		else
			yedi++,d=2;
		while(galan){
			if(dort==yedi)
				break;
			if(dort<yedi){
				int val=min(yedi-dort,galan);
				dort+=val;
				galan-=val;	
			}
			else{
				int val=min(dort-yedi,galan);
				yedi+=val;
				galan-=val;
			}
		}
		if(yedi==dort){
			dort=yedi=n/2;
			for(int j=1;j<=i;j++)
				printf("%c",s[i]);
			dort-=four[i];	
			yedi-=seven[i];
			if(d==1)
				printf("4"),dort--;
			else
				printf("7"),yedi--;	
			for(int j=i+2;j<=n;j++){
				if(dort)
					printf("4"),dort--;
				else
					printf("7"),yedi--;			
			}
			printf("\n");
			exit(0);
		}
	}
	go(n/2+1);
	return 0;
}
