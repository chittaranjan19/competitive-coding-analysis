#include<iostream>
#include<algorithm>
#include<cstdlib>
#include<cstdio>
#include<queue>
using namespace std;
struct node
{
    int bt,tmm,dp,n;
    node* lsn;
    node* rsn;
    node* prt;
}rt={0};
void btfnd(int n)
{
    node *p=&rt;
    int tmpl,tmpr;
    while(p->dp!=30)
    {
        tmpl=-1;
        tmpr=-1;
        if(p->lsn!=NULL)
        {
            tmpl=((n>>(30-p->lsn->dp))&1);
            tmpl=tmpl^(p->lsn->bt);
        }
        if(p->rsn!=NULL)
        {
            tmpr=((n>>(30-p->rsn->dp))&1);
            tmpr=tmpr^(p->rsn->bt);
        }
        if(tmpl!=-1&&tmpr!=-1)
        {
            if(tmpl) p=p->lsn;
            if(tmpr) p=p->rsn;
        }else{
            if(tmpl!=-1) p=p->lsn;
            if(tmpr!=-1) p=p->rsn;
        }
    }
    printf("%d\n",p->n^n);
}
void btadd(int n)
{
    node* p=&rt;
    int bt=1<<29;
    while(bt)
    {
        if(bt&n)
        {
            if(p->rsn==NULL)
            {
                p->rsn=(node*)malloc(sizeof(node));
                p->rsn->bt=1;
                p->rsn->tmm=0;
                p->rsn->lsn=NULL;
                p->rsn->rsn=NULL;
                p->rsn->prt=p;
                p->rsn->dp=p->dp+1;
            }
            p=p->rsn;
        }else{
            if(p->lsn==NULL)
            {
                p->lsn=(node*)malloc(sizeof(node));
                p->lsn->bt=0;
                p->lsn->tmm=0;
                p->lsn->lsn=NULL;
                p->lsn->rsn=NULL;
                p->lsn->prt=p;
                p->lsn->dp=p->dp+1;
            }
            p=p->lsn;
        }
        bt>>=1;
    }
    p->tmm++;
    p->n=n;
}
void bters(int n)
{
    node* p=&rt;
    int bt=1<<29;
    while(bt)
    {
        if(bt&n)
        {
            if(p->rsn==NULL) return;
            p=p->rsn;
        }else{
            if(p->lsn==NULL) return;
            p=p->lsn;
        }
        bt>>=1;
    }
    if(p->tmm>1) p->tmm--;
    else{
        while(p->prt!=NULL)
        {
            if(p==p->prt->rsn)
            {
                p=p->prt;
                free(p->rsn);
                p->rsn=NULL;
                if(p->lsn!=NULL) break;
            }else{
                p=p->prt;
                free(p->lsn);
                p->lsn=NULL;
                if(p->rsn!=NULL) break;
            }
        }
    }       
}
int main()
{
    btadd(0);
    int q,n;
    char op;
    scanf("%d",&q);
    while(q--)
    {
        scanf("%c",&op);
        scanf("%c %d",&op,&n);
        if(op=='?') btfnd(n);
        else if(op=='+') btadd(n);
        else bters(n);
    }
    return 0;
}
