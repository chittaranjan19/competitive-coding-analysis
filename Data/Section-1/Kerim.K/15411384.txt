//Cok tavsanin pesinde kosan hicbrini yakalayamaz!
#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int dp[109][109];
string s,t,k,p,ans;
void lcs(int x,int y){
	if(x<1 or y<1)
		return;
	if(s[x-1]==t[y-1]){
		k+=s[x-1];
		lcs(x-1,y-1);
		return;
	}	
	if(dp[x-1][y]>dp[x][y-1])
		lcs(x-1,y);
	else
		lcs(x,y-1);	
}
int main(){
	cin>>s>>t>>p;
	for(int i=0;i<s.size();i++)
		for(int j=0;j<t.size();j++){
			if(s[i]==t[j])
				dp[i+1][j+1]=dp[i][j]+1;
			else
				dp[i+1][j+1]=max(dp[i][j+1],dp[i+1][j]);	
		}
	for(int i=min(s.size(),t.size());i>=1;i--){
		lcs(i,i);
		reverse(all(k));
		if(k.find(p)<k.size())
			continue;
		if(ans.size()<k.size())
			ans=k;	
		k="";	
	}
	if(ans.size()==0)
		cout<<0<<endl;
	else	
		cout<<ans<<endl;
	return 0;
}

