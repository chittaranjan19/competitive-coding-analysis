#include<bits/stdc++.h>
using namespace std;

#define gc getchar_unlocked
#define BLOCK 555
#define pb push_back
#define lli long long

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

const int lmt = 1000005;
int cnt[lmt];
int in[lmt];
lli res[lmt];
lli ans = 0;

struct node{
	int l,r,idx;
	node(int _l,int _r,int _idx){
		l = _l;
		r = _r;
		idx = _idx;
	}
};

vector<node> query;
bool cmp(node a,node b){
	if(a.l/BLOCK != b.l/BLOCK)
		return a.l/BLOCK < b.l/BLOCK;
	return a.r < b.r;
}

void add(int idx){
	lli tmp = (long long)cnt[in[idx]];
	ans -= tmp*tmp*(long long)in[idx];
	cnt[in[idx]]++;
	tmp = (long long)cnt[in[idx]];
	ans += tmp*tmp*(long long)in[idx];
}

void remove(int idx){
	lli tmp = (long long)cnt[in[idx]];
	ans -= tmp*tmp*(long long)in[idx];
	cnt[in[idx]]--;
	tmp = (long long)cnt[in[idx]];
	ans += tmp*tmp*(long long)in[idx];
}

int main(){
	int n,q,a,b;
	scanint(n);
	scanint(q);

	for(int i=0;i<n;i++)
		scanint(in[i]);

	for(int i=0;i<q;i++){
		scanint(a);
		scanint(b);
		query.pb(node(a-1,b-1,i));
	}
	sort(query.begin(),query.end(),cmp);
	
	int curl=0,curr=0;
	for(int i=0;i<query.size();i++){
		int l = query[i].l , r = query[i].r;
		while(curl<l){
			remove(curl);
			curl++;
		}
		while(curl>l){
			add(curl-1);
			curl--;
		}
		while(curr<=r){
			add(curr);
			curr++;
		}
		while(curr-1>r){
			remove(curr-1);
			curr--;
		}
		res[query[i].idx] = ans;
	}
	for(int i=0;i<q;i++) printf("%lld\n",res[i]);
	return 0;
}
