//~  Inshaallah
/*
ID: omarmuh1
PROG: test
LANG: C++
*/
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

#define ll long long
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define pp pop_back
#define pii pair<int ,int>
#define pll pair<ll , ll>
#define mid(x , y)	(x+y)/2
#define sz(x) int(x.size())
#define db		cout << "****" << endl;
#define all(x) 	x.begin() , x.end()
#define lgn 	19
#define N 		1009
#define INF 	1000000007
#define LLINF 	1000000000000000009
#define tr(i, c) for(__typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
#define Help_me  ios_base::sync_with_stdio(false);

typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> omar;

template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}

//~ freopen("test.out" , "r" , stdin);
//~ freopen("test.out" , "w",  stdout);

int a , b , c , d[11] , n , m , dp[N][11] , wp[N][11];
char s[11];

int f(int x , int y , int l , int r)
{
	if(x > n)	return 1;
	
	int &re = dp[x][y];
		
	if(re != -1)	return re; re = 0;
	
	for(int i = 1 ; i <= 10 ; i++)
		if(d[i] && i != y)
		{
			if(x % 2 && l+i <= r)	continue;
			if(!(x % 2) && l >= r+i)	continue;
			
			re |= f(x+1 , i , l+(x%2 ? i : 0) , r+(!(x%2) ? i : 0));
			
			if(re)
			{
				wp[x][y] = i;
				return re;
			}
		}
	
	return re;
}

int main()
{
	memset(dp , -1 , sizeof dp);
	scanf("%s" , s);
	
	for(int i = 1 ; i <= 10 ; i++)	d[i] = s[i-1] - '0';
	
	scanf("%d" , &n);
	
	if(f(1 , 0 , 0 , 0) < 1)	return puts("NO") , 0;
	
	puts("YES");
	
	a = 1 , b = 0;
	
	while(a <= n)
	{
		c = wp[a][b];
		
		printf("%d " , c);
		
		a++ , b = c;
	}
	puts("");
	
	return 0;
}
