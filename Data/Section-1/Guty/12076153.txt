#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}



int main()
{
	tint N = 1000000;
    vector<bool> A (N,true);
    vector<tint> M (N,0);
    vector<tint> primos;
    A[0] = false;
    A[1] = false;
    for(int i=2;i<N;i++)
    {
        if(A[i])
        {
			primos.push_back(i);   
            for(int j=2*i;j<N;j+=i)
                A[j]=false;
        }
    }
    vector<vector<tint> > ans;
    vector<tint> aux = {1,2,3,5}; 
    int ip = 3;
    forn(i,100)
    {
		ans.push_back(aux);
		int c = primos[ip];
		if (primos[ip+1] == c+2)
			ip++;
		aux = {c, c+1,c+2, primos[ip+1]};
		ip += 2;
	}
	int n,k;
	cin >> n >> k;
	cout << ans[n-1][3]*k << endl;
	forn(i,n)
	{
		forn(j,4)
			cout << ans[i][j]*k << " ";
		cout << endl;
	}
    return 0;
}
