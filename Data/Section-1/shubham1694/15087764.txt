#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define ll long long
#define f first
#define s second

typedef pair<int, int> pii;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 111;

char s1[maxn], s2[maxn], virus[maxn];
int dp[maxn][maxn][maxn], dir[maxn][maxn][maxn], n1, n2, n3;
int automata[maxn][30];
string out = "";

int solve(int c1, int c2, int c3)
{
    if(c3==n3)
        return -inf;
    if(c1==n1 || c2==n2)
        return 0;
    if(dp[c1][c2][c3]!=-1)
        return dp[c1][c2][c3];
    int ret = solve(c1+1, c2, c3), x;
    dir[c1][c2][c3] = 0;
    x = solve(c1, c2+1, c3);
    if(x > ret){
        ret = x;
        dir[c1][c2][c3] = 1;
    }
    if(s1[c1]==s2[c2]){
        x = 1 + solve(c1+1, c2+1, automata[c3][s1[c1]-'A']);
        if(x > ret){
            ret = x;
            dir[c1][c2][c3] = 2;
        }
    }
    return dp[c1][c2][c3] = ret;
}

void prn(int c1, int c2, int c3)
{
    if(c1>=n1 || c2>=n2 || c3>=n3)
        return;
    if(dir[c1][c2][c3]==0){
        prn(c1+1, c2, c3);
    }
    else if(dir[c1][c2][c3]==1){
        prn(c1, c2+1, c3);
    }
    else{
        out+=s1[c1];
        prn(c1+1, c2+1, automata[c3][s1[c1]-'A']);
    }
}

void pre()
{
    int i, j, lps=0;
    automata[0][virus[0]-'A'] = 1;
    for(i=1; i<n3; i++){
        for(j=0; j<26; j++)
            automata[i][j] = automata[lps][j];
        automata[i][virus[i]-'A'] = i+1;
        lps = automata[lps][virus[i]-'A'];
    }
}

int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    int i, j, k;
    memset(dp, -1, sizeof(dp));
    scanf("%s%s%s", s1, s2, virus);
    n1 = strlen(s1);
    n2 = strlen(s2);
    n3 = strlen(virus);
    pre();
    int ans = solve(0, 0, 0);
    if(ans<=0)
        printf("0\n");
    else{
    //  printf("%d\n", ans);
        prn(0, 0, 0);
        cout << out << "\n";
    }
    /*for(i=0; i<n1; i++){
        for(j=0; j<n2; j++){
            for(k=0; k<n3; k++)
                cout << dp[i][j][k] << " ";
            cout << "\n";
        }
        cout << "\n\n";
    }
    prn(0, 0, 0);
    cout << out << "\n";*/
    return 0;
}
