// Cut Ribbon

#include<iostream>
using namespace std;

int a,b,c;
int mem[4001]={0};
int ans=0;

int recurse(int n)
{
	int max=0,flag1=0,flag2=0,flag3=0;
	if(n==0) return 1;
	if(n<0) return 0;
	if(n>=a && mem[n-a]==0) {flag1=1; mem[n-a]=recurse(n-a);}
	if(n>=b && mem[n-b]==0) {flag2=1; mem[n-b]=recurse(n-b);}
	if(n>=c && mem[n-c]==0) {flag3=1; mem[n-c]=recurse(n-c);}
	if(flag1==1) max=mem[n-a];
	if(flag2==1 && mem[n-b]>max) max=mem[n-b];
	if(flag3==1 && mem[n-c]>max) max=mem[n-c];
	ans+=max;
	return max;
}

int main()
{
	int n,x,temp;
	cin>>n>>a>>b>>c;
	if(a>b) {temp=a; a=b; b=temp;}
	if(a>c) {temp=a; a=c; c=temp;}
	if(b>c) {temp=b; b=c; c=temp;}
	x=recurse(n);
	cout<<ans<<endl;
	return 0;
}