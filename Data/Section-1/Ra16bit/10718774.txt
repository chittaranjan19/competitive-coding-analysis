#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
typedef pair<int,int> pii;
int n,i;
vector<int> b,r;
pair<pii,int> a[200200];
bool ok[200200];
bool cross(pii x, pii y, pii z) {
  /*long long xap=x.first-y.first,xaq=y.first*x.first;
  long long yap=x.second-y.second,yaq=y.second*x.second;
  long long xbp=y.first-z.first,xbq=y.first*z.first;
  long long ybp=y.second-z.second,ybq=y.second*z.second;*/
  long long xap=-x.first+y.first,xaq=1;
  long long yap=-x.second+y.second,yaq=1;
  long long xbp=-y.first+z.first,xbq=1;
  long long ybp=-y.second+z.second,ybq=1;
  //printf("%d %d %d %d\n",int(xap),int(yap),int(xaq),int(yaq));
  //printf("%d %d %d %d\n",int(xbp),int(ybp),int(xbq),int(ybq));
  long long fip=xap*ybp,fiq=xaq*ybq;
  long long lap=xbp*yap,laq=xbq*yaq;
  //printf("%d %d %d %d\n",int(fip),int(lap),int(fiq),int(laq));
  return fip*laq>lap*fiq;
}
int main() {
  scanf("%d",&n);
  for (i=0; i<n; i++) {
    scanf("%d%d",&a[i].first.first,&a[i].first.second);
    a[i].second=i;
  }
  sort(a,a+n);
  //reverse(a,a+n);
  b.push_back(0);
  for (i=1; i<n; i++) {
    while (b.size()>0 && a[b.back()].first.second<=a[i].first.second) b.pop_back();
    //printf("%d %d\n",a[i].first,a[i].second);
    while (b.size()>1 && cross(a[int(b.size())-2].first,a[b.back()].first,a[i].first)) b.pop_back();
    b.push_back(i);
  }
  //for (i=0; i<b.size(); i++) printf("%d,",b[i]); puts("");
  for (i=0; i<b.size(); i++) ok[b[i]]=true;
  for (i=0; i<n; i++) {
    if (i+1<n && a[i].first==a[i+1].first && ok[i+1]) ok[i]=true;
    if (ok[i]) r.push_back(a[i].second);
  }
  sort(r.begin(),r.end());
  for (i=0; i<r.size(); i++) printf("%d%c",r[i]+1,(i+1==r.size())?'\n':' ');
  return 0;
}
