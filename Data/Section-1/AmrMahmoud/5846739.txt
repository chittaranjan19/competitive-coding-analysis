#include <stdio.h>
#include <stdlib.h>

void quicksort(int x[],int first,int last){
    int pivot,j,temp,i;

     if(first<last){
         pivot=first;
         i=first;
         j=last;

         while(i<j){
             while(x[i]<=x[pivot]&&i<last)
                 i++;
             while(x[j]>x[pivot])
                 j--;
             if(i<j){
                 temp=x[i];
                  x[i]=x[j];
                  x[j]=temp;
             }
         }

         temp=x[pivot];
         x[pivot]=x[j];
         x[j]=temp;
         quicksort(x,first,j-1);
         quicksort(x,j+1,last);

    }
}

int binSearch(int target, int first, int last,int a[])
{ int location = -1;
if (first <= last)
    { int mid = (first + last)/2;
if (target == a[mid]) location = mid; else if (target < a[mid])
    location = binSearch(target, first, mid - 1,a);
else location = binSearch(target, mid + 1, last,a);
} return location;
}

int main()
{
    int m,n,i;
    scanf("%d",&n);
    scanf("%d",&m);
    int arr[n];
    int arr2[m];
    for(i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);
    }
    for(i=0;i<m;i++)
    {
        scanf("%d",&arr2[i]);
    }
    quicksort(arr,0,n-1);
    quicksort(arr2,0,m-1);
    int flag,flag2=0,count=0;
    for(i=0;i<n;i++)
    {
        flag=binSearch(arr[i],0,m,arr2);
        if(flag!=-1)
        {
            arr[i]=-1;
            arr2[flag]=-1;
        }
        else flag2=1;
    }
    int k,seflag=0;
    if(flag2!=0)
    {
       for(i=0;i<n;i++)
       {
           if(arr[i]!=-1)
           {
               seflag=0;
               for(k=0;k<m;k++)
               {
                   if(arr2[k]>arr[i] && arr2[k]!=-1)
                   {
                       arr2[k]=-1;
                       arr[i]=-1;
                       seflag=1;
                       break;
                   }
               }
               if(seflag==0)
               {
                   count++;
               }
           }
       }
    }
    printf("%d",count);
    return 0;
}
