#include <algorithm>
#include <cstdio>
#include <vector>   

#define f first
#define s second

using namespace std;

const int MAX_N = 1e4 + 179;
int n;
pair<int,int> s[MAX_N], r[MAX_N];
vector<int> result;

int main() {
    scanf("%d\n", &n);
    for (int i = 1, S, R; i <= n; ++i) {
        scanf("%d %d\n", &S, &R);
        s[R] = max(s[R], {S, i});
    }
    for (int i = 1, S, R; i <= n; ++i) {
        scanf("%d %d\n", &S, &R);
        s[R] = max(s[R], {S, i});
    }
    for (int i = 1; i < MAX_N; ++i) {
        r[s[i].f] = max(r[s[i].f], {i, s[i].s});
    }
    result.reserve(n);
    for (int i = 1; i < MAX_N; ++i) {
        if (r[i].f) {
            result.push_back(r[i].s);
        }
    }
    stable_sort(result.begin(), result.end());
    for (int &x: result) {
        printf("%d ", x);
    }
    printf("\n");
    return 0;
}