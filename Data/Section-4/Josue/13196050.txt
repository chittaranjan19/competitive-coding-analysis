#include <cstdio>
#include <iostream>
#include <vector>
#include <map>
#include <algorithm>

using namespace std;

map<int, long long int> v;

int main(){
    int n, d, m, x, pos; long long int M, f;
    map<int, long long int>::iterator it, it1, it2, itx;
    scanf("%d %d", &n, &d);

    for(int i=1; i<=n; i++){
        cin>>m>>f;
        it = v.find(m);
        if( it == v.end() ) v[m] = f;
        else v[m] += f;
    }
    it1 = v.begin(); it1++;
    for( it=it1; it != v.end(); it++)
    { itx = it; itx--; (*it).second += (*itx).second; }
    it = v.begin();
    M = (*it).second;
    
    bool flag;
    
    if( v.size()>1 ) flag = true; else flag = false;
    itx = v.begin();
    //itx++;
    while( flag ) {
        //cout<<"01"<<endl;
        it = v.upper_bound( (*itx).first + d - 1 );
        it1 = it; it1--;
        if ( itx == v.begin() ){
            M = (*it1).second;
            if( it == v.end() ) flag = false;
        }else {
            it2 = itx; it2--;
            //cout<<"02"<<endl;
            if( it1 == itx ){
                M = max(M, (*itx).second - (*it2).second);
                if( it == v.end() ) flag = false;
            } else{
                if( it == v.end() ) flag = false;
                M = max( M, (*it1).second - (*it2).second );
            }
        }
        itx++;
        //cout<<"03"<<endl;

    }
    cout<<M<<endl;

    return 0;
}
