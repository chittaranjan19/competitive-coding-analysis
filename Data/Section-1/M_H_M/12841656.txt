#include <bits/stdc++.h>

#define SZ(x) ((ll)x.size() )
#define X first
#define Y second
#define PB push_back
#define MP make_pair

using namespace std;
typedef long long ll;
typedef pair<ll, ll> pii;
const ll N = 1e6 + 100;
const ll SQ = 350;

ll n, t;
ll a[N];
ll cnt[N];
pair<pii, ll> q[N];
ll ans[N];

bool cmp(pair<pii, ll> a, pair<pii, ll> b){
	if(a.X.X / SQ == b.X.X / SQ)
		return (a.X.Y < b.X.Y);
	return (a.X.X < b.X.X);
}

void add(ll p, ll val){
	cnt[p] += val;
}

ll get(ll p){
	return cnt[p];
}

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> n >> t;
	for(ll i = 0; i < n; ++i){
		cin >> a[i];
	}
	for(ll i = 0; i < t; ++i){
		q[i].Y = i;
		cin >> q[i].X.X >> q[i].X.Y;
		q[i].X.X --;
	}
	sort(q, q + t, cmp);
	ll x = 0, y = 0;
	ll sum = 0;
	for(ll i = 0; i < t; ++i){
		ll r = q[i].X.Y;
		ll l = q[i].X.X;
		while(y < r){
			sum -= get(a[y]) * get(a[y]) * a[y];
			add(a[y], 1);
			sum += get(a[y]) * get(a[y]) * a[y];
			y ++;
		}
		while(x > l){
			x --;
			sum -= get(a[x]) * get(a[x]) * a[x];
			add(a[x], 1);
			sum += get(a[x]) * get(a[x]) * a[x];
		}
		while(y > r){
			y --;
			sum -= get(a[y]) * get(a[y]) * a[y];
			add(a[y], -1);
			sum += get(a[y]) * get(a[y]) * a[y];
		}
		while(x < l){
			sum -= get(a[x]) * get(a[x]) * a[x];
			add(a[x], -1);
			sum += get(a[x]) * get(a[x]) * a[x];
			x ++;
		}
		ans[ q[i].Y ] = sum;
	}
	for(ll i = 0; i < t; ++i){
		cout << ans[i] << "\n";
	}
	return 0;
}
