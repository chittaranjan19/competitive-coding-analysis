#include<bits/stdc++.h>

using namespace std;
long long grid[505][505];
int N;
int check() {
    long long sm = 0;
    for (int i = 0; i < N; i++) {
	sm += grid[0][i];
    }
    for (int i = 0; i < N; i++){
	long long nr = 0;
	long long nc = 0;
	for (int j = 0; j < N; j++) {
	    nr += grid[i][j];
	    nc += grid[j][i];
	}
	if (nr != sm || nc != sm) {
	    return 0;
	}
    }
    long long md = 0;
    long long sd = 0;
    for (int i = 0; i < N; i++){
	md += grid[i][i];
	sd += grid[N-1-i][i];
    }
    if (md != sm || sd != sm)
	return 0;
    return 1;    
}

int main() {
    ios::sync_with_stdio(false);
    cin >> N;
    int r = -1;
    int c = -1;
    for (int i = 0; i < N; i++){
	for (int j = 0; j < N; j++){
	    cin >> grid[i][j];
	    if (grid[i][j] == 0) {
		r = i; c = j;
	    }
	}
    }
    int rc = (r + 1) % N;
    long long sm = 0;
    for (int i = 0; i < N; i++) {
	sm += grid[rc][i];
    }
    long long ssm = 0;
    for (int i = 0; i < N; i++) {
	ssm += grid[r][i];
    }
    grid[r][c] = sm - ssm;
    if (grid[r][c] < 0  || !check()) {
	cout << -1 << endl;
	return 0;
    }
    cout << grid[r][c] << endl;
    return 0;
}
	

	
	
