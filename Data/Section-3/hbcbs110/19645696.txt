#include<iostream>
#include<algorithm>
#include<iomanip>
#include<cstdio>
#include<cmath>
using namespace std;
const long double pi=acos((long double)-1.00);
struct Point
{
    double x,y;
    long double ang;
    Point(){}
    Point(double _x,double _y)
    {
        x=_x;y=_y;
    }
    Point operator - (const Point b) const
    {
        return Point(x-b.x,y-b.y);
    }
}plg[10005];
long double atg2(Point a)
{
    return atan2((long double)a.y,(long double)a.x);
}
int main()
{
    long double agmx=0,agmn=pi,anx,aguv,kmx,u,v,w;
    int n,i,mnn;
    cin>>n>>w>>v>>u;
    for(i=0;i<n;i++)
    {
        scanf("%lf%lf",&plg[i].x,&plg[i].y);
        plg[i].ang=atan2((long double)plg[i].y,(long double)plg[i].x);
        agmx=max(agmx,plg[i].ang);
        if(agmn>=plg[i].ang)
        {
            agmn=plg[i].ang;
            mnn=i;
        }
    }
    kmx=u/v;
    aguv=atan2(u,v);
    if(aguv>=agmx||aguv<=agmn)
    {
        cout<<fixed<<setprecision(8)<<w/u<<endl;
    }else{
        for(i=mnn;;i++)
        {
            if(atg2(plg[(i+1)%n]-plg[i%n])>=aguv)
            {
                anx=plg[i%n].x+(w-plg[i%n].y)/kmx;
                break;
            }
        }
        cout<<fixed<<setprecision(8)<<anx/v<<endl;
    }
    return 0;
}
