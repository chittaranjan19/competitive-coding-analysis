#include <bits/stdc++.h>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int fact[200005], inv[200005], factinv[200005];
pair<int, bool> arr[400005];

int main()
{
  int n, k, x, y;
  cin >> n >> k;
  for(int i=0;i<n;i++)
  {
    scanf("%d %d", &x, &y);
    arr[i*2] = mp(x, 0);
    arr[i*2+1] = mp(y, 1);
  }
  sort(arr, arr + 2*n);
  fact[0] = inv[0] = factinv[0] = 1;
  fact[1] = inv[1] = factinv[1] = 1;
  for(int i=2;i<=n;i++)
  {
    fact[i] = (i * 1LL * fact[i - 1]) % mod;
    inv[i] = (mod - ((mod / i * 1LL * inv[mod % i]) % mod)) % mod;
    factinv[i] = (inv[i] * 1LL * factinv[i - 1]) % mod;
  }
  int cnt = 0, last = arr[0].f, res = 0;
  for(int i=0;i<2*n;i++)
  {
    int j = i;
    while(j < 2*n && arr[j].s == 0 && arr[i].f == arr[j].f)
      cnt++, j++;
    if(cnt >= k)
    {
      int tmp = ((arr[i].f - last + 1) * 1LL * fact[cnt]) % mod;
      tmp = (tmp * 1LL * factinv[k]) % mod;
      tmp = (tmp * 1LL * factinv[cnt - k]) % mod;
      res += tmp;
      if(res >= mod) res -= mod;
    }
    while(j < 2*n && arr[j].s == 1 && arr[i].f == arr[j].f)
      cnt--, j++;
    last = arr[i].f + 1;
    i = j - 1;
  }
  cout << res;
  return 0;
}
