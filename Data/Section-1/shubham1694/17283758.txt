#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 5010;

long double dp[maxn][maxn], p[maxn];
long double ppow[maxn][maxn];
int t[maxn], T, n;

long double solve(int curtime, int cn)
{
	if(curtime>T || cn>n)
		return 0;
	if(dp[curtime][cn]!=-1)
		return dp[curtime][cn];
	int i;
	long double ret = 0, prob = 1;
	for(i=1; i<t[cn] && (curtime+i)<=T; i++){
		ret = ret + (p[cn]*prob*(solve(curtime+i, cn+1)+1.0));
		prob*=(1.0-p[cn]);
	}
	if((curtime+t[cn])<=T)
		ret = (ret + (prob*(solve(curtime+t[cn], cn+1)+1.0)));
	cout << curtime << " " << cn << " " << ret << "\n";
	return dp[curtime][cn] = ret;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int i, j;
	/*for(i=0; i<maxn; i++){
		for(j=0; j<maxn; j++)
			dp[i][j] = -1.0;
	}*/
	long double temp;
	scanf("%d%d", &n, &T);
	for(i=1; i<=n; i++){
		scanf("%Lf%d", &p[i], &t[i]);
		p[i]/=100.0;
		ppow[i][0] = 1.0;
		for(j=1; j<=T+1; j++)
			ppow[i][j] = ppow[i][j-1]*(1.0-p[i]);
	}
	for(i=n; i>=1; i--){
		for(j=T-1; j>=0; j--){
			if(t[i]==1){
				dp[i][j] = (dp[i+1][j+1]+1.0);
				continue;
			}
			if((j+t[i])<T){
				temp = (dp[i][j+1] - (p[i]*ppow[i][t[i]-2]*(dp[i+1][j+t[i]]+1.0))-(ppow[i][t[i]-1]*(dp[i+1][j+t[i]+1]+1.0)));
				dp[i][j] = (temp*(1.0-p[i])) + (p[i]*(dp[i+1][j+1]+1.0));
				dp[i][j] = dp[i][j] + ppow[i][t[i]-1]*(dp[i+1][j+t[i]]+1.0);
			}
			else if((j+t[i])==T){
				temp = (dp[i][j+1] - (p[i]*ppow[i][t[i]-2]*(dp[i+1][j+t[i]]+1.0)));
				dp[i][j] = (temp*(1.0-p[i])) + (p[i]*(dp[i+1][j+1]+1.0));
				dp[i][j] = dp[i][j] + ppow[i][t[i]-1]*(dp[i+1][j+t[i]]+1.0);
			}
			else
				dp[i][j] = dp[i][j+1]*(1.0-p[i]) + (p[i]*(dp[i+1][j+1]+1.0));
		}
	}
	//long double ans = solve(0, 1);
	/*for(i=1; i<=n; i++){
		for(j=0; j<=T; j++)
			cout << dp[i][j] << " ";
		cout << "\n";
	}*/
	long double ans = dp[1][0];
	printf("%.10Lf\n", ans);
	return 0;
}
