#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define ff first
#define cs(x,y) cout<<"Case "<<y<<": "<<x<<endl;
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
//typedef pair<,ll> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
ll arr[MAXN],lazy[MAXN*4],s[MAXN*4];
void build(ll nd,ll x,ll y){
	if(x==y){
		s[nd]=arr[x];
		return;
	}
	ll mid=(x+y)>>1;
	build(nd*2,x,mid);
	build(nd*2+1,mid+1,y);
	s[nd]=max(s[nd*2],s[nd*2+1]);
}
void upd(ll nd,ll x,ll y,ll v){
	//cout<<nd<<" "<<x<<" "<<y<<" "<<v<<endl;
	lazy[nd]=v;
	s[nd]=v;
}
void shift(ll nd,ll x,ll y){
	if(lazy[nd]>=1){
		ll mid=(x+y)>>1;
		upd(nd*2,x,mid,lazy[nd]);
		upd(nd*2+1,mid+1,y,lazy[nd]);
		lazy[nd]=0;
	}
}
void inc(ll v,ll l,ll r,ll nd,ll x,ll y){
	if(l>y or x>r)
		return;
	if(l<=x and y<=r){
		upd(nd,x,y,v);
		return;
	}
	shift(nd,x,y);
	ll mid=(x+y)>>1;
	inc(v,l,r,nd*2,x,mid);
	inc(v,l,r,nd*2+1,mid+1,y);
	s[nd]=max(s[nd*2],s[nd*2+1]);
}
ll tap(ll l,ll r,ll nd,ll x,ll y){
	if(l>y or x>r)
		return 0;
	if(l<=x and y<=r)
		return s[nd];
	shift(nd,x,y);
	ll mid=(x+y)>>1;
	return max(tap(l,r,nd*2,x,mid),
	tap(l,r,nd*2+1,mid+1,y));		
}
int main(){
	ll a;
	cin>>a;
	for(ll i=1;i<=a;i++)
		cin>>arr[i];
	build(1,1,a);
	ll q;
	cin>>q;
	while(q--){
		ll w,h;
		cin>>w>>h;
		ll san=tap(1,w,1,1,a);
		cout<<san<<endl;
		inc(san+h,1,w,1,1,a);	
	}
	return 0;
}
/*
7
29 29 29 29 29 30 32
3
5 4
6 5
1 2

25
*/