#include<iostream>
#include<sstream>
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<bitset>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
using namespace std;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define ALL(c) (c).begin(),(c).end()
#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;

int main(){
    int n;
    cin >> n;
    int count = 0;
    if (n % 2 == 0){
        for(int i = 1; i <= n; i = i + 1){
            int flag = 0;
            if (n % i == 0){
                vector<int> A(15);
                vector<int> G(15);
                int k = n, g = i, j = 0, r = 0;
                
                while(k != 0){
                    A[j++] = k % 10;
                    k = k/10;
                }
                
                j--;
                while( g != 0){
                    G[r++] = g % 10;
                    g = g/10;
                }
                r--;
                sort(A.begin(), A.begin()+j);
                sort(G.begin(), G.begin()+r);
                
                for(int p = 0; p <= j; p++){
                    for(int q = 0; q<= r; q++){
                        if(A[p] == G[q]){
                            flag = 1;
                            break;
                        }
                        if(A[p] < G[q])
                            break;
                    }
                    if(flag == 1)
                        break;
                }
            }
            if (flag == 1){
                //                cout << "here" << endl;
                count++;
            }
        }
    }
        
    else{
        for(int i = 1; i <= n; i = i + 2){
            int flag = 0;
            if (n % i == 0){
                vector<int> A(15);
                vector<int> G(15);
                int k = n, g = i, j = 0, r = 0;
                
                while(k != 0){
                    A[j++] = k % 10;
                    k = k/10;
                }
                
                j--;
                while( g != 0){
                    G[r++] = g % 10;
                    g = g/10;
                }
                r--;
                sort(A.begin(), A.begin()+j);
                sort(G.begin(), G.begin()+r);
                
                for(int p = 0; p <= j; p++){
                    for(int q = 0; q<= r; q++){
                        if(A[p] == G[q]){
                            flag = 1;
                            break;
                        }
                        if(A[p] < G[q])
                            break;
                    }
                    if(flag == 1)
                        break;
                }
            }
            if (flag == 1){
                //                cout << "here" << endl;
                count++;
            }
        }
    }
    cout << count << endl;
    return 0;
}

        
       
            
                    
                        
                
                            
                            
                
            
                    
                        
