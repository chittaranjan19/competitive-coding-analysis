#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

string arr[] = {"++**",
"+*+*",
"++++",
"+**+"};
int m;
vector<int> v;

void solve(int ind, int &cnt)
{
  if(ind == m)
  {
    for(int i=0;i<v.size();i++)
    {
      printf("%s", arr[v[i]].c_str());
    }
    printf("\n");
    cnt--;
    return;
  }
  for(int i=0;i<4;i++)
  {
    if(!cnt) return;
    v.pb(i);
    solve(ind + 1, cnt);
    v.pop_back();
  }
}

int main()
{
  int n;
  scanf("%d", &n);
  if(n == 0)
  {
    cout << "+";
    return 0;
  }
  if(n == 1)
  {
    cout << "+*\n";
    cout << "++\n";
    return 0;
  }
  int cnt = 1 << n;
  m = cnt / 4;
  solve(0, cnt);
  assert(cnt == 0);
  return 0;
}
