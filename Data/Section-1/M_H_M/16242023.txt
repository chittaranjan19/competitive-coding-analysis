//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 2050;
const int M = 1e9 + 7;

ll dp[N + 10][N + 10];

vector <int> v;

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	dp[0][0] = 1;
	for(int i = 1; i < N; ++i){
		for(int j = 0; j <= i; ++j){
			if(j) dp[i][j] += dp[i - 1][j - 1];
			dp[i][j] += dp[i - 1][j + 1];
			dp[i][j] %= M;
		}
	}
	int n, m;
	string s;
	cin >> n >> m;
	cin >> s;
	for(int i = 0; i < m; ++i){
		if(s[i] == '(') v.PB(1);
		else if(SZ(v) && v.back() == 1) v.pop_back();
		else v.PB(-1);
	}
	int t1 = 0, t2 = 0;
	for(int i = 0; i < SZ(v); ++i){
		if(v[i] == 1) t2 ++;
		else t1 ++;
	}
	ll ans = 0;
	if(n  - m == 0 && !t2 && !t2){
		cout << "1\n";
		return 0;
	}
	if(t1 >= N || t2 >= N){
		cout << "0\n";
		return 0;
	}
	for(int i = 0; i <= n - m; ++i){
		int j = n - m - i;
		for(int k = 0; max(t1, t2) + k < N; ++k){
			ans += dp[i][t1 + k] * dp[j][t2 + k];
			ans %= M;
		}
	}
	cout << ans << "\n"; 
	return 0;
}
