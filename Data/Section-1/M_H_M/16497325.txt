//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 2e5 + 100;

int n, m;
vector <pair<ll, char> > t;
vector <pair<ll, char> > s;
string s1, s2;
ll f[N];
bool mark1[N];
bool mark2[N];

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> n >> m;
	for(int i = 0; i < n; ++i){
		int a; char c;
		cin >> a >> c >> c;
		if(SZ(t) && t.back().Y == c)
			t.back().X += a;
		else
			t.PB({a, c}), s1 += c;
	}
	for(int i = 0; i < m; ++i){
		int a; char c;
		cin >> a >> c >> c;
		if(SZ(s) && s.back().Y == c)
			s.back().X += a;
		else
			s.PB({a, c}), s2 += c;
	}
	n = SZ(t);
	m = SZ(s);
	
	int k = 0;
	for(int i = 1; i < m; ++i){
		while(k && s2[i] != s2[k]) k = f[k];
		if(s2[i] == s2[k])
			k ++;
		f[i + 1] = k;
	}
	k = 0;
	for(int i = 0; i < n; ++i){
		while(k && s1[i] != s2[k]) k = f[k];
		if(s1[i] == s2[k]) k ++;
		if(k == m){
			mark1[i] = true;
			k = f[k];
		}
	}
	if(m == 1){
		ll ans = 0;
		for(int i = 0; i < n; ++i){
			if(mark1[i] && t[i].X >= s[0].X)
			 	ans += t[i].X - s[0].X + 1;
		}
		cout << ans << "\n";
		return 0;
	}
	memset(f, 0, sizeof f);
	k = 0;
	for(int i = 1; i < m - 2; ++i){
		while(k && s[i + 1].X != s[k + 1].X) k = f[k];
		if(s[i + 1].X == s[k + 1].X)
			k ++;
		f[i + 1] = k;
	}
	k = 0;
	for(int i = 0; i < n; ++i){
		while(k && t[i].X != s[k + 1].X) k = f[k];
		if(t[i].X == s[k + 1].X) k ++;
		if(k == m - 2){
			mark2[i] = true;
			k = f[k];
		}
	}
	int ans = 0;
	for(int i = 1; i < n; ++i){
		if(mark1[i] && mark2[i - 1]){
			if(t[i - m + 1].X >= s[0].X && t[i].X >= s[m - 1].X)
				ans ++;
		}
	}
	cout << ans << "\n";
	return 0;
}
