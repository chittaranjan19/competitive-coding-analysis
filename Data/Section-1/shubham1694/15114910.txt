#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(faltse);
#define mp make_pair
#define pb push_back
#define altlt(a) a.begin(), a.end()
#define ltlt ltong ltong
#define f first
#define s second

typedef pair<int, int> pii;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

char grid[555][555];
int lt[555][555], u[555][555];
int n, m;
int prefl[555][555], prefu[555][555];

int isvalid(int i, int j)
{
    if(i>=0 && i<n && j>=0 && j<m)
        return 1;
    return 0;
}

int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    int t, i, j, x1, y1, x2, y2, ans, q;
    sd(n), sd(m);
    for(i=0; i<n; i++)
        scanf("%s", grid[i]);
    for(i=0; i<n; i++){
        for(j=0; j<m; j++){
            if(grid[i][j]=='#'){
                lt[i][j] = u[i][j] = 0;
                continue;
            }
            if(isvalid(i, j-1)){
                if(grid[i][j-1]=='.')
                    lt[i][j] = 1;
            }
            if(isvalid(i-1, j)){
                if(grid[i-1][j]=='.')
                    u[i][j] = 1;
            }
        }
    }
    for(i=0; i<n; i++){
        prefl[i][0] = lt[i][0];
        for(j=1; j<m; j++)
            prefl[i][j] = prefl[i][j-1] + lt[i][j];
    }
    for(i=0; i<m; i++){
        prefu[i][0] = u[0][i];
        for(j=1; j<n; j++)
            prefu[i][j] = prefu[i][j-1] + u[j][i];
    }
    sd(q);
    while(q--){
        scanf("%d%d%d%d", &x1, &y1, &x2, &y2);
        x1--, x2--, y1--, y2--;
        ans = 0;
        for(i=x1; i<=x2; i++)
            ans+=(prefl[i][y2]-prefl[i][y1]);
        for(i=y1; i<=y2; i++)
            ans+=(prefu[i][x2]-prefu[i][x1]);
        printf("%d\n", ans);
    }
    return 0;
}
