#include <iostream>
#include <cmath>

using namespace std;

long s(long long n)
{
    long ans = 0;
    while(n > 0)
    {
        ans += n % 10;
        n /= 10;
    }
    return ans;
}

int main()
{
    long double n;
    long sav;
    long long start = pow(n, 1/2)-s(pow(n, 1/2));
    bool flag = true;
    cin>>n;
    for(int a = start; a <= sqrt(n); a++)
    {
        sav = s(a);
        //cout<<(pow(a, 2)+sav*a-n)<<" "<<a<<endl;
        if((pow(a, 2)) > n)
            break;
        double disc = sqrt((pow(sav, 2))+ 4*n);
        //cout<< root<<" "<<(int) root<<endl;
        if((disc - (int)disc) == 0)
        {
            //cout << a << endl;
            //cout<<((s(a)*-1+(disc))/2)<<" "<<((s(a)*-1-(disc))/2)<<" "<<n<<endl;
            if(((sav*-1+(disc))/2) == a || ((sav*-1-(disc)/2)) == a)
            {
                cout<<a;
                flag = false;
                break;
            }
        }
    }
    if(flag)
        cout<<-1;
    return 0;
}

