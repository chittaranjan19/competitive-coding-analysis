#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
//#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int a[505];
int DP[501][501][501];

int main()
{
  //freopen("immetric.in", "r", stdin);
  //freopen("immetric.out", "w", stdout);
  int n, m, b, mod, res = 0;
  scanf("%d %d %d %d", &n, &m, &b, &mod);
  for(int i=0;i<n;i++)
    scanf("%d", &a[i]);
  for(int i=0;i<n;i++)
  {
    DP[i][0][0] = 1;
    for(int j=1;j<=m;j++)
    {
      for(int k=0;k<=b;k++)
      {
        if(i != 0)
          DP[i][j][k] = DP[i - 1][j][k];
        if(k >= a[i]) DP[i][j][k] += DP[i][j - 1][k - a[i]];
        if(DP[i][j][k] >= mod)
          DP[i][j][k] -= mod;
      }
    }
  }
  for(int i=0;i<=b;i++)
  {
    res += DP[n - 1][m][i];
    if(res >= mod)
      res -= mod;
  }
  printf("%d", res);
  return 0;
}