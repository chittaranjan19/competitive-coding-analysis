/*
*Rainto96
*Beijing University of Posts and Telecommunications School of Software
Engineering
*http://blog.csdn.net/u011775691
*/
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <cstring>
#include <string>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <climits>
#include <bitset>
using namespace std;
#define pb push_back
#define ALL(x) x.begin(),x.end()
#define PII pair<int,int>
#define MP(x,y) make_pair((x),(y))
#define ll long long
#define ull unsigned ll
#define scan(x) scanf("%d",&(x))
#define scan2(x,y) scanf("%d%d",&(x),&(y))
#define scan3(x,y,z) scanf("%d%d%d",&(x),&(y),&(z))
#define scan4(x,y,z,k) scanf("%d%d%d%d",&(x),&(y),&(z),&(k))
#define Max(a,b) a=max(a,b)
#define Min(a,b) a=min(a,b)
#define fuck(x) cout<<#x<<" "<<x<<endl
ll gcd(ll a, ll b){
    return b==0?a:gcd(b,a%b);
}
//返回d=gcd(a,b);和对应于等式ax+by=d中的x,y
ll extend_gcd(ll a,ll b,ll &x,ll &y){
    if(a==0&&b==0) return -1;//无最大公约数
    if(b==0){x=1;y=0;return a;}
    ll d=extend_gcd(b,a%b,y,x);
    y-=a/b*x;
    return d;
}
int main(){
	//freopen("/home/rainto96/in.txt","r",stdin);
    ll a1,b1,a2,b2,L,R;
    cin>>a1>>b1>>a2>>b2>>L>>R;
    if(b2<b1) swap(a1,a2), swap(b1,b2);
    ll tmpa1 = a1;
    ll lx,ly;
    if((b2-b1)%gcd(a1,a2)) {
        //fuck("hah");
        puts("0");
    }else{
        ll g = extend_gcd(a1,a2,lx,ly);
        a2/=g;
        a1/=g;
        ll bb = (b2-b1)/g;
        lx *= bb, ly *= -bb;
        ll lxbei = a2;
        //fuck(lx);
        //fuck(ly);
        //if(lx<0) lx = lx + (-lx) / lxbei * lxbei;
        //while(lx<0) lx+=lxbei;
        //while(lx-lxbei>=0) lx -= lxbei;
        if(lx<0 || ly<0){
            ll bei = 0;
            if(lx<0) bei = max(bei, (-lx) / a2);
            if(ly<0) bei = max(bei, (-ly) / a1);
            lx += bei*a2 , ly += bei*a1;
            while(lx<0 || ly<0){
                lx += a2, ly+=a1;
            }
        }
        if(lx>0 && ly>0){
            ll bei = 0x3f3f3f3f3f3f3f3fLL;
            bei = min(bei, (lx) / a2);
            bei = min(bei, (ly) / a1);
            lx -= bei*a2 , ly -= bei*a1;
            while(lx<0 || ly<0){
                lx += a2, ly+=a1;
            }
        }
        //fuck(lx);
        //fuck(ly);
        ll bei = a2*tmpa1;
        ll chu = lx*a1 + b1;
        //fuck(bei);
        //fuck(chu);
        ll ge = ((R-chu)/bei+1);
        ll qu = (L-1-chu<0) ?0:((L-1-chu)/bei+1);
        ge -= qu;
        ge = max(ge,0LL);
        cout<<ge<<endl;
    }
    return 0;
}
