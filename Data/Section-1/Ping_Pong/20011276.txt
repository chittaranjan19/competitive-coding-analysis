#include <bits/stdc++.h>
//#define int long long

using namespace std;

const int inf = (int)1e18;

string str(int x)
{
    string s = "";
    for (int i = 0; i < 30; i++)
    {
        s += (char)(x % 2 + '0');
        x /= 2;
    }
    reverse(s.begin(), s.end());
    return s;
}

int nv = 1;
vector<vector<int> > go(1, vector<int> (2, -1));
vector<int> par(1, -1);
vector<int> in(1, -1);

int add_str(string s)
{
    int curr = 0;
    for (int c : s)
    {
        c -= '0';
        if (go[curr][c] == -1)
        {
            go[curr][c] = nv++;
            go.push_back(vector<int> (2, -1));
            par.push_back(curr);
            in.push_back(c);
        }
        curr = go[curr][c];
    }
    return curr;
}

void del_str(string s)
{
    int curr = add_str(s);
    while (curr != 0 && go[curr][0] == -1 && go[curr][1] == -1)
    {
        go[par[curr]][in[curr]] = -1;
        curr = par[curr];
    }
}

int get(int x)
{
    string s = str(x);
    int curr = 0, ans = 0;
    for (int c : s)
    {
        c -= '0';
        if (go[curr][c ^ 1] != -1)
        {
            ans = ans * 2 + 1;
            curr = go[curr][c ^ 1];
        }
        else if (go[curr][c] != -1)
        {
            ans = ans * 2;
            curr = go[curr][c];
        }
        else
            break;
    }
    return ans;
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin >> n;
    map<int, int> m;
    m[0]++;
    add_str(str(0));
    for (int i = 0; i < n; i++)
    {
        char c;
        int x;
        cin >> c >> x;
        if (c == '+')
        {
            m[x]++;
            if (m[x] == 1)
                add_str(str(x));
        }
        else if (c == '-')
        {
            m[x]--;
            if (m[x] == 0)
                del_str(str(x));
        }
        else
            cout << get(x) << endl;
    }
}