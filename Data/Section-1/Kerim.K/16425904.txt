#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
string arr[111];
vector<char>bg[27];
char ans[28];
set<int>s;
int vis[28];
int f(){
	for(int i=0;i<26;i++)
		if(bg[i].size()>0)
			return 1;
	return 0;		
}
int tap(){
	for(int i=0;i<26;i++)
		if(bg[i].size()==0 and s.count(i))
			return i;
	return -1;		
}
void del(int x,char y){
	vector<char>v;
	for(int i=0;i<bg[x].size();i++)
		if(bg[x][i]!=y)
			v.pb(bg[x][i]);
	bg[x].resize(0);		
	for(int i=0;i<v.size();i++)
		bg[x].pb(v[i]);
}
int main(){
	int a;
	scanf("%d",&a);
	for(int i=1;i<=a;i++)
		cin>>arr[i];
	for(int i=2;i<=a;i++){
		int fup=arr[i-1].size();
		umin(fup,int(arr[i].size()));
		if(arr[i-1].size()>arr[i].size() and arr[i-1].substr(0,fup)==arr[i].substr(0,fup)){
			printf("Impossible\n");
			return 0;
		}
		for(int j=0;j<fup;j++)
			if(arr[i][j]!=arr[i-1][j]){
				bg[arr[i][j]-'a'].pb(arr[i-1][j]);
				s.insert(arr[i-1][j]-'a');
				break;
			}
	}
	int last=97;
	while(1){
		if(!f() or s.size()==0)
			break;
		int k=tap();
		if(k==-1){
			printf("Impossible\n");
			return 0;
		}
		ans[k]=char(last);
		vis[k]=1;
		for(int i=0;i<26;i++)
			del(i,char(k+97));
		s.erase(k);	
		last++;
	}
	for(int i=0;i<26;i++){
		if(vis[i])
			continue;
		ans[i]=char(last);
		last++;
	}		
	
	
	for(int i=0;i<26;i++)
		cout<<ans[i];
	cout<<endl;		
	return 0;
}
