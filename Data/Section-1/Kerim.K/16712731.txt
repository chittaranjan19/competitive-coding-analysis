#include <iostream>
#include <algorithm>

#define fi first
#define se second
#define pb(x) push_back(x)
#define sqr(x) ((x)*(x))
#define sz(x) (int)x.size()
#define all(x) (x).begin(),(x).end()
#define cs(x) printf("Case %d: ", x)

using namespace std;
template <class T> inline void umax(T &x,T y) {if (y > x) x = y;}
template <class T> inline void umin(T &x,T y) {if (y < x) x = y;}
typedef long long ll;
typedef pair <int, int> pii;

const int N = 2e5 + 5, B = 0x7fffffff;
ll a[N];
ll n, m, s, d, last;
vector <pair <bool, ll>> ans;
string res[] = {"RUN", "JUMP"};

int main(){
  scanf("%I64d%I64d%I64d%I64d", &n, &m, &s, &d);
  for (int i = 1; i <= n; i++) scanf("%I64d", &a[i]);
  sort(a + 1, a + n + 1);
  last = a[1] - 1;
  ans.push_back({0LL, last});
  a[++n] = m + (2LL * s);
  for (int i = 1; i < n; i++){
    if (a[i] + 1 - last > d){
      puts("IMPOSSIBLE\n");
      return 0;
    }
    if ((a[i + 1] - 1) - (a[i] + 1) >= s){
      ans.push_back({1, (a[i] + 1) - last});
      ans.push_back({0, (a[i + 1] - 1) - (a[i] + 1)});
      last = a[i + 1] - 1;
    }
  }
  ans.pop_back();
  if (m - a[n - 1] - 1 > 0) ans.push_back({0LL, m - (a[n - 1] + 1)});
  for (auto x : ans) cout << res[x.fi] << " " << x.se << "\n";
  
  return !1;
}
