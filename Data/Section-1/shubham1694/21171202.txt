#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;
typedef vector<vector<ll> > matrix;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 5005;

int n, H[maxn], dp[maxn][maxn], nxt[maxn][maxn];
ll prefH[maxn];

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	scanf("%d", &n);
	for(int i=1; i<=n; i++){
		scanf("%d", &H[i]);
		prefH[i] = prefH[i-1] + H[i];
	}
	for(int i=1; i<=n; i++){
		int k = i;
		for(int j=i-1; j>=1; j--){
			nxt[i][j] = -1;
			while(k <= n){
				if(prefH[k] - prefH[i-1] >= prefH[i-1] - prefH[j-1]){
					nxt[i][j] = k;
					break;
				}
				++k;
			}
		}
	}
	for(int j=n; j>=1; j--){
		dp[n+1][j] = n;
		for(int i=n; i>=1; i--){
			dp[i][j] = inf;
			dp[i][j] = min(dp[i+1][j], dp[i][j] + (i-1));
		}
	}
	int ans = n-1;
	for(int j=n; j>=1; j--){
		for(int i=j+1; i<=n; i++){
			int k = nxt[i][j];
			if(k == -1){
				dp[i][j] = inf;
				continue;
			} 
			dp[i][j] = dp[k+1][i] - i;
		}
		if(j == 1){
			for(int i=2; i<=n; i++)
				ans = min(ans, i-2 + dp[i][1]);
			printf("%d\n", ans);
			return 0;
		}
		for(int i=n; i>=1; i--)
			dp[i][j] = min(dp[i+1][j], dp[i][j] + (i-1));
	}
	return 0;
}
