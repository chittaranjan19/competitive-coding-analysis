#include <cstdio>
#include <set>
using namespace std;

class Dragon
{
    public:
    int strength;
    int bonus;
    bool operator < (const Dragon& alt) const
    {
        if(this -> bonus > alt.bonus ||(this -> bonus== alt.bonus && this -> strength > alt.strength))
        return true;
        else
        return false;
    }
};

int main()
{
    int s, n, c = 0;
    bool impossible = false, quit = false;
    scanf("%d %d", &s, &n);
    //priority_queue<Dragon> dragons;
    //vector<Dragon> list;
    set<Dragon> current;
    for(int a = 0; a < n; a++)
    {
        Dragon d;
        scanf("%d %d", &d.strength, &d.bonus);
        current.insert(d);
    }
    /*while(!dragons.empty())
    {
        cout<<dragons.top().strength<<" "<<dragons.top().bonus<<endl;
        dragons.pop();
    }*/
    while(!current.empty())
    {
        for(set<Dragon>::iterator it = current.begin(); it != current.end(); it++)
        {
            if(c == current.size())
            {
                impossible = true;
                break;
            }
            else if(s >= (*it).strength)
            {
                c = 0;
                s += (*it).bonus;
                current.erase(*it);
                if(!current.empty())
                it = current.begin();
                else
                {
                    quit = true;
                    break;
                }
            }
            else
            c++;
        }
        if(impossible == true)
        {
            break;
        }
    }
    if(impossible)
        printf("%s", "NO");
    else
        printf("%s", "YES");
    return 0;
}
