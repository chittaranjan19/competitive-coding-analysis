#include <bits/stdc++.h>
#define FOR(i, j, k) for(int i = j; i <= k; i ++)
#define FORD(i, j, k) for(int i = j; i >= k; i --)
#define mn 100010
#define maxC 1000000007
#define pb push_back
#define F first
#define S second
#define mp make_pair

using namespace std;
int n, m, k, in[mn];
vector< pair<int, long long> > g[mn], rail;
long long dis[mn];
priority_queue< pair<long long, int> > p;

void setup()
{
    int u, v, w;
    cin >> n >> m >> k;
    FOR(i, 1, m)
    {
        cin >> u >> v >> w;
        g[u].pb(mp(v, w));
        g[v].pb(mp(u, w));
    }
    FOR(i, 1, k)
    {
        cin >> u >> v;
        g[1].pb(mp(u, v));
        rail.pb(mp(u, v));
    }
}

void ijk()
{
    memset(dis, 60, sizeof(dis));
    dis[1] = 0;
    p.push(mp(0, 1));
    while(!p.empty())
    {
        int u = p.top().S;
        long long w = - p.top().F;
        p.pop();
        if (w != dis[u])
            continue;
        FOR(i, 0, int(g[u].size()) - 1)
        {
            int v = g[u][i].F;
            long long w2 = g[u][i].S;
            if (dis[v] <= dis[u] + w2)
                continue;
            dis[v] = dis[u] + w2;
            p.push(mp(-dis[v], v));
        }
    }
}

void xuly()
{
    ijk();
    FOR(u, 1, n)
    FOR(i, 0, int(g[u].size()) - 1)
    {
        int v = g[u][i].F;
        long long w = g[u][i].S;
        if (dis[v] == dis[u] + w)
            in[v] ++;
    }
    int ans = 0;
    FOR(i, 0, int(rail.size()) - 1)
    {
        int v = rail[i].F;
        long long w = rail[i].S;
        if (w != dis[v])
            ans ++;
        else
        {
            if (in[v] > 1)
                in[v] --, ans ++;
        }
    }
    cout << ans;
}

int main()
{
    iostream::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup();
    xuly();
    return 0;
}
