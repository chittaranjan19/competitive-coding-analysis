#include<bits/stdc++.h>
using namespace std;
#define sd(x) scanf("%d",&x)
#define slld(x) scanf("%I64d",&x)
#define ss(x) scanf("%s",x)
#define ll long long
#define mod 1000000007
#define bitcount    __builtin_popcountll
#define pb push_back
int v[2005],a[2005][2005],b[2005][2005];
struct abc{
    int wt;
    int des,src;
};
struct cmp
{
    bool operator()(abc x,abc y)
    {
        return x.wt>y.wt;
    }
};
int main()
{
    priority_queue <abc,vector<abc>,cmp> pq;
    int t,n,m,i,j,k,s;
    t=1;
    while(t--)
    {
        sd(n);
        for(i=1;i<=n;i++)
        {
            for(j=1;j<=n;j++)
                sd(a[i][j]);
        }
        k=0;
        for(i=1;i<=n;i++)
            if(a[i][i]!=0)
                k=1;
        for(i=1;i<=n;i++)
        {
            for(j=1;j<=n;j++)
            {
                if(i==j)
                    continue;
                if(a[i][j]==0||a[i][j]!=a[j][i])
                    k=1;
            }
        }
        if(k==1)
        {
            printf("NO\n");
            return 0;
        }
        s=1;
        v[s]=1;
        for(i=2;i<=n;i++)
        {
            if(v[i]==0)
            {
                abc temp;
                temp.des=i;
                temp.wt=a[s][i];
                temp.src=s;
                pq.push(temp);
            }
        }
        while(!pq.empty())
        {
            abc temp=pq.top();
            pq.pop();
            if(v[temp.des]==1)
                continue;
            j=temp.src;
            k=temp.des;
            for(i=1;i<=n;i++)
            {
                if(v[i]==1)
                {
                    b[k][i]=b[i][k]=b[i][j]+temp.wt;
                    if(b[k][i]!=a[k][i])
                    {
                        printf("NO\n");
                        return 0;
                    }
                }
            }
            v[k]=1;
            for(i=1;i<=n;i++)
            {
                if(v[i]==0)
                {
                    abc temp1;
                    temp.src=k;
                    temp.des=i;
                    temp.wt=a[k][i];
                    pq.push(temp);
                }
            }
        }
        printf("YES\n");
    }
    return 0;
}