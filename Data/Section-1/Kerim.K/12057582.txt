/*
PROG:kerim
LANG:C++
*/
#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<ll,int> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN],bas;
int ispow(int z,int y)
{
	if(z>y)
	{
		while(z>y)
		{
			if(z%2!=0)
			return 0;
			z=z/2;
		}
	}
	else
	{
		while(z<y)
			z=z*2;
		if(z!=y)
		return 0;
	}
	return 1;
}
int fun(int k,ll m)
{
	int op=0;
	if(k==m)
	return 0;
	while(k>=1)
	{
		if(ispow(k,m)==1)
		break;
		op++;
		k=k/2;
	}
//	cout<<k<<endl;
	if(k==0)
	return -1;
	if(k==m)
	return op;
	if(k<m)
	{
		while(k<m)
		k=k*2,op++;
	}
	else
	{
		while(k>m)
		k=k/2,op++;		
	}
	if(k==m)
	return op;
	return -1;
}
int main()
{
	int a,mini=INF;;
	cin>>a;
	for(int i=0;i<a;i++)
		scanf("%d",&arr[i]),bas=__gcd(bas,arr[i]);;	
	for(ll i=bas;i<=1000000;i=i*2)
	{
		int sum=0;
		for(int j=0;j<a;j++)
		{
			int san=fun(arr[j],i);
			if(san==-1)
			{
				sum=INF;
				break;
			}
			sum+=san;
		//	cout<<endl;
		}
		if(mini>sum)
		mini=sum;
	}
	int sum=0;
	for(int i=0;i<a;i++)
		sum+=fun(arr[i],1);
	if(mini>sum)
	mini=sum;	
	cout<<mini<<endl;
	return 0;
}
