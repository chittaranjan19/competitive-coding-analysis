#include <iostream>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <cstring>
#include <string>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <climits>
using namespace std;
#define pb push_back
#define VINT vector<ll>
#define PII pair<ll,ll>
#define MP(x,y) make_pair((x),(y))
#define ull unsigned long long
#define ll long long
void showVector(vector<ll > s){
        cout<<"----------"<<endl;for(auto x:s)cout<<x<<" ";cout<<endl<<"----------"<<endl;
}
void println(ll n,ll s1=0,ll s2=0,ll s3=0){
        if(n==1) cout<<s1;
        else if(n==2)cout<<s1<<" "<<s2;
        else cout<<s1<<" "<<s2<<" "<<s3;cout<<endl;
}
/****************************************/

const ull MAGIC=9999999997LL;
ull h[1111111],base[1111111];
void init_hash(VINT& s, ll l){
	h[0]= 0;
	for(ll i = 1; i <= l;++i) h[i] = h[i-1] * MAGIC + s[i-1];
	base[0] = 1;
	for(ll i = 1; i <= l; ++i) base[i] = base[i-1] * MAGIC;
}
unsigned ll get_hash(VINT& s){
	ll l=s.size();
	ull h=0;
	for(ll i = 1; i <= l;++i) h = h * MAGIC + s[i-1];
	return h;
}
unsigned ll string_hash(ll l, ll r){
	return h[r] - h[l]* base[r-l];
}


/********************************************************/
const ll MAX_V=11;//SET THE MAX NUM OF VERTEX
ll head[MAX_V];
struct EDGE{
        ll u,v,w;
        EDGE(ll tu=0,ll tv=0,ll tw=0){u=tu,v=tv,w=tw;}
};
struct Triple{ll f,s,t;};
ll gcd(ll a,ll b){return b==0?a:gcd(b,a%b);}
//////////////////////////////////////
ll f[1111111];
int main(){
        #ifndef ONLINE_JUDGE
                freopen("in.txt","r",stdin);
        #endif // ONLINE_JUDGE
        ll n,w;
        cin>>n>>w;
        VINT s1,s2;
        for(ll i=1;i<=n;i++){
                cin>>f[i];
                if(i>=2)
                        s1.pb(f[i]-f[i-1]);
        }
        for(ll i=1;i<=w;i++){
                cin>>f[i];
                if(i>=2)
                        s2.pb(f[i]-f[i-1]);
        }
        ull s2hash=get_hash(s2);
        init_hash(s1,s1.size());
        ll ans=0;
        int s1size=s1.size();
        int s2size=s2.size();
        for(int i=0;i+s2size<=s1size;i++){
                if(string_hash(i,i+s2size)==s2hash)
                        ans++;
        }
        cout<<ans<<endl;
        return 0;
}
