#include<iostream>
#include<sstream>
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<bitset>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
using namespace std;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define ALL(c) (c).begin(),(c).end()
#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;


int p[1000000];
int next[1000000];

int init(){
    p[0] = 0;
    p[1] = 0;
    for(int i = 2; i < 1000000; i++)
        p[i] = 1;
    for(int i = 0; i < 1000000; i++){
        if (p[i]){
                    
            int n = 1000000/i;
            for (int j = 2; j <= n; j++)
                p[j*i] = 0;
        }

    }

    for (int i = 0; i < 1000000; i++){
        if (p[i] == 1){
            for (int j = i-1; p[j] != 1 && j>= 0; j--)
                next[j] = i-j;
        }
    }
}
int mat[505][505];
int row[505];
int col[505];
int main(){
    init();
    int n,m;
    cin >> n >> m;
    
    for (int i = 0; i < n; i++)
        for(int j = 0; j < m ; j++)
            scanf("%d", &mat[i][j]);

    int mmoves = 1000000000;

    for (int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            row[i] += next[mat[i][j]];
        }
        mmoves = min(mmoves, row[i]);
    }
    for(int j = 0; j < m; j++){
        for(int k = 0; k < n; k++)
            col[j] += next[mat[k][j]];
        mmoves = min(mmoves, col[j]);
    }

    cout << mmoves << endl;
    return 0;
}
            

    
