#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;
using namespace std;
//template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
/*
ordered_set <int> s;
cout << s.order_of_key(3) << endl;	// the number of elements in s less than 3 (in this case, 0-based index of element 3)
	cout << *s.find_by_order(1) << endl; // 1-st elemt in s (in sorted order, 0-based)
*/
#define clr(x) memset((x),0,sizeof(x))
#define maxn 100007
#define INF 1 << 30
#define CL(a, v) memset(a, v, sizeof a)
#define sz size()
#define UNIQUE(a) sort(all(a)), (a).erase(unique(all(a)), (a).end())
#define all(x)   x.begin(), x.end()
#define mid(a,b) (a+b)/2
#define LLINF 10000000000000000009
#define pb push_back
#define mp make_pair
#define ss second
#define ff first
#define pii pair<int,int>
#define tr(i, c) for(__typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
#define Help_me  ios_base::sync_with_stdio(false);

typedef long long ll;
typedef pair<ll,ll> PII;
template <class T>bool umin(T& a, T b){if(a>b){a = b;return 1;}return 0;}
template <class T>bool umax(T& a, T b){if(b>a){a = b;return 1;}return 0;}
//priority_queue< PII , vector<PII>, greater<PII> >q;
int arr[1000009];
vector<int>v;
int rr[1000009];
int vis[1000009];
int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
	int n,k,e=0,y=0,l=0,r=0;
	cin>>n>>k;
	for(int i=0;i<n;i++){
		cin>>arr[i];
		vis[arr[i]]=1;
	}
	for(int i=0;i<=100000;i++){
		if(vis[i]==1)
		e++;
	}
	if(e==1){
		cout<<0<<endl;
		return 0;
	}
	r=n-1;
	l=0;
	for(int i=0;i<n*2;i++){
		r++;
		if(vis[arr[l]]==1)
		e--;
		vis[arr[l]]--;
		arr[r]=arr[l+k-1];
		if(vis[arr[r]]==0)
		e++;
		vis[arr[r]]++;
		l++;
		if(e==1){
		cout<<i+1<<endl;
		return 0;
		}
	}
	cout<<-1<<endl;
return 0;
}
