#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <ctime>

using namespace std;

#define ll long long
#define sc second
#define fs first
#define mp make_pair

ll ans = 1, mod = 1e9 + 7;

ll bin_pow(ll a, ll p)
{
	if (p == 1) return a;
	if (p % 2 == 1)
		return (bin_pow(a, p - 1)*a) % mod;
	else
	{
		ll t = bin_pow(a, p / 2) % mod;
		return (t*t) % mod;
	}
}

int main() 
{
	map<int, int> m;
	set<ll> s;
	int n;
	cin >> n;
	ll tmp = 1;
	ll ans = 1, k = 1, tans = 1, res = 1;
	ll have = -1;
	for (int i = 0; i < n; i++)
	{
		ll t;
		cin >> t;
		m[t]++;
		tmp *= t;
		ans = (ans*t) % mod;
	}
	map<int, int>::iterator it;
	bool ok = 0;
	for (it = m.begin(); it != m.end(); it++)
	{
		if (it->second % 2 == 1)
			ok = 1;
	}
	if (ok)
	{
		res = ans;
		bool dl = 0;
		for (it = m.begin(); it != m.end(); it++)
		if (!dl && it->sc % 2 == 1)
			dl = 1, res = (bin_pow(res, (it->sc + 1) / 2)) % mod;
		else
			res = (bin_pow(res, it->sc+1)) % mod;
	}
	else
	{
		ans = 1;
		for (it = m.begin(); it != m.end(); it++)
			ans = (ans*bin_pow(it->fs, it->sc / 2)) % mod;
		res = ans;
		for (it = m.begin(); it != m.end(); it++)
			res = (bin_pow(res, it->sc+1)) % mod;
	}
	cout << res%mod;
	return 0;
}