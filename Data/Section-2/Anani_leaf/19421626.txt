#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<string>
#include<queue>
#include<vector>
#include<map>
#include<cmath>
#define lowbit(x) ((x)&(-x))
#define Max(a,b) (a>b?a:b)
#define Min(a,b) (a>b?b:a)
#define lron(x)  ((x) << 1)
#define rson(x) ((x)<<1|1)
#define dad(x) ((x)>>1)
#define INF 0x3f3f3f3f
#define rep(i,a,b) for(int i=a;i<(b);++i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define pb push_back
#define de(x) cout << #x << "=" << x << endl
using namespace std;
//typedef __int64 ll;
//typedef long long ll;
int m,n;
int a[100010] = {0};
int b[100010] = {0};
int f(int mid) 
{
	int ans = 0;
	rep(i,0,n) if(mid > a[i]) ans += mid - a[i];else break;
	for(int i = m-1;i >-1; --i ) if(b[i] > mid) ans+= b[i]-mid; else break;
	return ans; 
}
int main()
{
	int L = INF;
	int R = -INF;
	scanf("%d %d",&n,&m);
	rep(i,0,n)
	{
		scanf("%d",a+i);
		L = Min(L,a[i]);
		R = Max(R,a[i]);
	}
	sort(a,a+n);
	
	rep(i,0,m)
	{
		scanf("%d",b+i);
		L = Min(L,b[i]);
		R = Max(R,b[i]);
	}
	sort(b,b+m);
	L--; 
	while(R-L>1)
	{
		int mid = (L+R)/2;
		int mmid = (mid+R)/2;
		if(f(mid) > f(mmid)) L = mid;
		else R = mmid;
	}
	printf("%d\n",Min(Min(Min(f(R),f(L)),f(R+1)),f(L-1)));
	return 0;
}

