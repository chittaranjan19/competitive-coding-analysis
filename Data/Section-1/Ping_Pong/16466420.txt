#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int p = 239;
const int MAX_N = 1000000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

int main()
{
    //ifstream ifs("input.txt");
    //ofstream ofs("output.txt");
    //freopen("candies.in", "r", stdin);
    //freopen("candies.out", "w", stdout);
    //ios_base::sync_with_stdio(0);
    //cin.tie(0);
    int x1, y1, z1, x2, y2, z2, p1, p2, p3;
    scanf("%d %d %d %d %d %d %d %d %d", &x1, &y1, &z1, &x2, &y2, &z2, &p1, &p2, &p3);
    int l = -1, r = 1000000000, mid;
    while (r - l > 1)
    {
        mid = (l + r) / 2;
        bool b = false;
        for (int i = 0; i + y1 <= 200 && i * p2 <= mid; i++)
        {
            int last = mid - i * p2;
            if (i + y1 <= z2)
                continue;
            int life2 = x2 / (i + y1 - z2) + ((x2 % (i + y1 - z2)) ? 1 : 0);
            for (int j = 0; j + z1 <= 100 && j * p3 <= last; j++)
            {
                int last1 = last - j * p3;
                if (y2 <= j + z1)
                {
                    b = true;
                    break;
                }
                else
                {
                    int life1 = (x1 + last1 / p1) / (y2 - j - z1) + (((x1 + last1 / p1) % (y2 - j - z1)) ? 1 : 0);
                    if (life1 > life2)
                    {
                        b = true;
                        break;
                    }
                }
            }
            if (b)
                break;
        }
        if (b)
            r = mid;
        else
            l = mid;
    }
    printf("%d", r);
    return 0;
}
