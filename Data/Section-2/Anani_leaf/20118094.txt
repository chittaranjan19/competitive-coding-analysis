#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<string>
#include<queue>
#include<vector>
#include<map>
#include<cmath>
#define lowbit(x) ((x)&(-x))
#define Max(a,b) (a>b?a:b)
#define Min(a,b) (a>b?b:a)
#define lron(x)  ((x) << 1)
#define rson(x) ((x)<<1|1)
#define dad(x) ((x)>>1)
#define INF 0x3f3f3f3f
#define rep(i,a,b) for(int i=a;i<(b);++i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define pb push_back
#define de(x) cout << #x << "=" << x << endl
using namespace std;
typedef __int64 ll;
//typedef long long ll;
int const Max_N = 100005;
ll arr[Max_N] = {0};
ll ans = 0;
int main()
{
	ll N,pos;
	scanf("%I64d%I64d",&N,&pos);
	for (int i = 0; i < N; i++) scanf("%I64d",arr+i);
	if(N==1)
	{
		printf("0\n");
		return 0;
	}
	if(N==2)
	{
		printf("%I64d\n",min(abs(arr[0]-pos),abs(arr[1]-pos)));
		return 0;
	}
	sort (arr,arr+N);
	if(abs(arr[0]-pos)>abs(arr[N-1]-pos))
	{
		ans = arr[N-1] - arr[1] + min(abs(arr[1]-pos),abs(arr[N-1]-pos));
	}
	else if(abs(arr[0]-pos)<abs(arr[N-1]-pos))
	{
		ans = arr[N-2] - arr[0] + min(abs(arr[0]-pos),abs(arr[N-2]-pos));
	}
	else if(abs(arr[1]-pos)>abs(arr[N-2]-pos))
	{
		ans = arr[N-2] - arr[0] + min(abs(arr[0]-pos),abs(arr[N-2]-pos));
	}
	else ans = arr[N-1] - arr[1] + min(abs(arr[1]-pos),abs(arr[N-1]-pos));
	printf("%I64d\n",ans);
	return 0;
}

