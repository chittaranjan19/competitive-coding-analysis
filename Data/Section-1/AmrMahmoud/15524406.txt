#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

pair<LL, LL> arr[2005];
bool v[2005];
LL x, y, xx, yy, n;

LL dist(LL x, LL y, LL xx, LL yy)
{
  return (x - xx) * 1LL * (x - xx) + (y - yy) * 1LL * (y - yy);
}

LL get()
{
  LL r2 = 0;
  for(int i=0;i<n;i++)
    if(!v[i])
      r2 = max(r2, dist(xx, yy, arr[i].f, arr[i].s));
  return r2;
}

LL getnext()
{
  LL r1 = INF_LL;
  for(int i=0;i<n;i++)
    if(!v[i])
      r1 = min(r1, dist(x, y, arr[i].f, arr[i].s));
  for(int i=0;i<n;i++)
    if(!v[i])
    {
      if(dist(x, y, arr[i].f, arr[i].s) <= r1)
        v[i] = true;
    }
  return r1;
}

int main()
{
  //freopen("farmer.in", "r", stdin);
  //freopen("farmer.out", "w", stdout);
  cin >> n >> x >> y >> xx >> y;
  for(int i=0;i<n;i++)
    scanf("%d %d", &arr[i].f, &arr[i].s);
  LL r1 = 0;
  LL r2 = get();
  LL res = r1 + r2;
  while(r2)
  {
    r1 = getnext();
    r2 = get();
    res = min(res, r1 + r2);
  }
  cout << res;
  return 0;
}
