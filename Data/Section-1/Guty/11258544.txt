#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int signo(int x)
{
	if (x > 0)
		return 1;
	else
		return -1;
}

int main()
{
	int v1,v2,t,d;
	int l = 0;
	cin >> v1 >> v2 >> t >> d;
	if (d == 0)
		cout << v1 * t << endl;
	else if (t == 2)
		cout << v1 + v2 << endl;
	else
	{ 
		while ((abs(v1-v2)+d-1)/d < t-1)
		{
			l += v1;
			v1 += d;
			t--;
		}
		v1 = v2 +  signo(v1-v2)*(t-1)*d;
		l += v1; 
		forn(i,t-2)
		{
			v1 = v1 - signo(v2-v1)*d;
			l += v1;
		}
		cout << l+v2 << endl;
	}
	return 0;
}
