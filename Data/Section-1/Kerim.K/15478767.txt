//Cok tavsanin pesinde kosan hicbrini yakalayamaz!
#include<bits/stdc++.h>
#define MAXN 400009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN],in[MAXN],out[MAXN],tim,pos[MAXN],lazy[MAXN<<2],ans[69];
vector<int>adj[MAXN],s[MAXN<<2];
void dfs(int nd,int pr){
	in[nd]=++tim;
	pos[tim]=nd;
	for(int i=0;i<adj[nd].size();i++){
		int to=adj[nd][i];
		if(to!=pr)
			dfs(to,nd);
	}
	out[nd]=tim;
}
void build(int nd,int x,int y){
	if(x==y){
		s[nd].pb(arr[pos[x]]);
		return;
	}
	int mid=(x+y)>>1;
	build(nd<<1,x,mid);
	build(nd<<1|1,mid+1,y);
	for(int i=0;i<s[nd<<1].size();i++)
		if(!binary_search(all(s[nd]),s[nd<<1][i]))
			s[nd].pb(s[nd<<1][i]);
	sort(all(s[nd]));		
	for(int i=0;i<s[nd<<1|1].size();i++)
		if(!binary_search(all(s[nd]),s[nd<<1|1][i]))
			s[nd].pb(s[nd<<1|1][i]);
	sort(all(s[nd]));	
}
void upd(int nd,int v){
	s[nd].resize(0);
	s[nd].pb(v);
	lazy[nd]=v;	
}
void shift(int nd){
	if(lazy[nd]==0)
		return;
	upd(nd<<1,lazy[nd]);
	upd(nd<<1|1,lazy[nd]);
	lazy[nd]=0;
}
void inc(int l,int r,int v,int nd,int x,int y){
	if(l>y or x>r)
		return;
	if(l<=x and y<=r){
		upd(nd,v);
		return;
	}
	int mid=(x+y)>>1;
	shift(nd);
	inc(l,r,v,nd<<1,x,mid);
	inc(l,r,v,nd<<1|1,mid+1,y);
	s[nd].resize(0);
	for(int i=0;i<s[nd<<1].size();i++)
		if(!binary_search(all(s[nd]),s[nd<<1][i]))
			s[nd].pb(s[nd<<1][i]);
	sort(all(s[nd]));		
	for(int i=0;i<s[nd<<1|1].size();i++)
		if(!binary_search(all(s[nd]),s[nd<<1|1][i]))
			s[nd].pb(s[nd<<1|1][i]);
	sort(all(s[nd]));	
}
void tap(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return;
	if(l<=x and y<=r){
		for(int i=0;i<s[nd].size();i++)
			ans[s[nd][i]]=true;
		return;
	}
	int mid=(x+y)>>1;
	shift(nd);
	tap(l,r,nd<<1,x,mid);
	tap(l,r,nd<<1|1,mid+1,y);
}
int main(){
	int n,q;
	scanf("%d%d",&n,&q);
	for(int i=1;i<=n;i++)
		scanf("%d",arr+i);
	for(int i=0;i<n-1;i++){
		int u,v;
		scanf("%d%d",&u,&v);
		adj[u].pb(v);
		adj[v].pb(u);
	}
	dfs(1,0);
	build(1,1,n);
	while(q--){
		int type,v,c;
		scanf("%d%d",&type,&v);
		if(type==1){
			scanf("%d",&c);
			inc(in[v],out[v],c,1,1,n);
		}
		else{
			fill(ans,ans+67,0);
			tap(in[v],out[v],1,1,n);
			int mx=0;
			for(int i=1;i<=60;i++)
				if(ans[i])
					mx++;
			printf("%d\n",mx);		
		}
	}
	return 0;
}

