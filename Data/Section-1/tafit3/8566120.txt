import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.SortedSet;
import java.util.TreeSet;

public class ProblemB {
    BufferedReader rd;

    private ProblemB() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        rd.readLine();
        int[] a = intarr();
        SortedSet<Integer> s = new TreeSet<>();
        for(int x: a) {
            s.add(x);
        }
        int[] u = new int[s.size()];
        int p = 0;
        for(Integer x: s) {
            u[p++] = x;
        }
        int res = 0;
        p = u.length-1;
        while(p > 0) {
            int d = 2;
            while(u[p]/d > res) {
                int y = u[p]/d;
                if(u[p]%d==0) {
                    y++;
                }
                int q = Arrays.binarySearch(u, y);
                if(q < 0) {
                    q = -1-q;
                }
                if(q >= 0 && q < p) {
                    res = Math.max(res, u[p]%u[q]);
                }
                d++;
            }
            p--;
        }
        out(res);
    }

    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = s.split(" ");
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemB();
    }
}
