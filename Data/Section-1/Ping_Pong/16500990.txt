#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int p = 239;
const int MAX_N = 1000;
const long double pi = 3.1415926535897932384626;
const long double eps = 1e-6;

int main()
{
    //ifstream ifs("input.txt");
    //ofstream ofs("output.txt");
    //freopen("candies.in", "r", stdin);
    //freopen("candies.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n, m;
    scanf("%d %d", &n, &m);
    int b[n];
    for (int i = 0; i < n; i++)
        scanf("%d", &b[i]);
    vector<pair<int, int> > v(m);
    for (int i = 0; i < m; i++)
        scanf("%d %d", &v[i].first, &v[i].second);
    vector<pair<int, int> > a;
    int curr = 0;
    for (int i = m - 1; i >= 0; i--)
        if (v[i].second > curr)
        {
            a.push_back(v[i]);
            curr = v[i].second;
        }
    reverse(a.begin(), a.end());
    a.push_back(make_pair(1, 0));
    int len = a[0].second;
    int c[len];
    for (int i = 0; i < len; i++)
        c[i] = b[i];
    sort(c, c + len);
    int l = 0, r = len - 1;
    for (int i = 0; i < a.size() - 1; i++)
        if (a[i].first == 1)
        {
            for (int j = a[i].second - 1; j >= a[i + 1].second; j--)
            {
                b[j] = c[r];
                r--;
            }
        }
        else
        {
            for (int j = a[i].second - 1; j >= a[i + 1].second; j--)
            {
                b[j] = c[l];
                l++;
            }
        }
    for (int i = 0; i < n; i++)
        printf("%d ", b[i]);
    return 0;
}