#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>

using namespace std;

int max_pair(const vector<int> &v1, const vector<int> &v2){
    vector<vector<int>> s;
    for (size_t i = 0; i < v1.size(); ++i)
        s.push_back(vector<int>(v2.size(), 0));

    for (size_t i = 1; i < v1.size(); ++i)
        for (size_t j = 1; j < v2.size(); ++j){
            //cout << i << " " << j << endl;
            if (abs(v1[i] - v2[j]) <= 1){
                //cout << "<=" << endl;
                s[i][j] = s[i - 1][j - 1] + 1;
            }
            else{
                s[i][j] = max(s[i - 1][j], s[i][j - 1]);
                //cout << ">" << endl;
            }
            //cout << v1[i] << " " << v2[j] << endl;
            //cout << i << " " << j << " " << s[i][j] << endl;
        }

    return s[v1.size() - 1][v2.size() - 1];
}

int main(){
    int m, n;
    cin >> m;
    vector<int> v1(m + 1, 0);
    for (int i = 0; i < m; ++i)
        cin >> v1[i + 1];
    cin >> n;
    vector<int> v2(n + 1, 0);
    for (int i = 0; i < n; ++i)
        cin >> v2[i + 1];

    sort(v1.begin(), v1.end());
    sort(v2.begin(), v2.end());

    cout << max_pair(v1, v2) << endl;

    return 0;
}
