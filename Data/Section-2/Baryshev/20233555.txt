#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
#include <fstream>
#include <tuple>
#include <iomanip>
#include <time.h>
#include <stdlib.h>
#include <stdio.h>

using namespace std;

#define sz(a) (int(a.size()))
#define mp make_pair
#define pb push_back
#define ft first
#define sc second
#define g(a, b) get<a> (b)

typedef long long ll;
typedef long double ld;
typedef pair<long long, long long> pt;

const int MAX_N = 10010;
const long long mod = 1e9 + 7;

int main(){
    int n;
    int p1, p2, d;
    cin >> n;
    int q[501][501];
    for (int i = 0;i < n; i++)
        for (int j = 0; j < n; j++){
        cin >> q[i][j];
        if (q[i][j] == 0)
        {
            p1 = i;
            p2 = j;
        }
        }
    if (n == 1){
        cout << 1;
        return 0;
    }
    d = p1;
    if (d == 0) d = 1;
    else d = 0;
    int sum = 0;
    for (int i = 0; i < n; i++)
        sum += q[d][i];
    int sum1 = 0;
    for (int i = 0; i < n; i++)
        sum1 += q[p1][i];
    if (sum1 >= sum){
        cout << -1;
        return 0;
    }
    int x = sum - sum1;
    q[p1][p2] = x;
    for (int i = 0; i < n; i++){
        int sum2 = 0;
        for (int j = 0; j < n; j++)
            sum2 += q[i][j];
        if (sum2 != sum){
            cout << -1;
            return 0;
        }
    }
    for (int j = 0; j < n; j++){
        int sum2 = 0;
        for (int i = 0; i < n; i++)
            sum2 += q[i][j];
        if (sum2 != sum){
            cout << -1;
            return 0;
        }
    }
    int sum2 = 0;
    for (int i = 0; i < n ;i++)
        sum2 += q[i][i];
    if (sum2 != sum){
            cout << -1;
            return 0;
        }
    sum2 = 0;
    int j = n - 1;
    for (int i = 0; i < n; i++)
        sum2 += q[i][j--];
    if (sum2 != sum){
            cout << -1;
            return 0;
        }
    cout << x;
return 0;
}