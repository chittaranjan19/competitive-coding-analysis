#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define PB pop_back
#define pf push_front
#define PF pop_front
#define ll long long int
#define mod 1000000007
#define mp make_pair
list <int> *adj;
list <int> *adk;
stack <int> s;
map <int,int> ma;
int *a;

ll ans1;
ll ans2;
void dfs(int node,bool *visit)
{
    visit[node]=true;
    std::list <int>::iterator it;
    for(it=adj[node].begin();it!=adj[node].end();it++)
    {
        if(visit[*it]==false)
            dfs(*it,visit);
    }
    s.push(node);

}
void dfs1(int node,bool *visit)
{
    visit[node]=true;
    ma[a[node]]++;
    std::list <int>::iterator it;
    for(it=adk[node].begin();it!=adk[node].end();it++)
    {
        if(visit[*it]==false)
            dfs1(*it,visit);
    }

}
void Kosa(int n)
{
    bool *visit=new bool[n];
    for(int i=0;i<n;i++)
        visit[i]=false;
    for(int i=0;i<n;i++)
    {
        if(visit[i]==false)
        {
            dfs(i,visit);
        }
    }
    for(int i=0;i<n;i++)
        visit[i]=false;
    ans2=1,ans1=0;
   
    while(!s.empty())
    {
        int k=s.top();
        if(visit[k]==false)
        {
            ma.clear();
            dfs1(k,visit);
            std::map <int,int> ::iterator jt=ma.begin();
            int min=200000000,cou=0;
            ans1+=jt->first;
            ans2=((ans2%mod)*(jt->second))%mod;
            ma.clear();



        }
        else
            s.pop();
    }
}

int main()
{
    int n;
    cin>>n;
    a=new int[n];
    for(int i=0;i<n;i++)
        cin>>a[i];
    adj=new list<int>[n];
    adk=new list<int>[n];
    int m;
    cin>>m;
    int y,z;
    while(m--)
    {
        cin>>y>>z;
        y--;z--;
        adj[y].pb(z);
        adk[z].pb(y);
    }
    Kosa(n);
    cout<<ans1<<" "<<ans2<<endl;
    
}