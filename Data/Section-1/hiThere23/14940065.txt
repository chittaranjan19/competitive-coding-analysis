#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 100100
#define maxC 1000000007
#define F first
#define S second
#define pb push_back

using namespace std;
int n, m, num[mn], low[mn], dem = 0;
vector<int> g[mn];
long long cost[mn], sum = 0, way = 1;
stack<int> st;

void setup()
{
    cin >> n;
    FOR(i, 1, n)
        cin >> cost[i];
    int u, v;
    cin >> m;
    FOR(i, 1, m)
    {
        cin >> u >> v;
        g[u].pb(v);
    }
}

void dfs(int u)
{
    dem ++;
    num[u] = low[u] = dem;
    st.push(u);
    FOR(i, 0, int(g[u].size()) - 1)
    {
        int v = g[u][i];
        if (num[v])
            low[u] = min(low[u], num[v]);
        else
        {
            dfs(v);
            low[u] = min(low[u], low[v]);
        }
    }
    if (low[u] == num[u])
    {
        int v, no;
        long long Min = maxC;
        do
        {
            v = st.top();
            st.pop();
            num[v] = low[v] = maxC;
            if (Min == cost[v])
                no ++;
            if (Min > cost[v])
                Min = cost[v], no = 1;
        }
        while(v != u);
        sum += Min;
        way = (way * no) % maxC;
    }
}

void xuly()
{
    FOR(i, 1, n)
    if (num[i] == 0)
        dfs(i);
    cout << sum << ' ' << way;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
