#include <string>
#include <algorithm>
#include <math.h>
#include <vector>
#include <queue>
#include <stack>
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <set>
#include <cstring>
#include <map>
#include <unordered_map>
#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;
#define ll long long
#define db double
#define fs first
#define sc second
#define mp make_pair

map<int, int> b, s;

int main()
{
    //ios::sync_with_stdio(false);
    int n, ss;
    cin >> n >> ss;
    for (int i = 0; i < n; i++)
    {
        char ch; int q, p;
        cin >> ch >> p >> q;
        if (ch == 'B')
        {
            if (b.count(p) == 0)
                b[p] = q;
            else b[p] += q;
        }
        else
        {
            if (s.count(p) == 0)
                s[p] = q;
            else s[p] += q;
        }
    }
    set<pair<int, int>> ms, mb;
    for (map<int, int>::iterator it = s.begin(); it != s.end(); it++)
    {
        pair<int, int> t = mp((it->fs), it -> sc);
        ms.insert(t);
    }
    for (map<int, int>::iterator it = b.begin(); it != b.end(); it++)
    {
        pair<int, int> t = mp(-(it->fs), it->sc);
        mb.insert(t);
    }
    for (int i = 0; i < ss; i++)
    {
        if (ms.size() == 0) break;
        pair<int, int> t = *ms.begin();
        cout << 'S' << ' ' << t.fs << ' ' << t.sc << endl;
        ms.erase(ms.begin());
    }
    for (int i = 0; i < ss; i++)
    {
        if (mb.size() == 0) break;
        pair<int, int> t = *mb.begin();
        cout << 'B' << ' ' << -t.fs << ' ' << t.sc << endl;
        mb.erase(mb.begin());
    }

    return 0;
}