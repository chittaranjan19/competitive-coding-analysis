#include <iostream>
#include <cstdio>
#include <cstring>
#include <queue>

using namespace std;

const int maxn = 400 + 5;

int g[maxn][maxn], d[maxn];

int bfs(int num, int n)
{
    queue<int> que;
    memset(d, -1, sizeof(d));
    d[1] = 0;
    que.push(1);
    while(!que.empty())
    {
        int u = que.front();
        que.pop();
        if(u == n) break;
        for(int v = 1; v <= n; ++v)
        {
            if(g[u][v] == num && d[v] == -1)
            {
                d[v] = d[u] + 1;
                que.push(v);
            }
        }
    }
    return d[n];
}

int main()
{
    int n, m;
    while(~scanf("%d%d", &n, &m))
    {
        memset(g, 0, sizeof(g));
        int flag = 1;
        for(int i = 0; i < m; ++i)
        {
            int u, v;
            scanf("%d%d", &u, &v);
            g[u][v] = g[v][u] = 1;
            if(u == 1 && v == n || u == n && v == 1)
            {
                flag = 0;
            }
        }
        printf("%d\n", bfs(flag, n));
    }
    return 0;
}
