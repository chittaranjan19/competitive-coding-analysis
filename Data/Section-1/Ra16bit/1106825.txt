#include <cstdio>
#include <map>
#include <vector>
using namespace std;
int n,m,i,j,k,p,it,e,a[100100],b[1044],c[1044],d[1044],u[1044],fi,fr,z[1044],nx[1044],fp,fq,ff,cur,md=1000000007;
vector <int> v[1044];
long long le,ri,w,r,df;
map <int, int> M;
void rec(int l, int s) {
  if (s>0) M[s]=++e;
  if (l==9) return;
  rec(l+1,s*10+4);
  rec(l+1,s*10+7);
}
int main() {
  rec(0,0);
  scanf("%d",&n);
  for (i=0; i<n; i++) {
    scanf("%d",&a[i]);
    cur=M[a[i]];
    if (cur) {
      b[m]=i; c[m]=cur;
      d[m++]=v[cur].size();
      v[cur].push_back(i);
    }
  }
  for (i=k=0; i<n; i++) {
    ++it;
    if (k<m && b[k]==i) k++;
    le=i+1; ri=n-1;
    w=((ri-le+1LL)*(ri-le+2LL))/2;
    r+=(i-(k==0?-1:b[k-1]))*w;
    fi=0; fr=2;
    z[0]=i; z[1]=n;
    nx[0]=1; nx[1]=-1;
    for (j=k-1; j>=0; j--) {
      cur=c[j];
      if (u[cur]!=it) {
        u[cur]=it;
        ff=0; fp=z[ff]; fq=z[nx[ff]];
        for (p=d[j]+1; p<v[cur].size(); p++) {
          df=v[cur][p];
          while (df>=fq) { ff=nx[ff]; fp=z[ff]; fq=z[nx[ff]]; }
          w-=(df-fp)*(fq-df);
          z[fr]=df; nx[fr]=nx[ff]; nx[ff]=fr;
          ff=fr++; fp=df;
        }
      }
      r+=(b[j]-(j==0?-1:b[j-1]))*w;
    }
  }
  printf("%I64d\n",r);
  return 0;
}
