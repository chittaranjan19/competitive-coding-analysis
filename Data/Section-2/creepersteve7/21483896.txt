#include <bits/stdc++.h>

using namespace std;

struct fuck{
    int trn;
    int val;
};

fuck l[200005];

vector <int> a[200005];
int c[200005], v[200005];
int n,m,k,x,y,s,nxt=2;
int mxm,t;

void DFS(int nod, bool init, int turn){
    v[nod]=1;
    if(init) mxm=0,t=0;
    t++;
    if(l[c[nod]].trn!=turn){
        l[c[nod]]={turn,1};
    }
    else l[c[nod]].val++;
    if(l[c[nod]].val>mxm) mxm=l[c[nod]].val;
    for(int i=0;i<a[nod].size();i++){
        if(!v[a[nod][i]]) DFS(a[nod][i],false,turn);
    }
    if(init){
        s+=(t-mxm);
        while(nxt<=n){
            if(!v[i]){
                DFS(i,true,turn+1);
                return;
            }
            nxt++;
        }
    }
}

int main()
{
    cin >> n >> m >> k;
    for(int i=1;i<=n;i++) cin >> c[i];
    for(int i=1;i<=m;i++){
        cin >> x >> y;
        a[x].push_back(y);
        a[y].push_back(x);
    }
    DFS(1,true,0);
    cout << s;
}
