#include <cstdint>
#include <iostream>

#define int16 int_fast16_t

using namespace std;

const int16 N = 3e4 + 1;
int16 n, d, jewels[N], ans[N];
bool able[N][N];

int main() {
    cin.sync_with_stdio(0);
    cin >> n >> d;
    for (int16 i = 0, jewel; i < n; ++i) {
        cin >> jewel;
        ++jewels[jewel];
    }
    able[0][d] = 1;
    for (int16 i = 0; i < N; ++i) {
        for (int16 l = 1; i + l < N; ++l) {
            for (int16 dl = -1; dl < 2; ++dl) {
                able[i][i + l] |= (i >= l + dl && l + dl > 0 && able[i - l - dl][i]);
            }
            if (able[i][i + l]) {
                ans[i + l] = max(ans[i + l], ans[i] + jewels[i + l]);
                if (l == 1) {
                    break;
                }
            }
        }
    }
    cout << ans[N - 1] << "\n";
    return 0;
}