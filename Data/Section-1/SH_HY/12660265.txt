#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
using namespace std;
typedef unsigned long long LL;
int a[300100];
int main()
{
    int n, k;
    cin >> n >> k;
    for(int i = 1; i <= n; i++)
        cin >> a[i];
    sort(a+1, a+n+1);
    int m = min(k, 100);
    LL ans = 0, ans1 = 0;
    for(int i = 1; i <= m+1; i++) {
        int l = i;
        ans1 = 0;
        for(int j = 1; j < k+1; j++) {
            int t = j;
            while(t+k <= n) {
                if(l == n) {
                    ans1 += abs(a[l] - a[1]);
                } else if(l > n) {
                    ans1 += abs(a[l%n] - a[(l+1)%n]);
                } else {
                    ans1 += abs(a[l] - a[l+1]);
                }
                l++;
                t += k;
            }
            l++;
        }
        //cout << ans1 << "\n";
        if(i == 1)
            ans = ans1;
        else
            ans = min(ans1, ans);
    }
    //cout << ans1 << " " << ans2 << "\n";
    cout << ans << "\n";
    return 0;
}
/*
#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
using namespace std;
typedef long long LL;
LL a[300100];
int main()
{
    int n, k;
    cin >> n >> k;
    for(int i = 1; i <= n; i++)
        cin >> a[i];
    sort(a+1, a+n+1);
    int j = 1;
    LL ans1 = 0, ans2 = 0;
    for(int i = 1; i < k+1; i++) {
        int t = i;
        while(t+k <= n) {
            ans1 += abs(a[j] - a[j+1]);
            t += k;
            j++;
        }
        j++;
    }
    j = n;
    for(int i = 1; i < k+1; i++) {
        int t = i;
        while(t+k <= n) {
            ans2 += abs(a[j] - a[j-1]);
            t += k;
            //cout << a[j] << " " << a[j-1] << "\n";
            j--;
            //cout << ans2 << "\n";
        }
        j--;
    }
    //cout << ans1 << " " << ans2 << "\n";
    LL ans = min(ans1, ans2);
    cout << ans << "\n";
    return 0;
}
*/
