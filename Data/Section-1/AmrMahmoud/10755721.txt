#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

vector<int> tree[200005];
int arr[200005];

LL DP[200005];

LL solve(int ind, int parent)
{
  LL &temp = DP[ind];
  if(temp != -1) return temp;
  temp = arr[ind];
  LL mini = INF_LL;
  int cnt = 0;
  for(int i=0;i<tree[ind].size();i++)
  {
    int nxt = tree[ind][i];
    if(nxt == parent) continue;
    temp+=solve(nxt, ind);
    mini = min(mini, 1LL * arr[nxt]);
    cnt++;
  }
  if(mini != INF_LL && (cnt & 1))
    temp-=mini;
  return temp;
}

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("assignment.in", "r", stdin);
  //freopen("assignment.out", "w", stdout);
  int n, x, y;
  cin >> n;
  for(int i=0;i<n;i++)
  {
    cin >> x >> y;
    if(x != -1)
    {
      x--;
      tree[i].pb(x);
      tree[x].pb(i);
    }
    arr[i] = y;
  }
  setdp(DP);
  cout << solve(0, 0);
  return 0;
}
