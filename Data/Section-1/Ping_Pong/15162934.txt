#include <iostream>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const long long MAX_N = 100000;
int a[MAX_N], dp[MAX_N][2];

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> a[i];
    dp[0][0] = 1;
    dp[0][1] = 1;
    for (int i = 1; i < n; i++)
    {
        if (abs(a[i] - a[i - 1]) >= 2)
        {
            dp[i][0] = 1;
            dp[i][1] = 1;
        }
        else if (a[i] - a[i - 1] == 1)
        {
            dp[i][0] = 1;
            dp[i][1] = dp[i - 1][0] + 1;
        }
        else if (a[i] - a[i - 1] == -1)
        {
            dp[i][1] = 1;
            dp[i][0] = dp[i - 1][1] + 1;
        }
        else if (a[i] - a[i - 1] == 0)
        {
            dp[i][0] = dp[i - 1][0] + 1;
            dp[i][1] = dp[i - 1][1] + 1;
        }
    }
    int ans = 0;
    for (int i = 0; i < n; i++)
    {
        ans = max(ans, dp[i][0]);
        ans = max(ans, dp[i][1]);
    }
    cout << ans;

    //int tmp;
    //cin >> tmp;
    return 0;
}