#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

string arr[] = {"++**",
"+*+*",
"++++",
"+**+"};
int m;
vector<string> v;

string inv(string &s)
{
  string res = "";
  for(int i=0;i<s.size();i++)
  {
    if(s[i] == '+') res+="*";
    else res += "+";
  }
  return res;
}

int main()
{
  int n;
  scanf("%d", &n);
  if(n == 0)
  {
    cout << "+";
    return 0;
  }
  if(n == 1)
  {
    cout << "+*\n";
    cout << "++\n";
    return 0;
  }
  int cnt = 1 << n;
  m = cnt / 4;
  v.pb(arr[0]);
  v.pb(arr[1]);
  v.pb(arr[2]);
  v.pb(arr[3]);
  while(m > 1)
  {
    m /= 2;
    vector<string> tmp, inverse;
    for(int i=0;i<v.size();i++)
    {
      inverse.pb(inv(v[i]));
      tmp.pb(v[i]);
      tmp.pb(v[i]);
    }
    for(int i=0;i<tmp.size();i++)
    {
      int x = i / 2 + 1;
      if(x == v.size()) x = 0;
      if(i % 2 == 0) tmp[i] += v[x];
      else tmp[i] += inverse[x];
    }
    v = tmp;
  }
  for(int i=0;i<v.size();i++)
    printf("%s\n", v[i].c_str());
  return 0;
}
