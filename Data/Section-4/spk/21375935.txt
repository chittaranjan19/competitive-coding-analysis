#include<bits/stdc++.h>

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define scantype int
#define lli long long int
#define N 100003

lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}

using namespace std;

void scan(scantype &x);

bool cmp(pair<char,int> a,pair<char,int> b)
{
       if(a.first<b.first)return true;
       if(a.first==b.first && b.second>a.second)return true;
       return false;
}

class custom
{
    public:
        bool operator()(pair<char,int> a,pair<char,int> b)
        {
         if(a.first<b.first)return true;
         if(a.first==b.first && b.second>a.second)return true;
         return false;
        }
};

int main(void)
{
  int m;
  cin>>m;
  char st[N];
  scanf("%s",st);
  vector<char> res;

  char max_need;int freq,last_pos;
  int len = strlen(st);

  set< pair<char,int>,custom > Set;

  for(int i=0;i<m;i++)
    Set.insert({st[i],i});

  max_need = (*Set.begin()).first;
  last_pos = (*Set.begin()).second;
  freq = 1;

  for(int i=m,last=0;i<len;i++,last++)
  {
       Set.erase({st[last],last});
       Set.insert({st[i],i});

       if( (*Set.begin()).first > max_need)
       {
              max_need = (*Set.begin()).first;
              last_pos = (*Set.begin()).second;
              freq = 1;
       }
       else if( (*Set.begin()).first == max_need && last_pos!=(*Set.begin()).second)
       {
              freq++;
              last_pos = (*Set.begin()).second;
       }
  }

  for(int i=0;i<=max_need-'a';i++)
  {
         if(i==max_need-'a')
               for(int j=0;j<freq;j++)cout<<(max_need);
         else
               for(int j=0;j<len;j++)if(st[j]==(i+'a'))cout<<st[j];
  }


  return 0;
}









void scan(scantype &x)
{
    /*register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}*/

    register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
