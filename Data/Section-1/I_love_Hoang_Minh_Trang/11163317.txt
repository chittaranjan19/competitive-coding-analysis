uses    math;
const   maxn    =trunc(1e5)*2;

type    arr1    =array[0..maxn] of longint;
        arr2    =array[0..maxn,0..2] of longint;

var     n       :longint;
        x, h    :arr1;
        f       :Arr2;
        i       :longint;

procedure hv(var a,b:longint);
var     tg      :longint;
begin
        tg:=a;a:=b;b:=tg;
end;

procedure QS(l,r:longint);
var     i, j, xx ,g:longint;
begin
        i:=l;j:=r;
        g:=l+random(r-l+1);
        xx:=x[g]+h[g];
        repeat
                while x[i]+h[i]<xx do inc(i);
                while x[j]+h[j]>xx do dec(j);
                if i<=j then
                begin
                        hv(x[i],x[j]);
                        hv(h[i],h[j]);
                        inc(i);dec(j);
                end;
        until i>j;
        if l<j then QS(l,j);
        if i<r then QS(i,r);
end;

begin
        readln(n);
        for i:=1 to n do readln(x[i],h[i]);
        QS(1,n);
        fillchar(f,sizeof(f),0);
        f[1,0]:=1;
        f[1,1]:=1;
        f[1,2]:=1;
        for i:=2 to n do
        begin
                f[i,0]:=max(f[i-1,0],f[i-1,1]);
                if x[i-1]+H[i-1]<H[i] then f[i,0]:=max(f[i,0],f[i-1,2]);

                //
                if x[i-1]>=x[i]-h[i] then f[i,1]:=0 else
                begin
                        f[i,1]:=max(f[i-1,0],f[i-1,1])+1;
                        if x[i-1]+h[i-1]<x[i]-h[i] then f[i,1]:=max(f[i,1],f[i-1,2]+1);
                end;
                //
                f[i,2]:=max(f[i-1,0],f[i-1,1])+1;
                if x[i-1]+h[i-1]<x[i] then f[i,2]:=max(f[i,2],f[i-1,2]+1);
        end;
        writeln(max(max(f[n,0],f[n,1]),f[n,2]));
end.