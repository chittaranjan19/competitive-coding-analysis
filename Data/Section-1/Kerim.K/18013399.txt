#include<bits/stdc++.h>
#define MAXN 200009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"xyzer"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> line;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
template<class T> bool umx(T& a, T b) { if(a.ss < b.ss){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
char s[3][MAXN];
int vis[3][MAXN],con[3][MAXN];
int dx[]={+1,0,-1,0},n,q;
int dy[]={0,+1,0,-1},S=1;
int dis[3][MAXN];
line last[MAXN];
void dfs(int x,int y){
	con[x][y]=S;vis[x][y]=1;
	umx(last[S],mp(x,y));
	for(int i=0;i<4;i++){
		int tox=x+dx[i];int toy=y+dy[i];
		if(tox>=1 and tox<=2 and toy>=1 and toy<=n and vis[tox][toy]==0)
			dfs(tox,toy);
	}
}
int tap(int x,int y){
	if(s[x][y]=='X')
		return INF;
	int res=INF;	
	for(int i=0;i<3;i++){
		int tox=x+dx[i];int toy=y+dy[i];
		if(tox>=1 and tox<=2 and toy>=1 and toy<=n)
			umin(res,dis[tox][toy]+1);
	}
	return res;
}
//NEWS
line east(line x,line y){
	if(y.ss>x.ss)
		return y;
	if(y.ss==x.ss and y.ff>x.ff)
		return y;
	return x;	
}
line west(line x,line y){
	if(y.ss<x.ss)
		return y;
	if(y.ss==x.ss and y.ff<x.ff)
		return y;
	return x;	
}
line op(int x){
	if(x<=n)
		return mp(1,x);
	return mp(2,x-n);	
}
void get(line x){
	cerr<<x.ff<<" "<<x.ss<<endl;
	return;
}
int main(){
	scanf("%d%d",&n,&q);
	for(int i=1;i<=2;i++){
		scanf("%s",s[i]+1);
		for(int j=1;j<=n;j++)
			if(s[i][j]=='X')
				vis[i][j]=1;
	}
	for(int i=1;i<=2;i++)
		for(int j=1;j<=n;j++)
			if(!vis[i][j])
				dfs(i,j),S++;S--;			
	fill(dis[1],dis[1]+MAXN,INF);		
	fill(dis[2],dis[2]+MAXN,INF);	
	for(int i=1;i<=S;i++){
		line k=last[i];
		dis[k.ff][k.ss]=0;
	}
	for(int j=n;j>=1;j--){
		for(int i=1;i<=2;i++)
			umin(dis[i][j],tap(i,j));
		for(int i=2;i>=1;i--)
			umin(dis[i][j],tap(i,j));					
	}
//	for(int i=1;i<=2;i++){
//		for(int j=1;j<=n;j++)
//			cout<<con[i][j]<<" ";
//		cout<<endl;
//	}
	while(q--){
		int x,y;
		scanf("%d%d",&x,&y);
		line a1=op(x);//get(a1);
		line a2=op(y);//get(a2);
		line a3=west(a1,a2);//get(a3);
		line a4=east(a1,a2);//get(a4);
		if(con[a3.ff][a3.ss]!=con[a4.ff][a4.ss]){
			printf("-1\n");
			continue;
		}
		printf("%d\n",dis[a3.ff][a3.ss]-dis[a4.ff][a4.ss]);
	}
	return 0;
}