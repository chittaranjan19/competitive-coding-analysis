//in the name of god
//25 / 7 /1395
// codeforcesContest376(Div2).cpp 
//

//#include "stdafx.h"
#include <iostream>
#include <algorithm>
#include <string>
#include <set>
#include <vector>


#define f(i,a,b) for(int i=a;i<b;i++)

using namespace std;

/*
int main()
{
string s;
cin>>s;
int ans=0;
int a,b;

a = s[0] - 'a';
b = 'a' - s[0];
if (a<0)
a+=26;
if (b<0)
b+=26;
ans+= min (a,b);
f (i , 0 , s.size()-1){

a = s[i] - s[i+1];
b = s[i+1] - s[i];
if (a<0)
a+=26;
if (b<0)
b+=26;
ans+=min (a,b);



}
cout<<ans<<endl;



return 0;
}




int a[200000+10];

int main(){
	int n;
	cin>>n;
	f(i,0,n){
		int t;
		cin>>t;
		if (!t)
			a[i]=0;
		else if (t%2)
			a[i]=1;
		else a[i]=2;

	}

	f(i,0,n){
		if (a[i]==1 && i!=n-1){
			if (a[i+1] == 0){
				cout<<"NO"<<endl;
				return 0;
			}
			else {
				a[i]--;
				a[i+1]--;}

		}
		else if (a[i]==1 ){
			cout<<"NO"<<endl;
			return 0;
		}
		
	}

	cout<<"YES"<<endl;

	return 0;}

	*/

set <int> s[200000+10];
int c[200000+10];

vector <int> g[200000+10];
bool visited[200000+10];

void dfs(int u , int c_[],int &m,int &size){
	visited[u]=true;
	size++;
	m = max(m , c[u]);
	c_[c[u]]++;
	f(i,0,g[u].size())
		if (!visited[g[u][i]])
			dfs(g[u][i],c_,m,size);

}

int main(){
	int n,m,k;
	cin>>n>>m>>k;

	f(i,0,n)
		cin>>c[i];

	
	f(i,0,m)
	{
		int u,v;
		cin>>u>>v;
		u--;
		v--;
		g[v].push_back(u);
		g[u].push_back(v);

	}
	int ans=0;
	
	f(i,0,n)
		if (!visited[i]){
			int c_s=0,size=0;
			int c_[200000+10]={0};
			dfs(i,c_,c_s,size);
			int te=-1;
			f(j,0,c_s+1)
				te=max(te,c_[j]);
			ans+=(size-te);

		}
		cout<<ans<<endl;
return 0;}