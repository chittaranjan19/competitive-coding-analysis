#include <bits/stdc++.h>
#include <iostream>
#include <cstdio>
#include <stdlib.h>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>

using namespace std;

typedef struct
{
    int x;
    int type;
    int num;
} event;

bool comp(event a, event b)
{
    if (a.x < b.x)
        return true;
    else if (a.x == b.x)
    {
        if (a.type < b.type)
            return true;
        else
            return false;
    }
    else
        return false;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n, s, f;
    cin >> n;
    bool used[n];
    for (int i = 0; i < n; i++)
        used[i] = false;
    event v[n * 2];
    vector<int> curr, ans;
    for (int i = 0; i < n; i++)
    {
        cin >> s >> f;
        if (s <= f)
            v[i * 2].x = s;
        else
            v[i * 2].x = f;
        v[i * 2].type = 0;
        v[i * 2].num = i;
        if (s <= f)
            v[i * 2 + 1].x = f;
        else
            v[i * 2 + 1].x = s;
        v[i * 2 + 1].type = 1;
        v[i * 2 + 1].num = i;
    }
    sort(v, v + n * 2, comp);
    /*for (int i = 0; i < n * 2; i++)
        cout << v[i].x << " " << v[i].type << " " << v[i].num << endl;*/
    for (int i = 0; i < n * 2; i++)
        if (v[i].type == 0)
            curr.push_back(v[i].num);
        else if (v[i].type == 1 && (!used[v[i].num]))
        {
            ans.push_back(v[i].x);
            for (int j = 0; j < curr.size(); j++)
                used[curr[j]] = true;
            curr.clear();
        }
    cout << ans.size() << endl;
    for (int i = 0; i < ans.size(); i++)
        cout << ans[i] << " ";
    return 0;
}
