#include <iostream>
#include <map>
#include <cmath>
using namespace std;
map< int, int > weight; // Cuz we only go up, use the point of starting point as index
int find_route(int mode, int u, int v, int w)
{   int ans = 0;
    while (u != v)
    {   if (v < u) swap(u, v);
        if (mode == 1) weight[v] += w;
        else ans += weight[v];
        v >>= 1;
    }
    return ans;
}
int main()
{   int q;
    cin >> q;
    for (int k = 0; k < q; k++)
    {   int mode;
        int u, v, w;
        cin >> mode;
        if (mode == 1)
        {   cin >> v >> u >> w;
            find_route(1, u, v, w);
        }
        else if (mode == 2)
        {   cin >> v >> u;
            cout << find_route(2, u, v, 0) << endl;
        }
    }
}
