import time


time0 = time.time()
clock0 = time.clock()


def find(m, lst, start, end):
    length = end-start+1
    if length == 1:
        if m >= lst[start]:
            return start+1
        return start

    z = start + length//2

    if lst[z-1] <= m < lst[z]:
        return z
    elif m >= lst[z]:
        return find(m, lst, z+1, end)
    elif m < lst[z]:
        return find(m, lst, start, z-1)


def task(m, n, X):
    if m >= X[n-1]:
        return n
    elif m < X[0]:
        return 0
    else:
        return find(m, X, 0, n-1)


def main():
    cache = {}
    n = int(input())
    X = sorted(map(int, input().split()))
    q = int(input())
    results = ""
    for i in range(q):
        m = int(input())
        if m in cache:
            #print(cache[m])
            results += str(cache[m]) + "\n"
        else:
            answer = task(m, n, X)
            cache[m] = answer
            #print(answer)
            results += str(answer) + "\n"
    print(results)

main()
