#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 401;
const int INF = 1e9 + 7;

using namespace std;
int n;
int a[MAXN][MAXN];
int cur, next;
int f[2][MAXN][MAXN];

void mmax(int &a, int b)
{
    if (a < b) a = b;
}

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("213C.inp", "r", stdin);
    freopen("213C.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n;
    FORE(i, 1, n) FORE(j, 1, n) cin >> a[i][j];
    cur = 1; next = 0;
    FORE(i, 1, n) FORE(j, 1, n) f[0][i][j] = -INF;
    f[0][1][1] = a[1][1];
    FORE(x, 2, n + n - 1){
        cur ^= 1;
        next ^= 1;
        FORE(i, 1, n) FORE(j, 1, n) f[next][i][j] = -INF;
        FORE(i, 1, n) FORE(j, 1, n)
            FORE(ni, i, i + 1) FORE(nj, j, j + 1)
            {
                int y1 = x + 1 - ni, y2 = x + 1 - nj;
                if (ni && nj && ni <= n && nj <= n && y1 <= n && y2 <= n && y1 && y2){
                    if (ni != nj){
                        mmax(f[next][ni][nj], f[cur][i][j] + a[ni][y1] + a[nj][y2]);
                    }
                    else mmax(f[next][ni][nj], f[cur][i][j] + a[ni][y1]);
                }
            }
    }
    cout << f[next][n][n];
    return 0;
}

