#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int arr[200005];
bool visited[1000005];

int main()
{
    //freopen("bricks.in","r",stdin);
    //freopen("bricks.out","w",stdout);
    ios_base::sync_with_stdio(0);
    int n,sol = 0;
    cin >> n;
    for(int i=0;i<n;i++)
        cin >> arr[i];
    sort(arr,arr+n);
    for(int i=0;i<n;i++)
    {
        if(arr[i] == 1) continue;
        if(visited[arr[i]]) continue;
        int temp = arr[i];
        while(temp <= arr[n-1])
        {
            visited[temp] = true;
            int L = i, R = n-1;
            while(R - L > 1)
            {
                int mid = L + (R - L) / 2;
                if(arr[mid] >= temp * 2)
                    R = mid;
                else L = mid;
            }
            if(arr[R] < temp * 2)
                L = R;
            sol = max(sol, arr[L] % temp);
            temp*=2;
        }
    }
    cout << sol;
    return 0;
}