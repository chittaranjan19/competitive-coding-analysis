#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;
int w, n, m;
int a[MAXN];
int R[MAXN][20];
int getmin(int l, int r)
{
    int k = log2(r - l + 1);
    return min(R[l][k], R[r - (1 << k) + 1][k]);
}

bool ok(int h)
{
    int rem = m;
    for(int i = 1; i <= n;){
        if (a[i] >= h){
            i++;
            continue;
        }
        int cost = h - getmin(i, max(n, i + w - 1));
       // if (h == 6) cout << i<<" ?"<<cost<<"| "<<n<<endl;
        if (rem < cost) return 0;
        rem -= cost;
        i += w;
    }
    return 1;
}

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("460C.inp", "r", stdin);
    freopen("460C.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n >> m >> w;
    FORE(i, 1, n) cin >> a[i];
    FORE(i, 1, n) R[i][0] = a[i];
    FORE(k, 1, log2(n))
    FORE(i, 1, n) R[i][k] = min(R[i][k - 1], R[i + (1 << (k - 1))][k - 1]);

    int d = 0, c = INF, g, fin = -1;
    while (d <= c){
        //cout <<d << " "<<c<<endl;
        g = (d + c) / 2;
        if (ok(g)){
            d = g + 1;
            fin = g;
        }
        else c = g - 1;
    }
   // cout << ok(6) << endl;
    cout << fin;
    return 0;
}

