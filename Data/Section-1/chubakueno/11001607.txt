#include <bits/stdc++.h>
using namespace std;
vector<int> l;
vector<int> c;
vector<int> d;
vector<int> f;
int cl(int i, int prev, int depth){
    if(i==prev) return depth;
    if(depth>200) return -1;
    return cl(f[i],prev,depth+1);
}
int cd(int i){
    if(d[i]!=-1) return d[i];
    if(l[i]!=-1) return d[i]=0;
    return d[i]=1+cd(f[i]);
}
int cc(int i){
    if(l[i]!=-1) return l[i];
    return c[i]=cc(f[i]);
}
int main(){
    int n;
    cin>>n;
    c.assign(200,0);
    l.assign(200,0);
    d.assign(200,-1);
    f.assign(200,0);
    for(int i=0;i<n;++i){
        cin>>f[i];
        --f[i];
    }
    for(int i=0;i<n;++i){
        l[i]=cl(f[i],i,1);
        d[i]=cd(i);
        c[i]=cc(i);
    }
    long long int mink=c[0];
    for(int i=1;i<n;++i){
        long long int a=c[i];
        mink=a*mink/__gcd(a,mink);
    }
    long long int ans=mink;
    for(int i=0;i<n;++i){
        ans=max(ans,mink*(d[i]/mink+(bool)(d[i]%mink)));
    }
    cout<<ans;
}