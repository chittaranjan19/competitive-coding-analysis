#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
using namespace std;
class name
{
public:
    string key[2];
    int order;
};
inline bool com(name& a, name& b)
{
    return a.order < b.order;
}

bool judge(vector<name> &names, int i, int pre, int n)
{
    if (i == n)
        return true;
    if (i == 0)
    {
        if (names[0].key[0] > names[0].key[1])
            return judge(names, 1, 1, n);
        else
            return judge(names, 1, 0, n);
    }
    else
    {
        if (names[i].key[0] > names[i - 1].key[pre] && names[i].key[1] > names[i - 1].key[pre])
            return judge(names, i + 1, names[i].key[0] > names[i].key[1], n);
        else if (names[i].key[0] > names[i - 1].key[pre] || names[i].key[1] > names[i - 1].key[pre])
            return judge(names, i + 1, names[i].key[1] > names[i].key[0], n);
        else
            return false;
    }
}

using namespace std;
int main(int argc, char const *argv[])
{
    int n;
    cin >> n;
    vector<name> names(n);
    for (int i = 0; i < n; ++i)
        cin >> names[i].key[0] >> names[i].key[1];
    int input;
    for (int i = 0; i < n; ++i)
    {
        cin >> input;
        names[input - 1].order = i;
    }
    sort(names.begin(), names.end(), com);

    if (judge(names, 0, 0, n))
        cout << "YES" << endl;
    else
        cout << "NO" << endl;

    return 0;
}