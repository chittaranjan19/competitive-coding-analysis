/*
    ━━━━━┒
    ┓┏┓┏┓┃让老子先跳！
    ┛┗┛┗┛┃＼○／
    ┓┏┓┏┓┃ //
    ┛┗┛┗┛┃ノ)
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┃┃┃┃┃┃
    ┻┻┻┻┻┻

*/


#include <cstdio>
#include <iostream>
#include <cstring>
#include <string>
#include <algorithm>
#include <cctype>
#include <stack>
#include <map>
#include <set>
#include <iomanip>
#include <cstdlib>
#include <queue>
#include <ctime>
#include <cmath>
using namespace std;
typedef long long ll;
const int maxn=2005;
int vis[maxn];
struct point
{
    ll x,y;
}p[maxn];
ll aa[maxn],bb[maxn];
ll dis(point x,point y)
{
    return (x.x-y.x)*(x.x-y.x)+(x.y-y.y)*(x.y-y.y);
}
int main()
{
    int n;
    while(cin>>n)
    {
        point a,b;
        cin>>a.x>>a.y>>b.x>>b.y;
        ll ansx=0,ansy=0;
        for(int i=0;i<n;i++)
        {
            scanf("%lld%lld",&p[i].x,&p[i].y);
            aa[i]=dis(p[i],a);
            bb[i]=dis(p[i],b);
            if(ansx>=aa[i]||ansy>=bb[i]) continue;
            if(aa[i]<bb[i]) ansx=max(ansx,aa[i]),vis[i]=0;
            else ansy=max(ansy,bb[i]),vis[i]=1;
            for(int j=0;j<=i;j++)
                if(ansx>=aa[j]&&vis[j]==0) ansy=min(ansy,bb[j]);
            for(int j=0;j<=i;j++)
                if(ansy>=bb[j]&&vis[j]==1) ansx=min(ansx,aa[j]);
        }
        //cout<<ansx<<' '<<ansy<<endl;
        printf("%I64d\n",ansx+ansy);
    }
    return 0;
}
