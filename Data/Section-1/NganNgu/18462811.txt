#include <iostream> 
#include <cstdio>
#include <vector>
#include <set>

using namespace std;

#define For(i , a , b) for (int i = a , _b = b ; i <= _b ; ++i)
#define Ford(i , a  ,b) for (int i = a , _b = b : i >= _b ; --i)
#define Rep(i , n) for (int i = 0 , _n = n ; i < _n ; ++i)
#define sz(A) ((int)A.size())
#define LL(x) (x << 1)
#define RR(x) ((x << 1) | 1)

typedef pair<int , int> pt;

const int maxn = 1000000 + 123;

vector<pair<string , int> > command;

multiset<int> se;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	//freopen("input.inp" , "r" , stdin);

	int n;
	cin >> n;
	while (n--) {
		string s; cin >> s;

		if (s == "insert") {
			int x ; cin >> x;
			se.insert(x);
			command.push_back(make_pair(s , x));
		}

		if (s == "removeMin") {
			if (!sz(se)) {
				command.push_back(make_pair("insert" , 69));
			}
			command.push_back(make_pair(s , 0));
			se.erase(se.begin());
		}

		if (s == "getMin") {
			int x; cin >> x;
			if (*se.begin() != x) {
				command.push_back(make_pair("insert" , x));
				se.insert(x);
				while (sz(se) && *se.begin() < x) {
					command.push_back(make_pair("removeMin" , 0));
					se.erase(se.begin());
				}
			}
			command.push_back(make_pair(s , x));
		}
	}

	cout << sz(command) << endl;
	Rep(i , sz(command)) {
		cout << command[i].first;
		if (command[i].first != "removeMin") cout << " " << command[i].second;
		cout << "\n";
	}

	return 0;

}			