#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 1000010;

char str[maxn], pat[maxn];
int n, m, freq[10], temp[10];

int valid(int len)
{
    string tmp = to_string(len);
    if(n-((int)tmp.size())!=len)
        return 0;
    int i;
    for(i=0; i<=9; i++)
        temp[i] = freq[i];
    for(i=0; i<tmp.size(); i++){
        temp[tmp[i]-'0']--;
        if(temp[tmp[i]-'0']<0)
            return 0;
    }
    if(pat[1]=='0' && m>1){
        for(i=1; i<=9; i++){
            if(temp[i]>0)
                return 1;
        }
        return 0;
    }
    return 1;
}

int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    scanf("%s%s", str+1, pat+1);
    n = strlen(str+1);
    m = strlen(pat+1);
    int i, j, nxt, c;
    for(i=1; i<=n; i++)
        freq[str[i]-'0']++;
    for(i=1; i<=m; i++)
        freq[pat[i]-'0']--;
    for(i=m; i<=n; i++){
        if(valid(i)){
            string tmp = to_string(i);
            for(j=0; j<tmp.size(); j++)
                freq[tmp[j]-'0']--;
            break;
        }
    }
    if(pat[1]=='0' && m==1 && n==2){
        printf("0\n");
        return 0;
    }
    string ans = "";
    nxt = 10;
    for(i=1; i<=9; i++){
        if(freq[i]){
            nxt = i;
            break;
        }
    }
    if(pat[1]!='0' && pat[1]<nxt){
        for(i=1; i<=m; i++)
            ans+=pat[i];
        for(i=0; i<=9; i++){
            while(freq[i]--)
                ans+=(char)('0'+i);
        }
    }
    else if(pat[1]!='0' && pat[1]==nxt){
        string tmp1, tmp2;
        tmp1 = tmp2 = "";
        c = freq[nxt];
        while(c--)
            tmp1+=(char)('0'+i);
        for(j=1; j<=m; j++){
            tmp1+=pat[j];
            tmp2+=pat[j];
        }
        c = freq[i];
        while(c--)
            tmp2+=(char)('0'+i);
        ans+=min(tmp1, tmp2);
        freq[nxt] = 0;
        for(i=0; i<=9; i++){
            while(freq[i]--)
                ans+=(char)('0'+i);
        }
    }
    else{
        ans+=(char)('0'+nxt);
        freq[nxt]--;
        for(i=0; i<=9; i++){
            if(pat[1]-'0'==i){
                string tmp1, tmp2;
                tmp1 = tmp2 = "";
                c = freq[i];
                while(c--)
                    tmp1+=(char)('0'+i);
                for(j=1; j<=m; j++){
                    tmp1+=pat[j];
                    tmp2+=pat[j];
                }
                c = freq[i];
                while(c--)
                    tmp2+=(char)('0'+i);
                ans+=min(tmp1, tmp2);
            }
            else{
                while(freq[i]){
                    ans+=(char)('0'+i);
                    freq[i]--;
                }
            }
        }
    }
    cout << ans << "\n";
    return 0;
}
