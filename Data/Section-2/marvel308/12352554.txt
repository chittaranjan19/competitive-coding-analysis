#include <iostream>
#include <stdio.h>
#include <string.h>
#include <vector>
#include <queue>
using namespace std;
struct node
{
    int x,y,id;
}a[100005];
int ans[100005];
int num[10];
bool cmp1(node a,node b)
{
    if (a.x==b.x)
        return a.y<b.y;
    return a.x<b.x;
}
bool cmp2(node a,node b)
{
    if (a.y==b.y)
        return a.x<b.x;
    return a.y<b.y;
}
bool cmp3(node a,node b)
{
    if (a.x+a.y==b.x+b.y)
        return a.x<b.x;
    return a.x+a.y<b.x+b.y;
}
bool cmp4(node a,node b)
{
    if (a.x-a.y==b.x-b.y)
        return a.x<b.x;
    return a.x-a.y<b.x-b.y;
}
int main()
{
    int i,j,k,n,m,t,x,y,now;
    while (scanf("%d%d",&n,&m)!=EOF)
    {
        memset(ans,0,sizeof(ans));
        memset(num,0,sizeof(num));
        for (i=0;i<m;i++)
        {
            scanf("%d%d",&a[i].x,&a[i].y);
            a[i].id=i;
        }
        sort(a,a+m,cmp1);
        for (i=1;i<m;i++)
        {
            if (a[i].x==a[i-1].x)
            {
                ans[a[i].id]++;
                ans[a[i-1].id]++;
            }
        }
        sort(a,a+m,cmp2);
        for (i=1;i<m;i++)
        {
            if (a[i].y==a[i-1].y)
            {
                ans[a[i].id]++;
                ans[a[i-1].id]++;
            }
        }
        sort(a,a+m,cmp3);
        for (i=1;i<m;i++)
        {
            if (a[i].y+a[i].x==a[i-1].y+a[i-1].x)
            {
                ans[a[i].id]++;
                ans[a[i-1].id]++;
            }
        }
        sort(a,a+m,cmp4);
        for (i=1;i<m;i++)
        {
            if (a[i].x-a[i].y==a[i-1].x-a[i-1].y)
            {
                ans[a[i].id]++;
                ans[a[i-1].id]++;
            }
        }
        for (i=0;i<m;i++)
        {
            num[ans[i]]++;
        }
        for (i=0;i<=8;i++)
            printf("%d ",num[i]);
    } 
    return 0;
}