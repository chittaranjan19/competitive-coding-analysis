#include <algorithm>
#include <iostream>
using namespace std;

int a[1005];

int main() {
    int n, m;
    cin >> n >> m;
    long long placesFirst = 0, total = 1;
    while (total < n) {
        placesFirst += 1;
        total *= 7;
    }
    long long placesSecond = 0; total = 1;
    while (total < m) {
        placesSecond += 1;
        total *= 7;
    }
    if (n == 1) {
        placesFirst = 1;
    }
    if (m == 1) {
        placesSecond = 1;
    }
    // cout << placesFirst << " " << placesSecond << "\n";
    int cnt = placesFirst + placesSecond;
    if (cnt > 7) {
        cout << 0;
        return 0;
    }
    vector<int> p = {0, 1, 2, 3, 4, 5, 6};
    int answer = 0;
    do {
        long long x = 0, y = 0;
        for (int i = 0; i < placesFirst; i += 1) {
            x = x * 7 + p[i];
        }
        for (int i = 0; i < placesSecond; i += 1) {
            y = y * 7 + p[i + placesFirst];
        }
        if (x < n && y < m) {
            answer += 1;
        }
    } while (next_permutation(p.begin(), p.end()));
    for (int i = 1; i <= (7 - cnt); i += 1) {
        answer /= i;
    }
    cout << answer << "\n";
    return 0;
}