#include <bits/stdc++.h>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int arr[100005], nxt[100005];
bool done[100005];
vector<int> v;

int main()
{
  int n;
  scanf("%d", &n);
  for(int i=0;i<n;i++)
    scanf("%d", &arr[i]);
  nxt[n - 1] = -1;
  for(int i=n-2;i>=0;i--)
  {
    if(arr[i] > arr[i + 1])
      v.pb(i);
    nxt[i] = i + 1;
  }
  for(int i=0;;i++)
  {
    if(v.empty())
    {
      printf("%d\n", i);
      return 0;
    }
    vector<int> tmp;
    for(int j=0;j<v.size();j++)
    {
      done[nxt[v[j]]] = true;
      nxt[v[j]] = nxt[nxt[v[j]]];
      if(nxt[v[j]] != -1 && arr[v[j]] > arr[nxt[v[j]]])
        tmp.pb(v[j]);
    }
    v.clear();
    for(int j=0;j<tmp.size();j++)
    {
      if(done[tmp[j]]) continue;
      v.pb(tmp[j]);
    }
  }
  return 0;
}
