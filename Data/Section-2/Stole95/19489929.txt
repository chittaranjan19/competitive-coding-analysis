import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;

public class Main {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
		
		String line = bf.readLine();
		String[] tmp = line.split(" ");
		
		int N = Integer.parseInt(tmp[0]);
		int M = Integer.parseInt(tmp[1]);
		
		line = bf.readLine();
		tmp = line.split(" ");
		
		ArrayList<Integer> cities = new ArrayList<>();;
		
		for(int i = 0 ; i < N ; i++){
			cities.add(Integer.parseInt(tmp[i]));
		}
		
		line = bf.readLine();
		tmp = line.split(" ");
		
		int[] towers = new int[M];
		
		for(int i = 0 ; i < M ; i++){
			towers[i] = Integer.parseInt(tmp[i]);
		}
		
		bf.close();
		
		int rad = 0;
		
		int R = Collections.binarySearch(cities, towers[0]);
		if(R < 0){
			R = - R;
			R--;
		}
		
		for(int j = 0 ; j < R ; j++){
			int value = cities.get(j);
			rad = Math.max(rad, towers[0] - value);
		}
		
		int L = Collections.binarySearch(cities, towers[M-1]);
		if(L < 0) L = - L;
		
		for(int j = L ; j < N ; j++){
			int value = cities.get(j);
			rad = Math.max(rad, towers[M-1] + value);
		}
		
		
		for(int i = 0 ; i < M-1 ; i++){
			L = Collections.binarySearch(cities, towers[i]);
			R = Collections.binarySearch(cities, towers[i+1]);
			
			if(L < 0) L = - L;
			if(R < 0){
				R = - R;
				R--;
			}
			
			for(int j = L ; j <= R ; j++){
				int value = cities.get(j);
				rad = Math.max(rad, Math.min(towers[i] + value, towers[i+1] - value));
			}
		}
		
		System.out.println(rad);
		
	}
}
