type    arr1    =array[0..65] of int64;

var     n       :longint;
        l, r    :int64;
        d,a, b, c :arr1;
        ta,tb     :longint;
        i ,j      :longint;
        x       :int64;

        tg      :longint;
        d0,d1   :longint;
        ans     :int64;
        ll      :longint;
        m       :longint;

procedure trau;
var     i,dem ,ans,best:longint;
begin
        best:=0;
        m:=0;
        ans:=0;
        for i:=l to r do
        begin
                x:=i;
                ta:=0;
                dem:=0;
                while x>0 do
                begin
                        inc(ta);
                        a[ta]:=x mod 2;
                        if x mod 2=1 then inc(dem);
                        x:=x shr 1;
                end;
                if dem>best then
                begin
                        best:=dem;
                        ans:=i;
                end;
        end;
        writeln(ans,'==');
end;

function ss(a,b:arr1;n:longint):longint;
var     i       :longint;
begin
        ss:=0;
                for i:=1 to n do
                begin
                        if a[i]<b[i] then break;
                        if a[i]>b[i] then
                        begin
                                ss:=1;
                                exit;
                        end;
                end;
end;
begin
        readln(n);
        for ll:=1 to n do
        begin
                readln(l, r);
                //trau;
                fillchar(a,sizeof(a),0);
                fillchar(b,sizeof(b),0);
                fillchar(c,sizeof(c),0);
                ta:=0;tb:=0;
                x:=l;
                while x>0 do
                begin
                        inc(ta);
                        a[ta]:=x mod 2;
                        x:=x shr 1;
                end;
                for i:=1 to ta do c[ta-i+1]:=a[i];
                a:=c;

                x:=r;
                while x>0 do
                begin
                        inc(tb);
                        b[tb]:=x mod 2;
                        x:=x shr 1;
                end;
                for i:=1 to tb do c[tb-i+1]:=b[i];
                b:=c;

                if ta<tb then
                begin
                        tg:=ta;ta:=tb;tb:=tg;
                        c:=a;a:=b;b:=c;
                end;
                if ta>tb then
                begin
                        dec(ta);
                        for i:=1 to ta do a[i]:=1;
                        ans:=0;
                        for i:=1 to ta do inc(ans,a[i]*(int64(1) shl (ta-i)));
                        writeln(ans);
                        continue;
                end;
                //=

                if ss(a,b,ta)=1 then
                begin
                        c:=a;a:=b;b:=c;
                end;

                d:=a;
                for i:=ta downto 1 do
                if a[i]=0 then
                begin
                        c:=a;
                        for j:=i to ta do c[j]:=1;
                        if ss(c,b,ta)=0 then d:=c;
                end;
                ans:=0;
                for i:=1 to ta do inc(ans,d[i]*(int64(1) shl (ta-i)));
                writeln(ans);
        end;
end.
