#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <iostream>
#include <vector>
#include <string>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
#include <ctype.h>
using namespace std;

#define eps 1e-10

char a[1005][1005];
int b[2][1005];

int n, m, x, y;
int mem[1005][1005][2];

int solve(int i, int w, int color)
{
    if(i == m && w >= x && w <= y) return 0;
    if(i == m) return 1234567890;
    int res = 1234567890;
    if(color == 2)
    {
        res = min(res, solve(i, w, 0));
        res = min(res, solve(i, w, 1));
        return res;
    }

    if(mem[i][w][color] != -1)
        return mem[i][w][color];

    if(w < x)
    {
        res = min(res, solve(i + 1, w + 1, color) + b[1-color][i]);
    }
    else
    {
        if(w < y)
            res = min(res, solve(i + 1, w + 1, color) + b[1-color][i]);
        res = min(res, solve(i + 1, 1, 1 - color) + b[color][i]);
    }
    return mem[i][w][color] = res;
}

int main()
{
    int i, j, k;
    memset(mem, -1, sizeof(mem));
    cin >> n >> m >> x >> y;
    for(i = 0; i < n; i++)
        scanf("%s", a[i]);
    for(j = 0; j < m; j++)
        for(i = 0; i < n; i++)
        {
            b[0][j] += a[i][j] == '.';
            b[1][j] += a[i][j] == '#';
        }
    printf("%d\n", solve(0, 0, 2));
    return 0;
}