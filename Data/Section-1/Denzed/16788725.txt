#include <bits/stdc++.h>

#define f       first
#define s       second
#define mp      make_pair
#define rank    something_which_is_supposed_to_be_rank
#define left    something_which_is_supposed_to_be_left
#define right   something_which_is_supposed_to_be_right

using namespace std;

typedef unsigned int uint;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

const int N = 1e5;

set<int> rooms;
int n, k, p[N + 1], ans = N;
string s;

int main() {
    cin.sync_with_stdio(0);
    cin.tie(0);
    cin >> n >> k >> s;
    for (int i = 0; i < n; ++i) {
        if (s[i] == '0') {
            rooms.insert(i);
        }
        p[i + 1] = p[i] + (s[i] == '0');
    }
    for (int i = 0, j = 0; i < n; ++i) {
        for (; j <= n && p[j] - p[i] < k + 1; ++j);
        if (j > n || p[j] - p[i] < k + 1) {
            break;
        }
        int r = *lower_bound(rooms.begin(), rooms.end(), (i + j) >> 1);
        int l = *(--upper_bound(rooms.begin(), rooms.end(), (i + j) >> 1));
        if (i <= r && r < j) {
            ans = min(ans, max(r - i, j - r - 1));
        }
        if (i <= l && l < j) {
            ans = min(ans, max(l - i, j - l - 1));
        }
    }
    cout << ans << "\n";
    cerr << "Time elapsed: " << (ld) clock() / CLOCKS_PER_SEC << "\n";
    return 0;
}