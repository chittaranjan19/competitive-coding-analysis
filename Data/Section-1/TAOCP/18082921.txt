/*
*Rainto96
*Beijing University of Posts and Telecommunications School of Software Engineering
*http://blog.csdn.net/u011775691
*/
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <cstring>
#include <string>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <climits>
using namespace std;
#define pb push_back
#define ALL(x) x.begin(),x.end()
#define VINT vector<int>
#define PII pair<int,int>
#define MP(x,y) make_pair((x),(y))
#define ll long long
#define ull unsigned long long
#define MEM0(x)  memset(x,0,sizeof(x))
#define MEM(x,val) memset((x),val,sizeof(x))
#define scan(x) scanf("%d",&(x))
#define scan2(x,y) scanf("%d%d",&(x),&(y))
#define scan3(x,y,z) scanf("%d%d%d",&(x),&(y),&(z))
#define scan4(x,y,z,k) scanf("%d%d%d%d",&(x),&(y),&(z),&(k))
#define Max(a,b) a=max(a,b)
#define Min(a,b) a=min(a,b)
double l[15][15];
int main(){
    //freopen("in.txt","r",stdin);
    int n,t;
    scan2(n,t);
    while(t--){
        queue<PII > que;
        l[1][1]+=1;
        if(l[1][1] > 1){
            que.push(MP(1,1));
            while(!que.empty()){
                PII s = que.front();
                que.pop();
                double amt = l[s.first][s.second] - 1;
                l[s.first][s.second] = 1;

                l[s.first + 1][s.second] += amt/2;
                if(s.first+1<=n && l[s.first + 1][s.second] > 1){
                    que.push(MP(s.first + 1, s.second));
                }
                l[s.first + 1][s.second + 1] += amt/2;
                if(s.first+1<=n && l[s.first + 1][s.second + 1] > 1){
                    que.push(MP(s.first + 1, s.second + 1));
                }
            }
        }
    }
    int ans=0;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=i;j++){
            if(l[i][j] == 1){
                ans++;
            }
        }
    }
    cout<<ans<<endl;
    return 0;
}
