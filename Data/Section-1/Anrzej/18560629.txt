#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

int gcd(int a, int b) {
	return b ? gcd(b, a % b) : a;
}

int _c(int k, int n){
	int nm = 1, dm = 1;
	while (k){
		nm *= n;
		dm *= k;
		n--, k--;
	}
	return nm / dm;
}

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 2e5 + 10, lg = 20;
ll mod = 1e9 + 7;

int n;
vector<pair<int, ll > > g[N];
int a[N];
bool lst[N], deleted[N];
int pr[N];
ll cpr[N];
queue<int> q;

void dfs0(int v, ll dist = 0, int p = 0){
	pr[v] = p;
	cpr[v] = dist;
	if (g[v].size() == 1)
		lst[v] = 1, q.push(v);
	for (int i = 0; i < g[v].size(); i++){
		int to = g[v][i].fs;
		if (to == p) continue;
		dfs0(to, g[v][i].sc, v);
	}
}
void ddel(int v){
	deleted[v] = 1;
	for (int i = 0; i < g[v].size(); i++){
		int to = g[v][i].fs;
		if (to == pr[v]) continue;
		ddel(to);
	}
}



int main()
{
	ll n, s;
	cin >> n >> s;
	ll mx_x = -2e18, mx_y = -2e18, mn_x = 2e18, mn_y = 2e18;
	pair<int, int> mnx, mny, mxx, mxy;

	for (int i = 0; i < n; i++){
		int x, y;
		cin >> x >> y;
		if (x > mx_x)
			mx_x = x, mxx = mp(x, y);
		if (x < mn_x)
			mn_x = x, mnx = mp(x, y);
		if (y > mx_y)
			mx_y = y, mxy = mp(x, y);
		if (y < mn_y)
			mn_y = y, mny = mp(x, y);
	}
	cout << mn_x << ' ';
	cout << mn_y << endl;
	cout << mn_x << ' ' << mn_y + (mx_y - mn_y) * 2 << endl;
	cout << mn_x + (mx_x - mn_x) * 2 << ' ' << mn_y << endl;
	return 0;
}