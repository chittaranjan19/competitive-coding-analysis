#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e6 + 100;
const int INF = 1e9 + 7;

using namespace std;
int a[MAXN], cnt[MAXN];
map<int, int> last;
int T[MAXN];
int n, q;
int get(int x)
{
    int ans = 0;
    for(; x; x -= x &(-x)) ans ^= T[x];
    return ans;
}

void update(int x, int v)
{
    for(; x <= n; x += x & (-x)) T[x] ^= v;
}

typedef pair<int, int> ii;
vector< ii > p[MAXN];
int xo[MAXN];
int ans[MAXN];
int main()
{
    //ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("D.inp", "r", stdin);
    freopen("D.out", "w", stdout);
    #endif //MIKELHPDATKE

    //cin >> n;
    scanf("%d", &n);
    FORE(i, 1, n) scanf("%d", &a[i]);
    scanf("%d", &q);
    int l, r;
    FORE(i, 1, q){
        scanf("%d%d", &l, &r);
        p[r].push_back(ii(l, i));
    }
    xo[1] = a[1]; FORE(i, 2, n) xo[i] = xo[i - 1] ^ a[i];
    //FORE(i, 1, n) cout << p[i].second<<endl;
    //FORE(i, 1, n) ans[p[i].second] = xo[i] ^ xo[p[i].first - 1];
    //ans[p[1].second] ^= get(p[1].r) ^ get(p[1].l - 1);
    FORE(i, 1, n){
        int vt = last[a[i]];
        if (vt != 0) update(vt, a[i]);
        last[a[i]] = i;
        update(i, a[i]);
        if (p[i].size()){
            FOR(j, 0, p[i].size()){
                int l = p[i][j].first;
                int r = i;
                int cs = p[i][j].second;
                ans[cs] = get(r) ^ get(l - 1) ^ xo[r] ^ xo[l - 1];
            }
        }
    }
    FORE(i, 1, q) printf("%d\n", ans[i]);
    return 0;
}
