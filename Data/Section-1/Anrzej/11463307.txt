#include <iostream>
#include <string>
#include <vector>
#include <stdio.h>
#include <math.h>

using namespace std;


int main()
{
    int n, m;
    vector<pair<int, int> > mi, ni;
    cin >> n >> m;
    for(int i = 0; i < n; i++)
    {
        int x,y;
        cin >> x >> y;
        ni.push_back(make_pair(x, y));
    }
    for(int i = 0; i < m; i++)
    {
        int x, y;
        cin >> x >> y;
        mi.push_back(make_pair(x, y));
    }
    int max_l = -1, x0, y0;
    double nr, mr;
    pair<int, int> n0, m0;
    for(int i = 0; i < n; i++)
    {
        for(int j = i; j < n; j++)
        {
            if(max_l < ((ni[i].first - ni[j].first)*(ni[i].first - ni[j].first)) + ((ni[i].second - ni[j].second)*(ni[i].second - ni[j].second)))
            {
                max_l = ((ni[i].first - ni[j].first)*(ni[i].first - ni[j].first)) + ((ni[i].second - ni[j].second)*(ni[i].second - ni[j].second));
                x0 = i; y0 = j;
            }
        }
    }
    nr = sqrt(max_l);
    max_l = -1;
    n0 = make_pair(ni[x0].first - ni[y0].first, ni[x0].second - ni[y0].second);
    for(int i = 0; i < m; i++)
    {
        for(int j = i; j < m; j++)
        {
            if(max_l < ((mi[i].first - mi[j].first)*(mi[i].first - mi[j].first)) + ((mi[i].second - mi[j].second)*(mi[i].second - mi[j].second)))
            {
                max_l = ((mi[i].first - mi[j].first)*(mi[i].first - mi[j].first)) + ((mi[i].second - mi[j].second)*(mi[i].second - mi[j].second));
                x0 = i; y0 = j;
            }
        }
    }
    m0 = make_pair(mi[x0].first - mi[y0].first, mi[x0].second - mi[y0].second);
    mr = sqrt(max_l);
    if(mr + nr >= sqrt(double((m0.first - n0.first)*(m0.first - n0.first)+(m0.second - n0.second)*(m0.second - n0.second))))
        cout << "YES";
    else cout << "NO";
    return 0;
}
