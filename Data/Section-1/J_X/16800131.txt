#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

const int maxn = 1e6 + 5;
const int maxk = 30;
const int mod = 1e9 + 7;

ll dp[maxk], sum;
int order[maxk], last[maxk];
char s[maxn];

bool cmp(int a, int b)
{
    return last[a] < last[b];
}

void add(int c)
{
    sum = (sum - dp[c] + mod) % mod;
    dp[c] = (dp[c] + sum + 1) % mod;
    sum = (sum + dp[c]) % mod;
}

int main()
{
    int n, k;
    scanf("%d%d", &n, &k);
    scanf("%s", s);
    int m = strlen(s);
    memset(last, -1, sizeof(last));
    for(int i = 0; i < m; ++i)
    {
        int c = s[i] - 'a';
        add(c);
        last[c] = i;
    }
    for(int i = 0; i < k; ++i) order[i] = i;
    sort(order, order + k, cmp);
    for(int i = 0; i < n; ++i)
    {
        int c = order[i % k];
        add(c);
    }
    printf("%I64d\n", (sum + 1) % mod);
    return 0;
}
