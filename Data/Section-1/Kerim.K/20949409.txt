#include "bits/stdc++.h"
#define MAXN 100009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
int tin[MAXN],n,TIM,P[MAXN][19],lvl[MAXN];
ll C[MAXN][19];
vector<PII>adj[MAXN];
void dfs(int nd,int pr,int last){
	tin[nd]=++TIM;
	P[nd][0]=pr;
	C[nd][0]=last;
	lvl[nd]=(~pr?lvl[pr]+1:1);
	tr(it,adj[nd])
		if(it->ff!=pr)
			dfs(it->ff,nd,it->ss);
}set<PII>s;
void build(){
	for(int j=1;j<=17;j++)
		for(int i=1;i<=n;i++)
			if(~P[i][j-1]){
				P[i][j]=P[P[i][j-1]][j-1];
				C[i][j]=C[i][j-1]+C[P[i][j-1]][j-1];
			}
}
ll dis(int x,int y){
	ll res=0;
	if(lvl[x]<lvl[y])
		swap(x,y);
	for(int i=17;i>=0;i--)
		if(lvl[x]-(1<<i)>=lvl[y]){
			res+=C[x][i];
			x=P[x][i];
		}
	if(x==y)
		return res;
	for(int i=17;i>=0;i--)
		if(~P[x][i] and P[x][i]!=P[y][i]){
			res+=C[x][i];x=P[x][i];
			res+=C[y][i];y=P[y][i];
		}
	res+=C[x][0];res+=C[y][0];	
	return res;	
}
int main(){
	#ifndef ONLINE_JUDGE
    freopen("file.in", "r", stdin);
	#endif	
	scanf("%d",&n);
	for(int i=1;i<n;i++){
		int u,v,w;
		scanf("%d%d%d",&u,&v,&w);
		adj[u].pb(mp(v,w));
		adj[v].pb(mp(u,w));
	}
	dfs(1,-1,0);
	build();
	int q;
	scanf("%d",&q);
	ll ans=0;
	while(q--){
		char c;
		scanf(" %c",&c);
		if(c=='?')
			printf("%lld\n",ans/2);
		else if(c=='+'){
			int x;
			scanf("%d",&x);
			if(s.size()!=0){
				PII st=*s.begin();
				PII en=*s.rbegin();
				if(st.ff>tin[x]){
					ans-=dis(st.ss,en.ss);
					ans+=dis(x,st.ss);
					ans+=dis(x,en.ss);
				}
				else if(en.ff<tin[x]){
					ans-=dis(st.ss,en.ss);
					ans+=dis(en.ss,x);
					ans+=dis(st.ss,x);
				}
				else{
					PII cep=*(--s.lower_bound(mp(tin[x],-1)));
					PII sag=*s.lower_bound(mp(tin[x],-1));
					ans-=dis(cep.ss,sag.ss);
					ans+=dis(cep.ss,x);
					ans+=dis(x,sag.ss);
				}
			}
			s.insert(mp(tin[x],x));
		}
		else{
			int x;
			scanf("%d",&x);
			if(s.size()>1){
				PII st=*s.begin();
				PII en=*s.rbegin();
				if(st.ff==tin[x]){
					st=*s.upper_bound(mp(tin[x],INF));
					ans-=dis(x,st.ss);
					ans-=dis(x,en.ss);
					ans+=dis(st.ss,en.ss);
				}
				else if(en.ff==tin[x]){
					en=*(--s.lower_bound(mp(tin[x],-1)));
					ans-=dis(en.ss,x);
					ans-=dis(st.ss,x);	
					ans+=dis(st.ss,en.ss);
				}
				else{
					typeof((s).begin()) it=s.lower_bound(mp(tin[x],-1));
					it--;
					PII cep=*it;
					it++;it++;
					PII sag=*it;
					ans-=dis(cep.ss,x);
					ans-=dis(x,sag.ss);
					ans+=dis(cep.ss,sag.ss);
				}
			}
			else
				ans=0;
			s.erase(mp(tin[x],x));
		}
	}
	return 0;
}
