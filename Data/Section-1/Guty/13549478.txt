#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int toNumber (string s)
{
	int Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (int number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}

struct Par
{
	Par(double xx, double yy)
	{
		x = xx;
		y = yy;
	}
	double x, y;
};

Par roots (double a, double b, double c)
{
	return Par((-b + sqrt(b*b-4*a*c)) / 2*a, (-b - sqrt(b*b-4*a*c)) / 2*a );
}

int main()
{
	double a,b,c,d;
	cin >> a >> b >> c >> d;
	double mini = 10000000000.0;
	mini = min(mini, abs((a*d-b*c)/(d+c-b-a)));
	mini = min(mini, abs((a*d-b*c)/(d+b-a-c)));
	mini = min(mini, abs((a*d-b*c)/(a+b+c+d)));
	mini = min(mini, abs((a*d-b*c)/(a+d-b-c)));
	Par r1 = roots(2,d-b+c+a,a*d-b*c);
	Par r2 = roots(2,d+b-c+a,a*d-b*c);
	Par r3 = roots(-2,d+b+c-a,a*d-b*c);
	Par r4 = roots(-2,d-b-c-a,a*d-b*c);
	mini = min(mini,abs(r1.x));	
	mini = min(mini,abs(r1.y));
	mini = min(mini,abs(r2.x));	
	mini = min(mini,abs(r2.y));
	mini = min(mini,abs(r3.x));	
	mini = min(mini,abs(r3.y));
	mini = min(mini,abs(r4.x));	
	mini = min(mini,abs(r4.y));
	printf("%.12f\n",mini);
	return 0;
}



