#include <iostream>
#include <string>
#include <map>
#include <set>

using namespace std;

struct SMS
{
    string name;
    int time;
    SMS(string s, int t)
    {
        name = s;
        time = t;
    }
    bool operator < (const SMS sm) const
    {
        //if (sm.name != name) return name < sm.name;
        return time > sm.time;
    }
};

set <SMS> My_s;
map <string, int> TIMES;

int main()
{
    /*My_s.insert(SMS("Garik", 2));
    My_s.insert(SMS("Harik", 1));
    set<SMS>::iterator it = My_s.find(SMS("Garik", 2));
    for (set<SMS>::iterator it = My_s.begin(); it != My_s.end(); it++)
        cout << (*it).name << " " << (*it).time << endl;
    */

    int n;
    cin >> n;
    for (int i = 1; i <= n; i++)
    {
        string name;
        cin >> name;
        set <SMS> :: iterator it = My_s.find(SMS(name, TIMES[name]));
        if (it != My_s.end())
        {
            My_s.erase(it);
            TIMES[name] = i;
            My_s.insert(SMS(name, TIMES[name]));
        }
        else
        {
            TIMES[name] = i;
            My_s.insert(SMS(name, TIMES[name]));
        }
    }

    //cout << endl;
    for (set <SMS> :: iterator it = My_s.begin(); it != My_s.end(); it++)
        cout << (*it).name << endl;
    return 0;
}
