#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

const int MAXN = 5000005;

int res[MAXN], p1[MAXN], p2[MAXN];
int b1 = 101, b2 = b1 + 2;
int m1 = mod, m2 = m1 + 2;

int getid(char c)
{
  if(c >= 'a' && c <= 'z') return c - 'a' + 1;
  else if(c >= 'A' && c <= 'Z') return c - 'A' + 27;
  return c - '0' + 26 * 2 + 1;
}

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("test.in", "r", stdin);
  //freopen("report.out", "w", stdout);
  string s;
  cin >> s;
  p1[0] = p2[0] = 1;
  for(int i=1;i<MAXN;i++)
  {
    p1[i] = (b1 * 1LL * p1[i - 1]) % m1;
    p2[i] = (b2 * 1LL * p2[i - 1]) % m2;
  }
  int h1 = 0, h2 = 0;
  int h1_ = 0, h2_ = 0;
  h1 = h2 = h1_ = h2_ = getid(s[0]);
  LL sol = 1;
  res[0] = 1;
  for(int i=1;i<s.size();i++)
  {
    int x = getid(s[i]);
    h1 = (h1 * 1LL * b1 + x) % m1;
    h2 = (h2 * 1LL * b2 + x) % m2;
    h1_ = (h1_ + x * 1LL * p1[i]) % m1;
    h2_ = (h2_ + x * 1LL * p2[i]) % m2;
    if(h1 == h1_ && h2 == h2_)
    {
      if(res[(i - 1) / 2]) res[i] = res[(i - 1) / 2] + 1, sol+=res[i];
    }
  }
  cout << sol;
  return 0;
}