#include "bits/stdc++.h"
#define MAXN 200009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
int w[MAXN],c[MAXN],u[MAXN],v[MAXN],num[MAXN];
int ata[MAXN],P[MAXN][22],vis[MAXN],n,m,lvl[MAXN];
PII C[MAXN][22];
vector<PII>adj[MAXN];
bool cmp(int x,int y){
	return (w[x]<w[y]);
}
int tap(int x){
	if(ata[x]==x)
		return x;
	return ata[x]=tap(ata[x]);	
}
void dfs(int nd,int pr){
	tr(it,adj[nd])
		if(it->ff!=pr){
			dfs(it->ff,nd);
			P[it->ff][0]=nd;
			C[it->ff][0]=mp(w[it->ss],it->ss);
		}
}
void build(){
	for(int j=1;j<19;j++)
		for(int i=1;i<=n;i++)
			if(~P[i][j-1]){
				P[i][j]=P[P[i][j-1]][j-1];
				C[i][j]=max(C[i][j-1],C[P[i][j-1]][j-1]);
			}
}
PII LCA(int x,int y){
	if(lvl[x]<lvl[y])
		swap(x,y);
	PII res=mp(-1,-1);	
	for(int i=18;i>=0;i--)
		if(lvl[x]-(1<<i)>=lvl[y]){
			umax(res,C[x][i]);
			x=P[x][i];
		}
	if(x==y)
		return res;
	for(int i=18;i>=0;i--)
		if(~P[x][i] and P[x][i]!=P[y][i]){
			umax(res,C[x][i]);
			umax(res,C[y][i]);
			x=P[x][i];
			y=P[y][i];
		}
	umax(res,C[x][0]);	
	umax(res,C[y][0]);	
	return res;
}
int main(){
	memset(P,-1,sizeof P);
	#ifndef ONLINE_JUDGE
    freopen("file.in", "r", stdin);
	#endif	
	scanf("%d%d",&n,&m);
	for(int i=1;i<=m;i++)
		scanf("%d",w+i);
	for(int i=1;i<=m;i++)	
		scanf("%d",c+i);
	for(int i=1;i<=m;i++){
		scanf("%d%d",u+i,v+i);
		num[i]=i;
	}	
	sort(num+1,num+m+1,cmp);
	int ans=0,pos,mn=INF,poz=-1;
	for(int i=1;i<=n;i++)
		ata[i]=i;
	for(int i=1;i<=m;i++)
		if(tap(u[num[i]])!=tap(v[num[i]])){
			ans+=w[num[i]];
			ata[tap(v[num[i]])]=tap(u[num[i]]);
			if(umin(mn,c[num[i]]))
				pos=num[i];
			vis[num[i]]=1;
			adj[u[num[i]]].pb(mp(v[num[i]],num[i]));
			adj[v[num[i]]].pb(mp(u[num[i]],num[i]));
		}
	int S;
	scanf("%d",&S);	
	mn=ans-S/mn;
	dfs(1,-1);
	build();
	for(int i=1;i<=m;i++)
		if(!vis[i]){
			int tmp=ans+w[i]; 
			PII bottle=LCA(u[i],v[i]);
			tmp-=bottle.ff;
			tmp-=S/c[i];
			if(umin(mn,tmp))
				pos=i,poz=bottle.ss;
		}	
	if(~poz)
		vis[poz]=0;
	vis[pos]=1;
	printf("%d\n",mn);
	for(int i=1;i<=m;i++)
		if(vis[i]){
			if(pos==i)
				printf("%d %d\n",i,w[i]-(S/c[i]));
			else
				printf("%d %d\n",i,w[i]);
		}
	return 0;
}
