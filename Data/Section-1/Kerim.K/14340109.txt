#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1927456345
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
/*
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
ordered_set s;
*/
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN];
map<int,int>pm;
int main(){
	string s,t;
	int k;
	cin>>s>>t>>k;
	for(int i=0;i<t.size();i++)
		arr[i]=t[i]-'0';
	vector<int>v;	
	for(int i=0;i<s.size();i++){
		int zero=0;
		ll q=0;
		for(int j=i;j<s.size();j++){
			q=(q*27+(s[j]-'a'+1))%INF;
			if(!arr[s[j]-'a'])
				zero++;
			if(zero<=k)
				v.pb(q);
		}
	}
	int ans=0;
	sort(all(v));
	if(v.size()>=1)
		ans++;
	for(int i=1;i<v.size();i++)
		if(v[i]!=v[i-1])
			ans++;
	cout<<ans<<endl;	
	return 0;
}
