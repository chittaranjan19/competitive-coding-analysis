#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 2e5 + 10, lg = 20, MAXN = 1111;
ll mod = 1e9 + 7;

ll gcd(ll a, ll b) {
	return b ? gcd(b, a % b) : a;
}

ll _gcd(ll a, ll b, ll & x, ll & y) {
	if (a == 0) {
		x = 0; y = 1;
		return b;
	}
	ll _x1, _y1;
	ll d = _gcd(b%a, a, _x1, _y1);
	x = _y1 - (b / a) * _x1;
	y = _x1;
	return d;
}

ll binpow(ll a, ll n) {
	ll res = 1;
	while (n) {
		if (n & 1)
			res *= a;
		a *= a;
		n >>= 1;
		a %= mod;
		res %= mod;
	}
	return res;
}


int n, k;
int town[N];
ll ans = 0;
vector<int> g[N];

int dfs(int v = 1, int p = 0){
	int sz = 0;
	for (int i = 0; i < g[v].size(); i++){
		int to = g[v][i];
		if (to == p) continue;
		sz += dfs(to, v);
	}
	sz += town[v];
	ans += min(sz, 2 * k - sz);
	return sz;
}

int main()
{
	cin >> n >> k;
	for (int i = 0; i < k * 2; i++){
		int v;
		cin >> v;
		town[v] = 1;
	}
	for (int i = 0; i < n - 1; i++){
		int u, v;
		cin >> u >> v;
		g[v].push_back(u);
		g[u].push_back(v);
	}
	dfs();
	cout << ans;
	return 0;
}