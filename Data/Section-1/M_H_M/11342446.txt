#include <bits/stdc++.h>

#define SZ(x) ( (int)x.size() )

using namespace std;
typedef long long ll;
const int N = 1000 * 1000 + 10;

int n ,m ,k ,t1 ,t2;
vector < vector <int> > g;
vector <int> v;
bool mark[N];
int cnt;
int sum;
int sum2;
int p;

void dfs(int x){
	cnt++;
	mark[x] = 1;
	for(int i = 0; i < SZ(g[x]); ++i){
		int y = g[x][i];
		if(!mark[y]){
			dfs(y);
		}
	}
}

int main(){
	cin >> n >> m >> k;
	g.resize(n);
	for(int i = 0; i < m; ++i){
		cin >> t1 >> t2;
		t1--; t2--;
		g[t1].push_back(t2);
		g[t2].push_back(t1);
	}
	for(int i = 0; i < n; ++i){
		if(!mark[i]){
			cnt = 0;
			dfs(i);
			p++;
			if(min(cnt, k) == 1)
				sum++;
			else if(min(cnt, k) > 2){
				sum2 += min(cnt, k) - 2;
			}
				
		}
	}
	if(k == 1){
		cout << p - 2 << "\n";
		return 0;
	}
	if(sum - sum2 <= 2){
		cout << "0\n";
		return 0;
	}
	cout << (sum - sum2 - 1) / 2 << "\n";
	return 0;
}