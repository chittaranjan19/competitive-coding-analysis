#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
using namespace std;
vector<pair<int,int>>G;
map<pair<int,int>,bool>used;
void bfs(pair<int,int> v){
	used[v] = 1;
	for(int i = 0; i<G.size(); ++i){
        if(!used[G[i]]&&(G[i].first==v.first||G[i].second==v.second)){
			bfs(G[i]);
		}
	}
}
int main(){
    int n,t;
    cin>>n;
    G.resize(n);
    for(int i = 0; i<n; ++i){
        int z;
        cin>>t>>z;
        G[i] = make_pair(t,z);
    }
    int answ = -1;
    for(int i = 0; i<n; ++i){
        if(!used[G[i]]){
            bfs(G[i]);
            answ++;
        }
    }
    cout<<answ;
}