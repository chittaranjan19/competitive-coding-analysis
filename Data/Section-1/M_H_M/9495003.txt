#include <iostream>
#include <cstring>

using namespace std;

const int maxn = 100 + 10;

char a[maxn][maxn];
int n,m;
int h[4]={0 , 0 , 1 , -1};
int e[4]={1 , -1 , 0 , 0};

bool isvalidpos(int x , int y){
    return 0 <= x && x < n && 0 <= y && y<m;
}

bool neighbor(int x , int y , char ch){
    int l,k;
    for(int i = 0; i < 4; ++i){
        l = x + h[i];
        k = y  + e[i];
        if(!isvalidpos(l,k))
            continue;
        if(a[l][k] == ch)
            return true;
    }
    return false;
}

char bestch(int x, int y){
    char tmp;
    if(a[x][y] != '+')
        return a[x][y];
    tmp = 'A';
    while(neighbor(x,y,tmp)){
        tmp++;
    }
    return tmp;
}

void draw(){
    memset(a , '+' , sizeof(a));

    for(int i = 0; i < n; ++i){
        for(int j = 0; j < m; ++j){

            char tmp = bestch(i,j);


            if(a[i][j] == '+'){
                int t = 1;
                while(i + t < n && j+t < m && bestch(i,j+t) == tmp){
                    t++;
                }
                for(int l = i; l < i + t; ++l){
                    for(int k = j; k < j+t; ++k){
                        a[l][k] = tmp;
                    }
                }
            }


        }
    }
}

void print(){
    for(int i = 0; i < n; ++i){
        for(int j = 0; j < m; ++j){
            cout << a[i][j];
        }
        cout << endl;
    }
}

int main(){
    cin >> n >> m;
    draw();
    print();
    return 0;
}

