//INOG
//how many problem are you solve ?!
#include<bits/stdc++.h>
using namespace std;

#define mp make_pair
#define ll long long
#define int long long
#define lb long double
#define pb(x) push_back(x)
#define all(x) x.begin(),x.end()

const long long MAXN=3e3+7;
const long long MAXM=1e3;
const long long MOD=1610612741;
const long long INF=1e15+5040;

vector<int>ver[MAXN],neg[MAXN];
bool f=false;
bool check[MAXN];
int a[MAXN];
bool vis[MAXN];

void dfs(int v,int cnt){
	a[v]=cnt;
	for(auto u:neg[v])
		if(!vis[u]){
			vis[u]=true;
			f=(f||(neg[v].size()!=neg[u].size()));
			dfs(u,cnt);
		}
}


main(){
    //ios_base::synce_with stdio(false);
    //cin.tie(false);cout.tie(false);
    int n;
    cin>>n;
    int m;
    cin>>m;
    for(int i=0;i<m;i++){
    	int x,y;
    	cin>>x>>y;
    	x--,y--;
    	ver[x].push_back(y);
    	ver[y].push_back(x);
    }
    for(int i=0;i<n;i++)
    	if(ver[i].size()==n-1)check[i]=true;
    for(int i=0;i<n;i++){
    	if(check[i])continue;
    	for(auto v:ver[i])
    		if(!check[v])neg[i].push_back(v);
    }
    int cnt=0;
	for(int i=0;i<n;i++)
		if(!vis[i] && !check[i])dfs(i,cnt++);
	if(cnt>2 || f)return cout<<"NO\n"<<cnt<<' '<<f,0;
	cout<<"YES\n";
    for(int i=0;i<n;i++)
    	if(check[i]==true)cout<<'b';
    	else if(a[i]==0)cout<<'a';
    	else if(a[i]==1)cout<<'c';
}
