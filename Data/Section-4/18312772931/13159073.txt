#include<iostream>
#include<algorithm>
#include<cstring>
#include<cstdio>
using namespace std;
typedef __int64 ll;
#define T 100005
ll n,m,i,j,k,L,R,sum[T];
struct node
{
    int ln,rn;
}a[T];
int lowbit(int x)
{
    return x&(-x);
}
void Add(int t,int f)
{
    while(t<=n)
    {
        sum[t] += f;
        t+=lowbit(t);
    }
}
ll Sum(int t)
{
    ll g=0;
    while(t>0)
    {
        g+=sum[t];
        t-=lowbit(t);
    }
    return g;
}
bool cmp(node& a,node& b)
{
    return a.ln<b.ln||(a.ln==b.ln&&a.rn>b.rn);
}

void BS()
{
     L=1,R=n;int mid;
    while(a[R].ln-a[L].rn>m&&R>L)
    {
        mid = (R+L)/2;
        if(a[mid].ln-a[L].rn>m){
            R = mid-1;
        }else
        {
            L = mid;
        }
    }
}
int main(){
    /*freopen("input.txt","r",stdin);*/
    
    while(~scanf("%I64d%I64d",&n,&m))
    {
        memset(sum,0,sizeof(sum));
        for(i=1;i<=n;++i){
            scanf("%I64d%I64d",&a[i].ln,&a[i].rn);
        }
        sort(a+1,a+n+1,cmp);BS();
        /*printf("L=%I64d R=%I64d\n",L,R);*/
        if(L>=R){
            printf("%I64d\n",a[1].rn);
        }else{
            for(i=1;i<=n;++i)
                Add(i,a[i].rn);
            k = Sum(R) - Sum(L-1);
            printf("%I64d\n",k);
        }
    }
   return 0;
}