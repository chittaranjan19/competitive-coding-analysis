#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <map>

long long mod = 1000000000 + 7;

using namespace std;

long n;
long long square = 1, sum = 0;
vector<long> keys;
map<long, long> m;

int main()
{
    cin >> n;
    for (long i = 0; i < n; i++){
        long t;
        cin >> t;
        if (m[t] >= 1)
            m[t]++;
        else {
            m[t] = 1;
            keys.push_back(t);
        }
    }
    sort(keys.begin(), keys.end());
    for (long i = keys.size() - 1; i > 0; i--){
        if (m[keys[i]] % 2 != 0)
        {
            if (keys[i - 1] + 1 == keys[i]){
                m[keys[i]]--;
                m[keys[i - 1]]++;
            }
        }
    }
    bool one = false, go = true;
    for (long i = keys.size() - 1; i > -1; i--){
        if (i == 0 && m[keys[i]] < 4 && !one)
            break;
        if (m[keys[i]] >= 4 && !one){
            while (m[keys[i]] >= 4){
                sum += (long long)keys[i] * keys[i];
                m[keys[i]] -= 4;
            }
        }
        if (m[keys[i]] >= 2){
            square *= (long long)keys[i];
            m[keys[i]] -= 2;
            if (one){
                sum += (long long)square;
                square = 1;
            }
            one = !one;
            i++;
        }
    }
    cout << sum;
    return 0;
}