#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int arr[1005][6],n,k,x;
int DP[1005];
bool can[1005][1005];

int solve(int ind)
{
    int &temp = DP[ind];
    if(temp != -1) return temp;
    temp = 0;
    for(int i=1;i<=n;i++)
        if(can[ind][i])
            temp = max(temp, solve(i) + 1);
    return temp;
}

int main()
{
    setdp(DP);
    cin >> n >> k;
    for(int i=0;i<k;i++)
        for(int j=0;j<n;j++)
        {
            scanf("%d",&x);
            arr[x][i] = j;
        }
    for(int i=0;i<=n;i++)
        for(int j=i+1;j<=n;j++)
        {
            bool test = true;
            for(int l=0;l<k;l++)
            {
                if(arr[i][l] > arr[j][l])
                {
                    test = false;
                    break;
                }
            }
            if(test)
            {
                can[i][j] = true;
                continue;
            }
            test = true;
            for(int l=0;l<k;l++)
            {
                if(arr[i][l] < arr[j][l])
                {
                    test = false;
                    break;
                }
            }
            if(test) can[j][i] = true;
        }
    cout << solve(0);
    return 0;
}