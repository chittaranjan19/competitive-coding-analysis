#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[1009][1009],dp[1009][1009],from[1009][1009];
int trail(int k){
	int zero=0;
	while(k>=1){
		if(k%10==0)
			zero++;
		k/=10;	
	}
	return zero;
}
int main(){
	int n,x,y;
	scanf("%d",&n);
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++){
			scanf("%d",&x);
			arr[i][j]=trail(x);
		}
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++){
			int mn=INF,pos=0;
			if(i>0 and umin(mn,dp[i-1][j]))
				pos=1;
			if(j>0 and umin(mn,dp[i][j-1]))
				pos=2;	
			if(mn!=INF)	
				dp[i][j]=mn*arr[i][j],from[i][j]=pos;
			else
				dp[i][j]=arr[i][j];	
		}	
	printf("%d\n",dp[n-1][n-1]);
	x=n-1;y=n-1;
	vector<char>v;
	while(1){
		if(x==0 and y==0)
			break;
		int h=from[x][y];
		if(h==1)
			v.pb('D'),x--;
		else
			v.pb('R'),y--;	
	}
	for(int i=v.size()-1;i>=0;i--)
		cout<<v[i];
	cout<<endl;	
	return 0;
}
/*
3
1 2 3
4 5 6
7 8 9
*/