#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define ll long long
#define f first
#define s second

typedef pair<int, int> pii;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

char s[2][maxn];
vector<pii> v[2];
set<pii> mset;

int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    int t, i, j, k, n, m, ind;
    sd(n), sd(k);
    scanf("%s%s", s[0], s[1]);
    i = 0;
    v[0].pb(mp(0, 0));
    while(i<n){
        j = i&1;
        mset.clear();
        v[j^1].clear();
        for(t=0; t<v[j].size(); t++){
            m = v[j][t].s+1;
            ind = v[j][t].f;
            //cout << i << " " << ind << " " << m-1 << "\n";
            if(m>=n){
                printf("YES\n");
                return 0;
            }
            if(s[ind][m]!='X' && mset.find(mp(ind, m))==mset.end()){
                mset.insert(mp(ind, m));
                v[j^1].pb(mp(ind, m));
            }
            m = v[j][t].s-1;
            if(m>i){
                if(s[ind][m]!='X' && mset.find(mp(ind, m))==mset.end()){
                    mset.insert(mp(ind, m));
                    v[j^1].pb(mp(ind, m));
                }
            }
            m = v[j][t].s+k;
            if(m>=n){
                printf("YES\n");
                return 0;
            }
            if(s[ind^1][m]!='X' && mset.find(mp(ind^1, m))==mset.end()){
                mset.insert(mp(ind^1, m));
                v[j^1].pb(mp(ind^1, m));
            }
        }
        i++;
    }
    printf("NO\n");
    return 0;
}
