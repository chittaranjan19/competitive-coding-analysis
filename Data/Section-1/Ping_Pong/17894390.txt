#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>
#include <clocale>

#define ll long long
#define ld long double

using namespace std;

const ll inf = (ll)2 * 1e18;
const ll MOD = (ll)1e9 + 7;
const ll P = 239;
const ll MAX_N = 500;
const long double pi = 3.1415926535897932384626;
const long double eps = 1e-6;

bool comp(pair<pair<ll, ll>, ll> a, pair<pair<ll, ll>, ll> b)
{
    return (a.first.first != b.first.first ? a.first.first < b.first.first : a.first.second < b.first.second);
}

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    //setlocale(LC_CTYPE, "rus");
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    ll n, k, h;
    cin >> n >> k >> h;
    vector<pair<pair<ll, ll>, ll> > lem(n);
    for (ll i = 0; i < n; i++)
    {
        ll m;
        cin >> m;
        lem[i].first.first = m;
    }
    for (ll i = 0; i < n; i++)
    {
        ll v;
        cin >> v;
        lem[i].first.second = v;
    }
    for (ll i = 0; i < n; i++)
        lem[i].second = i;
    sort(lem.begin(), lem.end(), comp);
    ld l = -1, r = 1000000000, mid;
    for (int j = 0; j < 100; j++)
    {
        mid = (l + r) / 2;
        ld he[n];
        for (ll i = 0; i < n; i++)
            he[i] = lem[i].first.second * mid / h;
        ll curr = k;
        for (ll i = n - 1; i >= 0; i--)
            if (curr > 0 && he[i] >= curr)
                curr--;
        if (curr == 0)
            r = mid;
        else
            l = mid;
    }
    ld he[n];
    for (ll i = 0; i < n; i++)
        he[i] = lem[i].first.second * r / h;
    ll curr = k;
    vector<ll> ans;
    for (ll i = n - 1; i >= 0; i--)
        if (curr > 0 && he[i] >= curr)
        {
            ans.push_back(lem[i].second);
            curr--;
        }
    for (ll i = k - 1; i >= 0; i--)
        cout << ans[i] + 1 << " ";
    return 0;
}
