import java.io.*;
import java.util.*;
import java.math.*;

public class Task implements Runnable {
	
	void show(long x) {
		String[] res = new String[4];
		for (int i=0; i<4; i++) {
			res[3-i] = Long.valueOf(x%256).toString();
			x /= 256;
		}
		
		for (int i=0; i<4; i++) {
			out.print(res[i]);
			if (i<3) out.print(".");
		}
	}
	
    void solve() throws IOException {
    	StringTokenizer st = new StringTokenizer(br.readLine());
    	int n = Integer.parseInt(st.nextToken());
    	int k = Integer.parseInt(st.nextToken());
    	long[] a = new long[n];
    	for (int i=0; i<n; i++) {
    		long x = 0;
    		st = new StringTokenizer(br.readLine(), ".");
    		while (st.hasMoreTokens()) x = x*256+Integer.parseInt(st.nextToken());
    		a[i] = x;
    	}
    	
    	long msk = 0;
    	for (int e=1; e<=32; e++) {
    		msk |= 1l<<(32-e);
    		HashSet<Long> hs = new HashSet<Long>();
    		for (int i=0; i<n; i++)
    			hs.add(a[i]&msk);
    		if (hs.size()==k) {
    			show(msk);
    			return;
    		}
    	}
    	out.println(-1);
  
    }

    BufferedReader br;
    StringTokenizer st;
    PrintWriter out;

    public void run() {
        try {            
            //br = new BufferedReader(new FileReader("input.txt"));
            //out = new PrintWriter("output.txt");
        	br = new BufferedReader(new InputStreamReader(System.in));
            out = new PrintWriter(System.out);
            solve();
            br.close();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(123);
        }
    }

    String next() throws IOException {
        while (st == null || !st.hasMoreTokens()) {
            String s = br.readLine();
            if (s == null)
                return null;
            st = new StringTokenizer(s);
        }
        return st.nextToken();
    }

    double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static void main(String[] args) {
        new Thread(new Task()).start();
    }
}
