#include<bits/stdc++.h>
using namespace std;
int const Max_N = 2e5+5;
int f[Max_N];
int n,m,k;
int find(int x){return x == f[x]?f[x]:f[x] = find(f[x]);}
void init(){for(int i = 0; i < k+1;++i) f[i] = i;}
int l[Max_N];
int r[Max_N];
int color[Max_N];
int mp[Max_N] = {0};
bool vis[Max_N] = {false};
vector<int>head[Max_N];
int cnt = 0;
int main()
{
	cin >> n >> m >> k;
	for (int i = 1; i < n+1; ++i) scanf("%d",color+i);
	for (int i = 1; i < m+1; ++i)
	{
		scanf("%d%d",l+i,r+i);
		int fa = find(l[i]);
		int fb = find(r[i]);
		f[fa] = find(fb);
		vis[l[i]] = vis[r[i]] = true;	
	}
	for(int i = 1; i < n+1; ++i)
	{
		if(!vis[i]) continue;
		int fa = find(color[i]);
		if(!mp[fa]) mp[fa] = ++cnt;
		int u = mp[fa];
		head[u].push_back(color[i]);
	}
	int ans = 0;
	for (int i = 1; i < cnt+1; ++i)
	{
		sort(head[i].begin(),head[i].end());
		int len = head[i].size();
		int Max_len = 1;
		int tmp = 0;
		int u = 0;
		for(int j = 0; j < len; ++j)
		{
			int v = head[i][j];
			if(u!=v)
			{
				u = v;
				Max_len = max(Max_len,tmp);
				tmp = 1;
			}
			else ++tmp;
		}
		Max_len = max(Max_len,tmp);
		ans = len - Max_len;
	}
	printf("%d\n",ans);
	return 0;
}

