//why are you stalking me?
#include <iostream>
#include <cstdio>
#include <fstream>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <deque>
#include <sstream>
#include <cmath>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>
#include <functional>
#include <ctime>
#include <climits>
#include <cstdlib>
#include <complex>
//#define NDEBUG 1
#include <cassert>

using namespace std;

#define rep(it, v) for (__typeof((v).begin()) it = (v).begin(); it != (v).end(); it++)
#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()

typedef long long ll;
typedef pair<int, int> pii;

void print (bool b) {
	puts(b ? "second" : "first");
	exit(0);
}

int N;
ll arr[200010];
vector<ll> pts[2];

int main() {
	//why are you stalking me?
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	ios_base::sync_with_stdio(false);
	cin >> N;
	for (int i = 0; i < N; i++) {
		cin >> arr[i];
		if (arr[i] < 0) {
			pts[1].push_back(-arr[i]);
		} else {
			pts[0].push_back(arr[i]);
		}
	}
	if (pts[0] == pts[1]) {
		//then who performed it last
		print(arr[N - 1] < 0);
	}
	//otherwise check total
	ll tot[2] = {accumulate(pts[0].begin(), pts[0].end(), 0ll), accumulate(pts[1].begin(), pts[1].end(), 0ll)};
	print(tot[0] == tot[1] ? pts[0] < pts[1] : tot[0] < tot[1]);
}