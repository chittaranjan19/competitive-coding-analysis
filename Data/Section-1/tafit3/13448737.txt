import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProblemC2 {
    BufferedReader rd;

    ProblemC2() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int d = intarr()[1];
        char[] a = rd.readLine().toCharArray();
        char[] b = rd.readLine().toCharArray();
        int n = a.length;
        int g = 0;
        for(int i=0;i<n;i++) {
            if(a[i] == b[i]) {
                g++;
            }
        }
        int max = g + (n-g)/2;
        int req = n-d;
        if(req <= max) {
            char[] res = new char[n];
            int c1 = 0;
            int c2 = 0;
            for(int i=0;i<n;i++) {
                if(a[i] == b[i]) {
                    if(c1 < req && c2 < req) {
                        res[i] = a[i];
                        c1++;
                        c2++;
                    }
                }
            }
            for(int i=0;i<n;i++) {
                if(a[i] == b[i]) {
                    if(res[i] == '\0') {
                        res[i] = other(a[i]);
                    }
                } else if(c1 < req) {
                    c1++;
                    res[i] = a[i];
                } else if(c2 < req) {
                    c2++;
                    res[i] = b[i];
                } else {
                    res[i] = other(a[i],b[i]);
                }
            }
            out(new String(res));
        } else {
            out(-1);
        }
    }

    private char other(char x) {
        return x=='a'?'b':'a';
    }

    private char other(char x, char y) {
        char res = 'a';
        while(true) {
            if(res == x || res == y) {
                res++;
            } else {
                return res;
            }
        }
    }

    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = split(s);
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }

    public String[] split(String s) {
        if(s == null) {
            return new String[0];
        }
        int n = s.length();
        int start = -1;
        int end = 0;
        int sp = 0;
        boolean lastWhitespace = true;
        for(int i=0;i<n;i++) {
            char c = s.charAt(i);
            if(isWhitespace(c)) {
                lastWhitespace = true;
            } else {
                if(lastWhitespace) {
                    sp++;
                }
                if(start == -1) {
                    start = i;
                }
                end = i;
                lastWhitespace = false;
            }
        }
        if(start == -1) {
            return new String[0];
        }
        String[] res = new String[sp];
        int last = start;
        int x = 0;
        lastWhitespace = true;
        for(int i=start;i<=end;i++) {
            char c = s.charAt(i);
            boolean w = isWhitespace(c);
            if(w && !lastWhitespace) {
                res[x++] = s.substring(last,i);
            } else if(!w && lastWhitespace) {
                last = i;
            }
            lastWhitespace = w;
        }
        res[x] = s.substring(last,end+1);
        return res;
    }

    private boolean isWhitespace(char c) {
        return c==' ' || c=='\t';
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemC2();
    }
}
