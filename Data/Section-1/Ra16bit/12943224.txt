#include <cstdio>
#include <algorithm>
using namespace std;
struct edge { int x,y,d; } a[155];
int n,m,i,j,cur,prev,d,e,it,f[45045][155];
bool was;
bool cmp(edge x, edge y) { return x.d<y.d; }
int main() {
  scanf("%d%d",&n,&m);
  for (i=0; i<m; i++) scanf("%d%d%d",&a[i].x,&a[i].y,&a[i].d);
  a[m].x=n; a[m].y=n; a[m++].d=0;
  sort(a,a+m,cmp);
  a[m].x=n; a[m].x=n;
  a[m].d=2000000000;
  f[0][1]=++it;
  for (e=0; e<=m; e++) {
    if (e>0 && a[e].d!=a[e-1].d) {
      d=min(a[e].d-a[e-1].d,45000);
      for (i=0; i<=d; i++) for (j=0; j<e; j++) if (f[i][a[j].x]==it) f[i+1][a[j].y]=it;
      if (was) for (i=0; i<=d; i++) if (f[i][n]==it) {
        printf("%d\n",a[e-1].d+i);
        return 0;
      }
      if (d!=a[e].d-a[e-1].d) for (i=1; i<=n; i++) {
        cur=0;
        for (j=d; j>=0; j--) if (f[j][i]==it) {
          if (++cur==2) {
            if ((a[e].d-prev)%(prev-j)==0) f[0][i]=it+1;
            break;
          }
          prev=j;
        }
      } else for (i=1; i<=n; i++) if (f[d][i]==it) f[0][i]=it+1;
      ++it;
    }
    if (a[e].y==n) was=true;
  }
  puts("Impossible");
  return 0;
}
