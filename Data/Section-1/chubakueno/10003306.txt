#include <bits/stdc++.h>
typedef long long ll;
using namespace std;
double dp[2001][2001];
int n,t;
double p;
double getprob(int total, int suben, int faltan){
	double res=0;
	if(suben>total) res=0;
	else if(suben==0){
		if(faltan==0) res=1;
		else res=dp[total][0];
	}
	else if(dp[total][suben]>=0) res=dp[total][suben];
	else res=p*getprob(total-1,suben-1,faltan-1)+(1-p)*getprob(total-1,suben,faltan);
	return (dp[total][suben]=res);
}
int main(){
	cin>>n>>p>>t;
	for(int i=0;i<2001;++i)
		for(int j=0;j<=i;++j)
			dp[i][j]=-1;
	for(int i=0;i<2001;++i){
		dp[i][0]=pow(1-p,i);
		dp[i][i]=pow(p,i);
	}
	double expected=0;
	for(int i=1;i<=n;++i)
		expected+=i*getprob(t,i,n);
	cout<<std::fixed;
	cout<<setprecision(10)<<expected;
}