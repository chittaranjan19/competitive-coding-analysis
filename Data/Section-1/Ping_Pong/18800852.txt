#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

#define ll long long
#define ld long double

using namespace std;

const ll inf = (ll)2 * 1e9;
const ll MOD = (ll)1e9 + 7;
const ll P = 239;
const ll MAX_N = 500000;
const long double pi = 3.1415926535897932384626;
const long double eps = 1e-6;

int main()
{
    //ios_base::sync_with_stdio(0);
    //cin.tie(0);
    int n, k;
    cin >> n >> k;
    bool dp[k + 1][k + 1], dp1[k + 1][k + 1];
    for (int i = 0; i <= k; i++)
        for (int j = 0; j <= k; j++)
            dp[i][j] = false;
    dp[0][0] = true;
    for (int t = 0; t < n; t++)
    {
        int x;
        cin >> x;
        for (int i = 0; i <= k; i++)
            for (int j = 0; j <= k; j++)
                dp1[i][j] = dp[i][j];
        for (int i = 0; i <= k; i++)
            if (i + x <= k)
                for (int j = 0; j <= k; j++)
                    if (dp[i][j])
                    {
                        dp1[i + x][j] = true;
                        if (j + x <= k)
                            dp1[i + x][j + x] = true;
                    }
        for (int i = 0; i <= k; i++)
            for (int j = 0; j <= k; j++)
                dp[i][j] = dp1[i][j];
    }
    int cnt = 0;
    for (int i = 0; i <= k; i++)
        if (dp[k][i])
            cnt++;
    cout << cnt << endl;
    for (int i = 0; i <= k; i++)
        if (dp[k][i])
            cout << i << " ";
    return 0;
}
