#include <bits/stdc++.h>
using namespace std;

//const int maxn = 100000+10;
struct node {
    int x, a;
};
node tree[100+5];
node ftree[100+5];
node ztree[100+5];

bool cmp(node a, node b)
{
    return a.x < b.x;
}
bool cmp1(node a, node b)
{
    return a.x > b.x;
}

int main(int argc, char const* argv[])
{
    int n;
    while(scanf("%d", &n) == 1) {
        int f = 0, z = 0, sum = 0;
        int ans = 0, p = 0, q = 0;
        for(int i = 0; i < n; i ++) {

            scanf("%d%d", &tree[i].x, &tree[i].a);
            if(tree[i].x < 0) {
                f ++;
                ftree[p ++] = tree[i];
            } else {
                z ++;
                ztree[q ++] = tree[i];
            }
            sum += tree[i].a;
        }
        if(z == f || z == f - 1 || z - 1 == f) {
            ans = sum;
        } else {
            sort(ftree, ftree+p, cmp1);
            sort(ztree, ztree+q, cmp);
            if(z > f){
                int temp = f+1;
                for(int i = 0; i < temp; i ++) {
                    ans += ztree[i].a;
                }
                for(int i = 0; i < f; i ++) {
                    ans += ftree[i].a;
                }
            } else if(f > z) {
                int temp = z+1;
                for(int i = 0; i < z; i ++) {
                    ans += ztree[i].a;
                }
                for(int i = 0; i < temp; i ++) {
                    ans += ftree[i].a;
                }
            }
                
        }
        printf("%d\n", ans);

    }
    return 0;
}
