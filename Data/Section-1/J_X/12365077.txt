#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <vector>
#include <algorithm>
#include <cmath>
#include <map>

using namespace std;

typedef long long ll;

map<ll, vector<int> > mp;

int main()
{
    ll ans = 0;
    int n, k;
    scanf("%d%d", &n, &k);
    for(int i = 0; i < n; ++i)
    {
        ll x;
        scanf("%I64d", &x);
        mp[x].push_back(i);
    }
    for(map<ll, vector<int> >::iterator p = mp.begin(); p != mp.end(); ++p)
    {
        ll x = p->first;
        if(x % k) continue;
        ll y = x / k, z = x * k;
        if(!mp[y].size() || !mp[z].size()) continue;
        vector<int> it = p->second;
        for(int i = 0; i < it.size(); ++i)
        {
            int j = it[i];
            ll s1 = lower_bound(mp[y].begin(), mp[y].end(), j) - mp[y].begin();
            ll s2 = upper_bound(mp[z].begin(), mp[z].end(), j) - mp[z].begin();
//            cout << x << ' ' << s1 << ' ' << s2 << endl;
            if(s1 == 0 || s2 == mp[z].size()) continue;
            ans += s1 * (mp[z].size() - s2);
        }
    }
    printf("%I64d\n", ans);
    return 0;
}
