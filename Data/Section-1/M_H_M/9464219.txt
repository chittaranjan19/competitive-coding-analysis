#include <iostream>
using namespace std;

const int maxn = 30 * 1000 + 10;

int n,d,p[maxn],t,dp[maxn][maxn];
//int mok[maxn][maxn];

void f(int x,int y){
    int k = 0,q;
    dp[x][y] = p[x+y];
    x += y;
    if(x + y - 1 > x && x + y - 1 <= 30000 && dp[x ][ y - 1] == -1 ){
        f(x  , y - 1);
        q = dp[x][y - 1];
        if(q > k)
            k = q;
    }
    if(x + y  > x && x + y  <= 30000 && dp[x  ][ y ] == -1 ){
        f(x   , y);
        q = dp[x ][ y ];
        if(q > k)
            k = q;
    }
    if(x + y + 1 > x && x + y + 1 <= 30000 && dp[x][ y +1 ] == -1 ){
        f(x , y + 1);
        q = dp[x ][ y + 1];
        if(q > k)
            k = q;
    }
    dp[x-y][y] += k;
}

int main(){
    for(int i = 0; i < maxn; ++i)
        for(int j = 0; j < maxn; ++j)
            dp[i][j] = -1;
    cin >> n >> d;
    for(int i = 0; i < n; ++i){
        cin >> t;
        p[t] ++;
    }
    f(0,d);
    cout << dp[0][d] << endl;
    return 0;
}
