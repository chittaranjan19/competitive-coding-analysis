/*
PROG:kerim
LANG:C++
*/
#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<ll,int> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
vector<int>v[MAXN];
int arr[4001][4001],rr[MAXN];
int main()
{
	int n,m,mini=INF;
	cin>>n>>m;
	while(m--)
	{
		int a,b;
		cin>>a>>b;
		v[a].pb(b);
		v[b].pb(a);
		arr[a][b]=1;
		arr[b][a]=1;
	}
	for(int i=1;i<=n;i++)
	{
		int co=0;
		for(int j=1;j<=n;j++)
			if(arr[i][j])
				co++;
		rr[i]=co;		
	}
	for(int i=1;i<=n;i++)
		for(int j=0;j<v[i].size();j++){
			int nd=v[i][j];
			for(int k=0;k<v[nd].size();k++){
				int to=v[nd][k];
				if(arr[to][i])
					mini=min(mini,(rr[i]+rr[nd]+rr[to])-6);
			}
		}
	if(mini==INF)
	cout<<INF-(INF+1)<<endl;
	else	
	cout<<mini<<endl;	
	return 0;
}
	
