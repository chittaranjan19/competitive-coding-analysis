#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define PI acos(-1.0)
#define LL long long
#define EPS 1e-9

using namespace std;

int n,m;

vector<pair <int,int> > primes;

void get_primes(LL max){
    char *sieve;
    sieve = new char[max/8+1];
    memset(sieve, 0xFF, (max/8+1) * sizeof(char));
    for(LL x = 2; x <= max; x++)
        if(sieve[x/8] & (0x01 << (x % 8))){
            primes.push_back(make_pair(x,0));
            for(LL j = 2*x; j <= max; j += x)
                sieve[j/8] &= ~(0x01 << (j % 8));
        }
    delete[] sieve;
}

int bs(int L,int R,int value)
{
    int mid;
    while(R>=L)
    {
        mid=L+(R-L)/2;
        if(primes[mid].first>value)
            R=mid-1;
        else if(primes[mid].first<value)
            L=mid+1;
        else break;
    }
    return mid;
}

int bs2(int L,int R,int value)
{
    int mid;
    while(R-L>1)
    {
        mid=L+(R-L)/2;
        if(primes[mid].first>value)
            R=mid;
        else L=mid;
    }
    return L;
}

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    get_primes(10000001);
    cin >> n;
    int temp;
    for(int i=0;i<n;i++)
    {
        cin >> temp;
        int k=0;
        while(temp>1 && primes[k].first * primes[k].first <= temp)
        {
            if(temp%primes[k].first==0)
            {
                temp/=primes[k].first;
                while(temp%primes[k].first == 0)
                    temp/=primes[k].first;
                primes[k].second++;
            }
            k++;
        }
        if(temp>1)
        {
            primes[bs(k,664578,temp)].second++;
        }
    }
    int l,r,m;
    cin >> m;
    for(int i=0;i<m;i++)
    {
        cin >> l >> r;
        int beg=bs2(0,664578,l);
        if(primes[beg].first<l)
            beg++;
        LL counter=0;
        for(beg;beg<664579 && primes[beg].first<=r;beg++)
            counter+=primes[beg].second;
        cout << counter << endl;
    }
    return 0;
}