#include<cstdio>
#include<vector>
#include<algorithm>
#include<set>
#include<cstring>
#include<cmath>
#define pb push_back
#define ll long long
using namespace std;

const int st=131072;
int n;
double x[st],y[st];
double pom1,pom2,treemax[2*st+5],treemin[2*st+5],resmin,resmax;
vector<pair<double,double> > w;
pair<double,double> para;

bool F(double d)
{
	int k=0;
	while(w[k].first<=w[0].first+d){
		k++;
		if(k==n)break;
	}
	for(int i=0;i<n;++i){
		if(k<n)while(w[k].first<=w[i].first+d){
			k++;
			if(k==n)break;
		}
		int p=i;
		p--;
		resmin=-1.0;
		resmax=-1.0;
		if(p>=0){
			p+=st;
			resmin=treemin[p];
			resmax=treemax[p];
			while(p){
				if(p%2){
					resmin=min(resmin,treemin[p-1]);
					resmax=max(resmax,treemax[p-1]);
				}
				p/=2;
			}
		}
		p=k;
		if(p<n){
			p+=st;
			if(resmin!=-1.0){
				resmin=min(resmin,treemin[p]);
				resmax=max(resmax,treemax[p]);
			}
			else{
				resmin=treemin[p];
				resmax=treemax[p];
			}
			while(p){
				if(p%2==0){
					resmin=min(resmin,treemin[p+1]);
					resmax=max(resmax,treemax[p+1]);
				}
				p/=2;
			}
		}
		if(resmin==-1.0 || resmax-resmin<=d) return 1;
	}
	return 0;
}

int main()
{
	scanf("%d",&n);
	for(int i=0;i<n;++i){
		scanf("%lf%lf",&pom1,&pom2);
		para.first=(pom1-pom2)/sqrt(2.0);
		para.second=(pom1+pom2)/sqrt(2.0);
		w.pb(para);
	}
	sort(w.begin(),w.end());

	for(int i=0;i<2*st+5;++i)treemin[i]=1000000000.0;
	for(int i=0;i<2*st+5;++i)treemax[i]=-1.0;
	for(int i=0;i<n;++i){
		treemin[st+i]=w[i].second;
		treemax[st+i]=w[i].second;
	}
	for(int i=st-1;i>=0;--i){
		treemin[i]=min(treemin[2*i],treemin[2*i+1]);
		treemax[i]=max(treemax[2*i],treemax[2*i+1]);
	}

	double low=0.0,high=1000000000.0;
	for(int bla=0;bla<70;++bla){
		double med=(low+high)/2.0;
		if(F(med))high=med;
		else low=med;
	}
	printf("%lf",((low+high)/2.0)/sqrt(2.0));
	return 0;
}