#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<string>
using namespace std;
char s[1000006],s1[1000005],s2[1000005];
struct MyStruct{string str;} a[100005];
int number_of_appearances(string str)
{
    char *p;int nr=0;
    p=strstr(s,str.c_str());
    while(p)
    {
        nr++;
        p=strstr(p+1,str.c_str());
    }
    return nr;
}
inline bool cmp(MyStruct a,MyStruct b)
{
    return a.str<b.str;
}
int main()
{
    int nr,n1,u,t,i,n;char ch;
    gets(s);
    scanf("%d\n",&n);
    for(t=1;t<=n;t++)
    {
        gets(s1);n1=strlen(s1);
        strcpy(s2,s1);strcat(s1,s2);
        s1[n1+n1-1]=0;u=0;
        for(i=0;i<n1;i++)
        {
            ch=s1[i+n1];s1[i+n1]=0;
            a[++u].str=s1+i;
            s1[i+n1]=ch;
        }
        sort(a+1,a+u+1,cmp);
        nr=0;
        for(i=1;i<=u;i++)
            if(a[i].str!=a[i+1].str)
                nr+=number_of_appearances(a[i].str);
        printf("%d\n",nr);
    }
    return 0;
}
