const maxN=200010;
var a,b:array[0..maxN] of longint;
res:array[1..maxN,1..2] of longint;
i,j,n,k,l,m,s,d,now,v,jump,run:longint;
f,h:text;
u:boolean;
procedure swap(var a,b:longint);
               var c:longint;
               begin
               c:=a;
               a:=b;
               b:=c
               end;
procedure qsort(l,r:longint);
               var i,j,x:longint;
               begin
               i:=l;
               j:=r;
               x:=a[(l+r) div 2];
               repeat
               while a[i]<x do inc(i);
               while a[j]>x do dec(j);
               if i<=j then begin
                            swap(a[i],a[j]);
                            inc(i);
                            dec(j)
                            end;
               until i>j;
               if i<r then qsort(i,r);
               if l<j then qsort(l,j);
               end;
begin
assign(input,'input.txt');
assign(output,'output.txt');
reset(input);
readln(n,m,s,d);
if d<2 then begin
            rewrite(output);
            write('IMPOSSIBLE');
            close(output);
            halt
            end;
for i:=1 to n do read(a[i]);
close(input);
a[0]:=0;
a[n+1]:=m;
qsort(1,n);
v:=0;
now:=0;
rewrite(output);
while v<n do begin
               inc(v);
               run:=a[v]-now-1;
               if run<s then begin
                             write('IMPOSSIBLE');
                             halt
                             end;
               inc(k);
               res[k,1]:=run;
               now:=now+run;
               while (a[v]-now<d) and (v<=n) do inc(v);
               dec(v);
               jump:=a[v]+1-now;
               now:=a[v]+1;
               res[k,2]:=jump
               end;
for i:=1 to k do begin
                 writeln('RUN ',res[i,1]);
                 writeln('JUMP ',res[i,2])
                 end;
if m-now<>0 then write('RUN ',m-now);
close(output);
end.









