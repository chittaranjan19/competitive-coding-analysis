#include <iostream>
#include <set>

using namespace std;

int n;
int w,h;

multiset<int> vl,hl;

set<int> vc,hc;

int main()
{
    ios::sync_with_stdio(0);

    cin >> w >> h >> n;

    vc.insert(0);
    vc.insert(w);
    vl.insert(-w);

    hc.insert(0);
    hc.insert(h);
    hl.insert(-h);

    for(int i=0; i<n; i++) {
        char c; int x;
        cin >> c;
        cin >> x;

        if(c=='V') {
            auto it = vc.lower_bound(x);
            int ca = (*it);
            it--;
            int cu = (*it);

            vl.erase(vl.find(cu-ca));
            vl.insert((cu-x));
            vl.insert((x-ca));
            vc.insert(x);
        } else {
            auto it = hc.lower_bound(x);
            int ca = (*it);
            it--;
            int cu = (*it);

            hl.erase(hl.find(cu-ca));
            hl.insert((cu-x));
            hl.insert((x-ca));
            hc.insert(x);
        }

        long long vm = -(*vl.begin());
        long long hm = -(*hl.begin());

        cout << (vm*hm) << endl;
    }

    return 0;
}
