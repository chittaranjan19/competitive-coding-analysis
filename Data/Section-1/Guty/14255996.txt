#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int toNumber (string s)
{
	int Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (int number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}

void shift (string &s, tint l,tint r)
{
	char last = s[r];
	char anterior = s[l];
	for(tint p = l+1; p <= r; p++)
	{
		char aux = s[p];
		s[p] = anterior;
		anterior = aux;
	}
	s[l] = last;
}


int main()
{
	ios_base::sync_with_stdio(0);
	string s;
	cin >> s;
	tint m;
	cin >> m;
	forn(i,m)
	{
		tint l,r,k;
		cin >> l >> r >> k;
		l--;
		r--;
		forn(j,k % (r-l+1))
			shift(s,l,r);
	}
	cout << s << endl;;
	return 0;
}



