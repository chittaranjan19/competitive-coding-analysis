#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair

using namespace std;

char res[105][105];

char check(int x,int y)
{
    if(x > 0 && y > 0)
    {
        if(res[x-1][y] == res[x][y-1])
        {
            if(res[x-1][y] == 'A')
                return 'B';
            return 'A';
        }
        if(res[x-1][y] == 'A')
        {
            if(res[x][y-1] == 'B')
                return 'C';
            return 'B';
        }
        if(res[x-1][y] == 'B')
        {
            if(res[x][y-1] == 'C')
                return 'A';
            return 'C';
        }
        if(res[x-1][y] == 'C')
        {
            if(res[x][y-1] == 'B')
                return 'A';
            return 'B';
        }
    }
    if(x > 0)
    {
        if(res[x-1][y] == 'A')
            return 'B';
        return 'A';
    }
    if(y > 0)
    {
        if(res[x][y-1] == 'A')
            return 'B';
        return 'A';
    }
    return 'A';
}

int main()
{
    int n,m,x=0,y=0;
    cin >> n >> m;
    int ntemp=n,mtemp=m;
    while(x != ntemp || y != mtemp)
    {
        int sz=min(n,m);
        char temp = check(x,y);
        for(int i=x;i<x+sz;i++)
            for(int j=y;j<y+sz;j++)
                res[i][j] = temp;
        if(n > m)
            n-=sz,x+=sz;
        else if(n == m)
            m-=sz,y+=sz,n-=sz,x+=sz;
        else m-=sz,y+=sz;
    }
    for(int i=0;i<ntemp;i++)
    {
        for(int j=0;j<mtemp;j++)
            printf("%c",res[i][j]);
        printf("\n");
    }
    return 0;
}