#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int cnt[5005][5005], arr[5005];

int main()
{
  //freopen("approximation.in", "r", stdin);
  //freopen("approximation.out", "w", stdout);
  int n;
  scanf("%d", &n);
  for(int i=0;i<n;i++)
    scanf("%d", &arr[i]);
  int inv = 0;
  for(int i=0;i<n;i++)
    for(int j=i+1;j<n;j++)
      inv += (arr[i] > arr[j]);
  for(int i=0;i<n;i++)
  {
    int c = 0;
    for(int j=i-1;j>=0;j--)
    {
      if(arr[i] > arr[j]) c++;
      else c--;
      cnt[i][j] = c;
    }
    c = 0;
    for(int j=i+1;j<n;j++)
    {
      if(arr[i] > arr[j]) c--;
      else c++;
      cnt[i][j] = c;
    }
  }
  int mini = INF_MAX, res = 0;
  for(int i=0;i<n;i++)
  {
    for(int j=i+1;j<n;j++)
    {
      int nxt = cnt[i][j] + cnt[j][i];
      if(arr[i] > arr[j]) nxt++;
      else nxt--;
      nxt += inv;
      if(nxt < mini)
        mini = nxt, res = 1;
      else if(nxt == mini) res++;
    }
  }
  printf("%d %d", mini, res);
  return 0;
}
