//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 505;

int c[N];
bool dp[N][N];
bool odp[N][N];
int n, k;

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	dp[0][0] = odp[0][0] = 1;
	cin >> n >> k;
	for(int i = 0; i < n; ++i) cin >> c[i];
	sort(c, c + n);
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < N; ++j){
			for(int w = 0; w < N; ++w){
				if(dp[j][w] == true){
					if(j + c[i] < N) odp[j + c[i]][w] = true;
					if(w + c[i] < N) odp[j][w + c[i]] = true;
				}
			}
		}
		for(int j = 0; j < N; ++j)
			for(int w = 0; w < N; ++w)
				dp[j][w] = odp[j][w];
	}
	vector <int> ans;
	for(int i = 0; i <= k; ++i){
		if(dp[i][k - i])
			ans.PB(i);
	}
	cout << SZ(ans) << "\n";
	for(int i = 0; i < SZ(ans); ++i)
		cout << ans[i] << " ";
	cout << "\n";
	return 0;
}
