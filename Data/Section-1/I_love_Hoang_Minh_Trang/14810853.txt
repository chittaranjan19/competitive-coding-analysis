#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e6 * 5;
const int INF = 1e9 + 7;

using namespace std;
long long n, k, l;
pair<int, int> a[MAXN];
vector<int> f[MAXN];
void add(int &a, int b)
{
    a += b;
    if (a >= INF) a -= INF;
}
int calc(int pos, int len)
{
    long long tmp = l / n + (pos < l % n);
    //cout << pos<<" "<<len<<"="<<(max(0LL, tmp - len + 1) % INF)<<endl;
    return max(0LL, tmp - len + 1) % INF;
}

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("587B.inp", "r", stdin);
    freopen("587B.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n >> l >> k;
    FORE(i, 0, n - 1){
        cin >> a[i].first;
        a[i].second = i;
    }
    sort(a, a + n);
    FORE(i, 1, k) f[i].resize(n + 1);
    int ans = 0;
    FOR(i, 0, n) f[1][i] = 1, add(ans, calc(a[i].second, 1));
    //cout << ans << endl;
    FORE(i, 2, k){
        int sum = 0;
        int dau = 0;
        while (dau < n){
            int cuoi = dau;
            add(sum, f[i - 1][dau]);
            while (cuoi + 1 < n && a[cuoi + 1].first == a[dau].first){
                cuoi++;
                add(sum, f[i - 1][cuoi]);
            }
            FORE(j, dau, cuoi){
                f[i][j] = sum;
                add(ans, 1LL * f[i][j] * calc(a[j].second, i) % INF);
                //if (i == 2)
                //cout <<i<<" "<<j<<" "<<f[i][j]<<" * "<<calc(a[j].second, i)<<endl;
            }
            dau = cuoi + 1;
        }
    }
    //cout << calc(a[0].second, 2) <<" ??"<<a[0].second<< endl;
    //cout << f[2][1] <<" "<<calc(a[1].second, 2)<< endl;
    cout << ans;
    return 0;
}

