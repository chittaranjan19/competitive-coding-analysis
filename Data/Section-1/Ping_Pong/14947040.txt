#include <bits/stdc++.h>
#include <iostream>
#include <cstdio>
#include <stdlib.h>
#include <cmath>
#include <algorithm>

using namespace std;
int dp[1000001];

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n;
    cin >> n;
    vector<pair<int, int> > v(n);
    for (int i = 0; i < n; i++)
        cin >> v[i].first >> v[i].second;
    sort(v.begin(), v.end());
    for (int i = 0; i <= 1000000; i++)
        dp[i] = 0;
    int curr = 0;
    for (int i = 0; i <= 1000000; i++)
        if (i == v[curr].first)
        {
            if (v[curr].second >= i)
                dp[i] = 1;
            else
                dp[i] = dp[i - v[curr].second - 1] + 1;
            curr++;
        }
        else
        {
            if (i == 0)
                dp[i] = 0;
            else
                dp[i] = dp[i - 1];
        }
    int ans = 0;
    for (int i = 0; i <= 1000000; i++)
        ans = max(ans, dp[i]);
    cout << endl;
    cout << n - ans;
    return 0;
}
