#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e4 + 10;
const int INF = 1e9 + 7;

using namespace std;
int n, x;
long long f[2][MAXN];
pair<int, int> a[MAXN];
int b[MAXN], top = 0;

void mmin(long long &a, long long b)
{
    if (a > b) a = b;
}
long long dist(int x, int l, int r)
{
    if (l <= x && x <= r) return 0;
    return min(abs(b[x] - b[l]), abs(b[x] - b[r]));
}

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("575F.inp", "r", stdin);
    freopen("575F.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n >> x;
    FORE(i, 1, n) cin >> a[i].first >> a[i].second;
    b[++top] = x;
    FORE(i, 1, n) b[++top] = a[i].first, b[++top] = a[i].second;
    sort(b + 1, b + top + 1);
    top = unique(b + 1, b + top + 1) - b - 1;
    x = lower_bound(b + 1, b + top + 1, x) - b;
    FORE(i, 1, n){
        a[i].first = lower_bound(b + 1, b + top + 1, a[i].first) - b;
        a[i].second = lower_bound(b + 1, b + top + 1, a[i].second) - b;
    }
    int cur = 1, next = 0;
    FORE(i, 0, top) f[0][i] = 12345678912345;
    f[0][x] = 0;
    FOR(i, 0, n){
        cur ^= 1; next ^= 1;
        FOR(j, 1, top) mmin(f[cur][j + 1], f[cur][j] + b[j + 1] - b[j]);
        FORD(j, top, 2) mmin(f[cur][j - 1], f[cur][j] + b[j] - b[j - 1]);
        FORE(j, 1, top) f[next][j] = 12345678912345;
        FORE(j, 1, top)
            mmin(f[next][j], f[cur][j] + dist(j, a[i + 1].first, a[i + 1].second));
    }
    long long ans = 12345678912345;
    FORE(j, 1, top) ans = min(ans, f[next][j]);
    cout << ans;
    return 0;
}

