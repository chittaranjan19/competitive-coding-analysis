#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int counter;
vector<vector<int> > graph(1000005);
map<int , int> hashing;

int int_mod(LL a, int b)
{
    if(a < 0)
        a%=b,a+=b;
    if(a >= b)
        a%=b;
    return a;
}

int main()
{
    int n,m,x,y;
    cin >> n >> m;
    for(int i=0;i<m;i++)
    {
        scanf("%d %d",&x,&y);
        graph[x].pb(y);
        graph[y].pb(x);
    }
    for(int i=1;i<=n;i++)
    {
        if(graph[i].size() != 0)
            graph[i].pb(i);
        sort(graph[i].begin(),graph[i].end());
        LL h1 = 0;
        for(int j=0;j<graph[i].size();j++)
            h1 = int_mod((LL)(2147483647LL * h1 + graph[i][j]),mod);
        hashing[h1]++;
    }
    LL res = 0;
    for(map<int , int>::iterator it = hashing.begin();it != hashing.end();it++)
        res+=(it->second * (it->second - 1)) / 2;
    cout << res;
    return 0;
}