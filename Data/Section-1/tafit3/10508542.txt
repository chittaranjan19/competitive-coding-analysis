main =>
  N = read_int(),
  M = [],
  C = 0,
  H = 0,
  W = 0,
  while(C < N)
    A = read_int(),
    B = read_int(),
    append(M, [[A,B]], Z),
    M := Z,
    H := max(H, B),
    W := max(W, A),
    C := C+1
  end,
  F5 = 1000000000,
  F = F5,
  foreach(I in 1..N)
    foreach(J in 1..N)
      F1 = M[I],
      F2 = M[J],
      if F1[1] < F2[1], F1[2] > F2[2] then
        BAD := 0,
        X1 = F1[1],
        Y1 = F1[2],
        X2 = F2[1],
        Y2 = F2[2],
        S = (Y2 - Y1) / (X2 - X1),
        foreach(K in 1..N)
          F3 = M[K],
          X3 = F3[1],
          Y3 = F3[2],
          Y4 = S*(X3 - X1) + Y1,
          if Y4 < Y3 then
            BAD := 1
          end
        end,
        if BAD == 0 then
          Y5 = ceiling(S*(-X1) + Y1),
          X5 = ceiling((S*X1 - Y1) / S),
          R = 0.5 * X5 * Y5,
          F := min(R, F)
        end
      end
    end
  end,
  if F = F5 then
    foreach(T in H+1..2*H)
      X1 = 0,
      Y1 = T,
      X2 = W,
      Y2 = H,
      S = (Y2 - Y1) / (X2 - X1),
      X5 = ceiling((S*X1 - Y1) / S),
      R = 0.5 * X5 * T,
      F := min(R, F)
    end,
    foreach(T in W+1..2*W)
      X1 = W,
      Y1 = H,
      X2 = T,
      Y2 = 0,
      S = (Y2 - Y1) / (X2 - X1),
      Y5 = ceiling(S*(-X1) + Y1),
      R = 0.5 * T * Y5,
      F := min(R, F)
    end
  end,
  println(F).
