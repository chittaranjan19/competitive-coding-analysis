#include<cstdio>
#include<algorithm>
#include<vector>
#include<queue>
using namespace std;
#define pp pair<int,int>
#define max(a,b) (a>b?a:b)
typedef long long int ll;
vector<pp> G[100005];
int a[100005],visited[100005]={0},dist[100005];
int main()
{
    int n,i,ans=0;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        scanf("%d",&a[i]);
    }
    for(i=1;i<=n-1;i++)
    {
        int v,w;
        scanf("%d%d",&v,&w);
        G[i+1].push_back(pp(v,w));
        G[v].push_back(pp(i+1,w));
    }
    queue<int> q;
    q.push(1);
    visited[1]=1;
    dist[1]=0;
    while(!q.empty())
    {
        int u=q.front();
        q.pop();
        ans++;
        int si=G[u].size();
        //printf("u=%d a=%d\n",u,a[u]);
        for(i=0;i<si;i++)
        {
            int v=G[u][i].first;
            int w=G[u][i].second;
            if(!visited[v])
            {
                if(dist[u]+w<a[v])
                {
                    dist[v]=max(dist[u]+w,0);
                    visited[v]=1;
                    q.push(v);
                }
            }
        }
    }
    printf("%d\n",n-ans);
    return 0;
}
