#include <bits/stdc++.h>

using namespace std;

#define ll long long
#define MAX_SIZE 100000

ll dp[MAX_SIZE+100][2];
ll arr[MAX_SIZE+100];

ll solve(int n, int k)
{
    if(k<0)
        return INT_MIN;
    if(n==0)
        return 1;
    if(dp[n][k]!=-1)
        return dp[n][k];
    if(arr[n]>arr[n-1]){
        ll x = solve(n-1,k)+1;
        return dp[n][k]=x;
    }
    else{
        if(k==1){
            ll x = solve(n-1,1);
            ll y = solve(n-1,0);
            dp[n][k]=y+1;
            return y+1;
        }
        else{
            //ll x = solve(n-1,1);
            dp[n][k]=2;
            return 1;
        }
    }
}

int main()
{
    memset(dp, -1, sizeof(dp));
    int n, i, j, k;
    cin >> n;
    for(i=0; i<n; i++)
        cin >> arr[i];
    int lcs1[n];
    bool once = false;
    i=0;
    while(i<n-1){
        if(arr[i]>=arr[i+1]){
            if(once)
                break;
            else
                once = true;
        }
        i++;
    }
    lcs1[0]=i+1;
    for(j=1; j<n; j++){
        if(arr[j-1]<arr[j]){
            lcs1[j] = lcs1[j-1]-1;
        }
        else{
            once = false;
            for(k=j-1+lcs1[j-1]; k<n; k++){
                if(arr[k]>arr[k-1])
                    continue;
                else{
                    if(once)
                        break;
                    else
                        once=true;
                }
            }
            lcs1[j] = k-j;
        }
    }
    int ans=1;
    /*for(i=0; i<n; i++)
        cout << lcs1[i] << " ";
    cout << endl;*/
    for(i=0; i<n; i++){
        if(lcs1[i]>ans)
            ans=lcs1[i];
    }
    printf("%d\n", ans);
    return 0;
}
