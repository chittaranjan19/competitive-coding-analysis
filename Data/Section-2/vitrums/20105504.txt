
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class A_TrickySum {
	private final boolean isDebug;
	
	private int t;
	private long[] x;
	
	public A_TrickySum(boolean isDebug) {
		this.isDebug = isDebug;
	}
	
	public void readInput() {
		Scanner sc = null;
		if (isDebug) {
			try {
				sc = new Scanner(new FileInputStream("src\\x0006_educational_codeforces_round_1\\A_input1.txt"));
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} else {
			sc =  new Scanner(System.in);
		}
		
		t = sc.nextInt();
		x = new long[t];
		for (int i = 0; i < t; ++i) {
			x[i] = sc.nextLong();
		}
		
		if (isDebug) {
			System.out.format("t=%s%n", t);
			
			for (int i = 0; i < t; ++i) {
				System.out.println(x[i]);
			}
		}
	}
	
	public void solve() {
		{
//			int y = Integer.MAX_VALUE - 1;
//			int d = 0;
//			for (d = 0; d < 31; d++) {
//				 if ((long)y >>> d == 0) {
//					 break;
//				 }
//			}
//			
//			System.out.format("y=%d y>>>d=%d d=%d 2^d=%d %n",
//					y, (long)y >>> d, d, (long) 1 << d);
//			System.out.format("2^d - y = %d %n", ((long) 1 << d) - y);
//			System.out.println((long) 1 << 31);
		}
		
		for (int j = 0; j < t; ++j) {
			long n = x[j];
			int d = degree(n);
			
			long s1 = n % 2 == 0? (n/2) * (n + 1) : n * ((n + 1)/2);
			long s2 = ((long)1 << d) - 1;
//			System.out.format("n=%d d=%d s1=%d s2=%d %n", n, d, s1, s2);
			System.out.println((s1 - s2) - s2);
		}
	}
	
	private int degree(long y) {
		int d = 0;
		for (d = 0; d < 31; d++) {
			 if ((long)y >>> d == 0) {
				 break;
			 }
		}
		
		return d;
	}
	
	public static void main(String[] args) {
		A_TrickySum solver = new A_TrickySum(false);
		solver.readInput();
		solver.solve();
	}
}
