#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;
long long f[1<<18][101];
int n, mmod;
long long A;
int a[20];
long long duyet(int i, int r, bool greater0, long long x)
{
    //cout<<i<<" "<<r<< " "<<greater0<<" "<<x<<endl;
    if (f[x][r] > -1) return f[x][r];
    if (i > n) return (r == 0);
    long long ans = 0;
    FORE(j, 1, n) if (((x >> (j - 1)) & 1) == 0){
        if (greater0 == 0 && a[j] == 0) continue;
        ans += duyet(i + 1, (r * 10 + a[j]) % mmod, greater0 | (a[j] > 0), x | (1LL << (j - 1)));
    }
    f[x][r] = ans;
    return ans;
}
int dd[10];
long long gt[19];
int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("D.inp", "r", stdin);
    freopen("D.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> A >> mmod;
    n = 0;
    long long tmp = A;
    while (tmp) a[++n] = tmp % 10, tmp /= 10;
    memset(f, -1, sizeof(f));
    gt[0] = 1;
    FORE(i, 1, 18) gt[i] = gt[i - 1] * i;
    FORE(i, 1, n) dd[a[i]]++;
    long long ans = duyet(1, 0, 0, 0);
    FORE(i, 0, 9) if (dd[i]) ans /= gt[dd[i]];
    cout << ans;
    return 0;
}

