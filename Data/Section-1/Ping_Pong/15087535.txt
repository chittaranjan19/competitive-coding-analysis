#include <bits/stdc++.h>
#include <iostream>
#include <cstdio>
#include <stdlib.h>
#include <cmath>
#include <algorithm>

using namespace std;
const int inf = (int)1e9;
const int MAX_N = 50;
const int MOD = (int)1e9 + 7;

int n;
bool graph[MAX_N][MAX_N];
bool used[MAX_N];
int num[MAX_N];

int dfs(int x, int cnt)
{
    used[x] = true;
    for (int i = 0; i < n; i++)
        if (graph[x][i] && !used[i])
            cnt = dfs(i, cnt);
    num[x] = cnt;
    return cnt + 1;
}

int main()
{
    //freopen("slalom.in", "r", stdin);
    //freopen("output.txt", "w", stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int s, f;
    cin >> n;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            graph[i][j]= false;
    for (int i = 0; i < n; i++)
        used[i] = false;
    for (int i = 0; i < n * (n - 1) / 2 - 1; i++)
    {
        cin >> s >> f;
        graph[s - 1][f - 1] = true;
    }
    for (int i = 0; i < n; i++)
    {
        bool b = true;
        for (int j = 0; j < n; j++)
            if (graph[j][i])
            {
                b = false;
                break;
            }
        if (b)
        {
            dfs(i, 0);
            break;
        }
    }
    int x, y;
    for (int i = 0; i < n; i++)
        for (int j = i + 1; j < n; j++)
            if (!(graph[i][j] || graph[j][i]))
            {
                x = i;
                y = j;
            }
    if (num[x] > num[y])
        cout << x + 1 << " " << y + 1;
    else
        cout << y + 1 << " " << x + 1;
    return 0;
}
