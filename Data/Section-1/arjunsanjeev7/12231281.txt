/*	 Hello World!	*/

#include <bits/stdc++.h>

#define pb push_back
#define pf push_front
#define mp make_pair
#define f first
#define s second
#define set(a,b) fill(all(a),b)
#define let(x,a) __typeof(a) x(a)
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d",n)
#define piw(n) printf("%d ",n)
#define pin(n) printf("%d\n",n)
#define all(a) (a).begin(),(a).end()
#define sorti(a) sort(all(a))
#define sortd(a) sort(a.rbegin(),a.rend()) 
#define len(s) s.length()
#define sz(s) s.size()
#define endl '\n'
#define nl printf("\n");
#define present1(c,x) ((c).find(x) != (c).end()) 
#define present2(c,x) (find(all(c),x) != (c).end())
#define tr(v,it) for( let(it,v.begin()) ; it != v.end() ; it++)
#define rtr(v,it) for( let(it,v.rbegin()) ; it != v.rend() ; it++)
#define rep1(i,n) for(int i=0; i<(int)n;i++)
#define rep2(i,a,b) for(int i=(int)a; i<=(int)b; i++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define LL long long int
#define PII pair<int,int>
#define PLL pair<LL,LL>
#define VI vector<int>
#define SI set<int>
#define VPII vector< PII >
#define SPII set< PII >
#define inf INT_MAX

using namespace std;

void FastIO()
{
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	cout.tie(NULL);
}

typedef vector< vector<LL> > matrix;

LL mod;

LL add(LL a, LL b)
{
	return (a+b)%mod;
}

LL mult(LL a, LL b)
{
	return (a*b)%mod;
}

matrix matrixMult(matrix A, matrix B)
{
	int x=A.size(),y=A[0].size(),z=B[0].size();
	matrix C(x,vector<LL>(z,0));
	rep1(i,x)
	{
		rep1(j,y)
		{
			rep1(k,z)
			{
				C[i][k]=add(C[i][k],mult(A[i][j],B[j][k]));
			}
		}
	}
	return C;
}

matrix matrixPow(matrix A, LL b)
{
	int n=A.size();
	matrix ret(n,vector<LL>(n,0));
	ret[0][0]=ret[1][1]=1;
	while(b)
	{
		if(b%2)
		{
			ret=matrixMult(ret,A);
		}
		b=b>>1;
		A=matrixMult(A,A);
	}
	return ret;
}

LL power(LL a, LL b)
{
	LL ret=1;
	while(b)
	{
		if(b%2)
		{
			ret=mult(ret,a);
		}
		b=b>>1;
		a=mult(a,a);
	}
	return ret;
}

int main()
{
	LL n,k,l;
	cin>>n>>k>>l>>mod;
	LL temp=k,cnt=0;
	while(temp>1)
	{
		temp=temp>>1;
		cnt++;
	}
	if(l<=cnt && cnt)
	{
		cout<<"0"<<endl;
		return 0;
	}
	matrix A(2,vector<LL>(2,1));
	A[1][1]=0;
	matrix B(2,vector<LL>(1,1));
	matrix M=matrixMult(matrixPow(A,n),B);
	LL fib=M[0][0],ans=1%mod,total=power(2,n);
	while(l--)
	{
		int x=k%2;
		if(x==1)
		{
			ans=mult(ans,total-fib+mod);
		}
		else
		{
			ans=mult(ans,fib);
		}
		k=k>>1;
	}
	cout<<ans<<endl;
	return 0;
}