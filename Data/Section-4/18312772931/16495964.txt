#include<iostream>
#include<functional>
#include<algorithm>
#include<cstring>
#include<string>
#include<vector>
#include<cstdio>
#include<cmath>
#include<set>
using namespace std;
#define CRL(a) memset(a,0,sizeof(a))
#define QWQ ios::sync_with_stdio(0)
typedef unsigned __int64 LL;
typedef  __int64 ll;
#define CMP bool cmp(const node& a,const node& b){	return a.R<b.R||(a.R==b.R&&a.L<b.L); }
const int T = 100010;
const int mod = 1000000007;

struct node
{
	int num,a1,a2;
}a[T];

int row[5050],col[5050];

int vis[T];

int main()
{
#ifdef zsc
    freopen("input.txt","r",stdin);
#endif

	int i,j,k,n,m;

	while(~scanf("%d%d%d",&n,&m,&k))
	{
		for(i=1;i<=k;++i){
			scanf("%d%d%d",&a[i].num,&a[i].a1,&a[i].a2);
		}

		fill(vis,vis+T,0);

		for(i=0;i<5050;++i){
			row[i] = m;
			col[i] = n;
		}
		i = k;
		int cnt = 0,val=n*m;
		while(i&&cnt!=val)
		{
			int t = 1;
			if(a[i].num==1&&row[a[i].a1]){
				j = (a[i].a1-1) * m;
				while(j<a[i].a1*m){
					if(!vis[j])
					vis[j] = a[i].a2,cnt++,col[t]!=0?col[t]-1:0;
					j++,t++;
				}
				row[a[i].a1] = 0;
			}
			else if(col[a[i].a1]){
				j = a[i].a1-1;
				while(j<n*m){
					if(!vis[j])
					vis[j] = a[i].a2,cnt++,row[t]!=0?row[t]-1:0;
					j += m,t++;
				}
				col[a[i].a1] = 0;
			}
			i--;
		}
		for(i=0;i<val;++i){
			printf("%d ",vis[i]);
			if((i+1)%m==0)printf("\n");
		}
	}

    return 0;
}