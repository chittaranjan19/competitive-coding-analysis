import java.io.*;         
import java.util.*;         
import java.math.*;         
import java.awt.geom.*;         
import java.util.regex.*;
public class Main implements Runnable  {
StreamTokenizer ST;      
PrintWriter out;      
BufferedReader br;   
int inf = 1000000000;


int nextInt() throws IOException{      
    ST.nextToken();      
    return (int)ST.nval;      
}

long nextLong() throws IOException{      
    ST.nextToken();      
    return (long)ST.nval;      
}      
String next() throws IOException{      
    ST.nextToken();      
    return ST.sval;      
}      
double nextD() throws IOException{      
    ST.nextToken();      
    return ST.nval;      
}      
public static void main(String[] args) throws IOException {       
    new Thread(new Main()).start();      
}

public void run()  {      
    try {          
        br = new BufferedReader(new InputStreamReader(System.in));
        //br = new BufferedReader(new InputStreamReader(System.in, "ISO-8859-1"));
        out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        
        ST = new StreamTokenizer(br);      
        solve();      
        out.close();
        br.close();            
    }         
    catch (IOException e) {        
        throw new IllegalStateException(e);       
    }      
}



public void solve() throws IOException {
/*  int tt = Integer.parseInt(br.readLine());
    HashMap<String, Integer> map = new HashMap<String, Integer>();
    for (int i=0; i<=1000000; i++) map.put(BigInteger.va, arg1)
    while (tt-->0) {
        String s = br.readLine();
    }*/
    long n = nextInt();
    long m = nextInt();
    long a = nextInt();
    n = n/a+(n%a==0?0:1);
    m = m/a+(m%a==0?0:1);
    out.print(n*m);
    
    
    
}
}






 



