#include <bits/stdc++.h>
//#define int long long

using namespace std;

const int inf = (int)1e18;

bool p[100000 + 1][1000];

int main() {
    //ios_base::sync_with_stdio(0);
    //cin.tie(0);
    int n, m, q;
    scanf("%d %d %d", &n, &m, &q);
    vector<pair<int, pair<int, int> > > r(q, {0, {0, 0}});
    for (int i = 0; i < q; i++)
    {
        scanf("%d", &r[i].first);
        if (r[i].first <= 2)
            scanf("%d %d", &r[i].second.first, &r[i].second.second);
        else
            scanf("%d", &r[i].second.first);
    }
    vector<int> ans(q, 0);
    int pos[q + 1];
    int cnt[q + 1];
    for (int i = 0; i < n; i++)
    {
        int curr = 1;
        for (int j = 0; j < m; j++)
            p[0][j] = false;
        pos[0] = 0;
        cnt[0] = 0;
        for (int j = 1; j <= q; j++)
        {
            auto x = r[j - 1];
            if (x.first == 1 && x.second.first - 1 == i)
            {
                int curr1 = pos[j - 1];
                for (int l = 0; l < m; l++)
                    p[curr][l] = p[curr1][l];
                if (!p[curr][x.second.second - 1])
                {
                    p[curr][x.second.second - 1] = true;
                    cnt[j] = cnt[j - 1] + 1;
                }
                else
                    cnt[j] = cnt[j - 1];
                pos[j] = curr;
                curr++;
            }
            else if (x.first == 2 && x.second.first - 1 == i)
            {
                int curr1 = pos[j - 1];
                for (int l = 0; l < m; l++)
                    p[curr][l] = p[curr1][l];
                if (p[curr][x.second.second - 1])
                {
                    p[curr][x.second.second - 1] = false;
                    cnt[j] = cnt[j - 1] - 1;
                }
                else
                    cnt[j] = cnt[j - 1];
                pos[j] = curr;
                curr++;
            }
            else if (x.first == 3 && x.second.first - 1 == i)
            {
                int curr1 = pos[j - 1];
                for (int l = 0; l < m; l++)
                    p[curr][l] = !p[curr1][l];
                cnt[j] = m - cnt[j - 1];
                pos[j] = curr;
                curr++;
            }
            else if (x.first == 4)
            {
                cnt[j] = cnt[x.second.first];
                pos[j] = pos[x.second.first];
            }
            else
            {
                pos[j] = pos[j - 1];
                cnt[j] = cnt[j - 1];
            }
            ans[j - 1] += cnt[j];
        }
    }
    for (int i = 0; i < q; i++)
        printf("%d\n", ans[i]);
}