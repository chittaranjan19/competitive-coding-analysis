#include <iostream>
#include <stdlib.h>
#include <string>
#include <vector>
#include <algorithm>
#include <math.h>

using namespace std;

long long bin_search_left(long long *a, long long x, long long n)
{
    long long l = 0, r = n, m;
    while (r - l > 1)
    {
        m = (r + l) / 2;
        if (x >= a[m])
            l = m;
        else
            r = m;
    }
    if (a[l] == x)
        return l;
    else
        return -1;
}

long long bin_search_right(long long *a, long long x, long long n)
{
    long long l = -1, r = n, m;
    while (r - l > 1)
    {
        m = (r + l) / 2;
        if (x > a[m])
            l = m;
        else
            r = m;
    }
    if (a[r] == x)
        return r;
    else
        return -1;
}

int main()
{
    long long n, ans = 1000000000000000, cnt, cnt1, cnt2;
    cin >> n;
    long long a[n], b[n * 2];
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
        b[i * 2] = a[i];
        cin >> b[i * 2 + 1];
        if (b[i * 2 + 1] == b[i * 2])
            b[i * 2 + 1] = -1;
    }
    sort(a, a + n);
    sort(b, b + n * 2);
    /*for (int i = 0; i < n; i++)
        cout << a[i] << " ";
    cout << endl;
    for (int i = 0; i < n * 2; i++)
        cout << b[i] << " ";
    cout << endl;*/
    for (long long i = 0; i < n * 2; i++)
    {
        if (b[i] != -1)
        {
            cnt = bin_search_left(b, b[i], n * 2) - bin_search_right(b, b[i], n * 2) + 1;
            if (bin_search_left(a, b[i], n) != -1)
                cnt1 = bin_search_left(a, b[i], n) - bin_search_right(a, b[i], n) + 1;
            else
                cnt1 = 0;
            //cout << bin_search_left(a, b[i], n) << " " << bin_search_right(a, b[i], n) << endl;
            if (n % 2 == 0)
                cnt2 = n / 2;
            else
                cnt2 = n / 2 + 1;
            //cout << b[i] << " " << cnt << " " << cnt1 << " " << cnt2 << endl;
            if (cnt >= cnt2)
            {
                if (cnt2 > cnt1)
                    ans = min(ans, cnt2 - cnt1);
                else
                    ans = 0;
            }
        }
    }
    if (ans < 1000000000000000)
        cout << ans;
    else
        cout << -1;
    return 0;
}