#include <bits/stdc++.h>

#define fi first
#define se second

#define rep(i,n) for(i=1;i<=n;i++)

using namespace std;

typedef pair<int,int> pairr;
typedef long long LL;

int many;
LL Arr[100100];

struct cmp{	bool operator ()(const pairr &a, const pairr &b){
		
		return a.se < b.se;	
	}
};

set< pairr, cmp > SET;
multiset<LL> VAL;


int main(){
	
	ios_base::sync_with_stdio(false);
	
	int i,k,pos;
	
	cin >> many;
	
	rep(i,many) cin >> Arr[i];
	rep(i,many) Arr[i] += Arr[i-1];
	
	SET.insert({1,many});
	
	VAL.insert(Arr[many]);
	VAL.insert(0);
	
	// cal
	
	rep(k,many){
		
		cin >> pos;
		
		auto it = SET.lower_bound({0,pos});
		
		pairr p = *it;
		
		VAL.erase ( Arr[p.se ] - Arr[p.fi-1] );
		VAL.insert( Arr[p.se ] - Arr[pos   ] );
		VAL.insert( Arr[pos-1] - Arr[p.fi-1] );
		
		SET.erase ( it );
		
		//if(p.fi!=pos-1) 
		SET.insert({ p.fi,pos-1 });
		//if(pos+1!=p.se) 
		SET.insert({ pos+1,p.se });
		
		cout << *VAL.rbegin() << endl;
		
	}
	
	
}
