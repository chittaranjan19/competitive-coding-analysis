#include <iostream>
#include <algorithm>

#define mp make_pair
#define fi first
#define se second

using namespace std;

int n;
int w[1000],h[1000];

pair<int,int> f[1000];

int main()
{
    cin >> n;

    long long wsum = 0;
    int hmax = 0;

    for(int i=0; i<n; i++) {
        cin >> h[i] >> w[i];
        wsum += w[i];
        hmax = max(hmax,h[i]);

        f[i] = mp(h[i]-w[i],i);
    }

    sort(f,f+n);

    long long sol = wsum*hmax;
    bool folyt = 1;

    for(int i=hmax; i>0; i--) {
        int fdb = 0;
        long long wplus = 0;
        for(int j=0; j<n; j++) {
            if(h[j] > i) {
                if(w[j] > i) {
                    folyt = 0;
                    break;
                }
                wplus += h[j]-w[j];
                fdb++;
            }
        }
        if(!folyt) break;
        if(fdb > (n/2)) break;

        int ffdb = 0;
        for(int j=0; (j<n) && ((ffdb+fdb) < (n/2)); j++) {
            if(w[f[j].se] > i) continue;
            if(f[j].fi >= 0) break;
            wplus += f[j].fi;
            ffdb++;
        }
        sol = min(sol,(wsum+wplus)*i);
    }

    cout << sol << endl;

    return 0;
}
