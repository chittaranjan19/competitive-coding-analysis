#include <cstdio>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <cmath>
#include <climits>
#ifdef DEBUG
	#include <ctime>
#endif
using namespace std;

// template

// abbreviations
#define vi vector<int>
#define vl vector<ll>
#define vb vector<bool>
#define vs vector<string>
#define ii pair<int, int>
#define a first
#define b second
#define vii vector<ii>
#define mii map<ii>
#define vvi vector<vi>
#define vvl vector<vl>
#define que queue
#define pque priority_queue
#define stk stack
#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define pu push
#define po pop
#define mp make_pair
#define sz(var) ((int) var.size())
#define rep(it, n) for(int it = 0; it < n; ++it)
#define rep1(it, n) for(int it = 1; it <= n; ++it)
#define loop(it, from, to) for(int it = (from); it <= (to); ++it)
#define iter(it, cont) for(__typeof((cont).begin()) it = (cont).begin(); it != (cont).end(); ++it)
#define riter(it, cont) for(__typeof((cont).rbegin()) it = (cont).rbegin(); it != (cont).rend(); ++it)
#define all(cont) (cont).begin(), (cont).end()
#define memclr(var) memset(var, 0, sizeof(var))

typedef unsigned long long ull;
typedef long long ll;

const int INF = INT_MAX;
const int NINF = INT_MIN;
const ll INF_LL = LLONG_MAX;
const ll NINF_LL = LLONG_MIN;
const double PI = acos(-1.0);
const int MOD = 1e9+7;

#ifdef DEBUG
	#define debug(fmt, args...) printf("Line %d, in %s\t: " fmt, __LINE__, __FUNCTION__, ##args)
	#define rep_rt() printf("[Run time: %.3fs]\n", ((double)clock())/CLOCKS_PER_SEC)
#else
	#define debug(...)
#endif

// end of template

#define MAX_N (int) 1e5
int arr[MAX_N + 1];
int pref_sum[MAX_N + 1];

int main() {
#ifdef DEBUG
	freopen("279B.in", "r", stdin);
#endif
    
    int n, t;
    scanf("%d %d", &n, &t);
    rep(idx, n) {
    	scanf("%d", arr + idx);
    }

    rep(idx, n) {
    	pref_sum[idx] = arr[idx];
    	if (idx)
    		pref_sum[idx] += pref_sum[idx - 1];
    }

    int ans = 0;
    rep(i, n) {
    	int l = i, r = n-1;
    	int prev = (i ? pref_sum[i - 1] : 0);
    	while (l < r) {
    		int m = (l + r) >> 1;
    		int total_time = pref_sum[m] - prev;
    		if (total_time < t) {
    			l = m + 1;
    		} else {
    			r = m;
    		}
    	}
    	if (pref_sum[l] - prev > t)
    		--l;
    	ans = max(ans, l - i + 1);
    }
	printf("%d\n", ans);

#ifdef DEBUG
    rep_rt();
#endif
    return 0;
}