#include<bits/stdc++.h>
#define MAXN 2000009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
ll mod(ll x){
	if(x<0)
		x+=INF;
	return (x%INF);
}

int d[MAXN],arr[MAXN];
ll dp[MAXN];
char s[MAXN];
int get(int x,int ind){
	int ans=0;
	if(d[x])
		ans=mod(dp[ind]-dp[d[x]-1]);
	d[x]=ind;
	return ans;
}
int main(){
	int n,k;
	scanf("%d%d",&n,&k);
	scanf("%s",s+1);
	int m=strlen(s+1);
	for(int i=1;i<=m+n;i++){
		if(i<=m)
			arr[i]=s[i]-'a';
		else{
			int mn=INF;
			for(int j=0;j<k;j++)
				if(umin(mn,d[j]))
					arr[i]=j;	
		}
		d[arr[i]]=i;
	}m+=n;dp[0]=1;
	fill(d,d+MAXN,0);
	for(int i=1;i<=m;i++)
		dp[i]=mod((dp[i-1]<<1)+get(arr[i],i));	
	printf("%lld",mod(dp[m]));
	return 0;
}
