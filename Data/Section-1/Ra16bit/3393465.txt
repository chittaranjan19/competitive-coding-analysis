#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
int n,i,j,x,nn,m,t,a[1000100],p[1000100],q[1000100],z[1000100],st[1000100];
bool oo[1000100];
vector<int> otr[1000100];
int main() {
  scanf("%d",&n);
  for (i=0; i<n; i++) { scanf("%d",&p[i]); q[i]=p[i]; }
  sort(q,q+n);
  nn=unique(q,q+n)-q;
  for (i=0; i<n; i++) a[i]=lower_bound(q,q+nn,p[i])-q;
  scanf("%d",&m);
  for (i=0; i<m; i++) { scanf("%d",&x); x--; oo[x]=true; }
  for (i=0; i<n; i++) {
    if (t>0 && a[st[t]]==a[i]) {
	  p[i]=-p[i];
	  otr[a[i]].push_back(i);
	  z[i]=st[t];
	  t--;
	} else if (oo[i]) {
	  p[i]=-p[i];
	  if (otr[a[i]].size()==0) { puts("NO"); return 0; }
	  j=otr[a[i]].back();
	  p[j]=-p[j];
	  otr[a[i]].pop_back();
	  otr[a[i]].push_back(i);
	  z[i]=j;
	  st[++t]=z[j];
	} else {
	  st[++t]=i;
	}
  }
  if (t>0) { puts("NO"); return 0; }
  puts("YES");
  for (i=0; i<n; i++) printf("%d%c",p[i],(i==n-1)?'\n':' ');
  return 0;
}
