#include <bits/stdc++.h>

using namespace std;

#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define rep(it, v) for (auto it = (v).begin(); it != (v).end(); it++)

typedef long long ll;
typedef pair<int, int> pii;
const ll P = 1e9 + 7;

int cnt1[26], cnt2[26];
unordered_multiset<string> st1, st2;

int main() {
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	ios::sync_with_stdio(false);
	string s, t;
	cin >> s >> t;
	int n = s.size();
	int odd = n;
	while (odd % 2 == 0) {
		odd /= 2;
	}
	for (int i = 0; i < n; i += odd) {
		st1.insert(s.substr(i, odd));
		st2.insert(t.substr(i, odd));
	}
	if (st1 != st2) {
		cout << "NO\n";
		return 0;
	}
	for (int i = odd; i < n; i *= 2) {
		vector<vector<int> > h1, h2;
		//calculate the counts...
		for (int j = 0; j < n; j += i) {
			fillchar(cnt1, 0);
			fillchar(cnt2, 0);
			for (int k = j; k < j + i; k++) {
				cnt1[s[k] - 'a']++;
				cnt2[t[k] - 'a']++;
			}
			h1.push_back(vector<int> (cnt1, cnt1 + 26));
			h2.push_back(vector<int> (cnt2, cnt2 + 26));
		}
		sort(all(h1));
		sort(all(h2));
		if (h1 != h2) {
			cout << "NO\n";
			return 0;
		}
	}
	cout << "YES\n";
}