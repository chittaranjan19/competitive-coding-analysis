#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000009
#define pb push_back
#define mp make_pair

using namespace std;

vector<LL> primes;

void get_primes(LL max){
    char *sieve;
    sieve = new char[max/8+1];
    memset(sieve, 0xFF, (max/8+1) * sizeof(char));
    for(LL x = 2; x <= max; x++)
        if(sieve[x/8] & (0x01 << (x % 8))){
            primes.push_back(x);
            for(LL j = 2*x; j <= max; j += x)
                sieve[j/8] &= ~(0x01 << (j % 8));
        }
    delete[] sieve;
}

int main()
{
    LL n,k;
    cin >> n >> k;
    primes.push_back(1);
    get_primes(650000);
    //cout << primes.size() << endl;
    if(n/2 > k)
    {
        cout << "-1";
        return 0;
    }
    LL x = k/(n/2),rest=k%(n/2) + x;
    int limit = n/2 - 1,i=0;
    while(limit--)
    {
        printf("%d ",primes[i]);
        if(x == 1)
            i++,printf("%d ",primes[i]);
        else printf("%d ",primes[i] * x);
        i++;
    }
    printf("%d ",primes[i]);
        if(rest == 1)
            i++,printf("%d ",primes[i]);
        else printf("%d ",primes[i] * rest);
    i++;
    if(n & 1)
        printf("%d",primes[i]);
    return 0;
}
