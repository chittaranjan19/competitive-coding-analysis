#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 5005
#define base 31
#define maxC 1000000007
#define pb push_back

using namespace std;
string a, b;
int n, m, ans = maxC, dp1[mn][mn], dp2[mn][mn], dp12[mn][mn];
int minSame1[mn], minSame2[mn];

void setup()
{
    cin >> a >> b;
    n = a.length();
    m = b.length();
    a = "+" + a;
    b = "-" + b;
}

void build()
{
    FORD(i, n, 1)
    {
        minSame1[i] = 1;
        FORD(j, n, 1)
        {
            if (a[i] == a[j])
                dp1[i][j] = dp1[i + 1][j + 1] + 1;
            if (j != i)
                minSame1[i] = max(minSame1[i], dp1[i][j] + 1);
        }
    }
    FORD(i, m, 1)
    {
        minSame2[i] = 1;
        FORD(j, m, 1)
        {
            if (b[i] == b[j])
                dp2[i][j] = dp2[i + 1][j + 1] + 1;
            if (j != i)
                minSame2[i] = max(minSame2[i], dp2[i][j] + 1);
        }
    }
}

void xuly()
{
    build();
    FORD(i, n, 1)
    FORD(j, m, 1)
    {
        if (a[i] == b[j])
            dp12[i][j] = dp12[i + 1][j + 1] + 1;
        //cout << i << ' ' << j << ' ' << dp12[i][j] << ' ' << minSame1[i] << ' ' << minSame2[j] << '\n';
        if (dp12[i][j] >= max(minSame1[i], minSame2[j]))
            ans = min(ans, max(minSame1[i], minSame2[j]));
    }
    cout << (ans == maxC? -1 : ans);
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
