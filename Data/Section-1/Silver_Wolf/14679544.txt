// in the name of allah

#include<bits\stdc++.h>
#define LL long long
#define LB long double
#define ALL(X) X.begin(),X.end()
#define DD(X) cout<<#X<<' '<<X<<endl;

using namespace std;

const int MOD=1000*1000*1000+7;
const int MAXN=2*1000+10;
const int MAXM=200+50;
const long long INF=1e9+7;

const int dx[4]={0,0,-1,+1};
const int dy[4]={+1,-1,0,0};

ifstream fin("input.txt");
ofstream fout("output.txt");

bool vis[MAXN][2];
bool can[MAXN][2];
int val[MAXN][2];

queue<pair<int,bool> >q;
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie();cout.tie();
    int n,k;
    cin>>n>>k;
    char ch;
    for(int i=0;i<n;i++)cin>>ch,can[i][0]=(ch=='-');
    for(int i=0;i<n;i++)cin>>ch,can[i][1]=(ch=='-');
    
    q.push(make_pair(0,false));
    vis[0][0]=true;
    while(q.size()){
        int v=q.front().first;
        bool f=q.front().second;
        q.pop();
        if(v<val[v][f])continue;
        //cout<<v<<' '<<f<<' '<<val[v][f]<<'\n';
        if(v>=n-k)return cout<<"YES",0;
        if(v>0 && !vis[v-1][f] && val[v][f]+3>v){
            q.push(make_pair(v-1,f));
            vis[v-1][f]=true;
            val[v-1][f]=val[v][f]+1;
        }
        if(!vis[v+1][f] && can[v+1][f]){
            q.push(make_pair(v+1,f));
            vis[v+1][f]=true;
            val[v+1][f]=val[v][f]+1;
        }
        if(!vis[v+k][!f] && can[v+k][!f]){
            q.push(make_pair(v+k,!f));
            vis[v+k][!f]=true;
            val[v+k][!f]=val[v][f]+1;
        } 
    }
    cout<<"NO";
}