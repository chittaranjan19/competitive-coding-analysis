#include <string>
#include <algorithm>
#include <math.h>
#include <vector>
#include <queue>
#include <stack>
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <set>
#include <cstring>
#include <map>
#include <unordered_map>
#include <iostream>
#include <algorithm>
#include <vector>
#include <ctime>

using namespace std;
#define ll long long
#define db double
#define fs first
#define sc second
#define mp make_pair

vector<int> g[100010], rg[100010];
ll n;
int chld[100010];
bool ok = 1;
vector<int> tt;
int prv[100000];

void rdfs(int v)
{
    for (int i = 0; i < rg[v].size(); i++)
    {
        prv[rg[v][i]] = v;
        rdfs(rg[v][i]);
    }
}

void dfs(int v)
{
    if (g[v].size() > 1)
        ok = 0;
    for (int i = 0; i < g[v].size(); i++)
    {
        dfs(g[v][i]);
    }
}

int main()
{
    memset(chld, 0, sizeof(chld));
    //ios::sync_with_stdio(false);
    cin >> n;
    for (int i = 1; i < n; i++)
    {
        int v, u;
        cin >> v >> u;
        g[v].push_back(u);
        rg[u].push_back(v);
    }
    rdfs(n);
    prv[n] = -1;
    int t = 1;
    while (t != -1)
    {
        tt.push_back(t);
        t = prv[t];
    }
    for (int i = 0; i < tt.size(); i++)
    {
        for (int j = 0; j < g[tt[i]].size(); j++)
        {
            if (prv[tt[i]] != g[tt[i]][j])
                dfs(g[tt[i]][j]);
        }
    }
    if (ok)
        cout << "YES";
    else cout << "NO";
    return 0;
}