#include <iostream>
using namespace std;

typedef long long ll;

const ll INF = 1e18;

ll n, m, kk, d[101][101][101], p[101][101], mn = INF;
int col[101];

int main(){
	cin >> n >> m >> kk;
	for(int i = 1; i <= n; ++ i){
		cin >> col[i];
	}
	for(int i = 1; i <= n; ++ i){
		for(int j = 1; j <= m; ++ j){
			cin >> p[i][j];
		}
	}
	for(int i = 0; i <= n; ++ i){
		for(int j = 0; j <= m; ++ j){
			for(int k = 0; k <= n; ++ k){
				d[i][j][k] = INF;
			}
		}
	}
	if(col[1] == 0){
		for(int i = 1; i <= m; ++ i){
			d[1][i][1] = p[1][i];
		}
	} else {
		d[1][col[1]][1] = 0;
	}
	for(int i = 1; i <= n; ++ i){
		for(int k = 1; k <= n; ++ k){
			for(int j = 1; j <= m; ++ j){
				if(col[i] != 0){
					if(j != col[i]){
						d[i][col[i]][k] = min(d[i][col[i]][k], d[i - 1][j][k - 1]);
					} else {
						d[i][col[i]][k] = min(d[i][col[i]][k], d[i - 1][j][k]);
					}
				} else {
					for(int q = 1; q <= m; ++ q){
						if(j != q){
							d[i][q][k] = min(d[i][q][k], d[i - 1][j][k - 1] + p[i][q]);
						} else {
							d[i][q][k] = min(d[i][q][k], d[i - 1][j][k] + p[i][q]);
						}
					}
				}
			}
		}
	}
	for(int i = 1; i <= m; ++ i){
		//cout << d[n][i][kk] << ' ';
		mn = min(mn, d[n][i][kk]);
	}
	cout << (mn == INF ? -1 : mn);
	return 0;
}