#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <ctime>

using namespace std;

const long long inf = (long long)2 * 1e9;
const long long MOD = (long long)1e9 + 7;
const long long p = 239;
const long long MAX_N = 1000;
const long double pi = 3.1415926535897932384626;
const long double eps = 1e-6;

int main()
{
    //ifstream ifs("input.txt");
    //ofstream ofs("output.txt");
    //freopen("candies.in", "r", stdin);
    //freopen("candies.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    scanf("%d", &n);
    map<int, int> m1, m2;
    map<pair<int, int>, int> m;
    vector<pair<int, int> > a;
    for (int i = 0; i < n; i++)
    {
        int x, y;
        scanf("%d %d", &x, &y);
        if (m1.find(x) == m1.end())
            m1[x] = 0;
        m1[x]++;
        if (m2.find(y) == m2.end())
            m2[y] = 0;
        m2[y]++;
        if (m.find(make_pair(x, y)) == m.end())
            m[make_pair(x, y)] = 0;
        m[make_pair(x, y)]++;
    }
    long long ans = 0;
    for (map<int, int>::iterator it = m1.begin(); it != m1.end(); it++)
    {
        long long cnt = it->second;
        ans += cnt * (cnt - 1) / 2;
    }
    for (map<int, int>::iterator it = m2.begin(); it != m2.end(); it++)
    {
        long long cnt = it->second;
        ans += cnt * (cnt - 1) / 2;
    }
    for (map<pair<int, int>, int>::iterator it = m.begin(); it != m.end(); it++)
    {
        long long cnt = it->second;
        ans = cnt * (cnt - 1) / 2;
    }
    printf("%I64d", ans);
    return 0;
}
