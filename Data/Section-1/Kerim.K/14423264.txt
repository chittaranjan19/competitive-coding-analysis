#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define lg(x) ceil(log2(x))
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int n,m,y,x,arr[MAXN],mx;
multiset<int>s;
int tap(int k){
	int r=mx;
	int l=*(--s.upper_bound(m-k-1));
	if(l==-1)
		return r;
	if((l+k)%m>=(r+k)%m)
		return l;
	return r;	
}
int main(){
	cin>>n>>m;
	ios_base::sync_with_stdio(false);
	s.insert(-1);
	priority_queue<pair<int,PII> >q;
	for(int i=0;i<n;i++)
		scanf("%d",&y),s.insert(y),arr[y]++,umax(mx,y);
	for(int i=0;i<n;i++){
		scanf("%d",&x);
		int t=tap(x);
		q.push(mp((x+t)%m,mp(x,t)));
	}
	vector<int>v;
	while(!q.empty()){
		int a=q.top().ss.ff;
		int b=q.top().ss.ss;
		int c=q.top().ff;q.pop();
		int t=tap(a);
		if(t!=b){
			q.push(mp((a+t)%m,mp(a,t)));
			continue;
		}
		printf("%d ",c);
		s.erase(s.find(b));
		arr[b]--;
		if(!arr[b])
			mx=*(--s.end());
	}
	return 0;
}
