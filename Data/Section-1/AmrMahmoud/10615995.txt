#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <iomanip>
#include <set>
#include <fstream>
#include <numeric>
#include <stdexcept>
#include <cassert>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

vector<int> g[100005];
int sum[100005];

LL solve(int node, int parent)
{
  LL res = 1, temp = sum[node] - 1;
  vector<pair<LL, int > > v;
  for(int i=0;i<g[node].size();i++)
  {
    int nxt = g[node][i];
    if(nxt == parent) continue;
    v.pb(mp(solve(nxt, node), nxt));
  }
  vector<LL> v2;
  for(int i=0;i<v.size() && temp;i++)
  {
    res+=v[i].f;
    temp--;
    res++;
    v2.pb(sum[v[i].s]);
  }
  for(int i=0;i<v2.size() && temp;i++)
  {
    LL x = min(temp, v2[i]);
    temp-=x;
    res+=x * 2;
  }
  sum[node] = temp;
  return res;
}

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("suffix.in", "r", stdin);
  //freopen("suffix.out", "w", stdout);
  int n;
  cin >> n;
  for(int i=0;i<n;i++)
    cin >> sum[i];
  int x, y;
  for(int i=0;i<n-1;i++)
  {
    cin >> x >> y;
    x--, y--;
    g[x].pb(y);
    g[y].pb(x);
  }
  cin >> x;
  x--;
  sum[x]++;
  cout << solve(x, -1) - 1;
  return 0;
}
