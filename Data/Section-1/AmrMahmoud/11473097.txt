#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>
#include <fstream>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int k;
bool v[1005][1005][2][2];
bool DP[1005][1005][2][2];

bool solve(int ind, int odd, bool x, bool ch)
{
  if(ind == k)
  {
    if(ch) return !x;
    return x;
  }
  if(v[ind][odd][x][ch]) return DP[ind][odd][x][ch];
  if(ind > odd)
  {
    if(!solve(ind - 1, odd, x, !ch)) return DP[ind][odd][x][ch] = true;
  }
  if(odd) if(!solve(ind - 1, odd - 1, !x, !ch)) return DP[ind][odd][x][ch] = true;
  return DP[ind][odd][x][ch] = false;
}

int main()
{
  ios_base::sync_with_stdio(0);
  int n, cnt = 0, x;
  cin >> n >> k;
  for(int i=1;i<=n;i++)
  {
   cin >> x;
   cnt+= (x & 1);
  }
  bool ch = 0, parity = cnt & 1;
  int tmp = n - cnt;
  while(n > 1000 || ch)
  {
    n--;
    if(!ch)
    {
      if(tmp)
      {
        tmp--;
      }
      else cnt--, parity = !parity;
    }
    else
    {
      if(tmp)
      {
        tmp--;
      }
      else cnt--, parity = !parity;
    }
    ch = !ch;
  }
  if(solve(n, cnt, parity, ch)) cout << "Stannis";
  else cout << "Daenerys";
  return 0;
}
