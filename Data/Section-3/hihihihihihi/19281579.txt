#include <iostream>
#include <cstdio>
#include <cstdlib>
using namespace std;
int a[200005],b[200005],mm[200005][20],mi[200005][20],n;

void rmq()
{
    int i,j;
    for(i=1;i<=n;i++){mm[i][0]=a[i];mi[i][0]=b[i];}
    for(j=1;(1<<j)<=n;j++)
    {
        for(i=1;i+(1<<j)-1<=n;i++)
        {
            mm[i][j]=max(mm[i][j-1],mm[i+(1<<(j-1))][j-1]);
            mi[i][j]=min(mi[i][j-1],mi[i+(1<<(j-1))][j-1]);
        }
    }
}

int Qm(int l,int r)
{
    int k=0,ans;
    while((1<<(k+1))<=r-l+1)k++;
    ans=max(mm[l][k],mm[r-(1<<k)+1][k]);
    return ans;
}

int Qi(int l,int r)
{
    int k=0,ans;
    while((1<<(k+1))<=r-l+1)k++;
    ans=min(mi[l][k],mi[r-(1<<k)+1][k]);
    return ans;
}

int main()
{
    int l,r,mid,i,tmp1,tmp2;
    long long ans;
    scanf("%d",&n);
    for(i=1;i<=n;i++)scanf("%d",&a[i]);
    for(i=1;i<=n;i++)scanf("%d",&b[i]);
    rmq();
    ans=0;
    for(i=1;i<=n;i++)
    {
        if(a[i]>b[i])continue;
        l=i-1;r=n;
        int L=-1;
        while(r-l>1)
        {
            mid=(l+r)>>1;
            if(Qm(i,mid)>=Qi(i,mid))
            {
                L=mid;
                r=mid;
            }
            else l=mid;
        }
        if(L==-1)continue;
        l=i;r=n+1;
        int R;
        while(r-l>1)
        {
            mid=(l+r)>>1;
            if(Qm(i,mid)>Qi(i,mid))
            {
                r=mid;
            }
            else
            {
                l=mid;
                R=mid;
            }
        }
        ans+=R-L+1;
    }
    printf("%I64d\n",ans);
    return 0;
}
