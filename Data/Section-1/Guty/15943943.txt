#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint toNumber (string s)
{
	tint Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (tint number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}




int main()
{
	#ifdef ACMTUYO
	if (!freopen("entrada.in", "r", stdin))
		return 1;
	#endif
	ios_base::sync_with_stdio(0);
	int n,m;
	while (cin >> n >> m)
	{
		int a[1000000];
		int suma[1000001];
		forn(i,n)
		{
			cin >> a[i];
			suma[i+1] = suma[i] + a[i];
		}
		forn(i,m)
		{
			int l,r,x;
			cin >> l >> r >> x;
			if (a[l-1] != x)
				cout << l << endl;
			else if (a[r-1] != x)
				cout << r << endl;
			else if (suma[r]- suma[l-1] != (r-l+1)*x)
			{
				forsn(j,l,r)
				{
					if (a[j-1] != x)
					{
						cout << j << endl;
						break;
					}
				}
			}
			else
				cout << -1 << endl;
		}
		
	}
	return 0;
}



