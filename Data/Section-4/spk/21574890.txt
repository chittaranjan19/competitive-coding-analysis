#include<bits/stdc++.h>
using namespace std;

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define scantype int
#define lli long long int
#define N 100003

lli MOD  = 1000000007;
lli inf = 1e15;

void scan(scantype &x);
lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}
lli string_to_number(string s){lli x=0; stringstream convert(s); convert>>x; return x;}
lli add(lli a,lli b,lli m=MOD){lli x=a+b;while(x>=m)x-=m;return x;}
lli sub(lli a,lli b,lli m=MOD){lli x=a-b;while(x<0)x+=m;return x;}
lli mul(lli a,lli b,lli m=MOD){lli x=a*1ll*b;x%=m;if(x<m)x+=m;return x;}

int main(void)
{
  int n,m;
  cin>>n>>m;

  int pc[n];
  pair<int,int> sock[m];
  for(int i=0;i<n;i++)
         scan(pc[i]);
  for(int i=0;i<m;i++)
         {
                scan(sock[i].first);
                sock[i].second = i;
         }
  sort(sock,sock+m);

  map<int,list<int> > mp;
  for(int i=0;i<n;i++)
       mp[pc[i]].push_back(i);

  int totpc=0,pcp[n],ad[m],totad=0;

  fill(pcp,0);
  fill(ad,0);

  for(int i=0;i<m;i++)
  {
     int snum = sock[i].second;
     int val  = sock[i].first;


     int cnt=0;
     while(val>0)
     {
            if(!mp.count(val) || mp[val].empty())
            {
                  if(val==1)break;

                  if(val%2!=0)
                   {
                   val = val/2;
                   val++;
                   }else val=val/2;

                  cnt++;
                  continue;
            }

            int tpc = mp[val].back();
            mp[val].pop_back();
            pcp[tpc] = snum+1;
            ad[snum]=cnt;
            totpc++;
            totad+=cnt;
            break;

     }
  }

  cout<<totpc<<" "<<totad<<endl;
  for(int i=0;i<m;i++)
       printf("%d ",ad[i]);
  cout<<endl;
  for(int i=0;i<n;i++)
       printf("%d ",pcp[i]);

  return 0;
}









void scan(scantype &x)
{
    register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
