#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>

#include<cmath>
#include<iostream>
#include<iomanip>
#include<fstream>

#include<string>
#include<utility>
#include<vector>
#include<list>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>

#define ii long long int
#define pi 2*acos(0.0)
#define eps 1e-9
#define mem(x,y) memset(x,y,sizeof(x))
#define all(x) x.begin(), x.end()
#define pb push_back
#define sz(a) (int)a.size()
#define inf 2147483640

#define mx 100001

using namespace std;

const int debug= 0;

struct node
{
	int x,dif;
	node(){}
	node(int a,int b){x=a;dif=b;}
	
	bool operator < (const node &p) const
	{
		return x>p.x;
	}
};

int main()
{
	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	
	int n;
	while (cin>>n)
	{
		int a[mx],i,c,j,sz,dif;
		vector <int> v[mx];
		priority_queue <node> q;
		
		for (i=0;i<n;++i) cin>>a[i], v[a[i]].pb(i);
		
		bool done[mx]={0};
		
		for (i=0;i<n;++i)
		{
			c= a[i];
			if (done[c]) continue;
			sz= sz(v[c]);
			done[c]= 1;
			if (sz==1)
			{
				q.push(node(c,0));
				continue;
			}
			dif= v[c][1]-v[c][0];
			for (j=2;j<sz;++j)
			{
				if (v[c][j]-v[c][j-1]!=dif) break;
			}
			if (j==sz) q.push(node(c,dif));
		}
		
		cout<<sz(q)<<endl;
		
		while (!q.empty())
		{
			node p= q.top();q.pop();
			cout<<p.x<<" "<<p.dif<<endl;
		}
	}
	
	return 0;	
}

