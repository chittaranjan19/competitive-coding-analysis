#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const long long inf = (long long)2 * 1e9;
const long long MOD = (long long)1e9 + 7;
const long long MAX_N = 100000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

long long bin_pow(long long x, long long p)
{
    if (p == 0)
        return 1;
    else if (p % 2 == 0)
    {
        long long c = bin_pow(x, p / 2);
        return (c * c) % MOD;
    }
    else
        return (bin_pow(x, p - 1) * x) % MOD;
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
    long long n, x;
    cin >> n >> x;
    long long a[n];
    for (long long i = 0; i < n; i++)
        cin >> a[i];
    long long d = 0;
    for (long long i = 0; i < n; i++)
        d += a[i];
    long long ma = 0;
    for (long long i = 0; i < n; i++)
        ma = max(ma, a[i]);
    bool b = true;
    for (long long i = 0; i < n - 1; i++)
        if (a[i] != a[i + 1])
            b = false;
    long long nu;
    if (!b)
        nu = d - ma;
    else
    {
        if (n % x == 0)
            nu = (n - 1) * a[0] + n / x;
        else
            nu = (n - 1) * a[0];
    }
    long long ans = min(nu, d);
    cout << bin_pow(x, ans);
	return 0;
}
