#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
using namespace std;
typedef __int64 ll;
const int maxn=200000+100;
ll a[maxn],b[maxn];
ll f1[maxn][20],f2[maxn][20];
int n;
void ST_table()
{
    for(int i=1;i<=n;i++)
    {
        f1[i][0]=a[i];
        f2[i][0]=b[i];
    }
    int nlog=(int)(log(double(n))/log(2.0));
    for(int j=1;j<=nlog;j++)
    {
        for(int i=1;i<=n;i++)
        {
            if(i+(1<<j)-1<=n)
            {
                f1[i][j]=max(f1[i][j-1],f1[i+(1<<(j-1))][j-1]);
                f2[i][j]=min(f2[i][j-1],f2[i+(1<<(j-1))][j-1]);
            }
        }
    }
}
ll RMQma(int l,int r)
{
    int nlog=(int)(log(double(r-l+1))/log(2.0));
    return  max(f1[l][nlog],f1[r-(1<<nlog)+1][nlog]);
}
ll RMQmi(int l,int r)
{
    int nlog=(int)(log(double(r-l+1))/log(2.0));
    return  min(f2[l][nlog],f2[r-(1<<nlog)+1][nlog]);
}
int main()
{
    while(scanf("%d",&n)!=EOF)
    {
        for(int i=1;i<=n;i++)
            scanf("%I64d",&a[i]);
        for(int i=1;i<=n;i++)
            scanf("%I64d",&b[i]);
        ST_table();
        ll ans=0;
        for(int i=1;i<=n;i++)
        {
            for(int j=i;j<=n;j++)
            {
                if(RMQma(i,j)==RMQmi(i,j))
                ans++;
            }
        }
        printf("%lld\n",ans);
    }
}
