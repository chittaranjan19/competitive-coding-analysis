#include <bits/stdc++.h>
using namespace std;

int n, m, d;
stack <int> st;
string s, x[100001];

struct vec {
	int nxt[26];
	int num;
	bool ok;
} t[int(1e6) + 1];

void add(string b, int c){
	int v = 0;
	for(int i = 0; i < b.size(); ++ i){
		if(!t[v].nxt[b[i] - 'a']){
			t[v].nxt[b[i] - 'a'] = d + 1;
			d ++;
		}
		v = t[v].nxt[b[i] - 'a'];
	}
	t[v].num = c;
	t[v].ok = 1;
}

bool dfs(int v, int sz){
	if(t[v].ok == 1){
		st.push(t[v].num);
		if(!dfs(0, sz)){
			st.pop();
		}
	}
	if(sz == -1){
		while(st.size()){
			cout << x[st.top()] << ' ';
			st.pop();
		}
		exit(0);
	}
	if(t[v].nxt[s[sz] - 'a']){
		dfs(t[v].nxt[s[sz] - 'a'], sz - 1);
	}
	return 0;
}

int main(){
	cin >> n;
	cin >> s;
	cin >> m;
	for(int i = 0; i < m; ++ i){
		cin >> x[i];
		string z = "";
		for(int j = 0; j < x[i].size(); ++ j){
			z += tolower(x[i][j]);
		}
		add(z, i);
	}
	dfs(0, n - 1);
	cerr << "NO";
	return 0;
}