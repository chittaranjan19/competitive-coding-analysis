// Jeff And Periods

#include <algorithm>
#include <bits/stdc++.h>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

class C
{
public:
	int num;
	int pos;
};

bool cmp1(C x, C y)
{
	return (x.num)<(y.num);
}

bool cmp2(C x, C y)
{
	return (x.pos)<(y.pos);
}

int main()
{
	int n,i,l,start,end,x,diff,pre,j,flag;
	cin>>n;
	C arr[n],ans[n];
	for(i=0;i<n;i++)
	{
		cin>>arr[i].num;
		arr[i].pos=i;
	}
	sort(arr,arr+n,cmp1);
	l=0;
	i=0;
	while(i!=n)
	{
		start=i;
		x=arr[i].num;
		while(i<=n-1 && arr[i].num==x) i++;
		end=i-1;
		if(start==end)
		{
			ans[l].num=x;
			ans[l].pos=0;
			l++;
		}
		else
		{
			sort(arr+start,arr+i,cmp2);
			diff=arr[start+1].pos-arr[start].pos;
			pre=arr[start+1].pos;
			flag=0;
			for(j=start+2;j<=end;j++)
			{
				if(arr[j].pos!=pre+diff) {flag=1; break;}
				pre=arr[j].pos;
			}
			if(flag==0)
			{
				ans[l].num=x;
				ans[l].pos=diff;
				l++;
			}
		}
	}
	sort(ans,ans+l,cmp1);
	cout<<l<<endl;
	for(i=0;i<l;i++)
	{
		cout<<ans[i].num<<" "<<ans[i].pos<<endl;
	}
	return 0;
}
