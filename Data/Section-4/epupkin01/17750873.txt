#include <iostream>
#include <climits>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(b, 0, sizeof(arr)); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // getchar(), gets()
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); a - массв, n - кол-во эл-тов
#include <iomanip>      // setw()
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#include <memory>       // shared_ptr<>, uniqu_ptr<>
#include <iterator>     // ostream_iterator<int, char> our_iter(cout, " ");
#include <set>
#include <map>
#include <list>
#include <queue>
#define SRT srand(int(time(0)))
using namespace std;
typedef long long ll;
typedef long double ld;
ld pi = 3.14159265358979323;
typedef unsigned long long ull;
typedef set<string>::iterator Iter;
set<string> st;
Iter it;
string temp, temp2;
pair <Iter, bool> p;
int amount = 0;
inline void adding()
{
    p = st.insert(temp);
    if (p.second)
        ++amount;
}
int main()
{
    const int S = 10000;
    string s;
    getline(cin, s);
    int l = (int) s.length();
    bool a2[S] = {0}, a3[S] = {0};
    if (l > 6)
    {
        temp = s[l - 2];
        temp += s[l - 1];
        st.insert(temp);
        a3[l - 2] = a2[l - 2] = ++amount;
        if (l > 7)
        {
            temp = s[l - 3];
            temp += s[l - 2];
            temp += s[l - 1];
            st.insert(temp);
            a2[l - 3] = a3[l - 3] = ++amount;
        }
    }
    for (int i = l - 4; i > 4; --i)
    {
        temp = s[i];
        temp += s[i + 1];
        if (a3[i + 2])
        {
            adding();
            a2[i] = true;
        }
        else if (a2[i + 2])
        {
            temp2 = s[i + 2];
            temp2 += s[i + 3];
            if (temp != temp)
            {
                adding();
                a2[i] = true;
            }
        }
        temp += s[i + 2];
        if (a2[i + 3])
        {
            adding();
            a3[i] = true;
        }
        else if (a3[i + 3] && i < l - 5)
        {
            temp2 = s[i + 3];
            temp2 += s[i + 4];
            temp2 += s[i + 5];
            if (temp != temp2)
            {
                adding();
                a3[i] = true;
            }
        }
    }
    cout << amount << '\n';
    for (string x : st)
        printf("%s\n", x.c_str());
    return 0;
}