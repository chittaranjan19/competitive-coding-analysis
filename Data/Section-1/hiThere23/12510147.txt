#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 400010
#define maxC 1000000000
#define task "REZ"
#define pb push_back
#define mp make_pair
#define mid (l + r) / 2
using namespace std;
int n, m, x, num = 0;
string s;
int tree[mn * 4];
char c;

void chuanbi(int l, int r, int id)
{
    if (l == r)
    {
        tree[id] = (s[l] == '.');
        return;
    }
    chuanbi(l, mid, id * 2);
    chuanbi(mid + 1, r, id * 2 + 1);
    tree[id] = tree[id * 2] + tree[id * 2 + 1];
    if (s[mid] == '.' && s[mid + 1] == '.')
        tree[id] --;
}

void update(int l, int r, int id)
{
    if (l > x || r < x)
        return;
    if (l == r)
    {
        s[l] = c;
        tree[id] = (c == '.');
        return;
    }
    update(l, mid, id * 2);
    update(mid + 1, r, id * 2 + 1);
    tree[id] = tree[id * 2] + tree[id * 2 + 1];
    if (s[mid] == '.' && s[mid + 1] == '.')
        tree[id] --;
}

void setup ()
{
    cin >> n >> m >> s;
    s = 'a' + s;
    FOR (i, 1, n)
    num += (s[i] == '.');
    chuanbi(1, n, 1);
}

void xuly ()
{
    cin >> x >> c;
    if (s[x] == '.' && c != '.')
        num --;
    if (s[x] != '.' && c == '.')
        num ++;
    update(1, n, 1);
    cout << num - tree[1] << "\n";
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    FOR (i, 1, m)
    xuly ();
    return 0;
}
