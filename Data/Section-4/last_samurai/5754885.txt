
/* Author:
 * Rohit Laddha */
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <map>
#include <stack>
#include <set>
#include <queue>
#include <limits.h>
#include <math.h>
#include <queue>
#include <list>
using namespace std;
#define PI 3.14159265
//#define 
class c{
	public:
		int val;
		int ind;
};
bool myfunc(c a, c b){
	return a.val<b.val;
}
bool dm(c a, c b){
	return a.val>b.val;
}
int main(){
	int n,m,k;
	cin >> n >> m >> k;
	int a[n][m];
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++)
			cin >> a[i][j];
	}
//	set<pair<int,int> >s;
	vector<pair<int,int> >s;
	//	if(k==0){
	for(int i=0;i<n;i++){
		c b[m];
		for(int j=0;j<m;j++){
			c tmp;
			tmp.val=a[i][j];
			tmp.ind=j;
			b[j]=tmp;
		}
		if(k==0)
			sort(b,b+m,myfunc);
		else
			sort(b,b+m,dm);

		for(int j=0;j<m;j++){
			if((k==0 && a[i][j]>b[j].val) || (k==1 && a[i][j]<b[j].val)){
				pair<int,int>ps(min(j+1,b[j].ind+1),max(j+1,b[j].ind+1));
				vector<pair<int,int> >::iterator low = lower_bound(s.begin(),s.end(),ps);
				if(low!=s.end() && *low==ps )
					s.erase(low);
				s.push_back(ps);
				for(int l=0;l<n;l++){
					if((k==0 && a[l][j]>a[l][b[j].ind]) || (k==1 && a[l][j]<a[l][b[j].ind])){
						swap(a[l][j],a[l][b[j].ind]);
					}
				}
			}
		}
	}
	//	}
	cout << s.size() << endl;
	for(vector<pair<int,int> >::iterator it = s.begin();it!=s.end();it++){
		cout << (*it).first << ' ' << (*it).second << endl;
	}


	return 0;
}
