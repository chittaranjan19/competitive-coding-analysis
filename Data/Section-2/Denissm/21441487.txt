/*#include <stdio.h>
#include <vector>
#include <string.h>
#include <algorithm>
using namespace std;
typedef unsigned long long ull;

struct Pair {
	int to;
	ull length;
	Pair(int to, ull length) :to(to), length(length) {}
};
int arr[2002];
int n, m;
int main() {
	scanf("%d %d", &n, &m);
	for (int i = 0; i < n; i++) {
		scanf("%d", arr + i);
	}
	return 0;
}*/

#include <stdio.h>
#include <vector>
#include <string.h>
#include <algorithm>
using namespace std;
typedef unsigned long long ull;

struct Pair {
	int to;
	ull length;
	Pair(int to, ull length) :to(to), length(length) {}
};
char input[1000];
int main() {
	int n;
	scanf("%d", &n);
	scanf("%s", input);
	int max_length = 0;
	int current_word_length = 0;
	int word_count = 0;
	int parentheses_count = 0;
	for (int i = 0; i < n; i++) {
		if (input[i] == '(') {
			parentheses_count++;
			if (parentheses_count == 1) {
				max_length = max(current_word_length, max_length);
				current_word_length = 0;
			}
		}
		else if (input[i] == ')') {
			parentheses_count--;
		}
		else if (input[i] == '_') {
			if (parentheses_count == 0) {
				max_length = max(current_word_length, max_length);
				current_word_length = 0;
			}
		}
		else if (parentheses_count == 0) {
			current_word_length++;
		}
		else if (input[i + 1] == ')' || input[i + 1] == '_') {
			word_count++;
		}
	}
	max_length = max(current_word_length, max_length);
	printf("%d %d", max_length, word_count);
	return 0;
}