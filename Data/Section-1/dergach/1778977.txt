#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <iostream>
#include <vector>
#include <string>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
#include <ctype.h>
using namespace std;

#define eps 1e-10

int n, i, j, k, m = -1;
char a[100005][105], s[10005];
string nado, str;

int main()
{
    scanf("%d", &n);
    gets(s);
    for(i = 0; i < n; i++)
    {
        gets(s);
        for(j = 0; s[j] && s[j] == ' '; j++);
        k = 0;
        for(; s[j]; j++)
            a[i][k++] = s[j];
        if(memcmp("throw", a[i], 5) == 0)
            m = i;
    }

    if(m == -1)
    {
        printf("Unhandled Exception\n");
        return 0;
    }

    for(i = 0; a[m][i] != '('; i++)
        a[m][i] = ' ';
    for(; a[m][i] != 0; i++)
        if(a[m][i] == ')' || a[m][i] == '(')
            a[m][i] = ' ';
    stringstream in(a[m]);
    in >> nado;


    for(i = m - 1, j = m + 1; i >= 0, j < n; )
    {
        if(i < 0 || j >= n)
            break;
        if(memcmp("catch", a[i], 5) == 0)
        {
            while(i >= 0 && memcmp("try", a[i], 3) != 0)
                i--;
            i--;
            continue;
        }
        if(memcmp("try", a[i], 3) != 0)
        {
            i--;
            continue;
        }
        if(memcmp("try", a[j], 3) == 0)
        {
            while(j < n && memcmp("catch", a[j], 5) != 0)
                j++;
            j++;
            continue;
        }
        if(memcmp("catch", a[j], 5) != 0)
        {
            j++;
            continue;
        }

        str = "";
        for(k = 0; a[j][k] != '('; k++);
        for(; !isalpha(a[j][k]); k++);
        for(; isalpha(a[j][k]); k++)
            str += a[j][k];
        if(nado == str)
        {
            for(; a[j][k] != '"'; k++);
            k++;
            for(; a[j][k] != '"'; k++)
                printf("%c", a[j][k]);
            printf("\n");
            return 0;
        }
        i--; j++;
    }
    printf("Unhandled Exception\n");
    return 0;
}
