#include <cstdio>
#include <queue>
#include <cassert>
#include <cstring>
#include <vector>
#include <algorithm>
#include <iostream>
#include <cmath>
#include <set>
#include <string>
using namespace std;

typedef long long ll;
#define INF 1234567890
#define eps 1e-7
#define mod 1000000007

vector <pair <int, int> > v[2];

const bool sort_f(const pair <int, int> a, const pair <int, int> b)
{
    if(a.first != b.first)
        return a.first < b.first;
    return a.second > b.second;
}

int main()
{
    int n, x;
    scanf("%d %d", &n, &x);
    for(int i = 0; i < n; i++)
    {
        pair <int, int> candy;
        int t;
        scanf("%d %d %d", &t, &candy.first, &candy.second);
        v[t].push_back(candy);
    }
    sort(v[0].begin(), v[0].end(), sort_f);
    sort(v[1].begin(), v[1].end(), sort_f);
    int res = 0;
    for(int i = 0; i < 2; i++)
    {
        int io = 0, i1 = 0;
        int curh = x;
        int cnt = 0;
        bool ok = true;
        int prev = -1;
        for(int j = 0; j < min(v[0].size(), v[1].size()) && ok; j++)
        {
            ok = false;
            if(curh >= v[i][j].first)
            {
                prev = i;
                cnt++;
                curh += v[i][j].second;
                if(curh >= v[1-i][j].first)
                {
                    prev = 1 - i;
                    cnt++;
                    curh += v[1-i][j].second;
                    ok = true;
                }
            }
        }
        if(prev == 1 - i && v[i].size() > v[1-i].size() && curh >= v[i][v[1-i].size()].first)
            cnt++;
        res = max(res, cnt);
    }
    printf("%d\n", res);
    return 0;
}