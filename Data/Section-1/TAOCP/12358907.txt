/*
*Rainto96
*Beijing University of Posts and Telecommunications School of Software Engineering
*http://blog.csdn.net/u011775691
*/
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <cstring>
#include <string>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <climits>
using namespace std;
#define pb push_back
#define ALL(x) x.begin(),x.end()
#define VINT vector<int>
#define PII pair<int,int>
#define MP(x,y) make_pair((x),(y))
#define ll long long
#define ull unsigned ll
#define MEM0(x)  memset(x,0,sizeof(x))
#define MEM(x,val) memset((x),val,sizeof(x))
#define scan(x) scanf("%d",&(x))
#define scan2(x,y) scanf("%d%d",&(x),&(y))
#define scan3(x,y,z) scanf("%d%d%d",&(x),&(y),&(z))
#define scan4(x,y,z,k) scanf("%d%d%d%d",&(x),&(y),&(z),&(k))
#define Max(a,b) a=max(a,b)
#define Min(a,b) a=min(a,b)
#define rep(x,y) for(int (x)=0;(x)<(y);(x)++ )
using namespace std;
int vis[1111111];
int main(){
	#ifndef ONLINE_JUDGE
		//freopen("C:/OJ/in.txt","r",stdin);
	#endif
	int n;scan(n);
	set<int> st;
	set<int > g;

	int yuanxian=0;
	vector<PII > shuru;
	for(int ni=1;ni<=n;ni++){
                char kd[33];int num;
                scanf("%s%d",kd,&num);
                //cerr<<kd<<" "<<num<<endl;
                if(kd[0]=='+'){
                        st.insert(num);
                        shuru.pb(MP(1,num));
                }else{
                        if(st.count(num)){
                                st.erase(num);
                        }else yuanxian++ , g.insert(ni);

                        shuru.pb(MP(0,num));
                }
	}
	int ans=0;
	//cerr<<yuanxian<<endl;
	st.clear();
	for(int i=0;i<n;i++){
                PII si=shuru[i];
                int kd=si.first ,num=si.second;
                if(kd==1){//+
                        st.insert(num);
                        ans=max(ans, (int)st.size()+yuanxian);
                }else{//-
                        if(st.count(num)){
                                ans=max(ans,(int)st.size()+yuanxian);
                                st.erase(num);
                        }else{
                                ans=max(ans,(int)st.size()+yuanxian);
                                yuanxian--;
                                //cerr<<kd<<" "<<yuanxian<<endl;
                        }
                }
	}
	cout<<ans<<endl;
        return 0;
}
