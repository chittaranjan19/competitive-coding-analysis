#include<iostream>
#include<sstream>
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<bitset>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
using namespace std;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define ALL(c) (c).begin(),(c).end()
#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;

const int N = 100050;
int l[N], r[N], a[N], res[N], c[N], sum[N];
int main(){
    int n,m;
    cin >> n>>m;

    for(int i =1; i <= n; i++){
        scanf("%d", a+i);
        if (a[i] <= n) c[a[i]]++;
        
    }

    for(int i = 1; i <= m; i++)
        scanf("%d %d", l+i, r+i);

    for(int i = 1; i <= n; i++) if(c[i] >= i){                                   

            for(int j = 1; j <=n; j++) sum[j] = sum[j-1] + (a[j] == i);
            for(int j = 1; j <=m; j++)
                if (sum[r[j]] - sum[l[j]-1] == i) ++res[j];
        }

    for(int i = 1; i <= m; ++i) printf("%d\n", res[i]);
    return 0;   
}
