#include <iostream>
#include <string>
#include <vector>

using namespace std;

int p[300];
int a[300][300];

void dfsmin(int start, int current, vector<bool> used)
{
	if(p[start] == start + 1)
		return;
	used[current] = true;
	for(int i = 0; i < used.size(); ++i)
	{
		if(a[current][i] == 1)
		{
			if(p[i] < p[start] && i > start)
			{
				int temp = p[i];
				p[i] = p[start];
				p[start] = temp;
			}
			if(!used[i])
			{
				dfsmin(start, i, used);
			}
		}
	}
}

int main()
{
	int n;
	cin >> n;
	for(int i = 0; i < n; ++i)
	{
		cin >> p[i];
	}
	cin.get();
	string str;
	for(int i = 0; i < n; ++i)
	{
		getline(cin, str);
		for(int j = 0; j < n; ++j)
		{
			if(str[j] == '0')
			{
				a[i][j] = 0;
			}
			if(str[j] == '1')
			{
				a[i][j] = 1;
			}
		}
	}
	for(int i = 0; i < n; ++i)
	{
		vector<bool> used(n);
		dfsmin(i, i, used);
	}
	for(int i = 0; i < n; ++i)
	{
		cout << p[i] << " ";
	}
	cout << endl;
	return 0;
}