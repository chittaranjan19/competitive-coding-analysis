
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class A_BeruTaxi {
	private final boolean isDebug;
	
	private int a, b;
	private int n;
	private int[] x, y, v;
	
	public A_BeruTaxi(boolean isDebug) {
		this.isDebug = isDebug;
	}
	
	public void readInput() {
		Scanner sc = null;
		if (isDebug) {
			try {
				sc = new Scanner(new FileInputStream("src\\x0003_codeforces_round_367_div_2\\A_input1.txt"));
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} else {
			sc =  new Scanner(System.in);
		}
		
		a = sc.nextInt();
		b = sc.nextInt();
		if (isDebug)
			System.out.format("a=%d b=%d%n", a, b);
		
		n = sc.nextInt();
		if (isDebug)
			System.out.format("n=%d%n", n);
		
		x = new int[n];
		y = new int[n];
		v = new int[n];
		
		for (int i = 0; i < n; ++i) {
			x[i] = sc.nextInt();
			y[i] = sc.nextInt();
			v[i] = sc.nextInt();
		}
		
		if (isDebug) {
			for (int i = 0; i < n; ++i) {
				System.out.format("xi=%d yi=%d vi=%d%n", x[i], y[i], v[i]);
			}
		}
	}
	
	public void solve() {
		double res = Double.MAX_VALUE;
		for (int i = 0; i < n; ++i) {
			double t = Math.sqrt((x[i] - a) * (x[i] - a) + (y[i] - b) * (y[i] - b)) / ((double) v[i]);
			res = Math.min(res, t);
		}
		
		System.out.println(res);
	}
	
	public static void main(String[] args) {
		A_BeruTaxi solver = new A_BeruTaxi(false);
		solver.readInput();
		solver.solve();
	}
}
