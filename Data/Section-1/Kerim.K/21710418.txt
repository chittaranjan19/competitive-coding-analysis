#include "bits/stdc++.h"
#define MAXN 100009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
char ans[10009][109];
int n,mn=INF,arr[MAXN],vis[109];
bool cmp(int x,int y){
	return (arr[x]>arr[y]);
}
void solve(int x){
	int cnt=0;
	for(int i=1;i<=n;i++)
		arr[i]-=x;
	while(1){
		vector<int>v;
		for(int i=1;i<=n;i++)
			if(arr[i]>=1)
				v.pb(i);
		if(v.size()==0)
			break;
		sort(all(v),cmp);	
		cnt++;arr[v[0]]--;arr[v[1]]--;
		for(int i=1;i<=n;i++){
			if(v[0]==i or v[1]==i)
				ans[cnt][i]='1';
			else
				ans[cnt][i]='0';
		}
	}
	printf("%d\n",cnt);
	for(int i=1;i<=cnt;i++){
		for(int j=1;j<=n;j++)
			printf("%c",ans[i][j]);
		printf("\n");	
	}
	exit(0);
}
int main(){
	scanf("%d",&n);
	for(int i=1;i<=n;i++){
		scanf("%d",arr+i);
		umin(mn,arr[i]);
	}
	int sum=0;
	for(int i=1;i<=n;i++)
		sum+=arr[i]-mn;
	for(int i=mn;i>=1;i--){
		if(sum%2==0){
			printf("%d\n",i);
			solve(i);
			return 0;
		}
		sum-=n;
	}
	printf("0\n");
	int num=0;
	while(1){
		vector<int>v;
		for(int i=1;i<=n;i++){
			if(v.size()==5)
				break;
			if(arr[i]>=1){
				v.pb(i);
				arr[i]--;
			}	
		}
		if(v.size()==0)
			break;
		if(v.size()==1){
			for(int i=1;i<=n;i++)
				if(v[0]!=i){
					v.pb(i);
					break;
				}
		}
		memset(vis,0,sizeof vis);
		for(int i=0;i<int(v.size());i++)
			vis[v[i]]=1;num++;
		for(int i=1;i<=n;i++){
			if(vis[i])
				ans[num][i]='1';
			else
				ans[num][i]='0';	
		}
	}
	printf("%d\n",num);
	for(int i=1;i<=num;i++){
		for(int j=1;j<=n;j++)
			printf("%c",ans[i][j]);
		printf("\n");
	}
	return 0;
}
