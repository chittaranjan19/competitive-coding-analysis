#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <set>
#define N 400009
#define ll long long
#define base 10000
using namespace std;
int a[N], ans;
vector<int> vv[N];
void dfs(int v, int c)
{
	if (!vv[v].size() )		return ;
	int i, l = vv[v].size();
	for (i = 0; i < l; i++)
	{
		a[vv[v][i]] = c;
		dfs(vv[v][i], c);
	}
}
int main()
{
#ifndef ONLINE_JUDGE
//	freopen("1.	txt", "r", stdin);
#endif
//	ios::sync_with_stdio(false);
//	cin.tie(0);
	int i, j, n, m, u, v, sign, l;
	vector<int> it;
	scanf("%d%d", &n, &m);
	for (i = 1; i <= n; i++)
		scanf("%d", &a[i]);
	for (i = 1; i < n; i++)
	{
		scanf("%d%d", &u, &v);
		vv[u].push_back(v);
	}
	for (i = 0; i < m; i++)
	{
		scanf("%d", &sign);
		if (sign == 1)
		{
			scanf("%d%d", &u, &v);
			a[u] = v;
			dfs(u, v);
		}
		else
		{
			scanf("%d", &u);
			ans = 0;
			queue<int> q;
			set<int> ss;
			int t1, t2;
			q.push(u);
			while(!q.empty())
			{
				t1 = q.front();
				q.pop();
				l = vv[t1].size();
				if (ss.find(a[t1]) == ss.end())	ss.insert(a[t1]);
				for (j = 0; j < l; j++)
					q.push(vv[t1][j]);
			}
			ans = ss.size();
			cout << ans << endl;
		}
	}
	return 0;
}

