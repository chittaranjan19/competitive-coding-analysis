/*
PROG: ride
LANG: C++

#include<bits/stdc++.h>
#define INF 1000000009
#define ff first
#define ss second
#define mp make_pair
#define all(x) x.begin(), x.end()
#define MAXN 100009
#define pb(x) push_back(x)
#define ppb() pop_back()
#define sqr(x) ((x)*(x))
#define lcm(x,y) (x/__gcd(x,y)*y)
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
#define gcd(x,y) (__gcd(x,y))
#define sg(x) (atoi(x.c_str()))
using namespace std;
typedef long long ll;
typedef pair<ll,int> PII;
//int palin(int n,int m,string s){int bl=0;for(int i=n;i<m;i++)if(s[i]!=s[m-i-1])bl++;if(bl==0)return 1;else return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN];
int main()
{
	
	return 0;
}
*/
#include <bits/stdc++.h>

using namespace std;

#define fi first
#define se second
#define pb(x) push_back(x)
#define sqr(x) ((x)*(x))
typedef long long ll;

const int N = 100001;
string a, b, c;
int d[N], e[N], f[N], mi1, mi2;

int main (){

    cin >> a >> b >> c;
        
    for (int i = 0; i < (int)a.size(); i++)
        d[(int)a[i]]++;
        
    for (int i = 0; i < (int)b.size(); i++)
        e[(int)b[i]]++;
        
    for (int i = 0; i < (int)c.size(); i++)
        f[(int)c[i]]++;
    
    mi1 = mi2 = INT_MAX;
    
    for (int i = 0; i < (int)b.size(); i++){
        if (e[(int)b[i]] <= d[(int)b[i]])
            mi1 = min(mi1, d[(int)b[i]] / e[(int)b[i]]);
        else
            mi1 = 0;
    }
    for (int i = 0; i < (int)c.size(); i++){
        if (f[(int)c[i]] <= d[(int)c[i]])
            mi2 = min(mi2, d[(int)c[i]] / f[(int)c[i]]);
        else
            mi2 = 0;
    }
    if (mi1 >= mi2 && mi1 != 0 && mi1 != INT_MAX){
        for (int i = 1; i <= mi1; i++)
            cout << b;
        for (int i = 0; i < (int)b.size(); i++){        
            d[(int)b[i]] -= mi1;
        }
        mi1 = INT_MAX;
        for (int i = 0; i < (int)c.size(); i++){
            if (f[(int)c[i]] <= d[(int)c[i]])
                mi1 = min(mi1, d[(int)c[i]] / f[(int)c[i]]);
            else
                mi1 = 0;
        }
        for (int i = 1; i <= mi1; i++)
                cout << c;
        for (int i = 0; i < (int)c.size(); i++)
            d[(int)c[i]] -= mi1;
        for (int i = 0; i < (int)a.size(); i++){
            if (d[(int)a[i]])
                cout << a[i], d[(int)a[i]]--;
        }
    }
    else if (mi2 >= mi1 && mi2 != 0 && mi2 != INT_MAX){
        for (int i = 1; i <= mi2; i++)
            cout << c;
        for (int i = 0; i < (int)c.size(); i++){
            d[(int)c[i]] -= mi2;
        }
        mi2 = INT_MAX;
        for (int i = 0; i < (int)b.size(); i++){
            if (e[(int)b[i]] <= d[(int)b[i]])
                mi2 = min(mi2, d[(int)b[i]] / e[(int)b[i]]);
            else
                mi2 = 0;
        }
        for (int i = 1; i <= mi2; i++)
                cout << b;
        for (int i = 0; i < (int)b.size(); i++)
            d[(int)b[i]] -= mi2;
        for (int i = 0; i < (int)a.size(); i++){
            if (d[(int)a[i]])
                cout << a[i], d[(int)a[i]]--;
        }
    }
    else
        cout << a;
    return 0;
}
