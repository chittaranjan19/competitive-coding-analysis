#include <bits/stdc++.h>

#define PI 3.14159265358979323846
#define BIG 1000000
#define N 31
#define LEFT 51

using namespace std;

typedef unsigned long long ull;
typedef unsigned int ui;
typedef long long ll;

int n, m, k;
int dp[N][N][LEFT];

int solve(int x, int y, int left){
	int res, i, j;

	// printf("x = %d / y = %d / eaten = %d\n", x, y, eaten);

	if (left <= 0){
		return left < 0 ? BIG : 0;
	}

	if (dp[x][y][left] != -1){
		return dp[x][y][left];
	}

	res = BIG;

	// Horizontal.
	for (i = 1, j = x - 1; i < x; i++, j--){
		res = min(res, min(solve(i, y, left - j * y), solve(i, y, left)) + y * y);
	}

	// Vertical.
	for (i = 1, j = y - 1; i < y; i++, j--){
		res = min(res, min(solve(x, i, left - j * x), solve(x, i, left)) + x * x);
	}

	dp[x][y][left] = res;

	return res;
}

int main(void){
	int t, i, j;

	memset(dp, -1, sizeof(dp));
	scanf("%d", &t);

	for (i = 0; i < t; i++){
		scanf("%d%d%d", &n, &m, &k);

		if (n * m == k){
			printf("0\n");
		}
		else{
			printf("%d\n", solve(n, m, k));
		}
	}

	return 0;
}