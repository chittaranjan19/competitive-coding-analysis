#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>
#include <fstream>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int d[100005];
int h[100005];

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("3.txt", "r", stdin);
  //freopen("out.out", "w", stdout);
  int n, m;
  cin >> n >> m;
  for(int i=0;i<m;i++)
    cin >> d[i] >> h[i];
  bool test = true;
  int res = h[0];
  for(int i=1;i<m && test;i++)
  {
    if(abs(h[i] - h[i - 1]) > d[i] - d[i - 1])
      test = false;
    res = max(res, h[i]);
  }
  if(!test)
  {
    cout << "IMPOSSIBLE\n";
    return 0;
  }
  res = max(res, h[0] + d[0] - 1);
  res = max(res, h[m - 1] + n - d[m - 1]);
  for(int i=1;i<m;i++)
  {
    int diff = h[i] - h[i - 1];
    int nxt = h[i - 1] + diff;
    diff = d[i] - d[i - 1] - abs(diff);
    res = max(res, h[i - 1] + diff / 2);
    res = max(res, nxt + diff / 2);
  }
  cout << res;
  return 0;
}
