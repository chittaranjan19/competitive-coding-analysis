#pragma comment(linker, "/STACK:500000000")
#define _CRT_SECURE_NO_WARNINGS
#include <algorithm>
#include <assert.h>
#include <bitset>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <math.h>
#include <set>
#include <stack>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <string.h>
#include <time.h>
#include <queue>
#include <utility>
#include <vector>
using namespace std;

#define y0 y0ChloeGraceMoretz
#define y1 y1ChloeGraceMoretz
typedef long long ll;
int nextInt() { int n; scanf("%d", &n); return n; }
ll nextLong() { ll n; scanf("%lld", &n); return n; }
const double PI = acos(-1.0);
const double EPS = 1e-9;
const int INF = (int)2e9;
const int MOD = (int)1e9 + 7;

double p[109];
double dp[20009][130];

int main() {
	//freopen("in.txt", "rt", stdin);
	//freopen("out.txt", "wt", stdout);
	int n, x;
	scanf("%d %d", &n, &x);
	for (int i = 0; i <= x; ++i) {
		scanf("%lf", &p[i]);
	}
	for (int j = 0; j <= x; ++j) {
		dp[0][j] = p[j];
	}
	n = min(n, 20000);
	for (int i = 1; i < n; ++i) {
		for (int j = 0; j <= x; ++j) {
			for (int mask = 0; mask < 128; ++mask) {
				dp[i][mask ^ j] += dp[i - 1][mask] * p[j];
			}
		}
	}
	/*double res = 0.0;
	for (int mask = 1; mask < 128; ++mask) {
		res += dp[n - 1][mask];
	}
	printf("%.12lf\n", res);*/
	printf("%.12lf\n", 1.0 - dp[n - 1][0]);
	return 0;
}