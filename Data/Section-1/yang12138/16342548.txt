/*
    ━━━━━┒
    ┓┏┓┏┓┃让老子先跳！
    ┛┗┛┗┛┃＼○／
    ┓┏┓┏┓┃ //
    ┛┗┛┗┛┃ノ)
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┃┃┃┃┃┃
    ┻┻┻┻┻┻
*/
#include <cstdio>
#include <iostream>
#include <cstring>
#include <string>
#include <algorithm>
#include <cctype>
#include <stack>
#include <map>
#include <set>
#include <iomanip>
#include <cstdlib>
#include <queue>
#include <ctime>
#include <cmath>
using namespace std;
typedef long long ll;
const int maxn=2005;
struct hehe
{
    ll x,y,tot;
    bool operator < (const hehe & a)const
    {
        return tot<a.tot;
    }
}p[maxn];
int main()
{
    int n;
    ll x1,y1,x2,y2;
    while(cin>>n>>x1>>y1>>x2>>y2)
    {
        for(int i=0;i<n;i++)
        {
            scanf("%I64d%I64d",&p[i].x,&p[i].y);
            p[i].tot=(p[i].x-x1)*(p[i].x-x1)+(p[i].y-y1)*(p[i].y-y1);
        }
        if(n==1)
        {
            printf("%I64d\n",min((p[0].x-x1)*(p[0].x-x1)+(p[0].y-y1)*(p[0].y-y1),(p[0].x-x2)*(p[0].x-x2)+(p[0].y-y2)*(p[0].y-y2)));
            continue;
        }
        sort(p,p+n);
        ll ans;
        for(int i=0;i<n;i++)
        {
            ll now=0;
            for(int j=i+1;j<n;j++)
            {
                if(p[j].tot==p[i].tot) continue;
                now=max(now,(p[j].x-x2)*(p[j].x-x2)+(p[j].y-y2)*(p[j].y-y2));
            }
            ans=i==0?now+p[i].tot:min(ans,now+p[i].tot);
        }
        printf("%I64d\n",ans);
    }
    return 0;
}






