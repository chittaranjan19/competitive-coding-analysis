#include <queue>
#include <vector>
#include <set>

#include <algorithm>
#include <fstream>
#include <iostream>
using namespace std;
const int MAX_N = 1000005;

int c[MAX_N];

vector< pair<int, int> > desc(int x) {
    vector< pair<int, int> > pp;
    int d = 2, lim = (int)sqrt(1.0 * x);
    while (d <= lim) {
        if (x % d == 0) {
            int e = 0;
            while (x % d == 0) {
                x /= d;
                ++ e;
            }
            pp.push_back({d, e});
        }
        d += 1;
    }
    if (x > 1) {
        pp.push_back({x, 1});
    }
    return pp;
}

int main() {
    int n, k;
    cin >> n >> k;
    auto v = desc(k);
    vector<bool> vis(v.size(), false);
    for (int a,i = 1; i <= n; ++ i) {
        cin >> a;
        auto v2 = desc(a);
        for (auto p : v2) {
            for (int i = 0; i < v.size(); i += 1) {
                if (v[i].first == p.first && v[i].second <= p.second) {
                    vis[i] = true;
                }
            }
        }
    }
    for (int i = 0; i < v.size(); i ++) {
        if (!vis[i]) {
            cout << "No\n";
            return 0;
        }
    }
    cout << "Yes\n";
    return 0;
}