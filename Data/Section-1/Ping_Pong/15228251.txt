#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int MAX_N = 200000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

map<int, vector<int> > m;
int ans[MAX_N];

int main()
{
    //ifstream ifs("input.in");
    //ofstream ofs("output.out");
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n, p, d = 0;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cin >> p;
        m[p].push_back(i);
    }
    for (int i = 0; i < n; i++)
        ans[i] = -1;
    for (int i = 0; i < n; i++)
    {
        while (d * 3 <= i && m.find(i - d * 3) == m.end())
            d++;
        if (d * 3 > i)
        {
            cout << "Impossible";
            return 0;
        }
        ans[i] = m[i - d * 3][m[i - d * 3].size() - 1];
        m[i - d * 3].pop_back();
        if (m[i - d * 3].size() == 0)
            m.erase(i - d * 3);
    }
    cout << "Possible" << endl;
    for (int i = 0; i < n; i++)
        cout << ans[i] + 1 << " ";
    return 0;
}