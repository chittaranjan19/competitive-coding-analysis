#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int toNumber (string s)
{
	int Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (int number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}

bool todosNumeros(string s)
{
	tint n = s.size();
	bool tutti = true;
	forn(i,n)
		tutti &= (((s[i] - '0') >= 0) && ((s[i] - '0') <= 9));
	if ((n > 0 && (s[0] - '0') > 0) or (s == "0"))
		return tutti;
	else
		return false;
}


int main()
{
	ios_base::sync_with_stdio(0);
	string s;
	cin >> s;
	tint n = s.size();
	string a = "";
	string b = "";
	string newstring = "";
	tint wordcountA  = 0;
	tint wordcountB  = 0;
	forn(i,n)
	{
		if (s[i] == ',' or s[i] == ';')
		{
			if (todosNumeros(newstring) && wordcountA > 0)
				a+= ("," + newstring);
			else if (wordcountA == 0 && todosNumeros(newstring))
			{
				a+= newstring;
				wordcountA++;
			}
			else if (wordcountB > 0)
				b+= ("," + newstring);
			else
			{
				b+= newstring;
				wordcountB++;
			}
			newstring = "";
			
		}
		else
		{

			string aux = "a";
			aux[0] = s[i];
			newstring += aux;
		}
	}
	if (todosNumeros(newstring) && wordcountA == 0)
		a+= newstring;
	else if (todosNumeros(newstring) && wordcountA > 0)
		a+= ("," + newstring);
	else if (wordcountB == 0)
		b+= newstring;
	else
		b+= ("," + newstring);
	tint asize = a.size();
	tint bsize = b.size();
	if (asize > 0)
		cout << "\"" << a << "\"" << endl;
	else
		cout << "-" << endl;
	if (bsize > 0 or wordcountB > 0)
		cout << "\"" << b <<  "\"" << endl;
	else
		cout << "-" << endl;
	return 0;
}


