import java.io.*;         
import java.util.*;         
import java.math.*;         
 
public class Main  implements Runnable {
//public static final String FileName = "test";
StreamTokenizer ST;      
PrintWriter out;      
BufferedReader br;   
Scanner in;
static final int inf = 1000000000+10;
 
int nextInt() throws IOException{      
    ST.nextToken();      
    return (int)ST.nval;      
}
long nextLong() throws IOException{      
    ST.nextToken();      
    return (long)ST.nval;      
}      
String next() throws IOException{      
    ST.nextToken();      
    return ST.sval;      
}      
double nextD() throws IOException{      
    ST.nextToken();      
    return ST.nval;      
}      
public static void main(String[] args) throws IOException {       
   new Thread(new Main()).start();
//	new Main().run();
}
 
public void run()  {      
    try {
    	br = new BufferedReader(new InputStreamReader(System.in));
    	out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));    	
    	//br = new BufferedReader(new FileReader(new File(FileName+".in")));
    	//out = new PrintWriter(new BufferedWriter(new FileWriter(FileName+".out")));
    	//in = new Scanner(br);
        ST = new StreamTokenizer(br);      
        solve();      
        out.close();
        //in.close();
        br.close();   
    }         
    catch (IOException e) {       
    	e.printStackTrace();
    	throw new IllegalStateException(e);  
    }      
}


public void solve() throws IOException {
	String s = br.readLine();
	StringBuilder sb = new StringBuilder(s);
	String sr = sb.reverse().toString();
	String s1 = br.readLine();
	String s2 = br.readLine();
	int p1 = s.indexOf(s1);
	if (p1>=0) p1 = s.indexOf(s2, p1+s1.length());
	int p2 = sr.indexOf(s1);
	if (p2>=0) p2 = sr.indexOf(s2, p2+s1.length());
	if (p1>=0) {
		if (p2>=0) out.println("both"); else out.println("forward");
	} else
		if (p2>=0) out.println("backward"); else out.println("fantasy");
	
}
  
}
 
 
  