#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 5e5 + 10, lg = 20;

int gcd(int a, int b) {
	return b ? gcd(b, a % b) : a;
}

ll x[N], y[N];

double l1[N], l2[N], lt[N];

int main()
{
	ll x1, x2, y1, y2, t1, t2;
	cin >> x1 >> y1 >> x2 >> y2 >> t1 >> t2;
	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> x[i] >> y[i];
	for (int i = 0; i < n; i++)
	{
		l1[i] = sqrt(sqr(x[i] - x1) + sqr(y[i] - y1));
		l2[i] = sqrt(sqr(x[i] - x2) + sqr(y[i] - y2));
		lt[i] = sqrt(sqr(x[i] - t1) + sqr(y[i] - t2));
	}
	double mn1 = -1, mn2 = -1; int nmn1, nmn2;
	for (int i = 0; i < n; i++){
		if (lt[i] - l1[i] > mn1)
			mn1 = lt[i] - l1[i], nmn1 = i;
		if (lt[i] - l2[i] > mn2)
			mn2 = lt[i] - l2[i], nmn2 = i;
	}
	
	double sum = 0;
	for (int i = 0; i < n; i++)
		sum += 2*lt[i];

	if (nmn1 == nmn2)
	{
		if (mn1 > mn2){
			mn2 = -1;
			for (int i = 0; i < n; i++){
				if (lt[i] - l2[i] > mn2 && i != nmn1)
					mn2 = lt[i] - l2[i], nmn2 = i;
			}
		}
		else{
			mn1 = -1;
			for (int i = 0; i < n; i++){
				if (lt[i] - l1[i] > mn1 && i != nmn2)
					mn1 = lt[i] - l1[i], nmn1 = i;
			}
		}
	}

	if (mn1 > mn2){
		sum -= (mn1);
		if (mn2 > 0)
			sum -= (mn2);
	}
	else{
		sum -= (mn2);
		if (mn1 > 0)
			sum -= mn1;
	}
	printf("%.9f", sum);
	return 0;
}