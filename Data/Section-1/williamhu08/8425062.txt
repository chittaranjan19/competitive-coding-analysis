//why are you stalking me?
#include <iostream>
#include <cstdio>
#include <fstream>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <deque>
#include <sstream>
#include <cmath>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>
#include <functional>
#include <ctime>
#include <climits>
#include <cstdlib>
#include <complex>
//#define NDEBUG 1
#include <cassert>

using namespace std;

#define rep(it, v) for (__typeof((v).begin()) it = (v).begin(); it != (v).end(); it++)
#define debug(...) fprintf(stderr, __VA_ARGS__)

typedef long long ll;
typedef pair<int, int> pii;
const int MAXN = 1e5 + 10, SQRT = 320;

int N, M;
int A[MAXN];
int last[MAXN];	//last one in current block
int step[MAXN];	//how many steps it takes to go to last[x]

int getblock (int x) {
	//takes care of overflow as well
	return x > N ? MAXN : x / SQRT;
}

void getjump (int i) {
	int nxt = i + A[i];
	if (getblock(nxt) != getblock(i)) {
		last[i] = i;
		step[i] = 0;
	} else {
		last[i] = last[nxt];
		step[i] = step[nxt] + 1;
	}
	// printf("last[%d] = %d\n", i, last[i]);
}

int main() {
	//why are you stalking me?
#ifndef ONLINE_JUDGE
	freopen("codeforces13E.in", "r", stdin);
#endif
	scanf("%d %d", &N, &M);
	for (int i = 1; i <= N; i++) {
		scanf("%d", &A[i]);
	}
	for (int i = N; i; i--) {
		getjump(i);
	}
	// puts("-----");
	for (int q, a, b; M--; ) {
		scanf("%d %d", &q, &a);
		if (q) {
			int hole = 0, jump = 0;
			while (a <= N) {
				jump += step[a] + 1;
				hole = a = last[a];
				a += A[a];
			}
			printf("%d %d\n", hole, jump);
		} else {
			scanf("%d", &b);
			A[a] = b;
			int g = getblock(a);
			for (int i = min(N + 1, (g + 1) * SQRT) - 1; i >= g * SQRT; i--) {
				getjump(i);
			}
			// puts("-----");
		}
	}
}