#include <bits/stdc++.h>
using namespace std;
const int inf = 0x3f3f3f;
int mp[410][410];
int v[410];
int d[410];
int main()
{
    memset(mp, 0, sizeof mp);
    memset(v, 0, sizeof v);
    int n, m;
    cin >> n >> m;
    for(int i = 1; i <= m; i++) {
        int u, v;
        cin >> u >> v;
        mp[u][v] = mp[v][u] = inf;
    }
    int flag = 0;
    for(int i = 2; i <= n; i++) {
        if(mp[1][i] == 0)
            flag = 1;
    }
    if(mp[1][n])
        for(int i = 1; i <= n; i++)
            for(int j = 1; j <= n; j++)
                if(!mp[i][j] && i != j)
                    mp[i][j] = 1;
                else
                    mp[i][j] = inf;
    else
        for(int i = 1; i <= n; i++)
            for(int j = 1; j <= n; j++) {
                if(mp[i][j] == inf)
                    mp[i][j] = 1;
                else
                    mp[i][j] = inf;
            }
    for(int i = 1; i <= n; i++)
        d[i] = (i == 1 ? 0 : inf);
    if(flag) {
        for(int i = 1; i <= n; i++) {
            int x, m = inf;
            for(int j = 1; j <= n; j++) {
                if(!v[j] && d[j] <= m)
                    m = d[x=j];
            }
            v[x] = 1;
            for(int j = 1; j <= n; j++) {
                d[j] = min(d[j], d[x] + mp[x][j]);
            }
        }
        if(d[n] == inf)
            d[n] = -1;
        cout << d[n] << endl;
    } else {
        cout << "-1" << endl;
    }
    return 0;
}
