#include <cstdio>
#include <cstring>
#include <algorithm>

const int INF = ~0u >> 1;

template <class T>
void read(T &x) {
    register char ch; x = 0;
    for (ch = getchar(); ch < '0' || ch > '9'; ch = getchar());
    for (; ch >= '0' && ch <= '9'; ch = getchar()) x = x * 10 + ch - '0';
}

int n, col[505], dp[505][505];

int DP(int l, int r) {
    if (l >= r) return 1;
    if (dp[l][r]) return dp[l][r];
    dp[l][r] = INF;
    for (int i = l; i < r; i++)
        dp[l][r] = std::min(dp[l][r], DP(l, i) + DP(i + 1, r));
    if (col[l] == col[r]) dp[l][r] = std::min(dp[l][r], DP(l + 1, r - 1));
    return dp[l][r];
}

int main() {
    read(n);
    for (int i = 1; i <= n; i++) read(col[i]);
    
    printf("%d", DP(1, n));
    
    return 0;
}