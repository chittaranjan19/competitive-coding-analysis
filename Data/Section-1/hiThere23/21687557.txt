#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 200005
#define maxC 1000000007
#define F first
#define S second
#define mp make_pair
#define sum(l, r) (s[r] - s[(l) - 1])

using namespace std;
int c, n, a[mn], s[mn], ans = maxC, ss = 0, r;

void setup()
{
    cin >> c >> n;
    FOR(i, 1, n)
        cin >> a[i];
    sort(a + 1, a + n + 1);
    FOR(i, 1, n)
        s[i] = s[i - 1] + a[i];
    r = n + 1;
}

bool check(int id, int val)
{
    //cout << id << ' ' << val << '\n';
    if (val == 0)
        return true;
    if (id == 0)
        return false;
    if (a[id] > val)
        return check(upper_bound(a + 1, a + id, val) - a - 1, val);
    int l = 0, r = id;
    while(r - l > 1)
    {
        int g = ((l + r) >> 1);
        if (sum(g, id) <= val)
            r = g;
        else
            l = g;
    }
    return check(r - 1, val - sum(r, id));
}

bool test(int x)
{
    while(x <= a[r - 1])
    {
        r --;
        if (ss + a[r] <= c)
            ss += a[r];
    }
    //cout << x << ' ' << ss << ' ' << r << '\n';
    if (ss + x > c)
        return false;
    return !check(r - 1, c - (ss + x));
}

void xuly()
{
    FORD(i, c - 1, 1)
    if (test(i))
        ans = i;
    if (ans == maxC)
        cout << "Greed is good";
    else
        cout << ans;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
