/*
*Rainto96
*Beijing University of Posts and Telecommunications School of Software Engineering
*http://blog.csdn.net/u011775691
*/
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <cstring>
#include <string>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <climits>
#include <map>
#include <ext/hash_map>
using namespace __gnu_cxx;
using namespace std;

#define pb push_back
#define ALL(x) x.begin(),x.end()
#define VINT vector<int>
#define PII pair<int,int>
#define MP(x,y) make_pair((x),(y))
#define ll long long
#define ull unsigned long long
#define MEM0(x)  memset(x,0,sizeof(x))
#define scand(x) scanf("%d",&x)
#define Max(a,b) a=max(a,b)
const int MOD=3000017;
PII hs[MOD];
hash_map<int,int> mp;
int Scan()     //输入外挂
{
    int res=0,ch,flag=0;
    if((ch=getchar())=='-')
        flag=1;
    else if(ch>='0'&&ch<='9')
        res=ch-'0';
    while((ch=getchar())>='0'&&ch<='9')
        res=res*10+ch-'0';
    return flag?-res:res;
}
void Out(int a)    //输出外挂
{
    if(a>9)
        Out(a/10);
    putchar(a%10+'0');
}
int main(){
        #ifndef ONLINE_JUDGE
                freopen("in.txt","r",stdin);
                freopen("out.txt","w",stdout);
        #endif // ONLINE_JUDGE
        int n,m;
        while(scanf("%d%d",&n,&m)==2){
                mp.clear();
                for(int i=1;i<=n;i++){
                        int x;scand(x);
                        mp[x]++;
                }
                for(int i=1;i<=m;i++){
                        int q;scand(q);
                        hash_map<int,int>::iterator it= mp.find(q);
                        if(it==mp.end()){
                                Out(0);
                                putchar('\n');
                        }else{
                                Out(it->second);
                                putchar('\n');
                                it->second=0;
                        }
                }

        }
        return 0;
}
