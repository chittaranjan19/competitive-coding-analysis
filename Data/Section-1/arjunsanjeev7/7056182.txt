// Roma And Changing Signs

#include <algorithm>
#include <bits/stdc++.h>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

int main()
{
	int n,k,i,total=0,zero=0,flag=0,pos_start=-1,neg_end,neg_start,j;
	cin>>n>>k;
	int arr[n];
	for(i=0;i<n;i++)
	{
		cin>>arr[i];
		if(arr[i]==0) zero=1;
		total+=fabs(arr[i]);
		if(flag==0)
			if(arr[i]>0) 
			{
				flag=1;
				pos_start=i;
			}
	}
	if(arr[0]<0)
	{
		neg_start=0;
		i=0;
		while(i<=n-1 && arr[i]<0) i++;
		neg_end=i-1;
		if(k<=i) for(j=k;j<=neg_end;j++) total+=2*arr[j];
		else if(zero!=1 && (k-i)%2!=0)
		{
			if(pos_start==-1) total+=2*arr[n-1];
			else if(fabs(arr[pos_start]<fabs(arr[neg_end]))) total-=2*arr[pos_start];
			else total+=2*arr[neg_end];
		}
	}
	else if(zero!=1 && k%2!=0) total-=2*arr[0];
	cout<<total<<endl;
	return 0;
}