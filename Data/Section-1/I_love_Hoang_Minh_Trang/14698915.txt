#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;
int c[26][26];
int f[1000][27][102];
string s;
int n, k, q;
int a[1000];
void mmax(int &a, int b)
{
    if (a < b) a = b;
}

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("73C.inp", "r", stdin);
    freopen("73C.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> s >> k;
    n = s.size(); s = '=' + s;
    cin >> q;
    FORE(i, 1, n) a[i] = s[i] - 'a';
    while (q--){
        char u, v;
        int x;
        cin >> u >> v >> x;
        c[u - 'a'][v - 'a'] = x;
        //cout<<u<<" "<<v<<" "<<c[u - 'a'][v - 'a']<<endl;
    }
    FORE(i, 0, n) FORE(j, 0, 25) FORE(z, 0, k) f[i][j][z] = -INF;
    int ans = -INF;
    FORE(i, 0, 25) f[1][i][i != a[1]] = 0;
    FOR(i, 1, n) FORE(ch, 0, 25) FORE(p, 0, k) if (f[i][ch][p] != -INF){
        FORE(next, 0, 25){
            mmax(f[i + 1][next][p + (next != a[i + 1])], f[i][ch][p] + c[ch][next]);
            if (i + 1 == n && (p + (next != a[i + 1]) <= k)) mmax(ans, f[i + 1][next][p + (next != a[i + 1])]);
        }
    }
    cout << ans;
    return 0;
}

