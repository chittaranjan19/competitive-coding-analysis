import java.io.*;
import java.util.*;
import java.math.*;

public class Task {
	static final String FileName = "test";  
 
    		
    
    void solve() throws IOException {   
    	StringTokenizer st = new StringTokenizer(br.readLine(), ",");
    	TreeSet<Integer> t = new TreeSet<Integer>();
    	while (st.hasMoreTokens()) t.add(Integer.parseInt(st.nextToken()));
    	boolean z = false;
    	while (!t.isEmpty()) {
    		int x = t.first();
    		int b = x;
    		while (t.contains(x)) {
    			t.remove(x);
    			x++;
    		}
    		if (z) out.print(",");
    		z = true;
    		if (x==b+1) out.print(b); else out.print(b+"-"+(x-1));
    	}
    	
    }
   
    


    static final int inf = 1000000000;
    BufferedReader br;
    StringTokenizer st;
    PrintWriter out;
    
    public void run() {
        try {
           // br = new BufferedReader(new FileReader(FileName+".in"));
            //out = new PrintWriter(FileName+".out");
            br = new BufferedReader(new InputStreamReader(System.in));
            out = new PrintWriter(System.out);
            //br = new BufferedReader(new FileReader("input.txt"));
            //out = new PrintWriter("output.txt");
            solve();
            br.close();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }
    }

    String next() throws IOException {
        while (st == null || !st.hasMoreTokens()) {
            String s = br.readLine();
            if (s == null)
                    return null;
            st = new StringTokenizer(s);
        }
        return st.nextToken();
    }

    double nextDouble() throws IOException {
       return Double.parseDouble(next());
    }

    int nextInt() throws IOException {
            return Integer.parseInt(next());
    }

    long nextLong() throws IOException {
            return Long.parseLong(next());
    }

    public static void main(String[] args) {        
            new Task().run();
    
    }
}