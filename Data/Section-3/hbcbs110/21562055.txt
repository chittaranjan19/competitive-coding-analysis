#include<iostream>
#include<algorithm>
#include<cstring>
#include<cstdio>
using namespace std;
int d[100005],a[100005];
bool dy[100005]={0},flg[100005];
int jdg(int k,int n,int m)
{
    int i,sum=0;
    memset(flg,0,sizeof(flg));
    for(i=k;i>0;i--)
    {
        if(d[i]!=0&&flg[d[i]]==0)
        {
            flg[d[i]]=1;
            sum+=a[d[i]];
        }else if(sum!=0) sum--;
    }
    for(i=1;i<=m;i++) if(flg[i]==0) return 0;
    if(sum) return 0;
    return 1;
}
void solve(int lsd,int n,int m)
{
    int l=lsd,r=n,mid=(l+r)>>1;
    while(l<r)
    {
        if(jdg(mid,n,m)) r=mid;
        else l=mid+1;
        mid=(l+r)>>1;
    }
    if(jdg(l,n,m)) printf("%d\n",l);
    else if(jdg(r,n,m)) printf("%d\n",r);
    else printf("-1\n");
}
int main()
{
    int n,m,i,lsd=0,flag=0,cnt=0,n0;
    cin>>n>>m;
    for(i=1;i<=n;i++) scanf("%d",&d[i]);
    for(i=1;i<=m;i++)
    {
        scanf("%d",&a[i]);
        if(lsd<=n) lsd+=a[i];
        else lsd=-1;
    }
    if(lsd==-1) printf("-1\n");
    else{
        lsd+=m;
        if(lsd>n) printf("-1\n");
        else solve(lsd,n,m);
    }
    return 0;
}
