#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<string> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int finalPosition (string s)
{
	int total = 0, largo = s.size();
	forn(i,largo)
	{
		if (s[i] == '+')
			total++;
		else
			total--;
	}
	return total;
	
}

void allStrings(const string &s, vector<string> &v, string acc, int i)
{
	int largo = s.size();
	if (i == largo)
		v.push_back(acc);
	else
	{
		if (s[i] == '?')
		{
			vector<char> pos = {'+','-'};
			forn(j,2)
				allStrings(s,v,acc+pos[j],i+1);
		}
		else
			allStrings(s,v,acc+s[i],i+1);
	}
		
}

int main()
{
	string s1,s2;
	cin >> s1 >> s2;
	vector<string> v;
	allStrings(s2,v,"",0);
	int fp = finalPosition(s1);
	int largoV = v.size();
	double den = largoV;
	double num = 0;
	forn(i,largoV)
	{
		if (finalPosition(v[i]) == fp)
			num++;
	}
	cout << num/den << endl;
	
	
	return 0;
}
