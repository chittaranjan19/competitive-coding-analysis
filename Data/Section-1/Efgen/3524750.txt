import java.io.*;
import java.util.*;
import java.math.*;

public class Task implements Runnable {

    void solve() throws IOException {
    	int n = nextInt();
    	boolean ok = true;
    	HashSet<Integer> half = new HashSet<Integer>();
    	HashSet<Integer> full = new HashSet<Integer>();
    	for (int i=0; i<n; i++) {
    		int x = nextInt();
    		if (x==0) continue;
    		if (full.contains(x)) ok = false;
    		if (half.contains(x)) {
    			half.remove(x);
    			full.add(x);
    		} else {
    			half.add(x);
    		}
    	}
    	if (ok) out.println(full.size()); else out.println(-1);
  
    }

    BufferedReader br;
    StringTokenizer st;
    PrintWriter out;

    public void run() {
        try {            
            //br = new BufferedReader(new FileReader("input.txt"));
            //out = new PrintWriter("output.txt");
        	br = new BufferedReader(new InputStreamReader(System.in));
            out = new PrintWriter(System.out);
            solve();
            br.close();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(123);
        }
    }

    String next() throws IOException {
        while (st == null || !st.hasMoreTokens()) {
            String s = br.readLine();
            if (s == null)
                return null;
            st = new StringTokenizer(s);
        }
        return st.nextToken();
    }

    double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static void main(String[] args) {
        new Thread(new Task()).start();
    }
}
