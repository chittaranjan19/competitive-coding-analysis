#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int n,k,unlucky=0;
map<int,int>pm;
vector<int>luc;
ll F[MAXN],P[MAXN];
ll mod(ll x){
	return (x%INF);
}
ll Fe(ll x,int y){
	if(!y)
		return 1LL;
	ll h=Fe(x,y/2);
	h=mod(h*h*1LL);
	if(y&1)
		return mod(h*x*1LL);
	return h;	
}
ll C(int x,int y){
		return 0LL;
	return mod(mod(F[x]*P[y])*P[x-y]);	
}
int lucky(int x){
	while(x>=1){
		if(x%10!=4 and x%10!=7)
			return 0;
		x/=10;	
	}
	return 1;
}
ll dp[1<<10][1<<10];
ll rec(int x,int y){
	if(y>=k)
		return 1LL;
	if(x>=int(luc.size()))
		return C(unlucky,k-y);
	ll &ret=dp[x][y];
	if(ret!=-1)
		return ret;
	ret=rec(x+1,y);
	ret=mod(ret+mod(rec(x+1,y+1)*luc[x]*1LL));	
	return ret;
}
int main(){
	memset(dp,-1,sizeof(dp));
	F[0]=P[0]=1;
	for(int i=1;i<MAXN;i++){
		F[i]=mod(F[i-1]*i);
		P[i]=mod(Fe(F[i],INF-2));
	}
	scanf("%d%d",&n,&k);
	for(int i=1;i<=n;i++){
		int x;scanf("%d",&x);
		if(lucky(x))
			pm[x]++;
		else
			unlucky++;	
	}
	tr(it,pm)
		luc.pb(it->ss);
	printf("%lld\n",rec(0,0));	
	return 0;
}
//LooK aT mY COde ONlinE +_+
