# include <iostream>
# include <cstdlib>
# include <cstdio>
# include <cmath>
# include <algorithm>

using namespace std;

typedef long long int lli;

const int N = 50000;

struct point
{
    lli x, y;
    int i;
}a[9];

int n, b[9];

lli dist (lli x1, lli y1, lli x2, lli y2)
{
    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);
}

bool cmp (point a, point b)
{
    return a.i < b.i;
}

int main ()
{
    n = 3;

    for (int i = 0; i < n; ++i)
    {
        b[i] = i;
        cin >> a[i].x >> a[i].y;
    }

    if ((a[0].x == a[1].x && a[1].x == a[2].x) || (a[0].y == a[1].y && a[1].y == a[2].y))
    {
        puts ("1");
        return 0;
    }



    do
    {
        for (int i = 0; i < n; ++i)
            a[i].i = b[i];
        sort (a, a + n, cmp);
        if (a[0].x == a[1].x && (a[2].y > max (a[0].y, a[1].y) || a[2].y < min (a[0].y, a[1].y)))
        {
            puts ("2");
            return 0;
        }
        if (a[0].y == a[1].y && (a[2].x > max (a[0].x, a[1].x) || a[2].x < min (a[0].x, a[1].x)))
        {
            puts ("2");
            return 0;
        }
        if ((a[1].x == a[0].x && a[1].y == a[2].y) || (a[1].x == a[2].x && a[1].y == a[0].y))
        {
            puts ("2");
            return 0;
        }
    }
    while (next_permutation (b, b + n));

    puts ("3");
    return 0;
}
