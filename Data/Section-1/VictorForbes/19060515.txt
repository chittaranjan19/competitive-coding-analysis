#include <bits/stdc++.h>

using namespace std;

bool bad;

int getpot(unsigned long long x){
	int counter = -1;

	if (x == 0){
		return 0;
	}

	while (x){
		counter++;
		x /= 10;
	}

	return counter;
}

int getbase(unsigned long long x){
	int counter = -1;

	while (x >= 10){
		counter++;
		x /= 10;
	}

	return x;
}

unsigned long long __lcm(unsigned long long a, unsigned long long b){
	int basea, baseb, baseab, pota, potb, potab;

	pota = getpot(a);
	basea = getbase(a);

	potb = getpot(b / __gcd(a, b));
	baseb = getbase(b / __gcd(a, b));

	potab = getpot(basea * baseb);
	baseab = getbase(basea * baseb);

	/*printf("pot a = %d\n", pota);
	printf("pot b = %d\n", potb);
	printf("pot ab = %d\n", potab);
	printf("base a = %d\n", basea);
	printf("base b = %d\n", baseb);*/

	if (pota + potb + potab > 18 or (pota + potb + potab == 18 and baseab > 5)){
		bad = true;
	}

	return a * (b / __gcd(a, b));
}

int main(){
	unsigned long long t, w, b, count, first, second, third, lcm;

	scanf("%llu%llu%llu", &t, &w, &b);

	lcm = __lcm(w, b);

	if (lcm > t or bad){
		first = min(w, b) - 1ULL;
		second = 0;
		third = 0;
	}
	else{
		first = min(w, b) - 1ULL;
		second = ((t / lcm) - 1ULL) * min(w, b);
		third = min(t % lcm + 1ULL, min(w, b));
	}

	/*printf("lcm = %llu\n", lcm);
	printf("first = %llu\n", first);
	printf("second = %llu\n", second);
	printf("third = %llu\n", third);*/

	count = first + second + third;

	printf("%llu/%llu\n", count / __gcd(count, t), t / __gcd(count, t));

	return 0;
}