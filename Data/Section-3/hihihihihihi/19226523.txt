#include <iostream>
#include <cstdio>
#include <cstdlib>
using namespace std;
int a[200005],b[200005],mm[200005][20],mi[200005][20],n;

void rmq()
{
    int i,j;
    for(i=1;i<=n;i++){mm[i][0]=a[i];mi[i][0]=b[i];}
    for(j=1;(1<<j)<=n;j++)
    {
        for(i=1;i+(1<<j)-1<=n;i++)
        {
            mm[i][j]=max(mm[i][j-1],mm[i+(1<<(j-1))][j-1]);
            mi[i][j]=min(mi[i][j-1],mi[i+(1<<(j-1))][j-1]);
        }
    }
}

int Qm(int l,int r)
{
    int k=0,ans;
    while((1<<(k+1))<=r-l+1)k++;
    ans=max(mm[l][k],mm[r-(1<<k)+1][k]);
    return ans;
}

int Qi(int l,int r)
{
    int k=0,ans;
    while((1<<(k+1))<=r-l+1)k++;
    ans=min(mi[l][k],mi[r-(1<<k)+1][k]);
    return ans;
}

int main()
{
    int l,r,mid,i,ans,tmp1,tmp2;
    scanf("%d",&n);
    for(i=1;i<=n;i++)scanf("%d",&a[i]);
    for(i=1;i<=n;i++)scanf("%d",&b[i]);
    rmq();
    ans=0;
    for(i=1;i<=n;i++)
    {
        l=i;r=n;
        while(l<r)
        {
            mid=(l+r)>>1;
            if(Qi(i,mid)>Qm(i,mid))
                r=mid-1;
            else if(Qi(i,mid)<Qm(i,mid))
                l=mid+1;
            else
            {
                tmp1=tmp2=mid;
                while(Qi(i,tmp1)==Qm(i,tmp1)){tmp1--;if(tmp1==0)break;}
                while(Qi(i,tmp2)==Qm(i,tmp2)){tmp2++;if(tmp2==n+1)break;}
                ans+=tmp2-tmp1-1;
                break;
            }
        }
    }
    if(a[n-1]==b[n-1])ans++;
    printf("%d\n",ans);
    return 0;
}
