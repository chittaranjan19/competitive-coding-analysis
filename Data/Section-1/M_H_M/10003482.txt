#include <bits/stdc++.h>

#define SZ(x) ( (int)x.size() )


using namespace std;

typedef long long ll;
const int maxn = 2000 + 10;

int n,t;
long double p;
long double dp[maxn][maxn],s;

void memoize(int x ,int y , int l){
    if(dp[x][y] != -1)
        return;
    if(x > y){
        dp[x][y] = 0;
    }
    else if(x == 0){
        dp[x][y] = pow((1-p) , y);
    }
    else if(y == 0){
        dp[x][y] = 0;
    }
    else{
        if(x - 1 < l- 1){
            dp[x][y] = p * dp[x-1][y-1] + (1 - p) * dp[x][y-1];
        }
        else{
            dp[x][y] = p  + (1 - p) * dp[x][y-1];
        }
        //if(x == 1  && y == 2)
            //cout << "debug " <<  dp[x][y] << " " <<  p * dp[x-1][y-1] << " " << (1 - p) * dp[x][y-1] << " debug \n";
    }
}

int main(){
    cin >> n >> p >> t;
    for(int i = 0;  i < maxn; ++i){
        for(int j = 0; j < maxn; ++j){
            dp[i][j] = -1;
        }
    }
    for(int i = 0; i <= n; ++i){
        for(int j = 0; j <= t; ++j){
            if(dp[i][j] == -1){
                memoize(i,j, n);
            }
            //cerr << dp[i][j] << " ";
        }
        //cerr << "\n";
    }
    for(int i = 0; i <= n; ++i){
        s =  s + i * dp[i][t];
    }
    cout << setprecision(7) << s << endl;
    return 0;
}
