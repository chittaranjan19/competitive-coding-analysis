#include "bits/stdc++.h"
#define MAXN 5009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
int n,m,T,dis[MAXN][MAXN],from[MAXN][MAXN],deg[MAXN];
vector<PII>dir[MAXN];
vector<int>inv[MAXN];
void solve(int nd,int to,int val){
	for(int i=2;i<=n;i++)
		if(umin(dis[nd][i],dis[to][i-1]+val))
			from[nd][i]=to;
}
int main(){
	memset(dis,64,sizeof dis);
	#ifndef ONLINE_JUDGE
    freopen("file.in", "r", stdin);
	#endif	
	scanf("%d%d%d",&n,&m,&T);
	for(int i=1;i<=m;i++){
		int u,v,w;
		scanf("%d%d%d",&u,&v,&w);
		dir[u].pb(mp(v,w));
		deg[u]++;
		inv[v].pb(u);
	}deg[n]=0;
	dir[n].resize(0);
	dis[n][1]=0;
	from[n][1]=-1;
	queue<int>q;
	for(int i=1;i<=n;i++)
		if(!deg[i])
			q.push(i);
	while(!q.empty()){
		int nd=q.front();
		q.pop();
		for(int i=0;i<int(dir[nd].size());i++)
			solve(nd,dir[nd][i].ff,dir[nd][i].ss);
		for(int i=0;i<int(inv[nd].size());i++){
			int to=inv[nd][i];
			deg[to]--;
			if(!deg[to])
				q.push(to);
		}
	}	int ans;
	for(int i=n;i>=1;i--)	
		if(dis[1][i]<=T){
			ans=i;
			break;
		}
	printf("%d\n",ans);
	int now=1;
	while(now>0){
		printf("%d ",now);
		now=from[now][ans--];
	}printf("\n");
	return 0;
}
