#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int n,m,xx,yy,ans=0;
char arr[19][19];
int vis[19][19];
char rr[]={'U','R','D','L'};
int dx[]={-1,0,+1,0};
int dy[]={0,+1,0,-1};
int dasymy(int x,int y){
	if(x<0 or y<0 or x>=n or y>=m or vis[x][y]==1)
		return 1;
	return 0;	
}
void dfs(int x,int y,char k){
	//cout<<x<<" "<<y<<" "<<k<<endl;
	ans++;
	int d=0;
	vis[x][y]=1;
	for(int i=0;i<4;i++){
		if(rr[i]==k)
		if(rr[i]==k and !dasymy(x+dx[i],y+dy[i]) and arr[x+dx[i]][y+dy[i]]!='*'){
			//ans++;
			dfs(x+dx[i],y+dy[i],k);
			d=1;
		}
	}
	if(!d){
		for(int i=0;i<4;i++)
			if(rr[i]==k)
				d=i;
		for(int j=1;j<=1;j++){
			int v=(d+j)%4;
			if(rr[v]!=k and !dasymy(x+dx[v],y+dy[v]) and arr[x+dx[v]][y+dy[v]]!='*'){
				//ans++;
				dfs(x+dx[v],dy[v]+y,rr[v]);
				break;
			}
		}
	}
}
int main(){
	cin>>n>>m;
	char c;
	for(int i=0;i<n;i++)
		for(int j=0;j<m;j++){
			cin>>arr[i][j];
			for(int k=0;k<4;k++)
				if(arr[i][j]==rr[k])
					xx=i,yy=j,c=rr[k];
		}		
	dfs(xx,yy,c);
	cout<<ans<<endl;	
	return 0;
}
