#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define PI acos(-1.0)
#define LL long long
#define EPS 1e-9

using namespace std;

bool sorter(int x,int y)
{
    return x>y;
}

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int n,counter=1,index=0,temp;
    cin >> n;
    vector<int> strength;
    for(int i=0;i<n;i++)
    {
        cin >> temp;
        strength.push_back(temp);
    }
    sort(strength.begin(),strength.end(),sorter);
    for(int i=2;i<n;i++)
    {
        if((strength[i-1]-strength[i]==1 || (strength[i]>strength[i-1] && !strength[i-1])) && strength[i-1] == strength[i-2])
        {
            //cout << strength[i] << "  " << strength[i-1] << "  " << strength[i-2] << endl;
            temp=strength[i-1];
            strength.erase(strength.begin()+i-1);
            strength.push_back(temp);
            i-=2;
        }
        else if(strength[i]>strength[i-1])
        {
            int count=0;
            for(int j=i-1;j>=0 && strength[j]==strength[i-1];j--)
                count++;
            if(count>strength[i-1]+1)
            {
                temp=strength[i-1];
                strength.erase(strength.begin()+i-1);
                strength.push_back(temp);
                i-=2;
            }
        }
    }
    for(int i=0;i<n;i++)
    {
        if(!strength[i] && i!=n-1)
        {
            counter++;
            index=i+1;
            continue;
        }
        for(int j=index;j<i;j++)
        {
            if(strength[j])
                strength[j]--;
            else //if(i!=n-1)
            {
                counter++;
                index=i;
                break;
            }
        }
    }
    cout << counter;
    return 0;
}