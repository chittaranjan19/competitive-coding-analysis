#include <bits/stdc++.h>
//#include <fstream>
#include <cmath>
#include <algorithm>
#include <string>
#include <iomanip>
#include <vector>
#include <map>
#include <stack>
#include <queue>
#define P_ M_PI
#define MAXN 100009
#define INF 1000000009
#define LLINF 1000000000000000009
#define mp(x,y) make_pair(x,y)
#define ff first
#define cs(x,y) cout<<" Case "<<y<<":"<<x;
#define ss second
#define all(x) x.begin(),x.end()
#define pb push_back
#define ppb(x) pop_back()
#define ll long long
using namespace std;
/*
ifstream cin("file.in");
ofstream cout("file.out");
*/

string s , t;

int n , m , n1 , m1 , a[9][9]; 
int b[]={0 , 0 , -1 , +1 , +1 , -1 , +1 , -1}; 
int c[]={+1 , -1 , 0 , 0 , +1 , +1 , -1 , -1};
int v=0 , o ,o1;

string q[]={"R","L","U","D","RD","RU", "LD" ,"LU"};
string k[9][9] , h;

int das(int x , int y){
if(x<=8 && x>=1 && y<=8 && y>=1)
	return 1;
return 0;
}

void dfs(int l , int r)
{
	
for(int i=0 ; i<8; i++)
	{
	int tox=l+b[i];
	int toy=r+c[i];
		if(das(tox , toy)==1 && a[tox][toy]>a[l][r]+1)
			a[tox][toy]=a[l][r]+1 , k[tox][toy]=q[i] , dfs(l+b[i] , r+c[i]);

	}
}
int main()
{

cin >> s >> t;	

n=(s[0]-'a')+1 , m=8-(s[1]-'0')+1;
n1=(t[0]-'a')+1 , m1=8-(t[1]-'0')+1;

o=m1 ,  o1=n1;
for(int i=1;i<=8 ; i++)
	for(int j=1 ;j<=8; j++)
		a[i][j]=INF;
a[m][n]=0;
dfs(m ,n); 

while(v<a[m1][n1])
{
v++;
h+=(k[o][o1]);
h+='0';
for(int i=0; i<8; i++){
	if(k[o][o1]==q[i]){
		if(b[i]==1)
			o--;	
		if(b[i]==-1)
			o++;
		if(c[i]==1)
			o1--;	
		if(c[i]==-1)
			o1++;
			break;

}

}
}
cout << a[m1][n1]<<endl;
for(int i=0; i<h.length(); i++){
	if(h[i]=='0')
		cout << endl;
	else 
		cout << h[i];
}

return 0;
}
