#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
const int MAXN = 1e5 + 10;

int N;
ll A[MAXN], P[MAXN];
multiset<ll> st;
set<int> des;

int main() {
	scanf("%d", &N);
	for (int i = 1; i <= N; i++) {
		scanf("%lld", &A[i]);
		P[i] = P[i - 1] + A[i];
	}

	st.insert(P[N]);
	des.insert(0);
	des.insert(N + 1);

	for (int i = 1; i <= N; i++) {
		int pos;
		scanf("%d", &pos);
		des.insert(pos);
		auto it = des.find(pos);
		ll v = P[*next(it) - 1] - P[*prev(it)];
		ll v1 = P[pos - 1] - P[*prev(it)];
		ll v2 = P[*next(it) - 1] - P[pos];
		st.erase(st.find(v));
		st.insert(v1);
		st.insert(v2);
		printf("%lld\n", *st.rbegin());
	}
}
