#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
/*
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
ordered_set s;
*/
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int vis[11];
int fun(int k){
	fill(vis,vis+10,0);
	int san=0,sum=0;
	while(k>=1){
		san++;
		vis[k%10]=1;
		k/=10;
	}
	for(int i=0;i<10;i++)
		sum+=vis[i];
	if(sum==san)	
		return 1;
	return 0;	
}
int main(){
	int a;
	cin>>a;
	for(int i=a+1;i<INF;i++){
		if(fun(i)){
			cout<<i<<endl;
			return 0;	
		}
	}
	return 0;
}
