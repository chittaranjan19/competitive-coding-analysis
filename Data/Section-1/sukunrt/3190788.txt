#include<iostream>
#include<sstream>
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<bitset>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
using namespace std;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define ALL(c) (c).begin(),(c).end()
#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;
long long block[200050];
long long M[200050];
long long elem[200060];
int main(){

    int n,q;
    cin >> n >> q;
    for(int i= 0; i < n; i++){
        scanf("%d", &elem[i+1]);
    }
    int s = sqrt(n);
    for(int i = 0; i < q; i++){
        int l,r;
        cin >> l >> r;
        int len = r-l+1;
        if(len > 2*s){
            int start = (l+s-1)/s + 1;
            int end = r/s;
            for(int i = start; i <= end; i++)
                M[i]++;
            for(int i = l; i <= (start-1)*s; i++)
                block[i]++;
            for(int i = end*s+1; i <= r; i++)
                block[i]++;
          
        }
        else{
            for(int i = l; i <= r; i++)
                block[i]++;
        }

    }

    for(int i = 1; i <= n; i++){
        int m = (i+s-1)/s;
        block[i] += M[m];
    }
    sort(elem+1, elem+n+1);
    sort(block+1, block+n+1);
    long long total = 0;
    for(int i = 1; i <= n; i++){
        total += (block[i]*elem[i]);
    }
    cout << total <<  endl;
    return 0;
}

        
    
    
