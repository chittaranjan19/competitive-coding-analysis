#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e6 * 5;
const int INF = 1e9 + 7;

using namespace std;

int n, a[MAXN], b[MAXN], c[MAXN];
int s[MAXN];

bool ok(int k)
{
    b[1] = a[1]; b[n] = a[n];
    FORE(i, 2, n - 1) {
        int tmp = s[min(i + k, n)] - s[max(1, i - k) - 1];
        int m = min(i + k, n) - max(1, i - k) + 1;
        int mm = m - tmp;
        if (tmp > mm) b[i] = 1;
        else b[i] = 0;
    }

    c[1] = a[1]; c[n] = a[n];
    int k1 = k + 1;
    FORE(i, 2, n - 1) {
        int tmp = s[min(i + k1, n)] - s[max(1, i - k1) - 1];
        int m = min(i + k1, n) - max(1, i - k1) + 1;
        int mm = m - tmp;
        if (tmp > mm) c[i] = 1;
        else c[i] = 0;
    }

    //bool ans = 1;
    FORE(i, 1, n) if (c[i] != b[i]) return 0;
    return 1;
}
int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    //freopen("591C.inp", "r", stdin);
    //freopen("591C.out", "w", stdout);
    cin >> n;
    FORE(i, 1, n) cin >> a[i];
    FORE(i, 1, n) s[i] = s[i - 1] + a[i];

    int l = 0, r = n, fin = -1, g;
    while (l <= r){
        g = (l + r) / 2;
        if (ok(g)){
            fin = g;
            r = g - 1;
        } else l = g + 1;
    }
    cout<<fin<<endl;
    if (fin != -1){
        ok(fin);
        FORE(i, 1, n) cout<<b[i]<<" ";
    }
    return 0;
}

