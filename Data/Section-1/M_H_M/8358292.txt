#include <iostream>
#include <vector>

using namespace std;

vector <pair <char , pair <int,int > > > vec;
pair <char , pair <int,int > > tmp;
char arr[510][510];
bool mark[510][510];
int n,m;


void dfs(int l,int k,int f){
    mark[l][k]=true;
    tmp.first = 'B';
    tmp.second.first = l+1;
    tmp.second.second = k+1;
    vec.push_back(tmp);
    if(l!=0 && arr[l-1][k]=='.' && !mark[l-1][k]){
        dfs(l-1,k,1);
    }
    if(k!=0 && arr[l][k-1]=='.' && !mark[l][k-1]){
        dfs(l,k-1,1);
    }
    if(l!=n-1 && arr[l+1][k]=='.' && !mark[l+1][k]){
        dfs(l+1,k,1);
    }
    if(k!=m-1 && arr[l][k+1]=='.' && !mark[l][k+1]){
        dfs(l,k+1,1);
    }
    if(f != 0){
        tmp.first = 'D';
        tmp.second.first = l+1;
        tmp.second.second = k+1;
        vec.push_back(tmp);
        tmp.first = 'R';
        tmp.second.first = l+1;
        tmp.second.second = k+1;
        vec.push_back(tmp);
    }
}

int main(){
    cin >> n >> m;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            cin >> arr[i][j];
        }
    }
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(!mark[i][j] && arr[i][j]!='#')
                dfs(i,j,0);
        }
    }
    cout << vec .size() << endl;
    for(int i=0;i<(int)vec.size();i++){
        cout << vec[i].first << " " << vec[i].second.first << " " << vec[i].second.second << '\n';
    }
}
