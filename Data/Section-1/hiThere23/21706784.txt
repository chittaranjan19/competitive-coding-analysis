#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 100005
#define maxC 2000000007
#define pb push_back
#define F first
#define S second
#define mp make_pair
#define mid ((0ll + l + r) >> 1)

using namespace std;
int n;
vector< pair<int, int> > use;

int Free(int x)
{
    if (use.size() == 0)
        return maxC;
    int last = maxC;
    FORD(i, int(use.size()) - 1, 0)
    {
        if (use[i].F <= x && x <= use[i].S)
            return 0;
        if (use[i].S < x)
            break;
        last = use[i].F;
    }
    return last - x;
}

int best(int x)
{
    if (use.size() == 0)
        return maxC;
    int l = 1, ans = 0;
    FOR(i, 0, int(use.size()) - 1)
    {
        ans = max(ans, use[i].F - l);
        l = use[i].S + 1;
        if (l > x)
            break;
    }
    return ans;
}

void setup()
{
    cin >> n;
    int s, d;
    FOR(i, 1, n)
    {
        sort(use.begin(), use.end());
        cin >> s >> d;
        int x = Free(s);
        if (x >= d)
        {
            cout << s << ' ' << s + d - 1 << '\n';
            use.pb(mp(s, s + d - 1));
        }
        else
        {
            int l = 0, r = maxC;
            while(r - l > 1)
            {
                int g = mid;
                if (best(g) >= d)
                    r = g;
                else
                    l = g;
            }
            cout << r << ' ' << r + d - 1 << '\n';
            use.pb(mp(r, r + d - 1));
        }
    }
}

void xuly()
{

}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
