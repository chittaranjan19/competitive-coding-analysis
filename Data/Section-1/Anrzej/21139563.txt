#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair
#define all(x) x.begin(), x.end()

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 3e5 + 10, lg = 31, MAXN = 1111;
ll mod = 1e9 + 7;

ll gcd(ll a, ll b) {
	return b ? gcd(b, a % b) : a;
}

ll _gcd(ll a, ll b, ll & x, ll & y) {
	if (a == 0) {
		x = 0; y = 1;
		return b;
	}
	ll _x1, _y1;
	ll d = _gcd(b%a, a, _x1, _y1);
	x = _y1 - (b / a) * _x1;
	y = _x1;
	return d;
}

ll binpow(ll a, ll n) {
	ll res = 1;
	while (n) {
		if (n & 1)
			res *= a;
		a *= a;
		n >>= 1;
		a %= mod;
		res %= mod;
	}
	return res;
}


void term_res(string res){
	cout << res;
	exit(0);
}



int main()
{
	string s;
	int n;
	cin >> n;
	cin >> s;
	s += '_';
	int bcnt = 0, mx = 0;
	int cur_s = 0, is_br = 0;
	for(int i = 0;  i< s.length(); i++){
		if(s[i] == '(')
		{
			is_br = 1;
			mx = max(mx, cur_s);
			cur_s = 0;
		}
		if(s[i] == ')'){
			is_br = 0;
			if(cur_s != 0)
				bcnt+=1;
			cur_s = 0;
		}
		if(s[i] == '_'){
			if(is_br && cur_s != 0)
				bcnt++;
			if(!is_br)
				mx = max(mx, cur_s);
			cur_s = 0;
		}
		if(s[i] != '_' && s[i] != '(' && s[i] != ')')
			cur_s += 1;
	}
	
	cout << mx << ' ' << bcnt;
	return 0;
}