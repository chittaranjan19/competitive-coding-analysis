#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<string>
#include<queue>
#include<string>
#include<vector>
#include<map>
#include<stack>
#include<cmath>
#define lowbit(x) ((x)&(-x))
#define Max(a,b) (a>b?a:b)
#define Min(a,b) (a>b?b:a)
#define lron(x)  ((x) << 1)
#define rson(x) ((x)<<1|1)
#define dad(x) ((x)>>1)
#define INF 0x3f3f3f3f
#define rep(i,a,b) for(int i=a;i<(b);++i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define pb push_back
#define de(x) cout << #x << "=" << x << endl
using namespace std;
int const Max_N = 100005;
typedef __int64 ll;
ll arr[Max_N] = {0}; 
ll dp1[2] = {0};
ll dp2[2] = {0};
string s1,s2,s3,s4;
int main()
{
	
	
	int N;
	std::ios::sync_with_stdio(false);
	cin >> N; 
	for (int i = 0; i < N; i++) cin >> arr[i];
	cin >> s1;
	s2 = s1;
	reverse(s2.begin(),s2.end());
	dp2[0] = arr[0];
	
	for (int i = 1; i < N; i++)
	{
		cin >> s3;
		s4 = s3;
		reverse(s4.begin(),s4.end());
				
		if(s1 <= s3 &&s2 <= s3)
		{
			dp1[i%2] = Min(dp1[(i-1)%2],dp2[(i-1)%2]);
		}  
		else if(s1 <= s3) dp1[i%2] = dp1[(i-1)%2];
		else if(s2 <= s3) dp1[i%2] = dp2[(i-1)%2];
		else dp1[i%2] = 1e18;
		
		if(s2<=s4&&s2<=s3)
		{
			dp2[i%2] = Min(dp1[(i-1)%2],dp2[(i-1)%2]) + arr[i];
		}  
		else if(s1<=s4) dp2[i%2] = dp1[(i-1)%2] + arr[i];
		else if(s2<=s4) dp2[i%2] = dp2[(i-1)%2] + arr[i];
		else dp2[i%2] = 1e18;
		
		s1 = s3;
		s2 = s4;
	}
	
	int t = (N-1)%2;
	ll ans = Min(dp1[t],dp2[t]);
	cout << (ans >= 1e16?-1:ans) << endl;
	return 0;
}


