#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

pair<int, int> arr[100005];

int main()
{
  //freopen("seaport.in", "r", stdin);
  //freopen("seaport.out", "w", stdout);
  int n, p, q, xx, y;
  scanf("%d %d %d", &n, &p, &q);
  double res = 1e15;
  for(int i=0;i<n;i++)
  {
    scanf("%d %d", &arr[i].f, &arr[i].s);
    if(arr[i].f > arr[xx].f || (arr[xx].f == arr[i].f && arr[i].s > arr[xx].s))
      xx = i;
    if(arr[i].s > arr[y].s || (arr[y].s == arr[i].s && arr[i].f > arr[y].f))
      y = i;
    res = min(res, max(p * 1.0 / arr[i].f, q * 1.0 / arr[i].s));
  }
  for(int i=0;i<n;i++)
  {
    if(xx == i) continue;
    double L = 0, R = res;
    for(int _=0;_<40;_++)
    {
      double mid = L + (R - L) / 2;
      bool test = false;
      double L1 = 0, R1 = mid;
      for(int __=0;__<30 && !test;__++)
      {
        double m1 = L1 + (R1 - L1) / 2;
        double a = m1 * arr[xx].f + (mid - m1) * arr[i].f;
        double b = m1 * arr[xx].s + (mid - m1) * arr[i].s;
        if(a > p || fabs(a - p) < EPS)
        {
          if(b > q || fabs(b - q) < EPS) test = true;
          else R1 = m1;
        }
        else L1 = m1;
      }
      if(test) R = mid;
      else L = mid;
    }
    res = min(res, R);
  }
  xx = y;
  for(int i=0;i<n;i++)
    swap(arr[i].f, arr[i].s);
  for(int i=0;i<n;i++)
  {
    if(xx == i) continue;
    double L = 0, R = res;
    for(int _=0;_<50;_++)
    {
      double mid = L + (R - L) / 2;
      bool test = false;
      double L1 = 0, R1 = mid;
      for(int __=0;__<50 && !test;__++)
      {
        double m1 = L1 + (R1 - L1) / 2;
        double a = m1 * arr[xx].f + (mid - m1) * arr[i].f;
        double b = m1 * arr[xx].s + (mid - m1) * arr[i].s;
        if(a > p || fabs(a - p) < EPS)
        {
          if(b > q || fabs(b - q) < EPS) test = true;
          else R1 = m1;
        }
        else L1 = m1;
      }
      if(test) R = mid;
      else L = mid;
    }
    res = min(res, R);
  }
  printf("%.15lf", res);
  return 0;
}
