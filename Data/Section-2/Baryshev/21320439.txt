#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
#include <fstream>
#include <tuple>
#include <iomanip>

using namespace std;

#define forn(i, n) for (int i = 0; i < int(n); ++i)
#define for1(i, n) for (int i = 1; i < int(n); ++i)
#define ford(i, n) for (int i = int(n) - 1; i >= 0; --i)
#define fore(i, l, r) for (int i = int(l); i <= int(r); ++i)
#define all(a) a.begin(), a.end()
#define sz(a) (int(a.size()))
#define mp make_pair
#define pb push_back
#define ft first
#define sc second
#define g(a, b) get<a> (b)

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pt;

int st[30][30];
int n, m;

bool prov(int t, int y){
    int nov[30][30];
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            nov[i][j] = st[i][j];
    for (int i = 0; i < n; i++)
        swap(nov[i][t], nov[i][y]);
    for (int i = 0; i < n; i++){
        int kol = 0;
        for (int j = 0; j < m; j++)
            if (nov[i][j] != j + 1) kol++;
        if (kol > 2)
            return false;
    }
    return true;
}

int main(){
        cin >> n >> m;
        for (int i = 0; i < n; i++)
            for (int j = 0; j < m; j++)
                cin >> st[i][j];
        for (int i = 0; i < m; i++)
            for (int j = i; j < m; j++){
                if (prov(i, j)) {cout << "YES";return 0;}
            }
        cout << "NO";
    return 0;
}