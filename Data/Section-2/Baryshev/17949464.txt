#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
#include <fstream>
#include <tuple>
#include <iomanip>

#include <unordered_set>
#include <unordered_map>

#pragma warning(disable: 4101)
using namespace std;

#define forn(i,n) for (int i = 0; i < int(n); ++i)
#define for1(i,n) for (int i = 1; i < int(n); ++i)
#define ford(i,n) for (int i = int(n) - 1; i >= 0; --i)
#define fore(i,l,r) for (int i = int(l); i <= int(r); ++i)
#define all(a) a.begin(), a.end()
#define sz(a) (int(a.size()))
#define mp make_pair
#define pb push_back
#define ft first
#define sc second
#define g(a,b) get<a> (b)

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pt;

const double pi = acos(-1.0);
const int INF = 1000000000;
const int MAX = 100007;
const int MAX2 = 2000000;
const int inf = (int) 1e9 + 5;
const long long mod =  1e9 + 7;
const int BASE = 10;
const int ST = 1000003;
const int CNT = 100;
const double eps=1e-6;
const long long base = 2204234849;
const long long l_inf = (long long) 4e18;
const int logn = 30;


int main()
{
#if 0
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif

#if 0
    cout << setprecision(9) << fixed;
#endif
    long long n;
    cin >> n;
    int a,b;
    map <int, vector<int> > kik;
    cin >> b;
    forn(i, n-1)
    {
        int prav=1;
        cin >> a;
        int kor=b;
        while (kik[kor].size()!=0)
        {
            if (kik[kor].size()==1)
            {
                if (kik[kor][0]<kor && a>kor) {kik[kor].push_back(a);cout << kor << " ";prav=0;break;}
                if (kik[kor][0]>kor && a <kor) {kik[kor].push_back(a);cout << kor << " ";prav=0;break;}
                else kor=kik[kor][0];
            }
            else
            {
                if (a>kik[kor][0] && a>kik[kor][1]) {kor=max(kik[kor][0],kik[kor][1]);}
                else if (a<kik[kor][0] && a<kik[kor][1]) {kor=min(kik[kor][0],kik[kor][1]);}
                else if (a<kor && kik[kor][0] <kor) kor=kik[kor][0];
                else if (a<kor && kik[kor][1] <kor) kor=kik[kor][1];
                else if (a>kor && kik[kor][0] > kor) kor=kik[kor][0];
                else if (a>kor && kik[kor][1] >kor) kor=kik[kor][1];
            }
        }
        if (prav==1)
        {
            cout << kor <<" ";kik[kor].push_back(a);
        }
    }
return 0;
}
