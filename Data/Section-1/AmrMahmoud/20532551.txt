#include <bits/stdc++.h>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int main()
{
  int n, a, b;
  cin >> n >> a >> b;
  deque<pair<pair<int, int>, int> > d1, d2;
  d1.push_back(mp(mp(1, 0), 1));
  d2.push_back(mp(mp(0, 1), 1));
  n -= 2;
  while(n)
  {
    pair<pair<int, int>, int> x = d1.front();
    pair<pair<int, int>, int> y = d2.front();
    if(x.f.f * 1LL * a + x.f.s * 1LL * b > y.f.f * 1LL * a + y.f.s * 1LL * b)
    {
      swap(x, y);
      d2.pop_front();
    }
    else d1.pop_front();
    if(n >= x.s)
    {
      y = x;
      y.f.f++;
      if(d1.back().f == y.f) d1.back().s++;
      else d1.pb(y);
      y = x;
      y.f.s++;
      if(d2.back().f == y.f) d2.back().s++;
      else d2.pb(y);
      n -= x.s;
    }
    else
    {
      y = x;
      y.s = n;
      y.f.f++;
      if(d1.back().f == y.f) d1.back().s++;
      else d1.pb(y);
      y = x;
      y.s = n;
      y.f.s++;
      if(d2.back().f == y.f) d2.back().s++;
      else d2.pb(y);
      x.s -= n;
      d1.pb(x);
      n = 0;
    }
  }
  LL ans = 0;
  while(!d1.empty()) ans += d1.back().s * (d1.back().f.f * 1LL * a + d1.back().f.s * 1LL * b), d1.pop_back();
  while(!d2.empty()) ans += d2.back().s * (d2.back().f.f * 1LL * a + d2.back().f.s * 1LL * b), d2.pop_back();
  cout << ans;
  return 0;
}
