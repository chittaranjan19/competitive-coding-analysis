#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>

using namespace std;

#define ll long long
#define sc second
#define fs first
#define mp make_pair

int n, m;

string a[20000];
long used[20000];
long ans;
vector<long> d[20000];
vector<string> q[20000];

bool good(string s1, string s2)
{
    string login1 = "", login2 = "";
    string domain1 = "", domain2 = "";
    bool loginNow = true;
    bool domainNow = false;
    for (int i = 0; i < s1.size(); i++)
    {
        if (s1[i] == '@')
        {
            domain1 = s1.substr(i + 1, s1.size() - i);
            login1 = s1.substr(0, i);
            break;
        }
    }

    for (int i = 0; i < s2.size(); i++)
    {
        if (s2[i] == '@')
        {
            domain2 = s2.substr(i + 1, s2.size() - i);
            login2 = s2.substr(0, i);
            break;
        }
    }

    for (int i = 0; i < domain1.size(); i++)
    {
        if (domain1[i] - 'A' >= 0 && domain1[i] <= 'Z')
            domain1[i] ^= ' ';
    }
    for (int i = 0; i < login1.size(); i++)
    {
        if (login1[i] - 'A' >= 0 && login1[i] <= 'Z')
            login1[i] ^= ' ';
    }

    for (int i = 0; i < domain2.size(); i++)
    {
        if (domain2[i] - 'A' >= 0 && domain2[i] <= 'Z')
            domain2[i] ^= ' ';
    }
    for (int i = 0; i < login2.size(); i++)
    {
        if (login2[i] - 'A' >= 0 && login2[i] <= 'Z')
            login2[i] ^= ' ';
    }
    if (domain1 == "bmail.com")
    {
        for (int i = 0; i < login1.size(); i++)
        {
            if (login1[i] == '+')
            {
                login1 = login1.substr(0, i);
                break;
            }
        }
        string tmp = "";
        for (int i = 0; i < login1.size(); i++)
        {
            if (login1[i] != '.')
                tmp += login1[i];
        }
        login1 = tmp;
    }

    if (domain2 == "bmail.com")
    {
        for (int i = 0; i < login2.size(); i++)
        {
            if (login2[i] == '+')
            {
                login2 = login2.substr(0, i);
                break;
            }
        }
        string tmp = "";
        for (int i = 0; i < login2.size(); i++)
        {
            if (login2[i] != '.')
                tmp += login2[i];
        }
        login2 = tmp;
    }

    return (domain1 == domain2 && login1 == login2);

}

void dfs(long x, long k)
{
    if (used[x])
        return;
    used[x] = 1;
    q[k].push_back(a[x]);
    for (int i = 0; i < d[x].size(); i++)
        dfs(d[x][i], k);
}


int main()
{
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> a[i];
    for (int i = 0; i < n; i++)
    {
        for (int j = i + 1; j < n; j++)
        {
            if (good(a[i], a[j]))
            {
                d[i].push_back(j);
                d[j].push_back(i);
            }
        }
    }

    for (int i = 0; i < n; i++)
        used[i] = 0;
    ans = 0;
    for (int i = 0; i < n; i++)
    {
        if (!used[i])
            dfs(i, ans++);
    }
    cout << ans << endl;
    for (int i = 0; i < ans; i++)
    {
        cout << q[i].size() << " ";
        for (int j = 0; j < q[i].size(); j++)
        {
            cout << q[i][j] << " ";
        }
        cout << endl;
    }
    return 0;



}