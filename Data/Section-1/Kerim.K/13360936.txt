int dx[]={-1, -2, -2, -1, 1, 1, 2, 2},dy[]={2, 1, -1, -2, 2, -2, -1, 1},dis[49][49];
int dasy(int nx,int ny){
	if(nx<0 or nx>=r or ny<0 or ny>=r)
	return 1;
	return 0;
}
int bfs(int r){
	queue<PII>q;
	q.push(mp(t,v));
	fill(dis[0], dis[30], INF);
	dis[c1[0]][c1[1]]=0;
	while(!q.empty())
	{
		int nx=q.front().ff,ny=q.front().ss;
		q.pop();
		for(int i=0;i<8;i++)
		{
			int tox=dx[i]+nx,toy=dy[i]+ny;
			if (!dasy(tox,toy) && dis[nx][ny]+1<dis[tox][toy]) {
				dis[tox][toy]=dis[nx][ny]+1;
				q.push(mp(tox,toy));
			}
		}
	}
	return dis[c2[0]-1][c2[1]-1];
}
