#include <iostream>

using namespace std;
typedef long long ll;
typedef long double ld;

struct P {
	ld x, y;
	P(){}
	P(ld lx, ld ly) { x = lx; y = ly; }
};
struct L {
	P p, v;
	L(){}
	L(ld a, ld b, ld c) {
		if (a == 0) {
			p = P(0, -c/b);
			v = P(1, 0);
		} else if (b == 0) {
			p = P(-c/a, 0);
			v = P(0, 1);
		} else {
			p = P(0, -c/b);
			v = P(-1/a, 1/b);
		}
	}
};
P sub(P p1, P p2) {
	return P(p1.x - p2.x, p1.y - p2.y);
}
ld cross(P p1, P p2) {
	return p1.x * p2.y - p1.y * p2.x;
}

int main() {
	ll x1, y1; cin >> x1 >> y1; P p1(x1, y1);
	ll x2, y2; cin >> x2 >> y2; P p2(x2, y2);
	int n; cin >> n;
	int cnt = 0;
	for (int i = 0; i < n; i++) {
		ll a, b, c; cin >> a >> b >> c;
		L line(a, b, c);
		if ((cross(sub(p1, line.p), line.v) > 0) != 
			(cross(sub(p2, line.p), line.v) > 0)) {
			cnt++;
		}
	}
	cout << cnt << endl;
}
