
/* Author:
    * Rohit Laddha */
#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstdlib>
#include<queue>
#include<map>
#include<set>
#include<string>
#include<vector>
#include<cstring>

using namespace std;

#define REP(i,s,n)  for (int i=(s),_n=(n);i<=_n;i++)
#define REPD(i,e,s)  for (int i=(e),_s=(s);i>=_s;i--)
#define TRACK(x)  printf("%d\n",x);  DEBUG(x);
#define DEBUG(x)  cerr << #x << "=" << x << endl;
#define tr(container, it) \
		for (typeof(container.begin()) it=container.begin(); it!=container.end();it++)
#define long long int LL

int a[100040]={0};
int n,m;
int value=0;
int ref=0;
int mn=100040;
int placing()
{
	int i=0;
	mn=100040;

	REP(i,1,m)
	{
		if(a[i]==value)
		{
			if(mn==abs(((m+1)/2)-i))
				return 0;
			else if(mn>abs(((m+1)/2)-i))
			{
				ref=i;
				mn=abs(((m+1)/2)-i);
			}
		}
	}
//		cout << "i is " << i << endl;
	return 1;
}

int mun()
{
	int i=0,flag=0;
	ref=100040;
	int k;
	for(i=1;i<=m;i++)//REP(i,1,m)
	{
		if(ref>a[i])ref=a[i];
	}
	value=ref;
	for(i=1;i<=m;i++)
	{	
		if(a[i]==ref && flag==0)
		{
			flag=1;
			k=i;
		}
		else if(a[i]==ref && flag==1)return 0;
	}
	return k;
}
int main()
{
	scanf("%d%d",&n,&m);
	int k;
	int z;
	REP(k,1,n)
	{
		value=0;
		ref=0;
		mn=100040;
		int i=mun(),j;
//		cout << "value of i is" << i << endl;
//		cout << "value of a is" << a[i]<< endl;
		int p=m+1;
		if(i!=0)
		{
			printf("%d\n",i);
			a[i]++;
		}
		else
		{
			j=placing();
			if(j==0)
			{
				printf("%d\n",ref);
				a[ref]++;
			}
			else
			{
				if(m%2==0)
				{
					z=m/2;
				}
				else if(m%2!=0)
				{
					z=(m/2)+1;
				}
//				for(i=z;i>=1;i--)//REP(i,1,n)
				for(i=(m/2)+1;i>=1;i--)//REP(i,1,n)
				{
					if(a[i]==value)
					{
						printf("%d\n",i);
						a[i]++;
						break;
//						if(mn==abs(((m+1)/2)-i))
//						{
//							p=min(i,p);
//						}
					}
				}
			}
		}
//		REP(i,1,m)cout << a[i] << ' ';
//		cout << endl;
	}
	return 0;
}
