#include <bits/stdc++.h>
using namespace std;
char s[100100];
int dp[100100];
int main()
{
    int n;
    cin >> n;
    cin >> s;
    memset(dp, 0, sizeof dp);
    dp[0] = 1;
    for(int i = 1; i < n; i++) {
        int d = s[i] - '0';
        int c = s[i-1] - '0';
        if(c != d)
            dp[i] = dp[i-1] + 1;
        else
            dp[i] = dp[i-1];
//        cout << dp[i] << endl;
    }
    if(dp[n-1] == n) {
        cout << n << endl;
        return 0;
    } else {
        int flag1 = 0, flag2 = 0, flag = 0;
        for(int i = 0; i < n; i++) {
            if(i > 0 && i < n-1) {
                int a = s[i-1] - '0';
                int b = s[i] - '0';
                int c = s[i+1] - '0';
                if(a == b && b == c)
                    flag = 1;
            }
            if(i < n-1) {
                int a = s[i] - '0';
                int b = s[i+1] - '0';
                if(a == b) {
                    if(a == 0)
                        flag1++;
                    else
                        flag2++;
                }
            }
        }
        if(flag || flag1 >= 2 || flag2 >= 2) {
            dp[n-1] += 2;
        } else {
            if(n >= 4) {
                int a = s[0] - '0';
                int b = s[1] - '0';
                int c = s[2] - '0';
                int d = s[n-1] - '0';
                int e = s[n-2] - '0';
                int f = s[n-3] - '0';
                if((a != b && b == c) || (e == f && e != d)) {
                    dp[n-1] += 1;
                }
            } else if(n >= 2) {
                int a = s[0] - '0';
                int b = s[1] - '0';
                int c = s[n-1] - '0';
                int d = s[n-2] - '0';
                if(a == b || c == d)
                    dp[n-1] += 1;
            }
        }
    }
    cout << dp[n-1] << endl;
    return 0;
}
