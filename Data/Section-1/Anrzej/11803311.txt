#include <string>
#include <algorithm>
#include <math.h>
#include <vector>
#include <queue>
#include <stack>
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <set>
#include <cstring>

#define ll long long
#define ull unsigned long long
#define mp make_pair

using namespace std;
string s;
ll n, m;
pair<ll, ll> r;
pair< pair<ll, ll>, int> rr[200000];
vector< pair<ll, int> > ms;
int good[200000];
bool used[200000];

int main()
{
	cin >> n >> m;
	memset(used, false, n);
	ll l0, r0;
	scanf_s("%I64d%I64d", &l0, &r0);
	for (int i = 1; i < n; i++)
	{
		ll l, r;
		scanf_s("%I64d%I64d", &l, &r);
		rr[i-1] = mp(mp(l - r0, r - l0), i-1);
		r0 = r; l0 = l;
	}
	for (int i = 0; i < m; i++)
	{
		ll l;
		scanf_s("%I64d", &l);
		ms.push_back(mp(l, i));
	}
	sort(rr, rr + n - 1);
	sort(ms.begin(), ms.end());
	vector<ll> mm;
	for (int i = 0; i < m; i++)
	{
		mm.push_back(ms[i].first);
	}
	for (int i = 0; i < n - 1; i++)
	{
		ll l, r;
		vector<ll>::iterator low;
		low = lower_bound(mm.begin(), mm.end(), rr[i].first.first);
		l = low - mm.begin();
		if (mm[l] < rr[i].first.first)
		{
			l++;
		}
		if (l < mm.size() && (mm[l] >= rr[i].first.first) && (mm[l] <= rr[i].first.second))
		{
			good[rr[i].second] = ms[l].second+1;
			mm.erase(mm.begin()+l);
			ms.erase(ms.begin() + l);
		}
		else
		{
			cout << "NO";
			return 0;
		}
	}
	cout << "YES" << endl;
	for (int i = 0; i < n - 1; i++)
	{
		printf("%d ", good[i]);
	}
	return 0;
}