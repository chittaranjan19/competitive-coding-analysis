#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <unordered_set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int MAX_N = 1000000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

int a[MAX_N][3];

int main()
{
    //ifstream ifs("input.in");
    //ofstream ofs("output.out");
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    for (int i = 0; i < MAX_N; i++)
        a[i][0] = 0;
    int n, p;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cin >> p;
        a[p - 1][0]++;
        if (a[p - 1][0] == 1)
            a[p - 1][1] = i;
        a[p - 1][2] = i;
    }
    int cnt = 0, l = 0, r = n - 1;
    for (int i = 0; i < MAX_N; i++)
        if (a[i][0] > cnt)
        {
            cnt = a[i][0];
            l = a[i][1];
            r = a[i][2];
        }
        else if (a[i][0] == cnt && a[i][2] - a[i][1] + 1 < r - l + 1)
        {
            l = a[i][1];
            r = a[i][2];
        }
    cout << l + 1 << " " << r + 1;
    return 0;
}