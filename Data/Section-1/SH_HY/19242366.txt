#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

int d[110][10];
int num[110];

int main () {
    int n;
    scanf ("%d", &n);
    for (int i = 1; i <= n; i++) {
        scanf ("%d", &num[i]);
    }
    memset (d, 0, sizeof d);
    for (int i = 1; i <= n; i++) {
        if (num[i] == 0) {
            for (int j = 0; j < 3; j++) {
                d[i][0] = max (d[i][0], d[i - 1][j]);
            }
        } else if (num[i] == 1) {
            for (int j = 0; j < 3; j++) {
                d[i][0] = max (d[i][0], d[i - 1][j]);
            }
            for (int k = 0; k < 3; k++) {
                if (k != 1) {
                    d[i][1] = max (d[i][1], d[i - 1][k] + 1);
                }
            }
        } else if (num[i] == 2) {
            for (int j = 0; j < 3; j++) {
                d[i][0] = max (d[i][0], d[i - 1][j]);
            }
            for (int k = 0; k < 3; k++) {
                if (k != 2) {
                    d[i][2] = max (d[i][2], d[i - 1][k] + 1);
                }
            }
        } else {
            for (int j = 0; j < 3; j++) {
                d[i][0] = max (d[i][0], d[i - 1][j]);
            }
            for (int k = 0; k < 3; k++) {
                if (k != 1) {
                    d[i][1] = max (d[i][1], d[i - 1][k] + 1);
                }
            }
            for (int k = 0; k < 3; k++) {
                if (k != 2) {
                    d[i][2] = max (d[i][2], d[i - 1][k] + 1);
                }
            }
        }
    }
    int ans = 0;
    for (int i = 1; i <= n; i++) {
        for (int j = 0; j < 3; j++) {
            ans = max (ans, d[i][j]);
        }
    }
    printf ("%d\n", n - ans);
    return 0;
}
