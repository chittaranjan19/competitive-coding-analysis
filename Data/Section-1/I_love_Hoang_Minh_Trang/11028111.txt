const   maxn    =30;

type    arr1    =array[0..maxn] of longint;

var     s       :string;
        k       :longint;
        x       :Arr1;

procedure update;
var     i :longint;
        s1,s2:string;
begin
        writeln('YES');

        s1:=copy(s,x[k-1],x[k]-x[k-1]);
        s2:=copy(s,x[k],x[k+1]-x[k]);
        if s1[1]=s2[1] then exit;
        for i:=1 to k do writeln(copy(s,x[i],x[i+1]-x[i]));
        halt;
end;
procedure try(i:longint);
var     j :longint;
        s1, s2:string;
begin
        for j:=1 to length(s)-x[i-1] do
        begin
                x[i]:=x[i-1]+j;
                if i>2 then
                begin
                s1:= copy(s,x[i-1],x[i]-x[i-1]);
                s2:= copy(s,x[i-2],x[i-1]-x[i-2]);
                if s1[1]=s2[1] then continue;
                end;
                if i=k then update
                else try(i+1);
        end;
end;

procedure xuly;
var     i :longint;
        dd      :array['a'..'z'] of longint;
begin

end;
begin
        readln(k);
        readln(s);
        xuly;
        x[k+1]:=length(s)+1;
        x[1]:=1;
        try(2);
        writeln('NO');
end.