/*
          ______      
||  //   | _____|   ||  //
|| //    ||         || //
||//     ||_____    ||//
||\\     | _____|   ||\\
|| \\    ||         || \\   ll Once(ll KEK){
||  \\   ||_____    ||  \\ 		return Forever(KEK);
||   \\  |______|   ||   \\ }
                     
*/
#include<bits/stdc++.h>

using namespace std;
const int N6 = 1e6 + 6, N3 = 1e3 + 6, oo =  1e9 + 9, base = 1e9 + 7;
const long long ool = 1e18 + 9;

typedef unsigned long long ull;
typedef long long ll;
typedef double ld;
typedef pair <int, int> PII;
typedef pair <int, ll> PIl;
typedef pair <ll, int> PlI;
typedef pair <ll, ll> Pll;

#define F first
#define S second
#define pb push_back
#define right(x) x << 1 | 1
#define left(x) x << 1	
#define	forn(x, a, b) for (int x = a; x <= b; ++x)
#define for1(x, a, b) for (int x = a; x >= b; --x)

int n;
int nxt[33];     
bool u[33], pref[33];

int main(){
	ios_base :: sync_with_stdio(0);
	cin.tie(0);	

	forn(i, 0, 25){
		nxt[i] = -1;
	}

	cin >> n;
	forn(i, 1, n){
		string s;
		cin >> s;
		u[s[0] - 'a'] = 1;
		forn(j, 1, (int)s.size() - 1){
			nxt[s[j - 1] - 'a'] = s[j] - 'a';
			pref[s[j] - 'a'] = 1;
			u[s[j] - 'a'] = 1;    	
		}   
	}

	int cur = 0;

	string ans = "";

	while(!u[cur] || pref[cur])
		++cur;

	forn(k, 0, 25){
		//cerr << char(cur + 'a') << " " << char(nxt[cur] + 'a') << "\n";
		u[cur] = 0;
		ans += char(cur + 'a');
		if(nxt[cur] == -1){
			cur = 0;
			while((!u[cur] || pref[cur]) && cur < 26)
				++cur;
			if(cur > 25)
				break;	
		}
		else{
			cur = nxt[cur];
		}		
	}

	cout << ans << "\n";

	return 0;
}