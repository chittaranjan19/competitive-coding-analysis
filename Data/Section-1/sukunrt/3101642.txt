#include<iostream>
#include<sstream>
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<bitset>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
using namespace std;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define ALL(c) (c).begin(),(c).end()
#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;

int a[50];
map <string, int> cnt;


int main(){
    cnt[""] = 0;
    string s;
    int k;
    cin >> s;
    string forbid;
    cin >> forbid;
    cin >> k;
    for(int i = 0; i < forbid.length(); i++)
        if (forbid[i] == '1')
            a[i] = 0;
        else a[i] = 1;

    int n = s.length();
    for (int i = 0; i < n; i++){
        string prev = "";
        for (int j = 1; j <= n-i; j++){
            
            string k = s.substr(i,j);
            cnt[k] = (cnt[prev] + a[k[j-1]-'a']);
            prev = k;
        }
    }
    cnt[""] = k+1;
    int count = 0;
    for(map<string, int>::iterator iter = cnt.begin(); iter != cnt.end(); ++iter){
//        cout << iter->first << endl;
        if (iter -> second > k){
//            cout << iter -> first << endl;
            continue;
        }
        count++;
    }

    cout << count << endl;
    return 0;
}
                
                
        
                
    
            
