#include<bits/stdc++.h>
using namespace std;
#define MAX 100005
vector<int> vt;
int n;
int mark[MAX];
int dp[MAX];
int f(int pos, int score)
{
		if(pos >= n) return score;
		int save1,save2,save3;
		if(mark[vt[pos]] == 0) return f(pos+1,score);
		int scr1,scr2;
		save1 = mark[vt[pos]];
		save2 = mark[vt[pos]+1];
		save3 = mark[vt[pos]-1];
		mark[vt[pos]+1] = mark[vt[pos]-1] = 0;
		mark[vt[pos]] = 0;
		scr1 = f(pos+1,score+vt[pos]*save1);
		
		mark[vt[pos]] = save1;
		mark[vt[pos]+1] = save2;
		mark[vt[pos]-1] = save3;
		scr2 = f(pos+1,score);
		return max(scr1,scr2);
}
int dps(int n)
{
		//dp[i] => solution when considered all indexes from 0 to i-1
		int i;
		dp[0] = 0;
		int scr1,scr2;
		for(i=0;i<n;++i)
		{
				scr1 = dp[i-1] + vt[i]*mark[vt[i]];
				scr2 = dp[i-1];
		}
		return 0;

}
int main()
{
		cin>>n;
		int i;
		int tmp;
		for(i=0;i<n;++i)
		{
				cin>>tmp;
				mark[tmp]++;
		}
		for(i=0;i<MAX;++i)
		{
				if(mark[i])	vt.push_back(i);
		}
		cout<<f(0,0)<<endl;
}
