#include<iostream>
#include<vector>
#include<string>
#include<algorithm>
#include<deque>
#include<bitset>
#include<list>
#include<set>
#include<map>
#include<stack>
#include<queue>
#include <iomanip>
#include<cmath>
#include<math.h>
#define ef else if
#define re return
#define ll long long
#define lp(i,n) for(int i=0;i<n;i++)
using namespace std;
/*int n,board[20][20],r,c,ans[100][100];
bool isSafe(int board[20][20],int row,int col)
{
   lp(i,col)
        if(board[row][i]==1)
            re  false;
    for (int i=row,j=col;i>=0&&j>=0;i--,j--)
        if (board[i][j]==1)
            re false;
    for (int i=row,j=col;j>=0&&i<n;i++,j--)
        if (board[i][j]==1)
            re false;
    re true;
}
bool solve(int board[20][20], int col)
{
    if (col==n) // base case
	{
		c=0;
		for(int i=0;i<n;i++)
			for(int j=0;j<n;j++)
				if(board[i][j])
					ans[r][c]=j+1,c++;
		r++;
		return false;
	}
    for(int i=0;i<n;i++) 
    {
        if(isSafe(board,i,col)==true)
        {
            board[i][col]=1;
            if (solve(board,col+1))
				return true;
            board[i][col]=0; 
        }
    }
    return false;
}*/
int n,a[200000],m,a1[200000];
int Mahamed(int s,int e,int v)
{
	int mid;
    while(s<=e)
	{
		mid=(s+e)/2;
		if(a[mid]>v&&a[mid-1]<=v)
			re mid;
		ef(v>=a[mid])
			s=mid+1;
		else
			e=mid-1;
	}
	if(v>=a[n-1])
		re n;
	re 0;
}
int main()
{
	/*cin>>n;
	solve(board,0);
	for(int i=0;i<r;i++)
	{
		for(int j=0;j<c;j++)
		cout<<ans[i][j]<<" ";
		cout<<endl;
	}
	cout<<x<<endl;
	if(x==0)
		cout<<"no solution"<<endl;*/
	cin>>n>>m;
	lp(i,n)
		cin>>a[i];
	lp(i,m)
		cin>>a1[i];
	sort(a,a+n);
	lp(i,m)
		cout<<Mahamed(0,n,a1[i])<<" ";
	cout<<endl;
	return 0;
}
/*

7
2 3 5 7 8 9 15

*/