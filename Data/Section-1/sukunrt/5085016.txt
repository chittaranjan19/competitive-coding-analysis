#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

int b[100005];
int p[100005];
int lt,a;
int solve(int x){
        int n = a;
        int used = 0;
        for(int i = 1, j = x; i <= x; i++, j--){
                if (b[j] >= p[i]) {used += p[i]; continue;}
                else{
                        if (b[j] + n >= p[i]){
                                used += b[j];
                                n -= (p[i] - b[j]);
                        }
                        else return 0;
                }
        }
        lt = max(0, used-n);
        return 1;

}
                        
                        
                        

int main(){
        int n,m;
        cin >> n >> m >> a;
        for(int i = 1; i <= n; i++)
                cin >> b[i];
        for(int i = 1; i <= m; i++)
                cin >> p[i];
        p[0] = 0;
        b[0] = 0;
        sort(b+1, b+n+1);
        for(int i = 1, j = n; i < j; i++, j--){
                int temp = b[i];
                b[i] = b[j];
                b[j] = temp;
        }
        sort (p+1, p+m+1);

        int lo = 0;
        int hi = min(m,n)+1;
        int sol = 0;
        while (lo + 1 < hi){
                int mid = (hi+lo)/2;
                int comp = solve(mid);
//                cout << mid << endl;
                if (comp){
                        lo = mid;
                        sol = lt;

                }
                else
                        hi = mid;
        }
        cout << lo  << " " << lt << endl;

}
                        
                
