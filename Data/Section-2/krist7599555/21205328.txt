#include <bits/stdc++.h>
using namespace std;

int node,need;
int DP  [5050][5050];
int path[5050][5050];

vector< tuple<int,int,int> > V;

int main(){
	
	int u,v,w,i,j,k;
	
	cin >> node >> k >> need;
	
	V.resize(k);
	
	for( auto &a : V ){
		
		cin >> get<0>(a) >> get<1>(a) >> get<2>(a);
		
	}
	
	for(i=0;i<5050;i++)
		for(j=0;j<5050;j++)
			DP[i][j]=need+1;
			
	DP[1][1] = 0;
	
	for(i=2;i<=node;i++){
		for(auto &tupl : V){
			
			tie(u,v,w) = tupl;
			
			if( ( j = DP[i-1][u]+w ) <= min(DP[i][v],need) ){
				
				DP  [i][v] = j; 
				path[i][v] = u;
				
			}
			
			if( DP[i][node] <= need ) k = i;
			
		}
	}
	
	int pos = node;
	int lay = k;
	
	cout << lay << endl;
	
	vector<int> vec;
	
	while(pos){
		
		vec.push_back(pos);
		pos = path[lay--][pos];
		
	};
	
	copy( vec.rbegin(), vec.rend(), ostream_iterator<int>(cout," "));
	
}
