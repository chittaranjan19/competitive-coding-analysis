//#include <bits/stdc++.h>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
#include <queue>
#include <ctime>
#include <iomanip>
#include <cstring>

#define SZ(x) ((int)x.size())
#define X first
#define Y second 
#define PB push_back 
#define MP make_pair 

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;

const int N = 2e5 + 100;

struct Fenwick{
	ll fen[N];
	void clear(){
		memset(fen, 0, sizeof fen);
	}
	void ad(int p, int val){
		for(p ++; p < N; p += p & -p)
			fen[p] += val;
	}
	ll gt(int p, ll ret = 0){
		for(; p; p -= p & -p)
			ret += fen[p];
		return ret;
	}
};


int n, k, a, b, q;

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	Fenwick A, B;
	A.clear();
	B.clear();
	cin >> n >> k >> a >> b >> q;
	for(int i = 0; i < q; ++i){
		int t;
		cin >> t;
		if(t == 1){
			int d, c;
			cin >> d >> c;
			A.ad(d, min(c, a));
			B.ad(d, min(c, b));
		}
		else{
			int p;
			cin >> p;
			ll ans = 0;
			ans += B.gt(p);
			ans += A.gt(n + 1) - A.gt(p + k); 
			cout << ans << "\n";
		}
	}
	return 0;
}
