/* ***********************************************
Author        :huriyang
Created Time  :2016年05月18日 星期三 17时54分09秒
File Name     :cf/313D.cpp
************************************************ */

#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <math.h>
#include <stdlib.h>
#include <time.h>
using namespace std;
typedef long long ll;
typedef pair<int,int>P;
#define mem(a,b) memset(a,b,sizeof(a))
const int N=305;
const ll inf=0x3f3f3f3f3f3f3f3f;
ll cost[N][N],dp[N][N];
int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
	mem(dp,0x3f);
	mem(cost,0x3f);
	int n,m,all;
	scanf("%d%d%d",&n,&m,&all);
	for(int i=1;i<=m;i++){
		int l,r,c;
		scanf("%d%d%d",&l,&r,&c);
		cost[l][r]=min(cost[l][r],(ll)c);
	}
	for(int w=0;w<n;w++){
		for(int i=1;i+w<=n;i++){
			int j=i+w;
			for(int k=i;k<j;k++){
				cost[i][j]=min(cost[i][j],cost[i][k]+cost[k+1][j]);
			}
		}
	}
	dp[0][0]=0;
	ll ans=inf;
	for(int i=1;i<=n;i++){
		for(int j=0;j<=i;j++){
			dp[i][j]=dp[i-1][j];
			for(int k=1;k<=j;k++){
				dp[i][j]=min(dp[i-k][j-k]+cost[i-k+1][i],dp[i][j]);
			}
			if(j>=all) ans=min(ans,dp[i][j]);
		}
		
	}
	if(ans==inf) ans=-1;
	printf("%I64d\n",ans);
    return 0;
}
