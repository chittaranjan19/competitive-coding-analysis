#include <bits/stdc++.h>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int arr[1005];
multiset<int> s;
int buff[1005];
set<pair<int, int> > ss;

int main()
{
  int n;
  scanf("%d", &n);
  for(int i=0;i<n;i++)
  {
    scanf("%d", &arr[i]);
    s.insert(arr[i]);
  }
  sort(arr, arr + n);
  int res = 2;
  for(int i=0;i<n;i++)
  {
    for(int j=0;j<n;j++)
    {
      if(i == j) continue;
      int sz = 0;
      int a = arr[i], b = arr[j], curr = 2;
      if(ss.find(mp(a, b)) != ss.end()) continue;
      ss.insert(mp(a, b));
      s.erase(s.find(a));
      s.erase(s.find(b));
      while(1)
      {
        int c = a + b;
        if(s.find(c) == s.end()) break;
        s.erase(s.find(c));
        a = b;
        b = c;
        buff[sz++] = c;
        curr++;
      }
      for(int k=0;k<sz;k++)
        s.insert(buff[k]);
      s.insert(arr[i]);
      s.insert(arr[j]);
      res = max(res, curr);
    }
  }
  cout << res;
  return 0;
}
