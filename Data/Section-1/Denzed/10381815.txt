#include <iostream>
#include <cstdio>
#include <vector>

using namespace std;

vector<int> nom;

/*int find1(int a, int k){
    int ans = 0;
    int tek = nom.size() - 1;
    int fl = 0;
    int last = -1;
    while(tek != - 1 && a != 0 && ans != k){
        //cerr << a << endl;
        if(a >= nom[tek]){
            a -= nom[tek];
            ans++;
            if(tek != last){
                fl++;
                last = tek;
            }
        }
        else{
            tek--;
        }
    }
    if(a == 0){
        if(ans <= k && fl <= 2){
            return ans;
        }
    }
    return -1;
}*/

const int inf = 2 * 1e8 + 1;

int find1(int a, int k){
    int tek = nom.size() - 1;
    int a1 = a;
    int ans = inf;
    for(int i = tek; i >= 0; i--){

        int ans1 = 0;
        if(a >= nom[i]){
            int l = a / nom[i];
            ans1 += l;
            a -= l * nom[i];
            if(a == 0){
                if(ans1 <= k)
                    ans = min(ans, ans1);
            }
            for(int r = 0; r < l; r++){
                for(int j = tek - 1; j >= 0; j--){
                    if(a % nom[j] == 0){
                        ans1 += a / nom[j];
                        if(ans1 <= k)
                            ans = min(ans, ans1);
                    }
                }
                a += nom[i];
            }
        }
    }
    return ans;
}

int main()
{
    //freopen("i.in", "r", stdin);
    //freopen("o.out", "w", stdout);
    int n, k;
    cin >> n >> k;
    int a;
    for(int i = 0; i < n; i++){
        cin >> a;
        nom.push_back(a);
    }
    int q;
    cin >> q;
    int w;
    for(int i = 0; i < q; i++){
        cin >> a;
        w = find1(a, k);
        if(w > k){
            cout << -1 << endl;
        }
        else{
            cout << w << endl;
        }
    }
    return 0;
}
