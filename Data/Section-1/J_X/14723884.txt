#include <iostream>
#include <cstdio>
#include <cstring>

using namespace std;

const int maxn = 500 + 5;
const int maxm = 100000 + 5;
const int dir[4][2] = {{-1, 0}, {0, -1}, {1, 0}, {0, 1}};

char mp[300], s[maxm];
bool used[maxn][maxn];
int ans[maxm];
int r, c;

bool ok(int x, int y)
{
    return x > 0 && x <= r && y > 0 && y <= c;
}

void bfs(int sx, int sy, int len)
{
    memset(used, 0, sizeof(used));
    ans[0] = 1;
    used[sx][sy] = true;
    int num = 1;
    for(int i = 1; i <= len; ++i)
    {
        int op = mp[s[i]];
        int dx = sx + dir[op][0], dy = sy + dir[op][1];
        if(ok(dx, dy))
        {
            sx = dx;
            sy = dy;
        }
        if(!used[sx][sy])
        {
            ans[i] = 1;
            used[sx][sy] = true;
            ++num;
        }
        else
        {
            ans[i] = 0;
        }
    }
    ans[len] = r * c - num + 1;
}

int main()
{
    mp['U'] = 0, mp['L'] = 1, mp['D'] = 2, mp['R'] = 3;
    while(~scanf("%d%d", &r, &c))
    {
        int sx, sy;
        scanf("%d%d", &sx, &sy);
        scanf("%s", s + 1);
        int len = strlen(s + 1);
        bfs(sx, sy, len);
        for(int i = 0; i <= len; ++i)
        {
            printf("%d%c", ans[i], " \n"[i == len]);
        }
    }
    return 0;
}
