#include <fstream>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const int inf = (int)2 * 1e9;
const int MOD = (int)1e9 + 7;
const int P = 239;
const int MAX_N = 200000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

int main()
{
    //ifstream ifs("input.in");
    //ofstream ofs("output.out");
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n, k;
    cin >> n >> k;
    int a[n];
    for (int i = 0; i < n; i++)
        cin >> a[i];
    vector<pair<int, int> > ans;
    vector<pair<int, int> > v[n];
    for (int i = 0; i < n; i++)
        v[a[i]].push_back(make_pair(i, k));
    if (v[0].size() != 1)
    {
        cout << -1;
        return 0;
    }
    for (int i = 1; i < n; i++)
    {
        int curr = 0;
        for (int j = 0; j < v[i].size(); j++)
        {
            if (curr >= v[i - 1].size())
                {
                    cout << -1;
                    return 0;
                }
            while (v[i - 1][curr].second == 0)
            {
                curr++;
                if (curr >= v[i - 1].size())
                {
                    cout << -1;
                    return 0;
                }
            }
            v[i - 1][curr].second--;
            v[i][j].second--;
            ans.push_back(make_pair(v[i - 1][curr].first, v[i][j].first));
        }
    }
    cout << ans.size() << endl;
    for (int i = 0; i < ans.size(); i++)
        cout << ans[i].first + 1 << " " << ans[i].second + 1 << endl;
    return 0;
}