// D.cpp : Defines the entry point for the console application.
//

//#include "stdafx.h"
#include<iostream>
//#include<conio.h>
using namespace std;

int main()
{
	int n, m, s, d;
	cin >> n>>m>>s>>d; 
	int *mas = new int[m];
	int *a = new int[n];
	for (int i = 0; i < m; i++)
	{
		mas[i] = 0;
	}
	for (int i = 0; i < n; i++)
	{
		cin >> a[i];
		mas[a[i]] = 1;
	}
	for (int i = 0; i < n; i++)
	{
		mas[a[i] - 1] = 1;
	}
	//for (int i = 0; i < m; i++)
	//{
	//	cout << mas[i]<<" ";
	//}
	int **count = new int*[2];
	for (int i = 0; i < 2; i++)
	{
		count[i] = new int[m];
	}
	int index_start = 0;
	int flag = 0;//0-run 1-jump
	int counter = 0;
	bool impossible = false;
	for (int i = 0; i < m; i++)
	{
		if (mas[i] == flag)
		{
			counter++;
		}
		else
		{
			if (flag == 0)
			{
				if (counter<s)
				{
					impossible = true;
					break;
				}
				else
				{
					count[0][index_start] = 0;
					count[1][index_start] = counter;
					index_start++;
					//cout << "RUN " << counter << endl;
					counter = 1;
					flag = 1;
				}
			}
			else
			{




				if (counter > d)
				{
					impossible = true;
					break;
				}
				else
				{
					count[0][index_start] = 1;
					count[1][index_start] = counter;
					index_start++;

					//cout << "JUMP " << counter << endl;
					counter = 1;
					flag = 0;
				}
			}
		}


	}
	if (flag == 0)
	{
		if (counter<s)
		{
			impossible = true;
		}
		else
		{
			count[0][index_start] = 0;
			count[1][index_start] = counter;
			index_start++;
			//cout << "RUN " << counter << endl;
			counter = 1;
			flag = 1;
		}
	}
	else
	{




		if (counter > d)
		{
			impossible = true;
		}
		else
		{
			count[0][index_start] = 1;
			count[1][index_start] = counter;
			index_start++;

			//cout << "JUMP " << counter << endl;
			counter = 1;
			flag = 0;
		}
	}
	if (impossible)
	{
		cout << "IMPOSSIBLE";
	}
	else
	{
		for (int i = 0; i < index_start; i++)
		{
			if (count[0][i] == 1)
			{
				cout << "JUMP " << count[1][i] << endl;
			}
			else
			{
				cout << "RUN " << count[1][i] << endl;
			}
		}
	}
	/*for (int i = 0; i < n; i++)
	{
		int k = 0;
		while (k != s)
		{
			k++;
			mas[a[i] - k] = 1;
		}
	}*/
	/*int **count = new int*[2];
	for (int i = 0; i < 2; i++)
	{
		count[i] = new int[m];
	}
	for (int i = 0; i < m; i++)
	{
		count[0][i] = 0;
		count[1][i] = 0;
	}
	int z = 0;
	int f = 0;
	while (z < m)
	{
		int k = 0;
		while (mas[z] == 0)
		{
			k++;
			z++;
		}
		if (k != 0)
		{
			count[0][f] = 0;
			count[1][f] = k;
			f++;
			k = 0;
		}
		while (mas[z] == 1)
		{
			k++;
			z++;
		}
		if (k != 0)
		{
			count[0][f] = 1;
			count[1][f] = k;
			f++;
		}
	}
	int i = 0;
	bool flag = true;
	while (count[1][i] > 0)
	{
		if (count[1][i] > d)
		{
			flag = false;
		}
		if (count[0][i] == 1)
		{
			if (count[1][i - 1] < s)
			{
				flag = false;
			}
		}
		i++;
	}
	if (flag)
	{
		i = 0;
		while (count[1][i] != 0)
		{
			if (count[0][i] == 0)
			{
	
				cout << "RUN " << count[1][i]<<endl;
			}
			else
			{
				cout << "JUMP " << count[1][i] << endl;;
			}
			i++;
		}
	}
	else
	{
		cout << "IMPOSSIBLE";
	}*/
	
	//_getch();

	return 0;
}

