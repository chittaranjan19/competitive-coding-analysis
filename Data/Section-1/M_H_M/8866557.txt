#include <iostream>
#include <vector>

using namespace std;

string s,p,k;
char l;
int a[26],m = -1,n,dp[3000][3000], par[3000][3000];
int main(){
    cin >> s;
    n = s.length();
    if(n > 2600){
        for(int i=0;i<n;i++){
            a[s[i]-'0']++;
            if(a[s[i]-'0'] > m){
                m = a[s[i]-'0'];
                l = s[i];
            }
        }
        for(int i=0;i<100;i++)
            cout << l;
        cout << endl;
        return 0;
    }
    for(int i=0;i<n-1;i++){
        dp[i][i+1] = 1;
    }
    for(int i=0;i<3000;i++)
        for(int j=0;j<3000;j++)
            par[i][j] = -1;
    for(int len = 2;len <=n;len++){
        for(int i=0;i+len<n;i++){
            if(s[i] == s[i+len]){
                dp[i][i+len] = dp[i+1][i+len-1] + 2;
                par[i][i+len] = 0;
            }
            else{
                dp[i][i+len] = max(dp[i+1][i+len] , dp[i][i+len-1]);
                if(dp[i][i+len] == dp[i+1][i+len])
                    par[i][i+len] = 1;
                else
                    par[i][i+len] = 2;
            }
        }
    }
    int x = 0, y = n-1;
    while(par[x][y] != -1){
        if(par[x][y] == 0){
            p = s[y] + p;
            k = k + s[x];
            x = x+1;
            y = y-1;
        }
        else if(par[x][y] == 1){
            x = x+1;
        }
        else if(par[x][y] == 2){
            y = y-1;
        }
    }
    if(dp[0][n-1] % 2 == 1)
        cout << k+s[y]+p << endl;
    else
        cout << k+p << endl;
    return 0;
}
