#include <iostream>
#include <cstdio>
#include <cstring>
#include <queue>
using namespace std;

int mov[4][2]={{-1,0},{1,0},{0,-1},{0,1}};
int r,c,sx,sy,ex,ey,cnt,flag;
char grid[505][505];
struct node
{
   int x,y;
};

void bfs(int ok)
{
   int i;
   queue<node> q;
   node t1,t2;
   t1.x=sx;
   t1.y=sy;
   q.push(t1);
   while(!q.empty())
   {
      t1=q.front();
      q.pop();
      if(t1.x==ex && t1.y==ey)
      {
         cnt++;
         if(ok)
         {
            if(cnt==2){printf("YES\n");flag=1;break;}
         }
         else
         {
            printf("YES\n");flag=1;break;
         }
      }
      for(i=0;i<4;i++)
      {
         t2.x=t1.x+mov[i][0];
         t2.y=t1.y+mov[i][1];
         if(t2.x>=0 && t2.x<r && t2.y>=0 && t2.y<c)
         {
            if(grid[t2.x][t2.y]=='X' && (t2.x!=ex || t2.y!=ey))continue;
            q.push(t2);
            grid[t2.x][t2.y]='X';
         }
      }
   }
}

int main()
{
   int i;
   scanf("%d%d",&r,&c);
   getchar();
   for(i=0;i<r;i++) gets(grid[i]);
   scanf("%d%d%d%d",&sx,&sy,&ex,&ey);
   sx--;sy--;ex--;ey--;
   flag=cnt=0;
   if(grid[ex][ey]=='.')bfs(1);
   else bfs(0);
   if(!flag)printf("NO\n");
   return 0;
}
