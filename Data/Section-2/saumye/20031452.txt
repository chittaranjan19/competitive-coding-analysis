#include<bits/stdc++.h>
#define ll long long
#define INF 1000000000000000
#define maxn 100005

using namespace std;

string str[maxn];
ll c[maxn], dp[2][maxn];

string rev(string x)
{
	string res = "";
	for ( int i = x.length() - 1 ; i >= 0 ; i-- )
	{
		res += x.at(i);
	}
	return res;
}
int main()
{
	int n, i;
	cin >> n;
	for ( i = 1 ; i <= n ; i++ )
	{
		cin >> c[i];
	}
	dp[0][0] = 0;
	dp[1][0] = 0;
	for ( i = 1 ; i <= n ; i++ )
	{
		dp[0][i] = dp[1][i] = INF;
	}
	for ( i = 1 ; i <= n ; i++ )
	{
		cin >> str[i];
	}
	bool no;
	for ( i = 1 ; i <= n ; i++ )
	{
		no = true;
		if ( str[i] >= str[i - 1] )
		{
			dp[0][i] = dp[0][i - 1];
			no = false;
		}
		if ( str[i] >= rev(str[i - 1]) )
		{
			dp[0][i] = min(dp[0][i], dp[1][i - 1]);
			no = false;
		}
		if ( rev(str[i]) >= str[i - 1] )
		{
			dp[1][i] = dp[0][i - 1] + c[i];
			no = false;
		}
		if ( rev(str[i]) >= rev(str[i - 1]) )
		{
			dp[1][i] = min(dp[1][i], c[i] + dp[1][i - 1]);
			no = false;
		}
	}

	//no answer
	if ( min(dp[0][n], dp[1][n]) >= INF )
	{
		printf("-1\n");
	}
	else
	{
		cout << min(dp[0][n], dp[1][n]) << "\n";
	}
	return 0;
}