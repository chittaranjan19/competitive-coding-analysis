/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.

 * File Name : WheredoITurn.cpp

 * Purpose :

 * Creation Date : 24-09-2012

 * Last Modified : Monday 24 September 2012 10:27:44 PM IST

 * Created By :  Shoaib Khan

 _._._._._._._._._._._._._._._._._._._._._.*/

#include<cstdio>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<limits.h>
#include<string.h>

//Data Structures
#include<algorithm>
#include<vector>
#include<string>
#include<set>
#include<map>
#include<utility>
#include<stack>
#include<queue>
using namespace std;

#define FOR(i,a,b)  for(int i= (int )a ; i < (int )b ; ++i)
#define rep(i,n)    FOR(i,0,n)
#define INF     INT_MAX
#define ALL(x)      x.begin(),x.end()
#define LET(x,a)    __typeof(a) x(a)
#define IFOR(i,a,b)     for(LET(i,a);i!=(b);++i)
#define EACH(it,v)  IFOR(it,v.begin(),v.end())
#define pb      push_back
#define sz(x)       int(x.size())
#define mp      make_pair
#define fill(x,v)   memset(x,v,sizeof(x))
#define si(n)       scanf("%d",&n)
#define sif(n)       scanf("%f",&n)
#define pi(n)       printf("%d ",n)
#define pil(n)      printf("%d\n",n)
#define ss(n)       scanf("%s",n)

typedef pair<int,int> PI;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef long long LL;
typedef queue<int> QU;
int main()
{
	float x1,x2,x3,y1,y2,y3;
	sif(x1);sif(y1);sif(x2);sif(y2);sif(x3);sif(y3);
	int eq=((x2-x1)*(y3-y1))-((y2-y1)*(x3-x1));
/*	if(x2==x1)
	{
		if(y2>y1){
		if(x3>x2)
			printf("RIGHT\n");
		else if(x3<x2)
			printf("LEFT\n");
		else
			printf("TOWARDS\n");
		}
		else
		{
		if(x3<x2)
			printf("RIGHT\n");
		else if(x3>x2)
			printf("LEFT\n");
		else
			printf("TOWARDS\n");
		}
	}*/
//	else{
		if(y2<y1){
			//printf("y2<y1\n");
			if(eq<0)
				printf("RIGHT\n");
			else if(eq>0)
				printf("LEFT\n");
			else
				printf("TOWARDS\n");

		}
		else 
		{
			//printf("y2>y1\n");
			if(eq<0)
				printf("RIGHT\n");
			else if(eq>0)
				printf("LEFT\n");
			else
				printf("TOWARDS\n");
		}
//	}
	//	}
	///	else{
	/*float m=(y2-y1)/(x2-x1);

	  int eq=((x2-x1)*(y3-y1))-((y2-y1)*(x3-x1));
	  if(m>0){
	  printf("dada");
	  if(eq>0)
	  printf("RIGHT\n");
	  else if(eq<0)
	  printf("LEFT\n");
	  else
	  printf("TOWARDS\n");
	  }
	  else
	  {
	  if(eq<0)
	  printf("RIGHT\n");
	  else if(eq>0)
	  printf("LEFT\n");
	  else
	  printf("TOWARDS\n");
	  }
	 */
	return 0;
}




