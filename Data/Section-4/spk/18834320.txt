#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>
#include<queue>
#include<set>
#include<stack>

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define scantype int
#define min(a,b) a<b?a:b
#define max(a,b) a>b?a:b
#define lli long long int

lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}

using namespace std;

void scan(scantype &x);

bool vis[100003],flag;
int mc[100003];
vector<int> edge[100003],vc[2];

void dfs(int s,int color)
{
     vis[s]=true;
     mc[s]=color;
     vc[color].pb(s+1);

     for(int i=0;i<edge[s].size();i++)
     {
         if(!vis[edge[s][i]])
               dfs(edge[s][i],color==1?0:1);
         else if(mc[edge[s][i]]==color)
               flag=true;
     }
}

int main(void)
{
  int n,m;
  cin>>n>>m;

  for(int i=0;i<m;i++)
  {
      int x,y;
      scan(x);
      scan(y);
      x--;
      y--;
      edge[x].pb(y);
      edge[y].pb(x);
  }
  flag=false;
  for(int i=0;i<n;i++)
  {
       if(!edge[i].size())continue;
       if(!vis[i])
       {
            dfs(i,0);
            if(flag)
            {
                cout<<"-1";
                return 0;
            }
       }
  }

  for(int i=0;i<2;i++)
  {
      printf("%d\n",vc[i].size());
      for(int j=0;j<vc[i].size();j++)
        printf("%d ",vc[i][j]);
      printf("\n");
  }
  return 0;
}









void scan(scantype &x)
{
    /*register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}*/

    register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
