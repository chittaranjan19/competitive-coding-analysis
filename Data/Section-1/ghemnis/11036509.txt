#include <iostream>
#include <vector>
#include <stdio.h>
#include <string>
#include <cmath>
#include <algorithm>

using namespace std;



long long C(long long a, long long b,long long z)
{  a=a+b-1;
b=b-1;
    vector< vector<long long> > C(2, vector<long long> (b+1, 0));

    for (int i = 0; i <= a; i++)
    {
        for (int k = 0; k <= b && k <= i; k++)
        {
            if (k == 0 || k == i)
                C[i & 1][k] = 1;
            else
                C[i & 1][k] = (C[(i - 1) & 1][k - 1] + C[(i - 1) & 1][k])%z;
        }
    }
    return C[a & 1][b]%z;
}


int main ()
{
    long long n,m,b,i,j,k,t=0;
    long long mod;
    cin>>n>>m>>b>>mod;
    vector<int> a(501);
    vector<int> x(501);
    for(i=0;i<n;i++)
    {
        cin>>a[i];
    }
    sort (a.begin(),a.begin()+n);


    repeat:for(i=0;i<n;i++)
    {
        if(b<m*a[i]){break;}
    }
    if(i==0 and t==0){cout<<"0";return 0;}
    if(i==0 and t!=0){cout<<t;return 0;}
    t=(t+C(m,i,mod))%mod;
    t=t%mod;
   if(i==n){cout<<t;return 0;}
   m=m-1;b=b-a[i]; if(m<0 or b<0){cout<<t;return 0;}goto repeat;


}
