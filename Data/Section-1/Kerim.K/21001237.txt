#include "bits/stdc++.h"
#define MAXN 1000009
#define MOD 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
ll arr[MAXN],S[MAXN],a,ans;
ll mod(ll x){
	while(x<0)
		x+=MOD;
	return (x%MOD);	
}
int main(){
	srand((unsigned)time(NULL));
	scanf("%lld",&a);
	for(int i=1;i<=a;i++)
		scanf("%lld",arr+i);
	S[2]=min(arr[1],arr[2])-1;
	//Marvellous there is RANDOM :)
	int type=rand()%2;
	if(type){
		//Damn it is my formula
		for(int r=3;r<=a;r++)
			S[r]=mod(mod(S[r-1]*min(arr[r-2],min(arr[r-1],arr[r])))+min(arr[r-1],arr[r])-mod(S[r-1]+1));	
	}
	else{
		//It is typical formula
		for(int r=3;r<=a;r++)
			S[r]=mod(min(arr[r]-1,arr[r-1]-1)+mod(S[r-1]*min(arr[r-2]-1,min(arr[r-1]-1,arr[r]-1))));
	}
	for(int i=1;i<=a;i++)
		ans=mod(ans+arr[i]-1);
	for(int i=2;i<=a;i++)
		ans=mod(ans+(min(arr[i],arr[i-1])-1)*S[i]);
	printf("%lld\n",ans);	
	return 0;
}
