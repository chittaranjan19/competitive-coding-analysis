#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair
#define all(x) x.begin(), x.end()

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 3e5 + 10, lg = 31, MAXN = 1111;
ll mod = 1e9 + 7;

ll gcd(ll a, ll b) {
	return b ? gcd(b, a % b) : a;
}

ll _gcd(ll a, ll b, ll & x, ll & y) {
	if (a == 0) {
		x = 0; y = 1;
		return b;
	}
	ll _x1, _y1;
	ll d = _gcd(b%a, a, _x1, _y1);
	x = _y1 - (b / a) * _x1;
	y = _x1;
	return d;
}

ll binpow(ll a, ll n) {
	ll res = 1;
	while (n) {
		if (n & 1)
			res *= a;
		a *= a;
		n >>= 1;
		a %= mod;
		res %= mod;
	}
	return res;
}


void term_ans(string ans){
	cout << ans;
	exit(0);
}


int main()
{
	int n, t;
	cin >> n >> t;
	string s;
	cin >> s;
	int cur = 1;
	bool need10 = s[0] == '9';
	bool del = 0;
	while ((s[cur] < '5' || s[cur] == '.') && cur < s.length()){
		if (s[cur] == '.')
			del = 1;
		cur++;
	}
	if (cur == s.length()){
		cout << s;
		exit(0);
	}
	cur -= 1;
	int add = 1;

	while (cur != -1){
		if (s[cur] == '.') {
			cur -= 1;
			del = 0;
			continue;
		}
		if (t > 0 && add){
			t--;
			if (del || s[cur+1] == '.')
				s[cur+1] = '\0';
			else s[cur + 1] = '0';
			s[cur] = ((s[cur] - '0' + add) % 10 + '0');
			add = s[cur] > '4';
		}
		cur -= 1;
	}
	if (s[0] == '0')
		s = '1' + s;
	for (int i = 0; i < 1000000; i++){
		if (s[i] == '\0') break;
		cout << s[i];
	}
	return 0;
}
