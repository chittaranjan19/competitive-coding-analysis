#include <bits/stdc++.h>
#include <iostream>
#include <cstdio>
#include <stdlib.h>
#include <cmath>
#include <algorithm>

using namespace std;
const int inf = (int)1e9;
const int MAX_N = 1000;
const int MOD = (int)1e9 + 7;

int main()
{
    //freopen("slalom.in", "r", stdin);
    //freopen("output.txt", "w", stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n, k, d;
    cin >> n >> k >> d;
    int dp[n][n][2];
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            for (int l = 0; l < 2; l++)
                dp[i][j][l] = 0;
    for (int i = 0; i < min(n, d - 1); i++)
        dp[0][i][0] = 1;
    for (int i = d - 1; i < min(n, k); i++)
        dp[0][i][1] = 1;
    for (int i = 1; i < n; i++)
        for (int j = 0; j < n; j++)
        {
            for (int l = 1; l < d; l++)
                if (j - l >= 0)
                    dp[i][j][0] = (dp[i][j][0] + dp[i - 1][j - l][0]) % MOD;
            for (int l = 1; l <= k; l++)
                if (j - l >= 0)
                    dp[i][j][1] = (dp[i][j][1] + dp[i - 1][j - l][1]) % MOD;
            for (int l = d; l <= k; l++)
                if (j - l >= 0)
                    dp[i][j][1] = (dp[i][j][1] + dp[i - 1][j - l][0]) % MOD;
        }
    int ans = 0;
    for (int i = 0; i < n; i++)
        ans = (ans + dp[i][n - 1][1]) % MOD;
    cout << ans;
    return 0;
}
