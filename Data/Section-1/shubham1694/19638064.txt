#include <bits/stdc++.h>

using namespace std;

#define f first
#define s second
#define mp make_pair
#define pb push_back

typedef pair<int, int> pii;

const int maxn = 1000010;

int n, m, l, r, st[maxn*6], arr[maxn], prefxor[maxn], ans[maxn];
map<int, int> last;
vector<pii> q[maxn];

void update(int s, int e, int q, int node)
{
	if(s>e || q>e || s>q)
		return;
	if(s==e){
		st[node] ^= arr[s];
		return;	
	}
	int mid, lc, rc;
	mid = (s+e)>>1;
	lc = node*2 + 1;
	rc = lc + 1;
	update(s, mid, q, lc);
	update(mid+1, e, q, rc);	
	st[node] = st[lc]^st[rc];
}

int query(int s, int e, int qs, int qe, int node)
{
	if(s>e || qs>e || s>qe)
		return 0;
	if(s>=qs && qe>=e)
		return st[node];
	int mid, lc, rc;
	mid = (s+e)>>1;
	lc = node*2 + 1;
	rc = lc + 1;
	int ret = query(s, mid, qs, qe, lc)^query(mid+1, e, qs, qe, rc);
	return ret;
}

int main()
{
	int i, j;
	scanf("%d", &n);
	for(i=1; i<=n; i++){
		scanf("%d", &arr[i]);
		prefxor[i] = prefxor[i-1]^arr[i];	
	}
	scanf("%d", &m);
	for(i=1; i<=m; i++){
		scanf("%d%d", &l,&r);
		q[r].pb(mp(l, i));
	}	
	for(i=1; i<=n; i++){
		update(0, maxn-1, last[arr[i]], 0);
		last[arr[i]] = i;		
		update(0, maxn-1, last[arr[i]], 0);
		for(auto it : q[i]){
			ans[it.s] = prefxor[i]^prefxor[it.f-1]^query(0, maxn-1, it.f, i, 0);		
		} 
	}
	for(i=1; i<=m; i++)
		printf("%d\n", ans[i]);
	return 0;
}