#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;
string s;
int n;
int val(char ch)
{
    if (ch == '<') return 1;
    if (ch == '(') return 1;
    if (ch == '[') return 1;
    if (ch == '{') return 1;

    if (ch == '>') return -1;
    if (ch == ')') return -1;
    if (ch == ']') return -1;
    if (ch == '}') return -1;
}
int get(char ch)
{
    if (ch == '<') return 1;
    if (ch == '(') return 3;
    if (ch == '[') return 5;
    if (ch == '{') return 7;

    if (ch == '>') return 2;
    if (ch == ')') return 4;
    if (ch == ']') return 6;
    if (ch == '}') return 8;
}

stack< int > S;
int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("C.inp", "r", stdin);
    freopen("C.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> s;
    n = s.size(); s ='=' + s;
    int d = 0;
    FORE(i, 1, n){
        d += val(s[i]);
        if (d < 0){
            cout << "Impossible";
            return 0;
        }
    }
    if (d){
        cout << "Impossible";
        return 0;
    }
    int ans = 0;
    FORE(i, 1, n){
        if (get(s[i]) % 2 == 1) S.push(get(s[i]));
        else{
            if (S.top() + 1 != get(s[i])) ans++;
            S.pop();
        }
    }
    cout << ans;
    return 0;
}

