const   fi      ='';
        fo      ='';
        maxN    =trunc(1e5)*2;

type    arr1    =array[1..maxN] of longint;

var     n, m    :longint;
        a, b    :arr1;
        m1,m2   :longint;
        d1,d2   :longint;
        gt,j    :longint;

procedure QS(var a:arr1;l,r:longint);
var     i, j, x, tg:longint;
begin
        i:=l;j:=r;x:=a[(i+j) div 2];
        repeat
                while a[i]<x do inc(i);
                while a[j]>x do dec(j);
                if i<=j then
                        begin
                                tg:=a[i];a[i]:=a[j];a[j]:=tg;
                                inc(i);
                                dec(j);
                        end;
        until i>j;
        if l<j then QS(a,l,j);
        if i<r then QS(a,i,r);
end;

procedure run;
var     i :longint;
begin
        assign(input,fi);assign(output,fo);
        reset(input);rewrite(output);
        readln(n);
        for i:=1 to n do read(a[i]);
        QS(a,1,n);
        readln(m);
        for i:=1 to m do read(b[i]);
        QS(b,1,m);
        m1:=0;m2:=0;
        d1:=n*3;d2:=m*3;
        gt:=0;
        j:=1;
        for i:=0 to n do
                begin
                        if i>1 then dec(d1);
                        while (j<=n) and (b[j]<a[i]) do
                                begin
                                        inc(j);
                                        dec(d2);
                                end;
                        if (d1-d2>gt) or ((d1-d2=gt) and (m1<d1)) then
                                begin
                                        gt:=d1-d2;
                                        m1:=d1;
                                        m2:=d2;
                                end;
                end;
        writeln(m1,':',m2);
        close(input);close(output);
end;

begin
        run;
end.