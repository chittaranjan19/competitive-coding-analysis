program slis;

uses math;

const
  tfi = '';//'slis.inp';
  tfo = '';//'slis.out';

var
  n,count,lis : longint;
  a,c,r,t,x : array [1..100000] of longint;
  fi,fo : text;

procedure input;
  var i : longint;
  begin
    assign(fi,tfi);
    reset(fi);
    read(fi,n);
    for i := 1 to n do read(fi,a[i]);
    close(fi);
  end;

procedure update(i,x : longint);
  begin
    while i <= 100000 do
      begin
        t[i] := max(t[i],x);
        i := i + (i and (-i));
      end;
  end;

function get(i : longint) : longint;
  var tmp : longint;
  begin
    tmp := 0;
    while i <> 0 do
      begin
        tmp := max(tmp,t[i]);
        i := i - (i and (-i));
      end;
    exit(tmp);
  end;

{procedure init;
  var i,tmp : longint;
  begin
    for i := 1 to n do
      begin
        tmp := get(a[i]-1)+1;
        update(a[i],tmp);
        if lis < tmp then
          begin
            lis := tmp;
            count := 1;
          end
        else
        if lis = tmp then inc(count);
      end;
  end;}

procedure check;
  var i,tmp,lg : longint;
  begin
    tmp := 0;
    lg := 0;
    for i := 1 to n do
      if x[i] = 1 then
        begin
          inc(lg);
          if a[i] <= tmp then exit;
          tmp := a[i];
        end;
    if lg = lis then
      begin
        inc(count);
        for i := 1 to n do c[i] := c[i] + x[i];
      end
    else
    if lg > lis then
      begin
        lis := lg;
        count := 1;
        for i := 1 to n do c[i] := x[i];
      end;
  end;

procedure pretry(i : longint);
  var j : longint;
  begin
    if i = n+1 then check
    else
      for j := 1 downto 0 do
        begin
          x[i] := j;
          pretry(i+1);
        end;
  end;

procedure subtroll;
  var i : longint;
  begin
    lis := 0;
    pretry(1);
    for i := 1 to n do
      if c[i] = 0 then r[i] := 1 else
      if c[i] = count then r[i] := 3 else
      r[i] := 2;
  end;

procedure output;
  var i : longint;
  begin
    assign(fo,tfo);
    rewrite(fo);
    for i := 1 to n do write(fo,r[i]);
    close(fo);
  end;

begin
  input;
  subtroll;
  output;
end.