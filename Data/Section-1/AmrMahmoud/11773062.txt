#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int k, arr[1005], n;
int comb[1005][1005];

int ncr(int n, int r)
{
  if(n == r) return 1;
  if(n < r || r < 0) return 0;
  int &temp = comb[n][r];
  if(temp != -1) return temp;
  temp = ncr(n - 1, r - 1) + ncr(n - 1, r);
  if(temp >= mod) temp-=mod;
  return temp;
}

int main()
{
  ios_base::sync_with_stdio(0);
  //freopen("ebola.in", "r", stdin);
  //freopen("ebola.out", "w", stdout);
  cin >> k;
  setdp(comb);
  for(int i=0;i<k;i++)
  {
    cin >> arr[i];
    n+=arr[i];
  }
  LL sol = 1;
  for(int i=k-1;i>=0;i--)
  {
    sol*=ncr(n - 1, arr[i] - 1);
    sol%=mod;
    n-=arr[i];
  }
  cout << sol;
  return 0;
}
