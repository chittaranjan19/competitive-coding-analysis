#include <iostream>
#include <map>
#include <algorithm>
#include <vector>

using namespace std;

typedef pair<int, int> ii;

int n;
string s;
map<int, ii > digToPos;
map<ii, int> posToDig;

void assoc(int dig, ii p){
    digToPos[dig] = p;
    posToDig[p] = dig;
}

void precmp(){
    int d = 1;
    for(int i = 1; i<=3; i++)
    for(int j = 1; j<=3; j++)
        assoc(d++, ii(i, j));
    assoc(0, ii(4, 2));
}

int main(){
    precmp();    
    cin >> n >> s;
    vector<ii > diff;
    for(int i = 1; i<s.length(); i++){
        ii a = digToPos[s[i]-'0'];
	ii l = digToPos[s[i-1]-'0'];
	diff.push_back(ii(a.first-l.first, a.second-l.second));
    }
    bool unique = true;
    for(int i = 0; i<=9; i++){
	if(i != s[0]-'0'){
		bool pos = true;
		ii a = digToPos[i];
		for(int j = 0; j<diff.size(); j++){
			a.first += diff[j].first;
			a.second += diff[j].second;
			if(!posToDig.count(a)) pos = false;		
		}
		unique = unique & !pos;
	}
    }
	if(unique) cout << "YES\n";
	else cout << "NO\n";
    

}