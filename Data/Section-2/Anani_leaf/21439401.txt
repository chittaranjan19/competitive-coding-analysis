//#include<bits/stdc++.h>
#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<string>
#include<queue>
#include<vector>
#include<map>
#include<cmath>
#define lowbit(x) ((x)&(-x))
#define Max(a,b) (a>b?a:b)
#define Min(a,b) (a>b?b:a)
#define INF 0x3f3f3f3f
#define rep(i,a,b) for(int i=a;i<(b);++i)
using namespace std;
typedef __int64 ll;
int const Max_N = 1e6+5; 
map<int,int>mp[Max_N];
map<int,int>vis[Max_N];
int X[Max_N] = {0};
int Y[Max_N] = {0};
int main()
{
 	int N,M,K;
	cin >> N >> M >> K;
	int n = N;
	int m = M;
	for (int i = 0; i < K; ++i)
	{
		cin >> X[i] >> Y[i];
	 } 
	int x,y,k = 1;
	x = y = 0;
	int t = 0;
	while(true)
	{
		for(int i = 0; i < K; ++i)
		{
			if(Y[i]-y == k*(X[i] - x))
			{
				if(!mp[X[i]][Y[i]])
				{
					mp[X[i]][Y[i]] = t + abs(Y[i]-y);
				}
			}
		}
		if(k>0)
		{
			if(y==0)
			{
				int len1 = n - x;
				int len2 = m;
				if(len1 < len2) //�ұ�ǽ 
				{
					t += len1;
					x = n;
					y = len1;	
				}
				else //�ϱ� 
				{
					t += len2;
					x +=len2;
					y = m;
				}
			}
			else if(y==m)
			{
				int len1 = x;
				int len2 = m;
				if (len1 < len2) //��� 
				{
					t += len1;
					x = 0;
					y -= len1; 
				}
				else
				{
					t += len2;
					y = 0;
					x -= len2;
				}
			}
			else if(x==0)
			{
				int len1 = m-y;
				int len2 = n;
				if(len1 < len2)
				{
					t += len1;
					y = m;
					x = len1;
				}
				else
				{
					t += len2;
					y += len2;
					x = n;
				}
			}
			else if(x==n)
			{
				int len1 = y;
				int len2 = n;
				if(len1 < len2) //����
				{
					t += len1;
					y =  0;
					x -= len1; 
				} 
				else //���� 
				{
					t += len2;
					x = 0;
					y -=len2; 
				}
			}
			k = -1;
		} 
		else if(k < 0)
		{
			if(y==0)
			{
				int len1 = x;
				int len2 = m;
				if(len1 < len2) // ����
				{
					t += len1;
					x = 0;
					y = len1; 
				} 
				else //���� 
				{
					t += len2;
					y = m;
					x -= len2; 
				}
			}
			else if(y == m)
			{
				int len1 = n - x;
				int len2 = m;
				if(len1 < len2) //����
				{
					t += len1;
					x = n;
					y -= len1; 
				}
				else //���� 
				{
					t += len2;
					y =  0;
					x += len2;
				}
			}
			else if(x==0)
			{
				int len1 = y;
				int len2 = m;
				if(len1 < len2) //���� 
				{
					t += len1;
					y = 0;
					x += len1; 
				}
				else //����
				{
					t += len2;
					x = n;
					y -= len2; 
				} 
			}
			else if(x==n)
			{
				int len1 = m - y;
				int len2 = n;
				if(len1 < len2) //����
				{
					t += len1;
					x -= len1;
					y = m; 
				} 
				else //���� 
				{
					t += len2;
					x = 0;
					y += len2; 
				}
			}
			k = 1;
		}
		if(vis[x][y]) break;
		else vis[x][y] = true; 
	}
	for (int i = 0; i < K; ++i)
	{
		if(mp[X[i]][Y[i]]) printf("%d\n",mp[X[i]][Y[i]]);
		else printf("-1\n");
	}
	return 0;
}
	//freopen("in.txt","r",stdin);
//std::ios::sync_with_stdio(false);

