#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
char arr[2009][2009],ans[2009][2009];
int deg[2009][2009],vis[2009][2009],n,m;
int dx[]={+1,-1,0,0};
int dy[]={0,0,-1,+1};
int ok(int x,int y){
	if(x>=1 and x<=n and y>=1 and y<=m and arr[x][y]=='.')
		return 1;
	return 0;	
}
queue<PII>q;
void tile(int nx,int ny){
	for(int k=0;k<4;k++)
		if(ok(dx[k]+nx,dy[k]+ny))
			if(--deg[dx[k]+nx][dy[k]+ny]==1)							
				q.push(mp(dx[k]+nx,dy[k]+ny));
}
int main(){
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++){
			scanf(" %c",&arr[i][j]);
			ans[i][j]=arr[i][j];	
		}
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			if(arr[i][j]=='.'){
				for(int k=0;k<4;k++)
					if(ok(dx[k]+i,dy[k]+j))
						deg[i][j]++;
				if(deg[i][j]==1)
					q.push(mp(i,j));	
			}		
	while(!q.empty()){
		int nx=q.front().ff,ny=q.front().ss;
		q.pop();
		if(vis[nx][ny]==1)
			continue;
		if(deg[nx][ny]!=1)
			return printf("Not unique\n"),0;		
		int tox,toy;
		vis[nx][ny]=1;
		for(int k=0;k<4;k++)
			if(ok(dx[k]+nx,dy[k]+ny) and !vis[dx[k]+nx][dy[k]+ny]){
				vis[dx[k]+nx][dy[k]+ny]=1;
				tox=dx[k]+nx;toy=dy[k]+ny;
			}
		if(nx==tox)
			ans[nx][min(toy,ny)]='<',ans[nx][max(toy,ny)]='>';	
		else
			ans[min(tox,nx)][ny]='^',ans[max(tox,nx)][ny]='v';		
		tile(nx,ny);		
		tile(tox,toy);
	}
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			if(ans[i][j]=='.')
				return printf("Not unique\n"),0;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++)
			printf("%c",ans[i][j]);
		printf("\n");	
	}
	return 0;
}
//LooK aT mY COde ONlinE +_+
