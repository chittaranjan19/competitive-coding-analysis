#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>

#define f first
#define s second

using namespace std;

const int N = 1e5 + 179;
int n, a, p[N][2];
vector<pair<int,int> > ans;

int s(int t) {
    int sets[2] = {0, 0};
    int i = 0;
    for (int l, r, m; i < n; i = r) {
        for (l = i, r = n + 1; l + 1 < r; ) {
            m = (l + r) >> 1;
            if (max(p[m][0] - p[i][0], p[m][1] - p[i][1]) < t) {
                l = m;
            } else {
                r = m;
            }
        }
        if (r == n + 1) {
            return -1;
        }
        ++sets[p[r][0] - p[i][0] != t];
    }
    return (sets[0] != sets[1] ? max(sets[0], sets[1]) : -1);
}

int main() {
//    freopen("input.txt", "r", stdin);
    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> a;
        p[i + 1][0] = p[i][0];
        p[i + 1][1] = p[i][1];
        ++p[i + 1][a - 1];
    }
    for (int t = 1; t <= n; ++t) {
        int temp = s(t);
        if (temp != -1) {
            ans.push_back({temp, t});
        }
    }
    stable_sort(ans.begin(), ans.end());
    cout << ans.size() << "\n";
    for (size_t i = 0; i < ans.size(); ++i) {
        cout << ans[i].f << " " << ans[i].s << "\n";
    }
    return 0;
}
