#include <iostream>
#include <vector>
#include <string>
#include <queue>
#include <map>
#include <cmath>
#include <algorithm>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
    if (!v.empty())
    { 
        int p = v.size();
        cout << "[";
        forn(i,p-1)
            cout << v[i] << ",";
        cout << v[p-1] << "]" << endl;
    }
    else
        cout << "[]" << endl;
}

class par{
public:
    int dif;
    int pos;
};

bool operator < (par a, par b){
    return a.dif<b.dif;
}

int main(){
    int n,c=0;
    cin >> n;
    vector<par> h(n);
    forn(i,n) {
        cin >> h[i].dif;
        h[i].pos = i+1;
    }
    sort(h.begin(), h.end());
    forn(i,n-1) if(h[i].dif==h[i+1].dif) c++;
    
    if(c<=1) {cout<<"NO"; return 0;}
    forn(i,n) cout << h[i].pos;
    cout << endl;
    
    int j=0;
    for(int i=0;i<n-1;i++){
        if(h[i].dif==h[i+1].dif)
        {
            j = i;
            int tmp = h[i].pos;
            h[i].pos = h[i+1].pos;
            h[i+1].pos = tmp;
            break;
        }
        
    }
    forn(i,n) cout << h[i].pos;
    cout << endl;
    
    for(int i=j+1;i<n-1;i++){
        if(h[i].dif==h[i+1].dif)
        {
            int tmp = h[i].pos;
            h[i].pos = h[i+1].pos;
            h[i+1].pos = tmp;
            break;
        }
        
    }
    
    forn(i,n) cout << h[i].pos;
    cout << endl;
    
    return 0;   
}
