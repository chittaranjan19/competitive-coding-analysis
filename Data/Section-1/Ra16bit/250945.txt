#include <stdio.h>
#include <memory.h>
long long l,r,p,f[20][256][9][8][7][5][2];
int i,j,j5,j7,j8,j9,k,k5,k7,k8,k9,kk,n,t,it,a[20],u[20][256][9][8][7][5][2];
int n5[5][10],n7[7][10],n8[8][10],n9[9][10];
long long solve(long long x) {
  if (x==0) return 1; else ++it;
  for (n=1; x>0; n++, x/=10) a[n]=x%10;
  u[--n][0][0][0][0][0][1]=it;
  f[n][0][0][0][0][0][1]=1;
  for (i=n; i>0; i--) for (j=0; j<256; j++) for (j9=0; j9<9; j9++) for (j8=0; j8<8; j8++) for (j7=0; j7<7; j7++) for (j5=0; j5<5; j5++) {
    if (u[i][j][j9][j8][j7][j5][0]==it) {
      p=f[i][j][j9][j8][j7][j5][0];
      for (k=0; k<10; k++) {
        k9=n9[j9][k];
        k8=n8[j8][k];
        k7=n7[j7][k];
        k5=n5[j5][k];
        if (k<2) kk=j; else kk=j|(1<<(k-2));
        if (u[i-1][kk][k9][k8][k7][k5][0]!=it) {
          u[i-1][kk][k9][k8][k7][k5][0]=it;
          f[i-1][kk][k9][k8][k7][k5][0]=p;
        } else f[i-1][kk][k9][k8][k7][k5][0]+=p;
      }
    }
    if (u[i][j][j9][j8][j7][j5][1]==it) {
      p=f[i][j][j9][j8][j7][j5][1];
      for (k=0; k<a[i]; k++) {
        k9=n9[j9][k];
        k8=n8[j8][k];
        k7=n7[j7][k];
        k5=n5[j5][k];
        if (k<2) kk=j; else kk=j|(1<<(k-2));
        if (u[i-1][kk][k9][k8][k7][k5][0]!=it) {
          u[i-1][kk][k9][k8][k7][k5][0]=it;
          f[i-1][kk][k9][k8][k7][k5][0]=p;
        } else f[i-1][kk][k9][k8][k7][k5][0]+=p;
      }
      k9=n9[j9][k];
      k8=n8[j8][k];
      k7=n7[j7][k];
      k5=n5[j5][k];
      if (k<2) kk=j; else kk=j|(1<<(k-2));
      if (u[i-1][kk][k9][k8][k7][k5][1]!=it) {
        u[i-1][kk][k9][k8][k7][k5][1]=it;
        f[i-1][kk][k9][k8][k7][k5][1]=p;
      } else f[i-1][kk][k9][k8][k7][k5][1]+=p;
    }
  }
  long long r=0;
  for (j=0; j<256; j++) for (j9=0; j9<9; j9++) if (((j&2)==0 || j9%3==0) && ((j&128)==0 || j9==0))
   for (j8=0; j8<8; j8++) if (((j&1)==0 || (j8&1)==0) && ((j&4)==0 || (j8&3)==0) && ((j&64)==0 || j8==0))
    if ((j&16)==0 || ((j8&1)==0 && j9%3==0)) for (j7=0; j7<7; j7++) if ((j&32)==0 || j7==0)
     for (j5=0; j5<5; j5++) if ((j&8)==0 || j5==0)
      for (k=0; k<2; k++) if (u[0][j][j9][j8][j7][j5][k]==it) r+=f[0][j][j9][j8][j7][j5][k];
  return r;
}
int main() {
  for (i=0; i<5; i++) for (j=0; j<10; j++) n5[i][j]=(i*10+j)%5;
  for (i=0; i<7; i++) for (j=0; j<10; j++) n7[i][j]=(i*10+j)%7;
  for (i=0; i<8; i++) for (j=0; j<10; j++) n8[i][j]=(i*10+j)%8;
  for (i=0; i<9; i++) for (j=0; j<10; j++) n9[i][j]=(i*10+j)%9;
  scanf("%d",&t);
  while (t--) {
    scanf("%I64d%I64d",&l,&r);
    printf("%I64d\n",solve(r)-solve(l-1));
  }
  return 0;
}
