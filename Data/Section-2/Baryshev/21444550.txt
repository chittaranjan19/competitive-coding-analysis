#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
#include <fstream>
#include <tuple>
#include <iomanip>

using namespace std;

#define forn(i, n) for (int i = 0; i < int(n); ++i)
#define for1(i, n) for (int i = 1; i < int(n); ++i)
#define ford(i, n) for (int i = int(n) - 1; i >= 0; --i)
#define fore(i, l, r) for (int i = int(l); i <= int(r); ++i)
#define all(a) a.begin(), a.end()
#define sz(a) (int(a.size()))
#define mp make_pair
#define pb push_back
#define ft first
#define sc second
#define g(a, b) get<a> (b)

typedef int ll;
typedef long double ld;
typedef pair<int, int> pt;

const int MAX_N = 2e4;
const int mod = 1e9 + 7;

vector <ll> ans;

bool dfs(ll a, ll b){
    if (b < a) return false;
    if (b == a) { return true;}
    if (b % 2 == 0)
        {if (dfs(a, b / 2)) {ans.pb(b / 2); return true;}}
    else if (b % 10 == 1)
        {if (dfs(a, b / 10)){ans.pb(b / 10); return true;}}
    else return false;
}

int main(){
    ll a, b;
    cin >> a >> b;
    dfs(a, b);
    if (ans.size() == 0){
        cout << "NO";
        return 0;
    }
    cout << "YES" << endl;
    cout << ans.size() + 1<< endl;
    for (int i = 0; i < ans.size(); i++)
        cout << ans[i] << " ";
    cout << b <<  " ";
    return 0;
}
