#include <bits/stdc++.h>

using namespace std;


int factorcnt(int n, int d)
{
    int x=0;
    while(n%d==0){
        x++;
        n/=d;
    }
    return x;
}

int main()
{
    int i, j, n, x, y;
    scanf("%d", &n);
    int grid[n][n];
    int fac2[n][n];
    int fac5[n][n];
    int min2[n][n];
    int min5[n][n];

    vector<char> v2[n][n];
    vector<char> v5[n][n];
    for(i=0; i<n; i++){
        for(j=0; j<n; j++){
            scanf("%d", &grid[i][j]);
            fac2[i][j] = factorcnt(grid[i][j], 2);
            fac5[i][j] = factorcnt(grid[i][j], 5);
        }
    }
    min2[0][0] = fac2[0][0];
    for(i=0; i<n; i++){
        for(j=0; j<n; j++){
            if(i==0 && j==0)
                continue;
            else if(i==0){
                min2[i][j] = min2[i][j-1]+fac2[i][j];
                v2[i][j] = v2[i][j-1];
                v2[i][j].push_back('R');
            }
            else if(j==0){
                min2[i][j] = min2[i-1][j]+fac2[i][j];
                v2[i][j] = v2[i-1][j];
                v2[i][j].push_back('D');
            }
            else{
                x = min2[i-1][j]+fac2[i][j];
                y = min2[i][j-1]+fac2[i][j];
                if(x<y){
                    v2[i][j] = v2[i-1][j];
                    v2[i][j].push_back('D');
                    min2[i][j] = x;
                }
                else{
                    v2[i][j] = v2[i][j-1];
                    v2[i][j].push_back('R');
                    min2[i][j] = y;
                }
            }
        }
    }
    min5[0][0] = fac5[0][0];
    for(i=0; i<n; i++){
        for(j=0; j<n; j++){
            if(i==0 && j==0)
                continue;
            else if(i==0){
                min5[i][j] = min5[i][j-1]+fac5[i][j];
                v5[i][j] = v5[i][j-1];
                v5[i][j].push_back('R');
            }
            else if(j==0){
                min5[i][j] = min5[i-1][j]+fac5[i][j];
                v5[i][j] = v5[i-1][j];
                v5[i][j].push_back('D');
            }
            else{
                x = min5[i-1][j]+fac5[i][j];
                y = min5[i][j-1]+fac5[i][j];
                if(x<y){
                    v5[i][j] = v5[i-1][j];
                    v5[i][j].push_back('D');
                    min5[i][j] = x;
                }
                else{
                    v5[i][j] = v5[i][j-1];
                    v5[i][j].push_back('R');
                    min5[i][j] = y;
                }
            }
        }
    }
    int ans = min(min2[n-1][n-1], min5[n-1][n-1]);
    cout << ans << endl;
    if(min2[n-1][n-1]<min5[n-1][n-1]){
        for(i=0; i<v2[n-1][n-1].size(); i++)
            cout << v2[n-1][n-1][i];
        cout << endl;
    }
    else{
        for(i=0; i<v5[n-1][n-1].size(); i++)
            cout << v5[n-1][n-1][i];
        cout << endl;
    }
    return 0;
}
