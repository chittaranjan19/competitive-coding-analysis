#include <iostream>
#include <vector>
#include <algorithm>

#define f first
#define s second

using namespace std;

const int N = 1e5 + 179;
int n, a[N], p[2];
vector<pair<int,int> > ans;

bool check(int s, int t) {
    int p[2] = {0, 0}, play[2] = {0, 0};
    for (int i = 0; i < n; ++i) {
        ++p[a[i] - 1];
        if (p[0] == t) {
            ++play[0];
            p[0] = p[1] = 0;
        } else if (p[1] == t) {
            ++play[1];
            p[0] = p[1] = 0;
        }
    }
    return (p[0] == 0 && p[1] == 0 && ((play[0] == s && play[1] != s) || (play[1] == s && play[0] != s)));
}

int main() {
    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
        ++p[a[i] - 1];
    }
    if (p[0] < p[1]) {
        swap(p[0], p[1]);
    }
    for (int i = 1; i * i <= p[0]; ++i) {
        if (p[0] % i == 0 && check(i, p[0] / i)) {
            ans.push_back({i, p[0] / i});
        }
        if (p[0] % i == 0 && i * i != p[0] && check(p[0] / i, i)) {
            ans.push_back({p[0] / i, i});
        }
    }
    stable_sort(ans.begin(), ans.end());
    cout << ans.size() << "\n";
    for (size_t i = 0; i < ans.size(); ++i) {
        cout << ans[i].f << " " << ans[i].s << "\n";
    }
    return 0;
}
