#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <limits.h>
#include <math.h>
#include <algorithm>
#include <map>
#include <queue>
using namespace std;
typedef long long ll;

int totdis[1000005];
int app[1000005];
int data[100005];
int mm=0;

struct Pair{
	int x,y;
	Pair(){}
	Pair(int a,int b):x(a),y(b){}
};

map<int,int> mp;
void bfs(int stp){
	queue<Pair> q;
	q.push(Pair(stp,1));
	mp[stp]=1;
	while(!q.empty()){
		Pair t=q.front();q.pop();
		if(t.x*2<=mm&&mp[t.x*2]==0){
			mp[t.x*2]=t.y+1;
			q.push(Pair(t.x*2,t.y+1));
		}
		if(t.x/2>0&&mp[t.x/2]==0){
			mp[t.x/2]=t.y+1;
			q.push(Pair(t.x/2,t.y+1));
		}
	}
}

int main(){
	int n;
	scanf("%d",&n);
	for(int i=0;i<n;i++){
		scanf("%d",&data[i]);
		mm=max(mm,data[i]);
	}
	for(int i=0;i<n;i++){
		mp.clear();mp[data[i]]=0;
		bfs(data[i]);
		map<int,int>::iterator it=mp.begin();
		for(;it!=mp.end();it++){
			totdis[it->first]+=it->second-1;
			app[it->first]++;
		}
	}
	int ans=INT_MAX;
	for(int i=1;i<=mm;i++){
		//printf("%d %d\n",app[i],totdis[i]);
		if(app[i]==n)ans=min(ans,totdis[i]);
	}
	printf("%d\n",ans);
    return 0;
}
