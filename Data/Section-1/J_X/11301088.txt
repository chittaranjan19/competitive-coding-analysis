#include <iostream>
#include <bits/stdc++.h>

using namespace std;

const int maxn = 2e5 + 5;
const int INF = 1 << 30;

int a[4 * maxn + 5], d[maxn], _m[maxn];
//int dp[maxn];
//map<int, int> mp;

void pushdown(int rt)
{
    d[rt] = min(d[rt << 1], d[(rt << 1) | 1]);
}

void build(int rt, int l, int r)
{
    if(l == r)
    {
        scanf("%d", a + l);
        d[rt] = a[l];
        return;
    }
    int m = (l + r) >> 1;
    build((rt << 1), l, m);
    build((rt << 1) | 1, m + 1, r);
    pushdown(rt);
}

int query(int rt, int l, int r, int x, int y)
{
    if(x <= l && r <= y)
    {
        return d[rt];
    }
    int m = (l + r) >> 1, L = INF, R = INF;
    if(m >= x)
    {
        L = query(rt << 1, l, m, x, y);
    }
    if(m < y)
    {
        R = query((rt << 1) | 1, m + 1, r, x, y);
    }
    return min(L, R);
}

int main()
{
    int n;
    scanf("%d", &n);
    build(1, 1, n);
    for(int i = 1; i <= n; ++i)
    {
        int ans = 0;
        for(int j = 1; j + i - 1 <= n; ++j)
        {
            ans = max(query(1, 1, n, j, j + i - 1), ans);
        }
        printf("%d%c", ans, (i != n ? ' ' : '\n'));
    }
    return 0;
}
