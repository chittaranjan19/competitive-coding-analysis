#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
/*
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
ordered_set s;
*/
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int x[MAXN],y[MAXN];
int main(){
	int a,ans=-1;
	cin>>a;
	for(int i=0;i<a;i++)
		cin>>x[i]>>y[i];
	if(a==1){
		cout<<"-1"<<endl;	
		return 0;
		}
	if(a==2){
		if(x[0]!=x[1] and y[0]!=y[1])
			cout<<abs(x[0]-x[1])*abs(y[0]-y[1])<<endl;
		else
			cout<<"-1"<<endl;	
		return 0;	
	}
	if(a==3){
		int x1,y1;
		for(int i=-1000;i<=1000;i++){
			int d=0;
			for(int j=0;j<3;j++)
				if(x[j]==i)
					d++;
			if(d==2){
				x1=i;
				break;
			}
		}
		for(int i=-1000;i<=1000;i++){
			int d=0;
			for(int j=0;j<3;j++)
				if(y[j]==i)
					d++;
			if(d==2){
				y1=i;
				break;
			}
		}
		x[3]=x1,y[3]=y1;		
	}
	for(int i=0;i<4;i++)
		for(int j=0;j<4;j++)
			ans=max(ans,abs(x[i]-x[j])*abs(y[i]-y[j]));
	cout<<ans<<endl;		
	return 0;
}
