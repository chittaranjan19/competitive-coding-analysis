#include<stdio.h>
#include<vector>
#include<queue>
#include<memory.h>
using namespace std;
#define INF 1000000007
#define min(a,b) (a<b?a:b)
typedef long long int ll;
int dp[5005][5005]={0},valid[5005][5005];
char s[5005];
int check(int x,int y,int n)
{
    if(valid[x][n]!=-1)
        return valid[x][n];
    if(s[y]=='0' || s[x]=='0')
        return valid[x][n]=0;
    for(int i=0;i<n;i++)
    {
        if(s[x+i]<s[y+i])
        {
            valid[x][n]=1;
            return 1;
        }
        if(s[x+i]>s[y+i]){
            return valid[x][n]=0;
        }
    }
    return valid[x][n]=0;
}
int main()
{
    int n,i,j,la;
    memset(valid,-1,sizeof(valid));
    scanf("%d",&n);
    scanf("%s",s);
    for(i=n-1;i>=0;i--)
    {
        int sum=0;
        if(s[i]!='0')
            dp[i][n-i]=1;
        else
            continue;
        for(j=n;j>0;j--)
        {
            dp[i][j]=(dp[i][j]+dp[i][j+1])%INF;
            if(i+2*j>n)
                continue;
            if(check(i,i+j,j))
            {
                //printf("i=%d j=%d\n",i,j);
                dp[i][j]=(dp[i][j]+dp[i+j][j])%INF;
            }
            else
            {
                dp[i][j]=(dp[i][j]+dp[i+j][j+1])%INF;
            }

        }
    }
    for(i=n-1;i>=0;i--)
    {
        for(j=n;j>=0;j--)
        {
            if(dp[i][j])
            {
                ;
                //printf("i=%d j=%d dp=%d\n",i,j,dp[i][j]);
            }
        }
    }
    printf("%d\n",dp[0][1]);
    return 0;
}
