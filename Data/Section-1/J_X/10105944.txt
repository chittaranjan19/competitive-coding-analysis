#include <iostream>
#include <queue>

using namespace std;

const int INF = 1<<30;

int d[20005];

int bfs(int n, int m)
{
    fill(d, d + 20005, INF);
    queue<int> q;
    d[n] = 0;
    q.push(n);
    while(!q.empty())
    {
        int p = q.front();
        q.pop();
        if(p == m)
            break;
        if(d[2*p] > d[p] + 1)
        {
            d[2*p] = d[p] + 1;
            q.push(2*p);
        }
        if(d[p-1] > d[p] + 1)
        {
            d[p-1] = d[p] + 1;
            q.push(p-1);
        }
    }
    return d[m];
}

int main()
{
    int n, m;
    cin >> n >> m;
    if(n > m)
        cout << n - m << endl;
    else
        cout << bfs(n, m) << endl;
    return 0;
}
