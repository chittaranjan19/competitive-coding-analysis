//why are you stalking me?
#include <iostream>
#include <cstdio>
#include <fstream>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <deque>
#include <sstream>
#include <cmath>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>
#include <functional>
#include <ctime>
#include <climits>
#include <cstdlib>
#include <complex>
//#define NDEBUG 1
#include <cassert>

using namespace std;

#define rep(it, v) for (__typeof((v).begin()) it = (v).begin(); it != (v).end(); it++)
#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()

typedef long long ll;
typedef pair<int, int> pii;
const int MAXN = 2e5 + 10, MAXA = 2e6 + 10;

void setmax (int &a, int b) {
	if (a < b) {
		a = b;
	}
}

int N;
int A[MAXN];
int prv[MAXA];

int main() {
#ifndef ONLINE_JUDGE
	freopen("codeforces484B.in", "r", stdin);
#endif
	scanf("%d", &N);
	for (int i = 1; i <= N; i++) {
		scanf("%d", &A[i]);
	}
	sort(A + 1, A + N + 1);
	N = unique(A + 1, A + N + 1) - (A + 1);
	// printf("N = %d\n", N);
	//k now find the prevs
	fill(prv, prv + A[1] + 1, -1);
	for (int i = 2; i <= N; i++) {
		//find the previous ones. like STRICTLY
		// for (int j = A[i - 1] + 1; j <= A[i]; j++) {
			// printf("prv[%d] = %d\n", j, A[i - 1]);
		// }
		fill(prv + A[i - 1] + 1, prv + A[i] + 1, A[i - 1]);
	}
	// printf("A[N] = %d\n", A[N]);
	fill(prv + A[N] + 1, prv + MAXA, A[N]);
	// printf("%d\n", prv[1999998]);
	int ans = 0;
	for (int i = 1; i <= N; i++) {
		//just iterate through all multiples of A[i]
		int a = A[i];	//go upwards
		for (int j = a; j < MAXA; j += a) {
			// if (j <= A[N]) {
				// printf("prv[%d] %% %d = %d\n", j, a, prv[j] % a);
			// }
			// printf("j = %d\n", j);
			int p = prv[j];
			if (p > a) {
				setmax(ans, p % a);
			}
			// setmax(ans, prv[j] % a);
		}
	}
	printf("%d\n", ans);
}