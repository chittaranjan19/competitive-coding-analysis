#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

vector<vector<LL> > vec(4);

vector<vector<LL> > mat_mul(vector<vector<LL> > arr, vector<vector<LL> > arr2)
{
    vector<vector<LL> > temp((int) arr.size());
    for(int i=0;i<arr.size();i++)
        for(int j=0;j<arr2[0].size();j++)
            temp[i].pb(0);
    for(int i=0;i<arr.size();i++)
        for(int j=0;j<arr2[0].size();j++)
            for(int k=0;k<arr2.size();k++)
                temp[i][j] += arr[i][k] * arr2[k][j], temp[i][j] %= mod;
    return temp;
}

vector<vector<LL> > mat_pow(vector<vector<LL> > base, int power)
{
    if(power == 1) return base;
    if(power & 1) return mat_mul(base, mat_pow(base, power - 1));
    vector<vector<LL> > temp = mat_pow(base, power/2);
    return mat_mul(temp,temp);
}

int main()
{
    int n;
    cin >> n;
    vec[0].pb(0),vec[1].pb(0),vec[2].pb(0),vec[3].pb(1);
    vector<vector<LL> > x(4);
    for(int i=0;i<4;i++)
        for(int j=0;j<4;j++)
        {
            if(j == i) x[i].pb(0);
            else x[i].pb(1);
        }
    vector<vector<LL> > temp = mat_mul(mat_pow(x,n), vec);
    printf("%I64d",temp[3][0]);
    return 0;
}