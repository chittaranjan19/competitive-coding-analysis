#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <algorithm>
#define N 1010
using namespace std;

int main()
{
#ifndef ONLINE_JUDGE
//	freopen("1.txt", "r", stdin);
#endif
	double x, y, z, xx, yy, zz, a[15];
	bool flag = false;
	cin >> x >> y >> z;
	xx = x;
	yy = y;
	zz = z;
	if (x < 1 && y < 1 && z < 1)
	{
		flag = true;
		xx = 1.0/x;
		yy = 1.0/y;
		zz = 1.0/z;
		a[1] = z*log(y)+log(log(xx));
		a[2] = y*log(z)+log(log(xx));
		a[3] = log(z)+log(y)+log(log(xx));
		a[4] = log(y)+log(z)+log(log(xx));
		a[5] = z*log(x)+log(log(yy));
		a[6] = x*log(z)+log(log(yy));
		a[7] = log(log(yy))+log(x)+log(z);
		a[8] = log(log(yy))+log(x)+log(z);
		a[9] = y*log(x)+log(log(zz));
		a[10] = x*log(y)+log(log(zz));;
		a[11] = log(x)+log(y)+log(log(zz));
		a[12] = log(y)+log(x)+log(log(zz));
	}
	else
	{
		if (x < 1)
		{
			a[1] = a[2] = a[3] = a[4] = -1;
		}
		else
		{
			a[1] = z*log(y)+log(log(xx));
			a[2] = y*log(z)+log(log(xx));
			a[3] = log(z)+log(y)+log(log(xx));
			a[4] = log(y)+log(z)+log(log(xx));
		}
		if (y < 1)
		{
			a[5] = a[6] = a[7] = a[8] = -1;
		}
		else
		{
			a[5] = z*log(x)+log(log(yy));
			a[6] = x*log(z)+log(log(yy));
			a[7] = log(log(yy))+log(x)+log(z);
			a[8] = log(log(yy))+log(x)+log(z);
		}
		if (z < 1)
		{
			a[9] = a[10] = a[11] = a[12] = -1;
		}
		else
		{
			a[9] = y*log(x)+log(log(zz));
			a[10] = x*log(y)+log(log(zz));;
			a[11] = log(x)+log(y)+log(log(zz));
			a[12] = log(y)+log(x)+log(log(zz));
		}
	}
	
	int c = 1;
	if (flag)
	{
		for (int i = 2; i <= 12; i++)
			if (a[c] > a[i])	c = i;
	}
	else
	{
		for (int i = 2; i <= 12; i++)
			if (a[c] < a[i])	c = i;
	}
	
	switch(c)
	{
		case 1: cout << "x^y^z"; break;
		case 2: cout << "x^z^y"; break;
		case 3: cout << "(x^y)^z"; break;
		case 4: cout << "(x^z)^y"; break;
		case 5: cout << "y^x^z"; break;
		case 6: cout << "y^z^x"; break;
		case 7: cout << "(y^x)^z"; break;
		case 8: cout << "(y^z)^x"; break;
		case 9: cout << "z^x^y"; break;
		case 10: cout << "z^y^x"; break;
		case 11: cout << "(z^x)^y"; break;
		case 12: cout << "(z^y)^x"; break;
	}
	return 0;
}

