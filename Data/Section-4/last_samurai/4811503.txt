
/* Author:
 * Rohit Laddha */
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <map>
#include <stack>
#include <set>
#include <queue>
#include <limits.h>
#include <math.h>
#include <queue>
#include <list>
using namespace std;
#define PI 3.14159265

int main(){
	int n,m;
	cin >> n >> m;
	int ans[n+1];
	set<int>alive;
	for(int i=1;i<=n;i++){
		alive.insert(i);
		ans[i]=i;
	}

//	memset(ans,0,sizeof(ans));
	vector<int>die;
	die.clear();
	for(int i=0;i<m;i++){
		int l,r,x;
		cin>> l >> r >> x;
		set<int>::iterator it = lower_bound(alive.begin(),alive.end(),l);
		while(it!=alive.end() && *it<=r){
			if(*it==x)
				ans[*it]=0;
			if(*it!=x){
				ans[*it]=x;
				die.push_back(*it);
			}
			it++;
		}
		for(int j=0;j<die.size();j++)
			alive.erase(die[j]);
		die.clear();
	}

	for(int i=1;i<=n;i++)
		cout << ans[i] << ' ';
	cout << endl;
	return 0;
}
