#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;

set< int > A, B;
set< int > :: iterator i1, i2;
int pos[MAXN];
int a[MAXN], b[MAXN];
int cs[MAXN];
int n, m;
int db[MAXN], da[MAXN];
int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("B.inp", "r", stdin);
    freopen("B.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n >> m;
    FORE(i, 1, n){
        cin >> a[i];
        da[a[i]]++;
        pos[a[i]] = i;
        A.insert(a[i]);
    }
    FORE(i, 1, m){
        cin >> b[i];
        db[b[i]]++;
        B.insert(b[i]);
    }
    // B <= A
    if (B.size() > A.size()){
        cout<<"Impossible";
        return 0;
    }
    FORE(i, 1, 1e5) if (db[i] > 0 && !da[i]){
        cout<<"Impossible";
        return 0;
    }
    bool ok = 1;
    FORE(i, 1, 1e5) if (da[i] > 1 && db[i] > 0){
        ok = 0;
        break;
    }
    if (ok) cout<<"Possible"<<endl; else {
        cout<<"Ambiguity"<<endl;
        return 0;
    }
    FORE(i, 1, m){
        cs[i] = pos[b[i]];

    }
    FORE(i, 1, m) cout << cs[i]<<" ";
    return 0;
}

