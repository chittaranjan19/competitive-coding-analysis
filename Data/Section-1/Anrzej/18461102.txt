#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <unordered_set>
#include <ctime>

using namespace std;

#define ll long long
#define ld long double
#define sc second
#define fs first
#define mp make_pair

int gcd(int a, int b) {
	return b ? gcd(b, a % b) : a;
}

int _c(int k, int n){
	int nm = 1, dm = 1;
	while (k){
		nm *= n;
		dm *= k;
		n--, k--;
	}
	return nm / dm;
}

template<class T> T sqr(T x) { return x*x; }
ld pi = 3.1415926535897932384626433832795;

const int N = 2e5 + 10, lg = 20;
ll mod = 1e9 + 7;

vector<int> factor(int n){
	vector<int> res;
	for (int i = 2; i*i <= n; i++){
		if (n%i == 0)
			res.push_back(i);
		while (n%i == 0)
			n /= i;
	}
	if (n != 1) res.push_back(n);
	return res;
}
ll bin_pow(ll _a, ll p){
	if (p == 0) return 1;
	if (p % 2 == 0) {
		ll a = bin_pow(_a, p / 2)%mod;
		return (a*a) % mod;
	}
	else return (_a*bin_pow(_a, p - 1)) % mod;
}

ll gcd(ll a, ll b, ll & x, ll & y) {
	if (a == 0) {
		x = 0; y = 1;
		return b;
	}
	ll x1, y1;
	ll d = gcd(b%a, a, x1, y1);
	x = y1 - (b / a) * x1;
	y = x1;
	return d;
}

string ans[N * 5];
ll _ans[N * 5];

int main()
{
	ios_base::sync_with_stdio(false);
	priority_queue<ll> q;
	int n;
	cin >> n;
	int cur = 0;
	while (n--){
		string s;
		cin >> s;
		if (s[0] == 'i')
		{
			ll i;
			cin >> i;
			ans[cur] = "insert";
			_ans[cur++] = i;
			q.push(i);
		}
		if (s[0] == 'r'){
			if (!q.empty())
				q.pop();
			else{
				ans[cur] = "insert";
				_ans[cur++] = 1;
			}
			ans[cur] = "removeMin";
			_ans[cur++] = 2e18;
		}
		if (s[0] == 'g'){
			ll i;
			cin >> i;
			while (!q.empty() && q.top() < i){
				ans[cur] = "removeMin";
				_ans[cur++] = 2e18;
				q.pop();
			}
			if (q.empty() || q.top() > i)
			{
				ans[cur] = "insert";
				_ans[cur++] = i;
			}
			ans[cur] = "getMin";
			_ans[cur++] = i;
		}
	}
	cout << cur << endl;
	for (int i = 0; i < cur; i++){
		cout << ans[i];
		if (_ans[i] != 2e18)
			cout << ' ' << _ans[i];
		cout << endl;
	}
	return 0;
}