using namespace std;
#include<bits/stdc++.h>
#define FOR(i, a, b) for (int i = a; i < b; i++)
#define FORE(i, a, b) for (int i = a; i <= b; i++)
#define FORD(i, a, b) for (int i = a; i >= b; i--)
const int MAXN = 2*1e6;
const int INF  = 1e9 + 7;

struct data {
    int value, cs;
};

int n;

data a[MAXN];
  int res[MAXN], m = 0;
bool operator< (data a, data b)
{
    if (a.value < b.value) return 1;
    else if (a.value > b.value) return 0;
    else return (a.cs > b.cs);
}

int main()
{
    ios::sync_with_stdio(false);
    //freopen("349B.inp", "r", stdin);
    //freopen("349B.out", "w", stdout);

    cin >> n;
    FORE(i, 1, 9) {
        cin >> a[i].value;
        a[i].cs = i;
    }

    //cout<<(a[5] < a[4])<<"wtf"<<endl;
    sort(a + 1, a + 9 + 1);
    //FORE(i, 1, 9) cout<<a[i].cs<<" ";cout<<endl;
    if (!n) {
        cout<<-1;
        return 0;
    }
    while (n) {
           // cout<<n<<endl;
        int i = 1;
        while (i < 9 && a[i].value > n) i++;
        if (a[i].value > n && m == 0) {
            cout<<-1;
            //cout<<"wtf"<<endl;
            return 0;
        }
        //cout<<i<<endl;
        if (a[i].value > n && m > 0) break;
        //cout<<i<<endl;
        res[++m] = a[i].cs;
        n -= a[i].value;
    }
    FORE(i, 1, m) cout<<res[i];
    //*/
    return 0;
}
