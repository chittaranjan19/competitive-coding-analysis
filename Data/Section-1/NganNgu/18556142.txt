#include <iostream> 
#include <cstdio>

using namespace std;

#define For(i , a , b) for (int i = a , _b = b ; i <= _b ; ++i)
#define Ford(i , a  ,b) for (int i = a , _b = b : i >= _b ; --i)
#define Rep(i , n) for (int i = 0 , _n = n ; i < _n ; ++i)
#define sz(A) ((int)A.size())
#define LL(x) (x << 1)
#define RR(x) ((x << 1) | 1)

typedef pair<int , int> pt;

const int maxn = 1100;
int n , m , k;
string s , t;

int maxLen[maxn][maxn];
int dp[maxn][maxn][11][2];

void maximize(int &a , int b) {
	if (a < b) a = b;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	
	//freopen("input.inp" , "r" , stdin);

	cin >> n >> m >> k >> s >> t;
	s = ' ' + s;
	t = ' ' + t;
	For(i , 1 , n) For(j , 1 , m) {
		For(take , 1 , k) {
			if (s[i] == t[j]) { // take i and j
				maximize(dp[i][j][take][1] , dp[i - 1][j - 1][take][1] + 1);
				maximize(dp[i][j][take][1] , dp[i - 1][j - 1][take - 1][1] + 1);
				maximize(dp[i][j][take][1] , dp[i - 1][j - 1][take - 1][0] + 1);
			}
			For(l , 0 , 1) {
				maximize(dp[i][j][take][0] , dp[i - 1][j][take][l]);
				maximize(dp[i][j][take][0] , dp[i][j - 1][take][l]);
			}
		}
	}
	cout << max(dp[n][m][k][0] , dp[n][m][k][1]) << endl;

	return 0;

}			