#include "bits/stdc++.h"
#define MAXN 400009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
int centr=-1,n;
int sub[MAXN];
vector<int>adj[MAXN];
void dfs(int nd,int pr){
	if(~centr)
		return;
	sub[nd]=1;int mx=0;
	for(int i=0;i<int(adj[nd].size());i++){
		int to=adj[nd][i];
		if(to==pr)
			continue;
		dfs(to,nd);	
		sub[nd]+=sub[to];	
		umax(mx,sub[to]);
	}
	if(mx<=n/2 and (n-sub[nd])<=n/2){
		centr=nd;
		return;
	}
}
int par[MAXN];
void dfs1(int nd,int pr){
	sub[nd]=1;
	if(~pr)
		par[nd]=(!par[pr]?nd:par[pr]);
	for(int i=0;i<int(adj[nd].size());i++){
		int to=adj[nd][i];
		if(to==pr)
			continue;
		dfs1(to,nd);
		sub[nd]+=sub[to];
	}
}
bool cmp(int x,int y){
	return (sub[x]>sub[y]);
}
int main(){
	#ifndef ONLINE_JUDGE
    freopen("file.in", "r", stdin);
	#endif	
	scanf("%d",&n);
	for(int i=1;i<n;i++){
		int u,v;
		scanf("%d%d",&u,&v);
		adj[u].pb(v);
		adj[v].pb(u);
	}
	dfs(1,-1);
	dfs1(centr,-1);
	vector<int>v;
	for(int i=0;i<int(adj[centr].size());i++)
		v.pb(adj[centr][i]);
	sort(all(v),cmp);	
	for(int i=1;i<=n;i++){
		if(centr==i){
			printf("1 ");
			continue;
		}
		int mx=0;
		if(par[i]==v[0]){
			if(v.size()>1)
				mx=max(sub[v[0]]-sub[i],sub[v[1]]);
			else
				mx=sub[v[0]]-sub[i];
		}
		else
			mx=sub[v[0]];
		if(n-sub[i]-mx<=n/2)	
			printf("1 ");
		else
			printf("0 ");
	}
	printf("\n");
	return 0;
}
