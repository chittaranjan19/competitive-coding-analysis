#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <cmath>
#include <queue>

using namespace std;

typedef long long ll;
typedef pair<int, int> P;

const int maxn = 2000 + 5;
const int maxm = 2e6 + 5;

int a[maxn], b[maxn], c[maxn];
//vector<P> vec;
P p[maxm];

int main()
{
    int n;
    while(~scanf("%d", &n))
    {
        ll ans = 0;
//        memset(vis, 0, sizeof(vis));
//        vec.clear();
        int cnt = 0, tot = 0;
        for(int i = 1; i <= n; ++i)
        {
            scanf("%d", c + i);
//            c[i] = i;
            a[c[i]] = i;
        }
        for(int i = 1; i <= n; ++i)
        {
            int x;
            scanf("%d", &x);
//            x = i - 1;
//            if(x < 1)
//            {
//                x = n;
//            }
            b[x] = i;
        }
        for(int i = 1; i <= n; ++i)
        {
            ans += abs(a[i] - b[i]);
            cnt += a[i] == b[i];
        }
        while(cnt < n)
        {
            for(int i = 1; i <= n; ++i)
            {
                if(a[i] == b[i]) continue;
                int j = c[b[i]];
                int d1 = a[i] - b[i], d2 = b[j] - a[j];
                if(d1 * d2 > 0 && abs(d1) <= abs(d2))
                {
                    cnt += 1 + (d1 == d2);
                    p[tot++] = P(a[i], a[j]);
                    swap(c[a[i]], c[b[i]]);
                    swap(a[i], a[j]);
//                    vec.push_back(P(a[i], a[j]));
                    break;
                }
            }
            if(n == 2000 && cnt >= 1500) printf("%d\n", cnt);
        }
        printf("%I64d\n%d\n", ans >> 1, tot);
        for(int i = 0; i < tot; ++i)
        {
            printf("%d %d\n", p[i].first, p[i].second);
        }
    }
    return 0;
}
