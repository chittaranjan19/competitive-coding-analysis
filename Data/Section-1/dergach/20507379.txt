#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <math.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <sstream>
#include <fstream>
#include <queue>
#include <algorithm>
#include <iostream>
#include <stack>
#include <bitset>
using namespace std;

typedef long long ll;
typedef long long ull;
#define pi acos(-1.0)
#define eps 1e-7
#define start 131072
#define LINF 1000000000000000000LL
#define pi acos(-1.0)

char a[100005];
int cnt[300];

int main()
{
	gets(a);
	int len = strlen(a);
	if(len % 2 != 0)
	{
		puts("-1");
		return 0;
	}
	for(int i = 0; a[i]; i++)
		cnt[a[i]]++;
	int res = 0;
	if(abs(cnt['U'] - cnt['D']) < abs(cnt['L'] - cnt['R']))
	{
		res += abs(cnt['U'] - cnt['D']);
		int minv = min(cnt['U'], cnt['D']);
		if(cnt['L'] < cnt['R'])
			cnt['L'] += abs(cnt['U'] - cnt['D']);
		else
			cnt['R'] += abs(cnt['U'] - cnt['D']);
		cnt['U'] = minv;
		cnt['D'] = minv;
	}
	else
	{
		res += abs(cnt['L'] - cnt['R']);
		int minv = min(cnt['L'], cnt['R']);
		if(cnt['U'] < cnt['D'])
			cnt['U'] += abs(cnt['L'] - cnt['R']);
		else
			cnt['D'] += abs(cnt['L'] - cnt['R']);
		cnt['L'] = minv;
		cnt['R'] = minv;
	}
	res += (abs(cnt['L'] - cnt['R']) + abs(cnt['U'] - cnt['D'])) / 2;
	printf("%d\n", res);
	return 0;
}