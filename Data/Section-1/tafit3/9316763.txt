import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashSet;
import java.util.Set;

public class ProblemC {
    BufferedReader rd;

    private ProblemC() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int[] a = intarr();
        int n = a[0];
        int m = a[1];
        int[] w = intarr();
        int[] b = intarr();
        int[] order = new int[n];
        Set<Integer> p = new HashSet<>();
        int k=0;
        for(int i=0;i<m;i++) {
            if(p.add(b[i])) {
                order[k] = b[i];
                k++;
            }
        }
        for(int i=1;i<=n;i++) {
            if(p.add(i)) {
                order[k] = i;
                k++;
            }
        }
        int weight = 0;
        for(int i=0;i<m;i++) {
            int j = 0;
            while(order[j] != b[i]) {
                weight += w[order[j]-1];
                j++;
            }
            for(int c=0;c<j;c++) {
                order[j-c] = order[j-c-1];
            }
            order[0] = b[i];
        }
        out(weight);
    }

    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = split(s);
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }

    private String[] split(String s) {
        int n = s.length();
        int sp = 0;
        for(int i=0;i<n;i++) {
            if(s.charAt(i)==' ') {
                sp++;
            }
        }
        String[] res = new String[sp+1];
        int last = 0;
        int x = 0;
        for(int i=0;i<n;i++) {
            char c = s.charAt(i);
            if(c == ' ') {
                res[x++] = s.substring(last,i);
                last = i+1;
            }
        }
        res[x] = s.substring(last,n);
        return res;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemC();
    }
}
