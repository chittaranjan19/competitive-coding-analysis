#include<bits/stdc++.h>
#define maxn 200005
#define inf 99999999
using namespace std;

vector<int> gr[maxn];
int dis[maxn];

void bfs(int v, int n)
{
	queue<int> q;
	bool vis[maxn];
	memset(vis, 0, sizeof vis);
	//set dis inf
	for ( int i = 0 ; i <= n ; i++ )
	{
		dis[i] = inf;
	}
	dis[v] = 0;
	q.push(v);
	vis[v] = 1;
	while ( !q.empty() )
	{
		int p = q.front();
		q.pop();
		for ( vector<int>::iterator it = gr[p].begin() ; it != gr[p].end() ; it++ )
		{
			if ( !vis[*it] && dis[*it] > dis[p] + 1 )
			{
				dis[*it] = dis[p] + 1;
				vis[*it] = 1;
				q.push(*it);
			}
		}
	}
}

int main()
{
	int n, i, a;
	scanf("%d", &n);
	for ( i = 1 ; i <= n ; i++ )
	{
		scanf("%d", &a);
		if ( a > i )
		{
			gr[i].push_back(a);
			gr[a].push_back(i);
		}
	}
	for ( i = 1 ; i <= n - 1 ; i++ )
	{
		gr[i].push_back(i + 1);
		gr[i + 1].push_back(i);
	}
	bfs(1, n);
	for ( i = 1 ; i <= n ; i++ )
	{
		printf("%d ", dis[i]);
	}
	printf("\n");
	return 0;
}