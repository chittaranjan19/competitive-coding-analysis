#include <cstdio>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <cmath>
#include <climits>
#ifdef DEBUG
	#include <ctime>
#endif
using namespace std;

// template

// abbreviations
#define vi vector<int>
#define vl vector<ll>
#define vb vector<bool>
#define vs vector<string>
#define ii pair<int, int>
#define a first
#define b second
#define vii vector<ii>
#define mii map<ii>
#define vvi vector<vi>
#define vvl vector<vl>
#define que queue
#define pque priority_queue
#define stk stack
#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define pu push
#define po pop
#define mp make_pair
#define sz(var) ((int) var.size())
#define rep(it, n) for(int it = 0; it < n; ++it)
#define dep(it, n) for(int it = n - 1; it >= 0; --it)
#define rep1(it, n) for(int it = 1; it <= n; ++it)
#define dep1(it, n) for(int it = n; it > 0; --it)
#define loop(it, from, to) for(int it = (from); it <= (to); ++it)
#define iter(it, cont) for(__typeof((cont).begin()) it = (cont).begin(); it != (cont).end(); ++it)
#define riter(it, cont) for(__typeof((cont).rbegin()) it = (cont).rbegin(); it != (cont).rend(); ++it)
#define all(cont) (cont).begin(), (cont).end()
#define rng(cont, n) cont, cont + n
#define memclr(var) memset(var, 0, sizeof(var))

typedef unsigned long long ull;
typedef long long ll;

const int INF = INT_MAX;
const int NINF = INT_MIN;
const ll INF_LL = LLONG_MAX;
const ll NINF_LL = LLONG_MIN;
const double PI = acos(-1.0);
const int MOD = 1e9 + 7;

#ifdef DEBUG
	#define debug(fmt, args...) printf("Line %d, in %s\t: " fmt, __LINE__, __FUNCTION__, ##args)
	#define rep_rt() printf("[Run time: %.3fs]\n", ((double) clock()) / CLOCKS_PER_SEC)
#else
	#define debug(...)
#endif

// end of template

#define MAX_N 200

int amb[MAX_N + 1][MAX_N + 1], amt[MAX_N + 1][MAX_N + 1];

int main() {
#ifdef DEBUG
	freopen("602C.in", "r", stdin);
#endif
	int NOT_POSS = INF >> 2;
    
    int n, m;
    scanf("%d %d", &n, &m);

	rep1(i, n) {
		rep1(j, n) {
			amb[i][j] = 1;
			amt[i][j] = NOT_POSS;
		}
	}

	rep(it, m) {
		int u, v;
		scanf("%d %d", &u, &v);
		amt[u][v] = amt[v][u] = 1;
		amb[u][v] = amb[v][u] = NOT_POSS; // no road because of train
	}

	rep1(k, n) {
		rep1(i, n) {
			rep1(j, n) {
				amb[i][j] = min(amb[i][j], amb[i][k] + amb[k][j]);
				amt[i][j] = min(amt[i][j], amt[i][k] + amt[k][j]);
			}
		}
	}
	if ((amb[1][n] == NOT_POSS) or (amt[1][n] == NOT_POSS)) {
		puts("-1");
		return 0;
	}
	printf("%d\n", max(amb[1][n], amt[1][n]));

#ifdef DEBUG
    rep_rt();
#endif
    return 0;
}