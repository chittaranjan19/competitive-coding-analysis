// Milking Cows

#include <algorithm>
#include <bits/stdc++.h>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

typedef vector<int,int> VII;
typedef set<int,int> SII;
typedef map<int,int> MII;
typedef pair<int,int> P;

int main()
{
	long long int n,left=0,right=0,Lptr,Rptr,ans=0,i;
	cin>>n;
	long long int R[n],L[n],flag[n],arr[n];
	R[0]=0;
	L[n-1]=0;
	for(i=0;i<n;i++)
	{
		cin>>arr[i];
		if(arr[i]==0)
		{
			left++;
			if(i!=0)
			{
				L[n-1-i]=L[n-i]+1;
				R[i]=R[i-1];
			}
		}
		else 
		{
			right++;
			if(i!=0) 
			{
				R[i]=R[i-1]+1;
				L[n-1-i]=L[n-i];
			}
		}
		flag[i]=0;
	}
	Lptr=n-1;
	Rptr=0;
	while(1)
	{
		if(left>right)
		{
			while(arr[Lptr]!=0 || flag[Lptr]!=0) Lptr--;
			flag[Lptr]=1;
			ans+=R[Lptr];
			for(i=0;i<Lptr;i++) L[i]-=(L[i]>0)?1:0;
			left--;
		}
		else
		{
			if(right==0) break;
			while(arr[Rptr]!=1 || flag[Rptr]!=0) Rptr++;
			flag[Rptr]=1;
			ans+=L[Rptr];
			for(i=Rptr;i<n;i++) R[i]-=(R[i]>0)?1:0;
			right--;
		}
	}
	cout<<ans<<endl;
	return 0;
}