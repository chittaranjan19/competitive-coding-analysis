#include <iostream>
#include<map>
#include<string>
#include<vector>
#include<algorithm>
using namespace std;

int main()
{
    int n,i,m,s,d,a,j=1,it=0,LAST;
    cin >>n>>m>>s>>d;
    vector<int> v2(n),RUN(n+1),JUMP(n);
    for (i=0;i<n;i++){
        cin>>v2[i];
    }
    sort(begin(v2),end(v2));
    for (i=0;i<n;i++){
        if (i==0){
            a=v2[i];
            if (n!=1){
                while (v2[j]-v2[0]+2<=d){
                    j++;
                }
            }
            if (j==1){
                if (n>1){
                    if (a>=s+1&&v2[i]+1<=v2[i+1]){
                        RUN[it]=v2[i]-1;
                        JUMP[it]=(v2[i]+1)-(v2[i]-1);
                        LAST=v2[i]+1;
                        if (m-(v2[i]+1)==0) {
                                cout<<"RUN"<<" "<<RUN[it]<<endl;
                                cout<<"JUMP"<<" "<<JUMP[it]<<endl;
                                RUN[i+1]=m-(v2[i]+1);
                                cout<<"RUN"<<" "<<RUN[it+1]<<endl;
                                return 0;
                        }
                    }
                    else{
                        cout<<"IMPOSSIBLE";
                        return 0;
                    }
                }
                else
                if (n==1){
                    if (a>=s+1&&v2[i]+1<=m){
                        cout<<"RUN"<<" "<<v2[i]-1<<endl;
                        cout<<"JUMP"<<" "<<(v2[i]+1)-(v2[i]-1)<<endl;
                        if (m-(v2[i]+1)!=0) cout<<"RUN"<<" "<<m-(v2[i]+1)<<endl;
                        return 0;
                    }
                    else{
                        cout<<"IMPOSSIBLE";
                        return 0;
                    }
                }
            }
            else
            if (j!=1){
                if (a>=s+1&&v2[j-1]+1<=m){
                    RUN[it]=v2[i]-1;
                    JUMP[it]=(v2[j-1]+1)-(v2[i]-1);
                    LAST=v2[j-1]+1;
                    if (v2[j-1]==v2[n-1]) {
                        cout<<"RUN"<<" "<<RUN[it]<<endl;
                        cout<<"JUMP"<<" "<<JUMP[it]<<endl;
                        RUN[it+1]=m-(v2[j-1]+1);
                        cout<<"RUN"<<" "<<RUN[it+1]<<endl;
                        return 0;
                    }

                }
                else{
                    cout<<"IMPOSSIBLE";
                    return 0;
                }
            }
            it++;
        }
        else
        if (i!=0&&i!=n){
           if (v2[i]+1>LAST){
               j=i+1;
                while (v2[j]-v2[i]+2<=d&&v2[j]-v2[i]>0){
                    j++;
                }
                a=v2[i]-(LAST-1);
                if (j==n){
                    if (a>=s+2&&v2[j-1]+1<=m){
                        RUN[it]=a-2;
                        JUMP[it]=(v2[j-1]+1)-(v2[i]-1);
                        LAST=v2[j-1]+1;
                        if (m-(v2[j-1]+1)!=0) RUN[it+1]=m-(v2[j-1]+1);
                    }
                    else{
                        cout<<"IMPOSSIBLE";
                        return 0;
                    }
                    it++;
                }
                else 
                if (j!=n){
                    if (a>=s+2&&v2[j-1]+1<v2[j]){ 
                        RUN[it]=a-2;
                        JUMP[it]=(v2[j-1]+1)-(v2[i]-1);
                        LAST=v2[j-1]+1;
                        it++;
                    }
                    else{
                        cout<<"IMPOSSIBLE";
                        return 0;
                    }
                }
           }

        }
    }

    for (i=0;i<it+1;i++){
        if (RUN[i]!=0) cout<<"RUN"<<" "<<RUN[i]<<endl;
        if (JUMP[i]<d+1&&JUMP[i]>1) cout<<"JUMP"<<" "<<JUMP[i]<<endl;
    }
    return 0;
}