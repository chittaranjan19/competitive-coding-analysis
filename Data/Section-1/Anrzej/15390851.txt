#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <ctime>

using namespace std;

#define ll long long
#define sc second
#define fs first
#define mp make_pair

const int N = 1e5 + 10;

int x[N], y[N], x_0, y_0, n;
template<class T> T sqr(T x) { return x*x; }

double dist(int ax, int ay, int bx, int by){
	return sqrt(sqr(ax - bx) + sqr(by - ay));
}

double dist_to_seg(int ax, int ay, int bx, int by)
{
	double a = dist(ax, ay, x_0, y_0);
	double b = dist(bx, by, x_0, y_0);
	double c = dist(ax, ay, bx, by);
	if (c < 1e-9) return min(a, b);
	double X = (sqr(a) - sqr(b) + sqr(c)) / (2 * c);
	if (X < 0 || X > c) return min(a, b);
	double h = sqrt(sqr(a) - sqr(X));
	return min(h, min(a, b));
}

int main()
{
	cin >> n >> x_0 >> y_0;
	for (int i = 0; i < n; i++)
		cin >> x[i] >> y[i];
	double mn = 1e20, mx = -mn;
	for (int i = 0; i < n; i++)
	{
		int next = (i + 1) % n;
		mx = max(mx, dist(x[i], y[i], x_0, y_0));
		mn = min(mn, dist_to_seg(x[i], y[i], x[next], y[next]));
	}

	mx = acos(-1)*mx*mx;
	mn = acos(-1)*mn*mn;
	printf("%.9f", mx - mn);
	//cout << mx - mn;
	return 0;
}