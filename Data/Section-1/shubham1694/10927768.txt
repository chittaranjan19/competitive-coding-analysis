#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007
#define inf 1000000000
#define maxn 1000000

#define ll long long
#define pii pair<int, int>
#define pb push_back
#define sin scanint
#define bitcount(x) __builtin_popcount(x)
#define fill(s, p) memset(s, p, sizeof(s));

#ifdef ONLINE_JUDGE
#define gc getchar_unlocked
#endif

#ifndef ONLINE_JUDGE
#define gc getchar
//freopen("input.txt", "r", stdin)
//freopen("output.txt", "w", stdout)
#endif

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

int col[maxn];
map<int, int> m1[maxn];
map<int, int> :: iterator it;

int main()
{
    //freopen("input.txt", "r", stdin);
    int n, m, i, j, e1, e2, cmax, cn, node;
    sin(n);
    sin(m);
    for(i=0; i<n; i++){
        sin(col[i]);
    }
    for(i=0; i<m; i++){
        sin(e1);
        sin(e2);
        e1--, e2--;
        if(col[e1]==col[e2])
            continue;
        if(m1[col[e1]].find(col[e2])==m1[col[e1]].end()){
            m1[col[e1]][col[e2]] = 1;
        }
        if(m1[col[e2]].find(col[e1])==m1[col[e2]].end()){
            m1[col[e2]][col[e1]] = 1;
        }
    }
    cmax = node = -1;
    for(i=0; i<n; i++){
        //cout << col[i] << " " << m1[col[i]].size() << " " << cmax << endl;
        cn = m1[col[i]].size();
        if(cn > cmax){
            //cout << "ENTE\n";
            cmax = m1[col[i]].size();
            node = col[i];
        }
        else if(cn==cmax && col[i]<node){
            node = col[i];
        }
    }
    //cout << "b\n";
    /*for(i=0; i<n; i++){
        cout << col[i] << endl;
        for(it=m1[col[i]].begin(); it!=m1[col[i]].end(); ++it)
            cout << it->first << " ";
        cout << endl;
    }*/
    printf("%d\n", node);
    return 0;
}