#include <bits/stdc++.h>

using namespace std;

typedef long long int LL;

LL x,k,A[200001],dp[200001][2];
set<LL> S;

LL recurse(LL pos, LL rem)
{
	if(pos>=x || rem==0) return 0;
	if(dp[pos][rem-1]==-1)
	{
		if(A[pos]+recurse(pos+k,rem-1)>=recurse(pos+1,rem))
		{
			S.insert(pos);
			dp[pos][rem-1]=A[pos]+recurse(pos+k,rem-1);
		}
		else
		{
			dp[pos][rem-1]=recurse(pos+1,rem);
		}
	}
	return dp[pos][rem-1];
}

int main()
{
    LL n,i,s=0,ans;
    cin>>n>>k;
    LL arr[n];
    for(i=0;i<n;i++)
    {
    	cin>>arr[i];
    	if(i>=k-1)
    	{
    		s+=arr[i];
    		A[i-k+1]=s;
    		s-=arr[i-k+1];
    	}
    	else s+=arr[i];
    	dp[i][0]=dp[i][1]=-1;
    }
    x=n-k+1;
    ans=recurse(0,2);
    set<LL>::iterator it;
    x=-1;
    for(it=S.begin();it!=S.end();it++)
    {
    	if(x==-1) {cout<<*it+1<<" "; x=*it;}
    	else
    	{
    		if(x+k<=*it) {cout<<*it+1<<endl; break;}
    		else continue;
    	}
    }
    return 0;
}