#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int inf = 50000000;
const int maxn = 100010;

typedef vector< vector<ll> > matrix;
int m;
ll mod;

matrix m_mul(matrix a, matrix b)
{
	int i, j, k;
	matrix c(m, vector<ll>(m));
	for(i=0; i<m; i++){
		for(j=0; j<m; j++){
			c[i][j] = 0;
			for(k=0; k<m; k++){
				c[i][j] = (c[i][j] + (a[i][k]*b[k][j])%mod)%mod;
			}
		}
	}
	return c;
}

matrix m_pow(matrix a, ll x)
{
	matrix ret1(m, vector<ll>(m));
	matrix ret2(m, vector<ll>(m));
	int i, j;
	for(i=0; i<m; i++){
		for(j=0; j<m; j++){
			ret2[i][j] = a[i][j];
			ret1[i][j] = 0;
		}
		ret1[i][i] = 1;
	}
	while(x){
		if(x&1)
			ret1 = m_mul(ret1, ret2);
		ret2 = m_mul(ret2, ret2);
		x/=2;
	}
	return ret1;
}

ll modpow(ll a, ll b)
{
	ll x=1, y=a;
	while(b){
		if(b&1)
			x = (x*y)%mod;
		y = (y*y)%mod;
		b/=2;
	}
	return x;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	m = 2;
	matrix a(m, vector<ll>(m));
	a[0][0] = a[0][1] = a[1][0] = 1;
	a[1][1] = 0;
	ll n, k, l, i, j, ans = 1, temp1, temp2, m2;
	matrix ret;
	scanf("%lld%lld%lld%lld", &n, &k, &l, &mod);
	m2 = modpow(2, n);
	ret = m_pow(a, n+1);
	temp1 = (m2 - ret[0][0] + mod)%mod;
	temp2 = ret[0][0];
	j = 0;
	for(i=0; i<l; i++){
		if(k&(1ll<<i)){
			j++;
			ans = (ans*temp1)%mod;
			k-=(1ll<<i);
		}
		else
			ans = (ans*temp2)%mod;
	}
	if(k!=0)
		printf("0\n");
	else
		printf("%lld\n", ans);
	return 0;
}
