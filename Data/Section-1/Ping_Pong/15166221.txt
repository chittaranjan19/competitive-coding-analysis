#include <iostream>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const long long MAX_N = 100000;
map<int, int> m;
vector<int> ans;

int gcd(int a, int b)
{
    int c;
    if (a > b)
    {
        c = a;
        a = b;
        b = c;
    }
    while (a > 0)
    {
        c = a;
        a = b % a;
        b = c;
    }
    return b;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n, p;
    cin >> n;
    for (int i = 0; i < n * n; i++)
    {
        cin >> p;
        if (m.find(p) != m.end())
            m[p]++;
        else
            m[p] = 1;
    }
    for (int i = 0; i < n; i++)
    {
        /*for (map<int, int>::iterator it = m.begin(); it != m.end(); it++)
            cout << it->first << " " << it->second << endl;*/
        p = (--m.end())->first;
        if (m[p] == 1)
            m.erase(p);
        else
            m[p]--;
        for (int j = 0; j < ans.size(); j++)
            if (m[gcd(p, ans[j])] == 2)
                m.erase(gcd(p, ans[j]));
            else
                m[gcd(p, ans[j])] -= 2;
        ans.push_back(p);
    }
    for (int i = 0; i < n; i++)
        cout << ans[i] << " ";
    return 0;
}
