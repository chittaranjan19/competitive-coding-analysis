
def gcd(a, b):
    if a < b:
        return gcd(b, a)
    if a % b == 0:
        return b
    return gcd(b, a % b)

def lcm(a, b):
    return a * b / gcd(a, b)

n, m, KK = map(int, raw_input().split())
l = lcm(n, m)
# print l
for i in range(KK):
    x, y = map(int, raw_input().split())
    allx = [x + 2*k + 2*i*n for i in range(l+1) for k in [0, n - x] if x + 2*k + 2*i*n <= l]
    ally = [y + 2*k + 2*i*m for i in range(l+1) for k in [0, m - y] if y + 2*k + 2*i*m <= l]
    xy = set(allx) & set(ally)
    if xy != set():
        print min(xy)
    else:
        print -1
    

