#include <iostream>
#include <list>

#define iinf (1<<30);

using namespace std;

int n,m;
char s[200001],t[200001];

int kmp[200001];
int fi[26];
int la[200001][26];
int laa[200001][26];

list<int> sol;

int main()
{
    cin >> n >> m;

    cin >> s;
    cin >> t;
    for(int i=0; i<26; i++) fi[i] = -iinf;
    for(int i=0; i<n; i++) {
        for(int j=0; j<26; j++) {
            laa[i][j] = fi[j];
        }
        fi[s[i]-'a'] = i;
    }

    for(int i=0; i<26; i++) fi[i] = -iinf;
    for(int i=0; i<m; i++) {
        for(int j=0; j<26; j++) {
            la[i][j] = fi[j];
        }
        fi[t[i]-'a'] = i;
    }

    for(int i=0; i<26; i++) fi[i] = iinf;

    for(int i=m-1; i>=0; i--) {
        fi[t[i]-'a'] = i;
    }

    kmp[0] = -1;

    int x = 0;
    for(int i=1; i<m; i++) {
        kmp[i] = x;
        while((x >=0) && (
                (((i-la[i][t[i]-'a']) <= x) && (t[x-(i-la[i][t[i]-'a'])] != t[x])) ||
                ((la[x][t[x]-'a'] >= 0) && (t[i-(x-la[x][t[x]-'a'])] != t[i])) ||
                (((i-la[i][t[x]-'a']) <= x) && (t[x-(i-la[i][t[x]-'a'])] != t[i])) ||
                ((la[x][t[i]-'a'] >= 0) && (t[i-(x-la[x][t[i]-'a'])] != t[x]))
             )) {
            x = kmp[x];
        }

        x++;
    }
    kmp[m] = x;

    for(int i=0; i<=m; i++) {
        cerr << t[i] << " " << kmp[i] << endl;
    }

    x = 0;
    for(int i=0; i<=n; i++) {
        if(x==m) {
            sol.push_back(i-m);
            x=kmp[x];
        }
        if(i==n) break;
        while((x >=0) && (
                (((i-laa[i][s[i]-'a']) <= x) && (t[x-(i-laa[i][s[i]-'a'])] != t[x])) ||
                ((la[x][t[x]-'a'] >= 0) && (s[i-(x-la[x][t[x]-'a'])] != s[i])) ||
                (((i-laa[i][t[x]-'a']) <= x) && (t[x-(i-laa[i][t[x]-'a'])] != s[i])) ||
                ((la[x][s[i]-'a'] >= 0) && (s[i-(x-la[x][s[i]-'a'])] != t[x]))
             )) {

            x = kmp[x];
        }

        x++;
    }

    cout << sol.size() << endl;
    for(int i:sol) {
        cout << i+1 << " ";
    }
    if(sol.size()) cout << endl;

    return 0;
}
