#include <bits/stdc++.h>

using namespace std;

int gcd(int a, int b){
    if (b == 0) return a;
    else return gcd(b, a%b);
}

int main(){
    int n;
    cin >> n;
    vector <int> a(n);
    for(int i = 0; i < n; i++) cin >> a[i];
    map <int, int> divisors;
    map <int, int> next_divisors;
    map <int, long long> result;
    divisors[a[0]] = 1;
    result[a[0]] = 1;
    for(int i = 1; i < n; i++){
        next_divisors.clear();
        for (auto &p : divisors)
            next_divisors[gcd(a[i], p.first)] += p.second;
        next_divisors[a[i]] += 1;

        swap(next_divisors, divisors);
        for (auto &p : divisors)
            result[p.first] += p.second;
    }

    int q; cin >> q;
    while (q--){
        int x;
        cin >> x;
        cout << result[x] << endl;
    }

    return 0;
}
        
        
         
