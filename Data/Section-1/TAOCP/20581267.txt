#include <iostream>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <cstring>
#include <string>
#include <cmath>
#include <vector>
#include <climits>
using namespace std;
#define pb push_back
#define ALL(x) x.begin(),x.end()
#define PII pair<int,int>
#define MP(x,y) make_pair((x),(y))
#define ll long long
#define ull unsigned ll
#define Max(a,b) a=max(a,b)
#define Min(a,b) a=min(a,b)
#define fuck(x) cout<<#x<<" "<<x<<endl
const int N = 110010;
struct node{
    ll ch[2], v;
    node(){
        v = 0;
        memset(ch,-1,sizeof(ch));
    }
}lt[N*22];
struct QQ{
    ll ek, root;
    ll newnode(){
        lt[ek] = node();
        return ek++;
    }
    void insert(ll x, ll v){
        ll crt = root;
        for(ll i = 0; i < 18; i++,  x /= 10){
            ll val = (x%10)&1;
            if(lt[crt].ch[val] == -1) lt[crt].ch[val] = newnode();
            crt = lt[crt].ch[val];
        }
        lt[crt].v += v;
    }
    ll query(ll x){
        ll crt = root;
        for(ll i = 0; i < 18; i++, x/=10){
            ll val = (x%10)&1;
            if(lt[crt].ch[val] == -1) return 0;
            crt = lt[crt].ch[val];
        }
        return lt[crt].v;
    }
}qq;
int main(){
    memset(lt,0,sizeof(lt));
    //freopen("/home/rainto96/in.txt","r",stdin);
    qq.ek = 0;
    qq.root = qq.newnode();
    ll T;
    cin>>T;
    char op[2];
    while(T--){
        ll x;
        cin>>op>>x;
        if(op[0] == '+') qq.insert(x, 1);
        else if(op[0] == '-') qq.insert(x, -1);
        else{
            printf("%I64d\n", qq.query(x));
        }
    }
    return 0;
}
