// in the name of allah

#include<bits\stdc++.h>
#define LL long long
#define LB long double
#define ALL(X) X.begin(),X.end()
#define DD(X) cout<<#X<<' '<<X<<endl;
using namespace std;

const int MOD=1000*1000*1000+7;
const int MAXN=1000*100+100+100;
const int MAXM=200+50;
const int INF=1e9+9;

int dx[4]={0,0,-1,+1};
int dy[4]={+1,-1,0,0};

vector <int> ver[MAXN];
bool vis[MAXN];
long long vi[MAXN]={},xi[MAXN]={};
long long ans=0;
long long sum=0;

long long __lcm(long long a,long long b){
    if(!(a && b))cout<<sum,exit(0);
    return a/__gcd(a,b)*b;
}

void dfs(int v=0){
    vector<int>H;
    vis[v]=true;
    long long s=0,lcm=1;
    for(auto u : ver[v]){
        if(!vis[u]){
            dfs(u);
            s+=xi[u];
            lcm=__lcm(lcm,vi[u]);
            H.push_back(xi[u]); 
        }
    }
    if(!H.size())H.push_back(xi[v]),s+=xi[v];
    int k=H.size();
    long long mn=9e17;
    for(int i=0;i<k;i++)mn=min(mn,(H[i]/lcm)*lcm);
    ans+=s;
    xi[v]=k*mn;
    ans-=xi[v];
    vi[v]=k*lcm;
    if(!xi[v])cout<<sum,exit(0);
    return ;
}

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    int n;
    cin>>n;
    for(int i=0;i<n;i++)vi[i]=1;
    for(int i=0;i<n;i++)cin>>xi[i];
    for(int i=0;i<n;i++)sum+=xi[i];
    int x,y;
    for(int i=1;i<n;i++){
        cin>>x>>y;
        x--;y--;
        ver[x].push_back(y);
        ver[y].push_back(x);
    }
    dfs();
    cout<<ans;
}