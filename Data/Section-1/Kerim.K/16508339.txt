#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,char> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int km[MAXN];
string to(int h){
	string mes;
	while(h>=1){
		mes+=char((h%10)+48);
		h/=10;
	}
	reverse(all(mes));
	return mes;
}
string f(vector<PII>k){
	string ans;
	for(int i=0;i<k.size();i++)
		if(k[i].ff!=-1)
			ans+=to(k[i].ff)+k[i].ss;
	return ans;	
}
int main(){
	int n,m;
	scanf("%d%d",&n,&m);
	vector<PII>v,g;
	for(int i=1;i<=n;i++){
		char bar,fup;
		int foo;
		cin>>foo>>bar>>fup;
		v.pb(mp(foo,fup));
	}
	for(int i=v.size()-2;i>=0;i--)
		if(v[i].ss==v[i+1].ss){
			v[i+1]=mp(-1,'#');
			v[i].ff+=v[i+1].ff;
		}	
	for(int i=1;i<=m;i++){
		char bar,fup;
		int foo;
		cin>>foo>>bar>>fup;
		g.pb(mp(foo,fup));
	}
	for(int i=g.size()-2;i>=0;i--)
		if(g[i].ss==g[i+1].ss){
			g[i+1]=mp(-1,'#');
			g[i].ff+=g[i+1].ff;
		}
	string t=f(v);
	string s=f(g);
	string z;int dd=0,yer=-1,hh=0;
	for(int i=s.size()-1;i>=0;i--)
		if(s[i]>='a' and s[i]<='z'){
			if(hh){
				yer=i;
				break;
			}
			hh=1;	
		}
	PII lst=mp(-1,'#');	
	for(int i=g.size()-1;i>=0;i--)
		if(g[i].ff!=-1){
			lst=g[i];
			break;
		}
	for(int i=0;i<s.size();i++){
		if(dd==0 and s[i]>='a' and s[i]<='z')
			dd=1;
		else if(dd==1){
			if(i<=yer)
				z+=s[i];	
		}
	}
	if(z.size()==0){
		int zac=0;
		if(yer==-1){
			for(int i=0;i<v.size();i++)
				if(v[i].ff!=-1 and v[i].ff>=g[0].ff and g[0].ss==v[i].ss)
					zac+=v[i].ff-g[0].ff+1;
		}
		else{
			vector<PII>vv;
			for(int i=0;i<v.size();i++)
				if(v[i].ff!=-1)
					vv.pb(v[i]);
			for(int i=0;i<vv.size()-1;i++)
				if(vv[i].ss==g[0].ss and vv[i+1].ss==g[1].ss and vv[i].ff>=g[0].ff and vv[i+1].ff>=g[1].ff)
					zac++;		
		}
		printf("%d\n",zac);		
	}
	else{
		string za=z+"#"+t;
		int j=0,kmk=0;
		for(int i=2;i<=za.size();i++){
			while(j>0 and za[j]!=za[i-1])
				j=km[j];
			j+=(za[j]==za[i-1]);	
			km[i]=j;
			if(j==z.size()){
				int pos=i-(z.size()+1)-1;
				pos-=z.size();
				if(pos-1>=0){
					vector<int>cf;
					char cw=t[pos],wc;
					for(int v=pos-1;v>=0;v--){
						if(t[v]>='a' and t[v]<='z')
							break;
						cf.pb(int(t[v])-48);	
					}
					int pw=0,wp=0;
					for(int v=cf.size()-1;v>=0;v--)
						pw=pw*10+cf[v];
						
					for(int v=pos+z.size()+1;v<t.size();v++){
						if(t[v]>='a' and t[v]<='z'){
							wc=t[v];
							break;
						}
						wp=wp*10+(int(t[v])-48);	
					}
					if(cw==g[0].ss and wc==lst.ss and pw>=g[0].ff and wp>=lst.ff)
						kmk++;
				}
			}
		}
		printf("%d\n",kmk);
	}
	return 0;
}
