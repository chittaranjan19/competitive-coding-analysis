#include <iostream>
#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

const int maxn = 1e5 + 5;

ll a[5];
int used[maxn];
vector<int> v[maxn];

bool dfs(int u, int num)
{
    used[u] = num;
    ++a[num];
    for(int i = 0; i < v[u].size(); ++i)
    {
        int e = v[u][i];
        if(!used[e] && dfs(e, 3 - num))
        {
            return true;
        }
        else if(used[e] == used[u])
        {
            return true;
        }
    }
    return false;
}

int main()
{
    int n, m;
    scanf("%d%d", &n, &m);
    if(m == 0)
    {
        ll x = 1;
        for(int i = 0; i < 3; ++i)
        {
            x = x * (n - i) / (i + 1);
        }
        printf("3 %I64d\n", (ll)n * (n - 1) * (n - 2) / 6);
    }
    else
    {
        for(int i = 0; i < m; ++i)
        {
            int x, y;
            scanf("%d%d", &x, &y);
            v[x].push_back(y);
            v[y].push_back(x);
        }
        bool flag = false;
        int cnt = 0;
        ll ans = 0;
        for(int i = 1; i <= n; ++i)
        {
            if(!used[i])
            {
                a[1] = a[2] = 0;
                if(dfs(i, 1))
                {
                    flag = true;
                    break;
                }
                ans += a[1] * (a[1] - 1) / 2 + a[2] * (a[2] - 1) / 2;
                if(a[2])
                {
                    ++cnt;
                }
            }
        }
        if(flag)
        {
            puts("0 1");
        }
        else if(ans)
        {
            printf("1 %I64d\n", ans);
        }
        else
        {
            printf("2 %I64d\n", (ll)cnt * (n - 2));
        }
    }
    return 0;
}
