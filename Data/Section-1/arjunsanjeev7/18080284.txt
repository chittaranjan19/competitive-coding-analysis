/*	Arjun Sanjeev
	IIIT-Hyderabad	*/

/*	*************************************************
	*	"Never regret anything in life.		*
	*	 If it's good, it's wonderful.		*
	*	 If it's bad, it's experience."		*
	*************************************************	*/

#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define f first
#define s second
#define let(x,a) __typeof(a) x(a)
#define all(a) (a).begin(),(a).end() 
#define endl '\n'
#define present(c,x) ((c).find(x) != (c).end()) 
#define tr(v,it) for(let(it,v.begin()); it != v.end(); it++)
#define rtr(v,it) for(let(it,v.rbegin()); it != v.rend(); it++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define LL long long int
#define PII pair<int,int>
#define VI vector<int>
#define inf INT_MAX

using namespace std;

int main()
{
	int n,k,temp,ans=0;
	cin>>n>>k;
	string s;
	cin>>s;
	temp=k;
	deque<int> V;
	V.pb(-1);
	s+="b";
	for(int i=0;i<n+1;i++)
	{
		if(s[i]=='b')
		{
			if(k)
			{
				V.push_back(i);
				k--;
			}
			else
			{
				V.pb(i);
				ans=max(ans,V.back()-V.front()-1);
				V.pop_front();
			}
		}
	}
	ans=max(ans,V.back()-V.front()-1);
	s[n]='a';
	k=temp;
	V.clear();
	V.pb(-1);
	for(int i=0;i<n+1;i++)
	{
		if(s[i]=='a')
		{
			if(k)
			{
				V.push_back(i);
				k--;
			}
			else
			{
				V.pb(i);
				ans=max(ans,V.back()-V.front()-1);
				V.pop_front();
			}
		}
	}
	ans=max(ans,V.back()-V.front()-1);
	cout<<ans<<endl;
	return 0;
}