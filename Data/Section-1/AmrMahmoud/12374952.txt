#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <utility>
#include <iomanip>
#include <set>
#include <numeric>
#include <cassert>
#include <ctime>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define EPS 1e-8
#define LL long long
#define mod 175781251
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

using namespace std;

int arr[200005];
map<int, int> m;
map<int, int> f;

int main()
{
  int n, k;
  scanf("%d %d", &n, &k);
  for(int i=0;i<n;i++)
  {
    scanf("%d", &arr[i]);
    f[arr[i]]++;
  }
  LL res = 0;
  for(int i=n-1;i>=0;i--)
  {
    if(f[arr[i]] == 0) f.erase(arr[i]);
    else f[arr[i]]--;
    if(arr[i] % k != 0)
    {
      m[arr[i]]++;
      continue;
    }
    LL x = arr[i] * 1LL * k;
    if(x > 1000000000 || x < -1000000000)
    {
      m[arr[i]]++;
      continue;
    }
    LL y = arr[i] / k;
    if(m.find(x) == m.end())
    {
      m[arr[i]]++;
      continue;
    }
    if(f.find(y) == f.end())
    {
      m[arr[i]]++;
      continue;
    }
    res += m[x] * 1LL * f[y];
    m[arr[i]]++;
  }
  printf("%I64d", res);
  return 0;
}
