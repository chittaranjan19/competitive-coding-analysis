#include <cstdio>
#include <cstring>
#include <cassert>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string> 
#include <map>
#include <iostream>
#include <queue>
#include <time.h>
#include <set>
#include <bitset>
using namespace std;

typedef long long ll;

#define INF 1000000000
#define eps 0
#define mod 1000000007

int dp[35][35][55];

int solve(int n, int m, int want)
{
    if(n * m < want) 
        return INF;
    if(want == 0 || want == n * m)
        return 0;
    if(dp[n][m][want] == -1)
    {
        dp[n][m][want] = INF;
        for(int i = 1; i < n; i++)
            for(int want2 = 0; want2 <= want; want2++)
                dp[n][m][want] = min(dp[n][m][want], m * m + solve(i, m, want2) + solve(n - i, m, want - want2));
        for(int i = 1; i < m; i++)
            for(int want2 = 0; want2 <= want; want2++)
                dp[n][m][want] = min(dp[n][m][want], n * n + solve(n, i, want2) + solve(n, m - i, want - want2));
    }
    return dp[n][m][want];
}

int main()
{
    memset(dp, -1, sizeof(dp));
    int t;
    scanf("%d", &t);
    while(t--)
    {
        int n, m, want;
        scanf("%d %d %d", &n, &m, &want);
        printf("%d\n", solve(n, m, want));
    }
    return 0;
}
