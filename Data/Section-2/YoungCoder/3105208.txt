 # include <iostream>
 # include <cstdlib>
 # include <cstdio>
 # include <map>
 # include <string>
 # include <cstring>

 # define debug(x) cout<<#x<<" "<<x<<"\n";
 # define output(x) freopen(x,"w",stdout)
 # define error(x) freopen(x,"w",stderr)
 # define input(x) freopen(x,"r",stdin)
 # define endl printf("\n");
 # define pb push_back
 # define mp make_pair

 using namespace std;
 
 const int N = 2000, A = 30, M = 18014398 * 1000000000 + 241046527, K = 1039;
 int n, dp[N], ans, k;
 char s[N], d[A];
 long long int pw[N], h[N], hash;
 map < long long int, char > st;
 
 void add_hash (int l, int r)
 {
     hash = h[r] - h[l - 1];
     hash *= pw[n - r];
     //hash %= M;
     
     if (st[hash])
      return;
      
     ++ans;
     
     st[hash] = true;
 }

 int main ()
 {
     /*error ("error.txt");
     input ("input.txt");
     output ("output.txt");*/

     gets (s);
     gets (d);
     cin >> k;
     
     n = int (strlen (s));
     pw[0] = 1;
     
     for (int i = 1; i <= n; ++i)
     {
         pw[i] = (pw[i - 1] * K);
         h[i] = (h[i - 1] + (s[i - 1] - 'a' + 1) * pw[i]);
         
         if (i <= 26)
         {
             dp[i] = dp[i - 1];
         
             if (d[s[i - 1] - 'a'] == '0')
              ++dp[i];
         }
     }
     
     for (int l = 1; l <= n; ++l)
      for (int r = l; r <= n; ++r)
       if (dp[r] - dp[l - 1] <= k)
        add_hash (l, r);
     
     cout << ans << "\n";
     
     //system ("pause");
     
     return 0;
 }
 
