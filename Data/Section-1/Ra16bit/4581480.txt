#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
int n,i,x,y,a[100100];
long long s,v[100100],f[100100];
vector<int> g[100100];
void dfs(int i, int p) {
  long long x,c=0;
  f[i]=1;
  for (int j=0; j<g[i].size(); j++) {
    int k=g[i][j];
	if (k!=p) {
	  dfs(k,i);
	  if (++c==1) x=v[k]; else x=min(x,v[k]);
	  f[i]=(f[i]*f[k])/__gcd(f[i],f[k]);
	}
  }
  if (c==0) v[i]=a[i]; else {
    v[i]=x*c;
	f[i]*=c;
  }
}
int main() {
  scanf("%d",&n);
  for (i=1; i<=n; i++) {
    scanf("%d",&a[i]);
	s+=a[i];
  }
  for (i=1; i<n; i++) {
    scanf("%d%d",&x,&y);
	g[x].push_back(y);
	g[y].push_back(x);
  }
  dfs(1,0);
  printf("%I64d\n",s-(v[1]/f[1])*f[1]);
  return 0;
}
