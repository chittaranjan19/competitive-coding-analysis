import java.util.*;

/**
 * Created by leen on 6/2/16.
 */
public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int numRows = scan.nextInt();
        int numCols = scan.nextInt();
        int numTypes = scan.nextInt();

        Point[] pointsByType = new Point[numTypes];

        for(int i = 0; i < numRows; i ++) {
            for(int j = 0; j < numCols; j++) {
                int type = scan.nextInt();
                Point head = pointsByType[type - 1];
                if(head == null)
                   pointsByType[type - 1] = new Point(i, j);
                else
                   head.append(new Point(i, j));
            }
        }

        for(int k = numTypes - 1; k > 0; k--) {
            Point pHead = pointsByType[k - 1];
            Point p = pHead;
            do {
                int minDistance = Integer.MAX_VALUE;
                Point npHead = pointsByType[k];
                Point np = npHead;
                do {
                    int distance = np.distance(p) + np.minDistanceFromDest;
                    if(distance < minDistance)
                        minDistance = distance;
                    np = np.next;
                } while(np != npHead);
                p.minDistanceFromDest = minDistance;

                p = p.next;
            } while(p != pHead);
        }

        Point p1Head = pointsByType[0];
        Point p1 = p1Head;
        Point origin = new Point(0, 0);
        int totalMinDistance = Integer.MAX_VALUE;
        do {
            int distance = origin.distance(p1) + p1.minDistanceFromDest;
            if(distance < totalMinDistance)
                totalMinDistance = distance;
            p1 = p1.next;
        } while(p1 != p1Head);

        System.out.println(totalMinDistance);
    }

    static class Point {
        final int x;
        final int y;
        int minDistanceFromDest;
        Point next = this;
        Point prev = this;

        Point(int x, int y) {
            this.x = x;
            this.y = y;
        }

        @Override
        public int hashCode() {
            return x ^ y;
        }

        @Override
        public boolean equals(Object obj) {
            if(obj instanceof Point) {
                Point that = (Point) obj;
                return x == that.x && y == that.y;
            }
            else
                return false;
        }

        int distance(Point that) {
            return Math.abs(x - that.x) + Math.abs(y - that.y);
        }

        void append(Point p) {
            p.next = next;
            next.prev = p;
            p.prev = this;
            next = p;
        }
    }
}