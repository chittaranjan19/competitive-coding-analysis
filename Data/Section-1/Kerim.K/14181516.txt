#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"You can do IT.I belive YOU!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool checkMin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool checkMax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int fup[MAXN],tin[MAXN],vis[MAXN],c,ans;
vector<int>adj[MAXN];
set<int>dj[MAXN];
void df(int nd,int to){
	vis[nd]=1;
	tr(i,dj[nd]){
		int to=*i;
		cout<<nd<<" "<<to<<endl;
		dj[to].erase(nd);
		if(!vis[to])
			df(to,nd);	
	}
}
void dfs(int nd,int pr){
	vis[nd]=1;
	tin[nd]=fup[nd]=c++;
	for(int i=0;i<adj[nd].size();i++){
		int to=adj[nd][i];
		if(to==pr)
			continue;
		if(vis[to])
			fup[nd]=min(fup[nd],tin[to]);
		else{
			dfs(to,nd);
			fup[nd]=min(fup[nd],fup[to]);
			if(tin[nd]<fup[to])
				ans++;
		}
	}	
}
int main(){
	int a,b,u,v;
	cin>>a>>b;
	for(int i=0;i<b;i++){
		cin>>u>>v;
		dj[u].insert(v);
		dj[v].insert(u);
		adj[u].pb(v);
		adj[v].pb(u);
	}
	dfs(1,0);
	//cout<<"\n";
	if(ans!=0)
		cout<<false<<endl;
	else{
		fill(vis,vis+MAXN,0);
		df(1,0);
	}
	return 0;
}
	