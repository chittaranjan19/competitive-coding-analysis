using namespace std;
#include<bits/stdc++.h>
#define FOR(i, a, b) for (int i = a; i < b; i++)
#define FORE(i, a, b) for (int i = a; i <= b; i++)
#define FORD(i, a, b) for (int i = a; i >= b; i--)
const int MAXN = 5*1e5;
const int INF  = 1e18 + 7;


struct data{
    long long x, l, r, k, cs;

};
 bool operator < (data a, data b) {
        if (a.x != b.x) return a.x < b.x;
        else return a.k > b.k;
 }

int n, m;
long long L[MAXN], R[MAXN];
data a[MAXN];
int top = 0;
int res[MAXN];
int main()
{
    ios::sync_with_stdio(false);
    //freopen("556D.inp", "r", stdin);
    //freopen("556D.out", "w", stdout);
    cin >> n >> m;
    FORE(i, 1, n) {
        cin >> L[i] >> R[i];
    }
    FORE(i, 1, n - 1) {
        long long l = L[i + 1] - R[i];
        long long r = R[i + 1] - L[i];
        a[++top] = (data) {l, l, r, 1, i};
    }
    FORE(i, 1, m) {
        long long w;
        cin >> w;
        a[++top] = (data) {w, w, w, 0, i};
    }
    sort(a + 1, a + top + 1);
    //FORE(i, 1, top) cout<<a[i].x<< " "<<a[i].l<<" "<<a[i].r<<" "<<a[i].k<<" "<<a[i].cs<<endl;
    priority_queue< data > q;
    for(int i = 1; i <= top; i++) {
        data u = a[i];
        if (u.k == 1) {
            u.x = -u.r;
            q.push(u);
        }
        else if (!q.empty()){
            data v = q.top(); q.pop();
            if (u.x <= v.r) res[v.cs] = u.cs;
            else break;
        }
    }
    FORE(i, 1, n - 1) if (res[i] == 0) {
        cout<<"No";
        return 0;
    }
    cout<<"Yes"<<endl;
    FORE(i, 1, n - 1) cout<<res[i]<<" ";
    return 0;
}
