#include <stdio.h>
#include <vector>
#include <string.h>
#include <algorithm>
#include <queue>
#include <functional>
using namespace std;
typedef unsigned long long ull;
typedef long long ll;
typedef unsigned int ui;

struct Pair {
	int index;
	int value;
	Pair(int index, int value) :index(index), value(value) {}
	bool operator<(const Pair &other) const {
		return value < other.value;
	}
	bool operator>(const Pair &other) const {
		return value > other.value;
	}
};

struct Tuple {
	int a;
	int b;
	int c;
	Tuple(int a, int b, int c) : a(a), b(b), c(c) {}
	bool operator<(const Tuple &other) const {
		return c < other.c;
	}
	bool operator>(const Tuple &other) const {
		return c > other.c;
	}
};

struct Wrap {
	int* index;
	Wrap(int* index) : index(index) {}
	bool operator<(const Wrap&other) const {
		return (*index) < (*other.index);
	}
	bool operator>(const Wrap&other) const {
		return (*index) > (*other.index);
	}
};

int in_i() {
	int result;
	scanf("%d", &result);
	return result;
}
ll in_l() {
	ll result;
	scanf("%I64d", &result);
	return result;
}
char in_c() {
	char result;
	scanf(" %c", &result);
	return result;
}
double in_d() {
	double result;
	scanf("%lf", &result);
	return result;
}

int n, m, k, t, u, v, l, r, x;
const ll MODULO = 1000000007;
char ch;
double d;
char input[102];

int main() {
	n = in_i();
	bool next_day = false;
	for (int i = 0; i < n; i++) {
		m = in_i();
		if (next_day)
			m--;
		if (m < 0) {
			printf("NO");
			return 0;
		}
		next_day = m % 2 != 0;
	}
	if (next_day) {
		printf("NO");
	}
	else {
		printf("YES");
	}
	return 0;
}