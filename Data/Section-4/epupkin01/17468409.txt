#include <iostream>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(b, 0, sizeof(arr)); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // getchar(), gets()
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); a - массв, n - кол-во эл-тов
#include <iomanip>      // setw()
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#include <memory>       // shared_ptr<>, uniqu_ptr<>
#include <iterator>     // ostream_iterator<int, char> our_iter(cout, " ");
#include <set>
#include <map>
#define SRT srand(int(time(0)))
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
using namespace std;
struct pers
{
    int ind;
    int res;
    char name[11];
};
bool operator<(const pers &p1, const pers &p2)
{
    if (p1.ind < p2.ind)
        return true;
    else if (p1.ind == p2.ind && p1.res >= p2.res)
        return true;
    return false;
}
int main()
{
    //ios_base::sync_with_stdio(0);
    const int S = 100000;
    pers p[S];
    int n, m;
    cin >> n >> m;
    for (int i = 0; i < n; ++i)
        cin >> p[i].name >> p[i].ind >> p[i].res;
    sort(p, p + n);
    for (int i = 0; i < n; ++i)
    {
        if (i < n-2 && p[i+1].ind == p[i+2].ind && p[i+1].res == p[i+2].res)
            printf("?\n");
        else
            printf("%s %s\n", p[i].name, p[i+1].name);
        while (i < n-1 && p[i].ind == p[i+1].ind)
            ++i;
    }
    return 0;
}