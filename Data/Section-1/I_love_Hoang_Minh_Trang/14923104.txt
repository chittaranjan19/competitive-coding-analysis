#include <bits/stdc++.h>
#define FORE(i, a, b) for(int i = a; i <= b; i++)
#define FORD(i, a, b) for(int i = a; i >= b; i--)
#define FOR(i, a, b) for(int i = a; i < b; i++)
const int MAXN = 1e5 * 5;
const int INF = 1e9 + 7;

using namespace std;
int n, k, mmod;
void add(int &a, int b)
{
    a += b;
    if (a >= mmod) a -= mmod;
}

int f[1001][101][2][2];
int mu[1001];

bool ok(int x)
{
    bool ok = 0;
    int oldx = x;
    int tmp = 0;
    FORE(i, 1, 5){
        int dig = x % 10;
        x /= 10;
        tmp = (tmp + dig * mu[i - 1]) % k;
        if (tmp == 0){
           ok = 1;
        }
    }
    //cout <<oldx<<" "<<tmp<<" "<<k<<endl;
    return ok;
}

int duyet(int pos, int r, bool ok, bool greater0)
{
    if (f[pos][r][ok][greater0] > -1) return f[pos][r][ok][greater0];
    if (pos == 0) return ok;
    int ans = 0;
    FORE(x, (pos == 1), 9){
        int new_r = (r + 1LL * mu[n - pos] * x) % k;
        int new_0 = greater0 | (x > 0);
        add(ans, duyet(pos - 1, new_r, ok | (new_r == 0 && new_0 == 1), new_0));
    }
    f[pos][r][ok][greater0] = ans;
    return ans;
}

int main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("507D.inp", "r", stdin);
    freopen("507D.out", "w", stdout);
    #endif //MIKELHPDATKE
    cin >> n >> k >> mmod;
    mu[0] = 1 % k;
    FORE(i, 1, 1000) mu[i] = (mu[i - 1] * 10) % k;
    memset(f, -1, sizeof(f));
    //trau();
    cout << duyet(n, 0, 0, 0);
    return 0;
}

