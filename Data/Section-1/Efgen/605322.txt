import java.io.*;
import java.util.*;
import java.math.*;

public class Main implements Runnable {

	void solve() throws IOException {
		int n = nextInt();
		int m = nextInt();
		double k = nextDouble();
		TreeMap<String, Integer> skills = new TreeMap<String, Integer>();
		for (int i=0; i<n; i++) {
			String s = next();
			int val = (int)Math.floor(nextInt()*k+1e-8);
			if (val>=100) 
				skills.put(s, val);
		}
		for (int i=0; i<m; i++) {
			String s = next();
			if (!skills.containsKey(s))
				skills.put(s, 0);
		}
		out.println(skills.size());
		for (String s: skills.keySet()) {
			out.println(s+" "+skills.get(s));
		}	
		
		
		
		
	}

	BufferedReader br;
	StringTokenizer st;
	PrintWriter out;

	public void run() {
		try {
			br = new BufferedReader(new InputStreamReader(System.in));
			out = new PrintWriter(System.out);
			// br = new BufferedReader(new FileReader("input.txt"));
			// out = new PrintWriter("output.txt");
			solve();
			br.close();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
			System.exit(123);
		}
	}

	String next() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			String s = br.readLine();
			if (s == null)
				return null;
			st = new StringTokenizer(s,", \t");
		}
		return st.nextToken();
	}

	double nextDouble() throws IOException {
		return Double.parseDouble(next());
	}

	int nextInt() throws IOException {
		return Integer.parseInt(next());
	}

	long nextLong() throws IOException {
		return Long.parseLong(next());
	}

	public static void main(String[] args) {
		new Thread(new Main()).start();
	}
}
