#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 1000010;
/*
3 - bomb

0/1: bomb abs unnecessary/necessary
*/
ll dp[maxn][4][2];
char str[maxn];
int n;

ll solve(int cur, int prv, int p)
{
	if(cur>n){
		if(p)
			return 0;
		return 1;
	}
	if(dp[cur][prv][p]!=-1)
		return dp[cur][prv][p];
	ll ret = 0;
	if(str[cur]=='?'){
		if(p)
			ret = solve(cur+1, 3, 0);
		else{
			if(prv==0)
				ret = (solve(cur+1, 0, 0) + solve(cur+1, 1, 1))%mod;
			else if(prv==1)
				ret = (solve(cur+1, 0, 0) + solve(cur+1, 1, 1))%mod;
			else if(prv==2)
				ret = solve(cur+1, 3, 0);
			else
				ret = (solve(cur+1, 1, 0) + solve(cur+1, 2, 1) + solve(cur+1, 3, 0))%mod;
		}
	}
	else{
		if(p){
			if(str[cur]=='*')
				ret = solve(cur+1, 3, 0);
			else
				ret = 0;
		}
		else{
			if(prv==0){
				if(str[cur]=='*' || str[cur]=='2')
					ret = 0;
				else if(str[cur]=='0')
					ret = solve(cur+1, 0, 0);
				else
					ret = solve(cur+1, 1, 1);
			}
			else if(prv==1){
				if(str[cur]=='*' || str[cur]=='2')
					ret = 0;
				else if(str[cur]=='0')
					ret = solve(cur+1, 0, 0);
				else if(str[cur]=='1')
					ret = solve(cur+1, 1, 1);
			}
			else if(prv==2)
				ret = 0;
			else{
				if(str[cur]=='*')
					ret = solve(cur+1, 3, 0);
				else if(str[cur]=='0')
					ret = 0;
				else if(str[cur]=='1')
					ret = solve(cur+1, 1, 0);
				else if(str[cur]=='2')
					ret = solve(cur+1, 2, 1);
			}
		}
	}
	return dp[cur][prv][p] = ret;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	memset(dp, -1, sizeof(dp));
	int i, j;
	scanf("%s", str+1);
	n = strlen(str+1);
	ll ans;
	if(str[1]=='?')
		ans = (solve(2, 0, 0)+solve(2, 1, 1)+solve(2, 3, 0))%mod;
	else if(str[1]=='*')
		ans = solve(2, 3, 0);
	else if(str[1]=='0')
		ans = solve(2, 0, 0);
	else if(str[1]=='1')
		ans = solve(2, 1, 1);
	else
		ans = 0;
	printf("%lld\n", ans);
	return 0;
}
