#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
int main() {
    long long n;
    cin >> n;
    long long dp[n][3];
    dp[0][1] = 0;
    vector<long long> dpp;
    dpp.resize(n);
    for (long long i = 0; i < n; i++) {
        cin >> dpp[i];
    }
    sort(dpp.begin(), dpp.end());
    for (long long i = 1; i < n; i++) {
        dp[i][1] = dp[i - 1][1] + i * (dpp[i] - dpp[i - 1]);
    }
    dp[n - 1][2] = 0;
    long long max = 100000000000000000;
    long long maxi;
    for (long long i = 1; i < n; i++) {
        dp[n - i - 1][2] = dp[n - i][2] + i * (dpp[n - i] - dpp[n - i - 1]);
    }
    for (long long i = 0; i < n; i++) {
        if (dp[i][1] + dp[i][2] < max) {
            max = dp[i][1] + dp[i][2];
            maxi = i;
        }
    }
    cout << maxi + 1;
}