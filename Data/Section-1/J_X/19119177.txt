#include <iostream>
#include <cstdio>
#include <cstring>

using namespace std;

const int maxn = 100000 + 5;

struct edge
{
    int to, next;

    edge(int to = 0, int next = 0) : to(to), next(next) {}
} G[maxn];
int head[maxn], tot, sz[maxn];
double ans[maxn];

void init()
{
    memset(head, -1, sizeof(head));
    tot = 0;
}

void addedge(int u, int v)
{
    G[tot] = edge(v, head[u]);
    head[u] = tot++;
}

void dfs1(int u)
{
    sz[u] = 1;
    for(int i = head[u]; ~i; i = G[i].next)
    {
        int v = G[i].to;
        dfs1(v);
        sz[u] += sz[v];
    }
}

void dfs2(int u)
{
    for(int i = head[u]; ~i; i = G[i].next)
    {
        int v = G[i].to;
        ans[v] = ans[u] + (sz[u] - sz[v] - 1) / 2.0 + 1;
        dfs2(v);
    }
}

int main()
{
    init();
    int n;
    scanf("%d", &n);
    for(int i = 2; i <= n; ++i)
    {
        int p;
        scanf("%d", &p);
        addedge(p, i);
    }
    dfs1(1);
    ans[1] = 1;
    dfs2(1);
    for(int i = 1; i <= n; ++i) printf("%.10f%c", ans[i], " \n"[i == n]);
    return 0;
}
