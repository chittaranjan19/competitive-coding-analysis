#include <bits/stdc++.h>
#include <iostream>
#include <cstdio>
#include <stdlib.h>
#include <cmath>
#include <algorithm>

using namespace std;
const int MOD = 1e9 + 7;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n, k;
    cin >> n >> k;
    vector<vector<int> > v(n);
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++)
            if (j % i == 0)
                v[i - 1].push_back(j);
    int dp[k][n];
    for (int i = 0; i < k; i++)
        for (int j = 0; j < n; j++)
            dp[i][j] = 0;
    for (int j = 0; j < n; j++)
        dp[0][j] = 1;
    for (int i = 0; i < k - 1; i++)
        for (int j = 0; j < n; j++)
            for (int t = 0; t < v[j].size(); t++)
                dp[i + 1][v[j][t] - 1] = (dp[i + 1][v[j][t] - 1] + dp[i][j]) % MOD;
    int ans = 0;
    for (int j = 0; j < n; j++)
        ans = (ans + dp[k - 1][j]) % MOD;
    cout << ans;
    return 0;
}
