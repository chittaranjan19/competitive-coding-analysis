#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 100010;

ll modpow(ll a, ll b)
{
    ll x=1, y=a;
    while(b){
        if(b&1)
            x = (x*y)%mod;
        y = (y*y)%mod;
        b/=2;
    }
    return x;
}

ll solve_stupid(ll n, ll s, ll e)
{
    ll i, ret=0;
    for(i=s; i<=e; i++){
        ret = (ret+(n%i)%mod)%mod;
    }
    return ret;
}

int main()
{
    //freopen("i.txt", "r", stdin);
    //freopen("o.txt", "w", stdout);
    ll n, m, ans, x, y, s, e, i, cnt, sx, sy, lim, t, m2 = 500000004;
    //cout << modpow(2, mod-2) << "\n";
    int f = 0;
    ans = 0;
    //scanf("%lld%lld", &n, &m);
    srand(time(NULL));
    t = 1;
    while(t--){
        //n = rand()%(10000000000000);
        //m = rand()%(100000000);
        ans = 0;
        scanf("%I64d%I64d", &n, &m);
       // cin >> n >> m;
        lim = m;
        if(m>n){
            x = (m-n)%mod;
            y = n%mod;
            ans = (x*y)%mod;
        }
        i = 1;
        while(1){
            s = n/(i+1) + 1;
            e = n/i;
            if(s>=e){
                f = 1;
                break;
            }
            if(s>m){
                i++;
                continue;
            }
            e = min(e, m);
            cnt = e-s+1;
            sx = ((cnt%mod)*((s+e)%mod))%mod;
            sx = (sx*m2)%mod;
            sy = ((n%mod)*(cnt%mod))%mod;
            sy = (sy - ((sx%mod)*(i%mod))%mod + mod)%mod;
            ans = (ans+sy)%mod;
            lim = s-1;
            //cout << i << " " << s << " " << e << "\n";
            i++;
            if(s==1)
                break;
        }
    //if(ans!=solve_stupid(n, lim+1, m)){
      //    cout << "b nom " << n << " " << m << "\n";
    //}
    if(f){
        for(i=1; i<=lim; i++){    
            sx = n/i;
            sx = ((i%mod)*(sx%mod))%mod;
            sy = (n%mod - sx + mod)%mod;
            ans = (ans+sy)%mod;
        }
    }
    /*cout << s << "\n";
    if(ans!=solve_stupid(n, 1, m)){
        cout << "nomatch\n" << n << " " << m << "\n";
        break;
    }
    else
        cout << "matched\n";*/
    printf("%I64d\n", ans);
    //cout << ans << "\n";
    }
    return 0;
}
