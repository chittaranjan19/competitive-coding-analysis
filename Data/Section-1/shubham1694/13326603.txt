#include <bits/stdc++.h>

using namespace std;

#define ll long long

//ll dp[3100][3100];
int n, k, p[3100], m[3100];
map<pair<int, int>, int> m1;

ll solve(int strt, int nxt, int rd)
{
    
    int i;
    if(m1.find(make_pair(strt, nxt))!=m1.end())
        return 0;
    m1[make_pair(strt, nxt)] = 1;
    if(rd==k)
        return 1;
    ll ret = 1ll;
    if(p[strt]>0 && m[nxt]>0)
        ret+=solve(nxt+1, nxt+2, rd+1);
    if(p[strt]>0 && m[nxt]<100)
        ret+=solve(strt, nxt+1, rd+1);
    if(p[strt]<100 && m[nxt]>0)
        ret+=solve(nxt, nxt+1, rd+1);
    return ret;
}

int main()
{
    //freopen("i.txt", "r", stdin);
    int i, j;
    scanf("%d%d", &n, &k);
    for(i=1; i<=n; i++)
        scanf("%d", &p[i]);
    m[n+1] = 0;
    for(i=n; i>=1; i--)
        m[i] = max(m[i+1], p[i]);
    //memset(dp, -1, sizeof(dp));
    ll ans = 0;
    ans = solve(1, 2, 0);
    /*for(i=1; i<=n; i++){
        for(j=i+1; j<=n+1; j++){
            if(dp[i][j]!=-1)
                ans+=dp[i][j];
        }
    }*/
    printf("%I64d\n", ans);
    return 0;
}