#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<ll,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
PII s[3][MAXN<<2];
ll lazy[3][MAXN<<2],arr[MAXN];
void dik(int tp,int nd,ll v){
	lazy[tp][nd]+=v;
	s[tp][nd].ff+=v;
}
void shift(int tp,int nd){
	if(lazy[tp][nd]==0)
		return;
	dik(tp,nd<<1,lazy[tp][nd]);
	dik(tp,nd<<1|1,lazy[tp][nd]);
	lazy[tp][nd]=0;
}
void upd(int tp,int p,ll v,int nd,int x,int y){
	if(x==y){
		s[tp][nd]=mp(v,p);
		return;
	}
	shift(tp,nd);
	int mid=(x+y)>>1;
	if(p<=mid)
		upd(tp,p,v,nd<<1,x,mid);
	else
		upd(tp,p,v,nd<<1|1,mid+1,y);
	s[tp][nd]=max(s[tp][nd<<1],s[tp][nd<<1|1]);		
}
int main(){
	for(int i=1;i<=2;i++)
		for(int j=0;j<(MAXN<<2);j++)
			s[i][j]=mp(-LLINF,-LLINF);
	ll n,m,k,p,x;
	scanf("%lld%lld%lld%lld",&n,&m,&k,&p);
	for(int i=1;i<=n;i++){
		ll sum=0;
		for(int j=1;j<=m;j++){
			scanf("%lld",&x);
			arr[j]+=x;
			sum+=x;
		}
		upd(1,i,sum,1,1,n);
	}
	for(int i=1;i<=m;i++)
		upd(2,i,arr[i],1,1,m);
	ll ans=0;	
	while(k--){
		PII x=s[1][1];
		PII y=s[2][1];
		ans+=max(x.ff,y.ff);
		if(x.ff>y.ff){
			upd(1,x.ss,x.ff-p*m,1,1,n);
			dik(2,1,-p);
		}
		else{	
			upd(2,y.ss,y.ff-p*n,1,1,m);
			dik(1,1,-p);
		}
	}
	printf("%lld\n",ans);
	return 0;
}
/*
5 5 20 100
464 757 53 708 262
753 769 189 38 796
394 60 381 384 935
882 877 501 615 464
433 798 504 301 301
*/