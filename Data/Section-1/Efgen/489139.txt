import java.io.*;
import java.util.*;
import java.math.*;

public class Main implements Runnable {

	void solve() throws IOException {
		int n = nextInt();
		int m = nextInt();
		char[][] a = new char[n][];
		for (int i=0; i<n; i++)
			a[i] = next().trim().toCharArray();
		StringBuilder sb = new StringBuilder();
		for (int i=0; i<n; i++)
			for (int j=0; j<m; j++) {
				boolean ok = true;
				char c = a[i][j];
				for (int k=0; k<n; k++)
					if (i!=k && a[k][j]==c) {
						ok = false; break;
					}
				for (int k=0; k<m; k++)
					if (j!=k && a[i][k]==c) {
						ok = false; break;
					}
				if (ok) sb.append(c);
			}
		out.println(sb);
		
	}

	BufferedReader br;
	StringTokenizer st;
	PrintWriter out;

	public void run() {
		try {
			br = new BufferedReader(new InputStreamReader(System.in));
			out = new PrintWriter(System.out);
			// br= new BufferedReader(new FileReader("input.txt"));
			///out = new PrintWriter("output.txt");
			solve();
			br.close();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
			System.exit(0);
		}
	}

	String next() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			String s = br.readLine();
			if (s == null)
				return null;
			st = new StringTokenizer(s,", \t");
		}
		return st.nextToken();
	}

	double nextDouble() throws IOException {
		return Double.parseDouble(next());
	}

	int nextInt() throws IOException {
		return Integer.parseInt(next());
	}

	long nextLong() throws IOException {
		return Long.parseLong(next());
	}

	public static void main(String[] args) {
		new Thread(new Main()).start();
	}
}
