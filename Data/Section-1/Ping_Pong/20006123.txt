#include <bits/stdc++.h>
#define int long long

using namespace std;

const int inf = (int)1e18;

vector<vector<pair<int, int> > > g;
vector<int> dist;
set<pair<int, int> > q;

void solve()
{
    while (!q.empty())
    {
        int u = (*q.begin()).second;
        q.erase(q.begin());
        for (auto v : g[u])
            if (dist[v.first] > dist[u] + v.second)
            {
                dist[v.first] = dist[u] + v.second;
                q.insert({dist[v.first], v.first});
            }
    }
}

main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n, m, k;
    cin >> n >> m >> k;
    g.resize(n);
    dist.resize(n, inf);
    for (int i = 0; i < m; i++)
    {
        int s, f, t;
        cin >> s >> f >> t;
        g[s - 1].push_back({f - 1, t});
        g[f - 1].push_back({s - 1, t});
    }
    vector<bool> ok(n, true);
    for (int i = 0; i < k; i++)
    {
        int x;
        cin >> x;
        dist[x - 1] = 0;
        ok[x - 1] = false;
        q.insert({dist[x - 1], x - 1});
    }
    solve();
    int ans = inf;
    for (int i = 0; i < n; i++)
        if (ok[i])
            ans = min(ans, dist[i]);
    cout << (ans != inf ? ans : -1);
}