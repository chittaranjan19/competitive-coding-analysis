#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int u[MAXN],v[MAXN];
struct dsu{
	int rank[MAXN],ata[MAXN];
	void init(int x){
		for(int i=1;i<=x;i++)
			rank[i]=1,ata[i]=i;
	}
	int tap(int x){
		if(ata[x]==x)
			return x;
		return ata[x]=tap(ata[x]);	
	}
	void merge(int x,int y){
		if((x=tap(x))==(y=tap(y)))
			return;
		if(rank[y]<=rank[x]){
			rank[x]+=rank[y];
			ata[y]=x;
		}
		else{
			rank[y]+=rank[x];
			ata[x]=y;
		}
	}
	int online(int x){
		int ff=0;
		for(int i=1;i<=x;i++)
			if(ata[i]==i)
				ff++;
		return ff;		
	}
};
int main(){
	int n,m,k;
	scanf("%d%d",&n,&m);
	for(int i=1;i<=m;i++)
		scanf("%d%d",u+i,v+i);	
	dsu q;q.init(n);	
	vector<int>love;
	for(int i=1;i<=m;i++){
		int x=q.tap(u[i]);
		int y=q.tap(v[i]);
		if(x!=y)
			love.pb(i),q.merge(x,y);
	}
	q.init(n);
	for(int i=m;i>=1;i--){
		int x=q.tap(u[i]);
		int y=q.tap(v[i]);
		if(x!=y)
			love.pb(i),q.merge(x,y);
	}
	sort(all(love));
	love.erase(unique(all(love)),love.end());
//	tr(it,love)
//		cout<<*it<<" ";
//	cout<<endl;	
	scanf("%d",&k);
	while(k--){
		int l,r;
		scanf("%d%d",&l,&r);
		dsu t;
		t.init(n);
		for(int i=0;i<love.size();i++)
			if(love[i]<l or love[i]>r)
				t.merge(u[love[i]],v[love[i]]);
		printf("%d\n",t.online(n));		
	}
	return 0;
}
//LooK aT mY COde ONlinE +_+
