//why are you stalking me?
#include <bits/stdc++.h>

using namespace std;

#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define rep(it, v) for (auto it = (v).begin(); it != (v).end(); it++)
#define dbg(x) cerr << #x << " = " << x << endl

typedef long long ll;
typedef pair<int, int> pii;
const int MAXN = 3010, INF = 1e9;

void setmin (int &a, int b) {
	if (a > b) {
		a = b;
	}
}

int N, M;
vector<int> adj[MAXN];
int S[2], T[2], L[2];
int dist[MAXN][MAXN];

int main() {
	//why are you stalking me?
	if (fopen("input.txt", "r")) {
		freopen("input.txt", "r", stdin);
	}
	ios::sync_with_stdio(false);
	cin >> N >> M;
	for (int i = 0; i < M; i++) {
		int a, b;
		cin >> a >> b;
		adj[a].push_back(b);
		adj[b].push_back(a);
	}
	for (int i = 0; i < 2; i++) {
		cin >> S[i] >> T[i] >> L[i];
	}
	for (int i = 1; i <= N; i++) {
		for (int j = 1; j <= N; j++) {
			dist[i][j] = INF;
		}
		dist[i][i] = 0;
		//bfs
		queue<int> q;
		q.push(i);
		while (!q.empty()) {
			int f = q.front();
			q.pop();
			for (int t : adj[f]) {
				if (dist[i][t] == INF) {
					dist[i][t] = dist[i][f] + 1;
					q.push(t);
				}
			}
		}
	}
	//double check
	int d0 = dist[S[0]][T[0]], d1 = dist[S[1]][T[1]];
	if (d0 > L[0] || d1 > L[1]) {
		//TOO LATE
		puts("-1");
		return 0;
	}
	int ans = d0 + d1;	//this is minimum # of roads to keep
	for (int i = 1; i <= N; i++) {
		for (int j = 1; j <= N; j++) {
			//this is the common strip
			setmin(ans, dist[i][j] + dist[i][S[0]] + dist[i][S[1]] + dist[j][T[0]] + dist[j][T[1]]);
		}
	}
	cout << M - ans << endl;
}