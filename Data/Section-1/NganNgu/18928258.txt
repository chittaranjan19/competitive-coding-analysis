#include <iostream> 
#include <cstdio>
#include <cmath>

using namespace std;

#define For(i , a , b) for (int i = a , _b = b ; i <= _b ; ++i)
#define Ford(i , a  ,b) for (int i = a , _b = b : i >= _b ; --i)
#define Rep(i , n) for (int i = 0 , _n = n ; i < _n ; ++i)
#define sz(A) ((int)A.size())
#define LL(x) (x << 1)
#define RR(x) ((x << 1) | 1)

typedef pair<int , int> pt;

const int maxn = 200000 + 123;

int n;
int a[maxn] , b[maxn];

void ReadData() {
	cin >> n;
	For(i , 1 , n) cin >> a[i];
	For(i , 1 , n) cin >> b[i];
}

int Prelg2[maxn];
const int lg = 18;
int ma[maxn][lg + 3] , mi[maxn][lg + 3];
void InitRMQ() {
	For(i , 1 , n) {	
		mi[i][0] = b[i];
		ma[i][0] = a[i];
	}
	For(j , 0 , lg - 1) For(i , 1 , n) if ( i + (1 << (j + 1)) - 1 <= n) {
		ma[i][j + 1] = max(ma[i][j] , ma[i + (1 << j)][j]);
		mi[i][j + 1] = min(mi[i][j] , mi[i + (1 << j)][j]);
	}
}
int get_max(int l , int r) {
	int f = Prelg2[r - l + 1];
	return max(ma[l][f] , ma[r - (1 << f) + 1][f]);
}
int get_min(int l , int r) {
	int f = Prelg2[r - l + 1];
	return min(mi[l][f] , mi[r - (1 << f) + 1][f]);
}

void Process() {
	InitRMQ();

	long long res = 0;
	For(i , 1 , n) {
		int id = -1;
		int l = i , r = n;
		while (l <= r) {
			int mid = (l + r) >> 1;
			if (get_max(i , mid) >= get_min(i , mid)) {
				id = mid; 
				r = mid - 1; 
			} else l = mid + 1;
		}
		if (id == -1) continue;
		if (get_max(i , id) > get_min(i , id)) continue;
		l = id , r = n;
		int Next = id;
		while (l <= r) {
			int mid = (l + r) >> 1;
			if (get_max(i , mid) == get_min(i , mid)) {
				Next = mid;
				l = mid + 1;
			} else r = mid - 1;
		}

		res += Next - id + 1;
	}

	cout << res << endl;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	
	//freopen("input.inp" , "r" , stdin);
	For(i , 1 , 200000) Prelg2[i] = (int) log2(i);
	ReadData();
	Process();

	return 0;

}			