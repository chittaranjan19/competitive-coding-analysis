#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007
#define inf 1000000000
#define maxn 60

#define ll long long
#define pii pair<int, int>
#define pb push_back
#define sin scanint
#define bitcount(x) __builtin_popcount(x)
#define fill(s, p) memset(s, p, sizeof(s));

#ifdef ONLINE_JUDGE
#define gc getchar
#endif

#ifndef ONLINE_JUDGE
#define gc getchar
//freopen("input.txt", "r", stdin)
//freopen("output.txt", "w", stdout)
#endif

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

ll modpow(ll a, ll b)
{
    ll x=1ll, y=a;
    while(b){
        if(b%2)
            x=(x*y)%MOD;
        y=(y*y)%MOD;
        b/=2;
    }
    return x;
}

ll gcd(ll a, ll b)
{
    if(a%b==0)
        return b;
    else
        return gcd(b, a%b);
}

char mat[maxn][maxn];
char arr[maxn][maxn];
int cnt[maxn][maxn];
char out[2*maxn][2*maxn];
bool abc[maxn][maxn];
vector< pii > v, av;
map<pii, bool> m1;
map<pii, bool> :: iterator it;
pii cur, diff;
int n;

bool isvalid(int i, int j)
{
    return (i>=0 && i<n && j>=0 && j<n)?1:0;
}

int main()
{
    //freopen("input.txt", "r", stdin);
    fill(cnt, 0);
    int i, j, k, l, row, col, crow, ccol;
    sin(n);
    for(i=0; i<n; i++){
        scanf("%s", arr[i]);
        for(j=0; j<n; j++){
            if(arr[i][j]=='o')
                v.pb(make_pair(i, j));
        }
    }
    for(i=0; i<v.size(); i++){
        cur = v[i];
        row = cur.first;
        col = cur.second;
        for(j=0; j<n; j++){
            for(k=0; k<n; k++){
                if(arr[j][k]=='.'){
                    av.pb(make_pair(j-row, k-col));
                }
            }
        }
    }
    /*for(i=0; i<v.size(); i++)
        cout << v[i].first << " " << v[i].second << endl;
    for(i=0; i<av.size(); i++)
        cout << av[i].first << " " << av[i].second << endl;*/
    for(i=0; i<n; i++){
        for(j=0; j<n; j++)
            mat[i][j] = 'x';
    }
    /*for(i=0; i<n; i++){
        cout << mat[i] << endl;
    }*/
    for(i=0; i<v.size(); i++){
        cur = v[i];
        row = cur.first;
        col = cur.second;
        fill(abc, false);
        mat[row][col] = 'o';
        for(j=0; j<av.size(); j++){
            if(isvalid(row+av[j].first, col+av[j].second)){
                if(abc[row+av[j].first][col+av[j].second])
                    continue;
                cnt[row+av[j].first][col+av[j].second]++;
                if(cnt[row+av[j].first][col+av[j].second]==v.size())
                    mat[row+av[j].first][col+av[j].second] = '.';
                abc[row+av[j].first][col+av[j].second] = true;
            }
        }
    }
    /*for(i=0; i<n; i++){
        cout << mat[i] << endl;
    }*/
    for(i=0; i<n; i++){
        for(j=0; j<n; j++){
            if(arr[i][j]=='o')
                continue;
            if(arr[i][j]!=mat[i][j]){
                printf("NO\n");
                return 0;
            }
        }
    }
    for(i=0; i<(2*n-1); i++){
        for(j=0; j<(2*n-1); j++)
            out[i][j] = 'x';
    }
    out[n-1][n-1] = 'o';
    row = col = n-1;
    printf("YES\n");
    for(i=0; i<av.size(); i++){
        out[row+av[i].first][col+av[i].second] = '.';
    }
    for(i=0; i<(2*n-1); i++){
        printf("%s\n", out[i]);
    }
    return 0;
}