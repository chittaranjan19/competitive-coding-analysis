#include <bits/stdc++.h>
#define N 500005
using namespace std;
vector<vector<int> > G(N);
int n;
void dfs(int u, int father, int depth, vector<int> &d)
{
	if (G[u].size() == 1)
	{
		d.push_back(depth);
		return ;
	}
	vector<int>::iterator it;
	int v;
	for (it = G[u].begin(); it != G[u].end(); it++)
	{
		if (*it != father)
			dfs(*it, u, depth+1, d);
	}
}
int main()
{
	int i, j, k, ans = 0, u, v, l;
	vector<int>::iterator it;
	vector<int> d;
	scanf("%d", &n);
	for (i = 1; i < n; i++)
	{
		scanf("%d%d", &u, &v);
		G[u].push_back(v);
		G[v].push_back(u);
	}
	for (it = G[1].begin(); it != G[1].end(); it++)
	{
		d.clear();
		v = *it;
		dfs(v, 1, 1, d);
		sort(d.begin(), d.end());
		l = d.size();
		for (i = 1; i < l; i++) 
		{
			while(d[i] <= d[i-1]) 
				d[i]++;
		}
		ans = max(ans, d[l-1]);
	}
	printf("%d", ans);
}
