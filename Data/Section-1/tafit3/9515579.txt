import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class ProblemA {
    BufferedReader rd;

    private ProblemA() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int[] a = intarr();
        int k = a[1];
        a = intarr();
        Map<Integer, Set<Integer>> m = new TreeMap<>();
        for(int i=0;i<a.length;i++) {
            Set<Integer> s = m.get(a[i]);
            if(s == null) {
                s = new HashSet<>();
                m.put(a[i], s);
            }
            s.add(i+1);
        }
        List<Integer> res = new ArrayList<>();
        for(Map.Entry<Integer, Set<Integer>> e: m.entrySet()) {
            int studyTime = e.getKey();
            for(Integer q: e.getValue()) {
                if(k >= studyTime) {
                    k -= studyTime;
                    res.add(q);
                }
            }
        }
        out(res.size());
        StringBuilder buf = new StringBuilder();
        boolean first = true;
        for(Integer r: res) {
            if(first) {
                first = false;
            } else {
                buf.append(' ');
            }
            buf.append(r);
        }
        out(buf);
    }

    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = split(s);
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }

    private String[] split(String s) {
        int n = s.length();
        int sp = 0;
        for(int i=0;i<n;i++) {
            if(s.charAt(i)==' ') {
                sp++;
            }
        }
        String[] res = new String[sp+1];
        int last = 0;
        int x = 0;
        for(int i=0;i<n;i++) {
            char c = s.charAt(i);
            if(c == ' ') {
                res[x++] = s.substring(last,i);
                last = i+1;
            }
        }
        res[x] = s.substring(last,n);
        return res;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemA();
    }
}
