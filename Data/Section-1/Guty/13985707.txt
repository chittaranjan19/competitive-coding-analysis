#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;



void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int toNumber (string s)
{
	int Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (int number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}


tint gcd(tint a, tint b)
{
	if (a > b)
		return gcd(b,a);
	else if (a == 0)
		return b;
	else
		return gcd(b % a, a);
}



int main()
{
	ios_base::sync_with_stdio(0);
	tint t,w,b;
	cin >> t >> w >> b;
	//cout << b+b  << endl;
	if (w < b)
	{
		tint aux = b;
		b = w;
		w = aux;
	}
	tint p = (t/w)*gcd(b,w);
	tint r = (t % b) % w;
	p += min(b-1,r);
	tint q = t;
	tint g = gcd(p,q);
	p /= g;
	q /= g;
	
	cout << p << "/" << q << endl;
	
	return 0;
}



