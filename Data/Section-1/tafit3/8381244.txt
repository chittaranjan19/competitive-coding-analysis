import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.SortedSet;
import java.util.TreeSet;

public class ProblemA {
    BufferedReader rd;

    private ProblemA() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        int[] a = intarr();
        int n = a[0];
        int k = a[1];
        List<Integer> p = new ArrayList<>();
        SortedSet<Integer> toUse = new TreeSet<Integer>();
        for(int i=2;i<=n;i++) {
            toUse.add(i);
        }
        p.add(1);
        int last = 1;
        int lastDir = 1;
        while(k > 1) {
            if(lastDir == 1) {
                last += k;
                p.add(last);
                toUse.remove(last);
                lastDir = -1;
            } else {
                last -= k;
                p.add(last);
                toUse.remove(last);
                lastDir = 1;
            }
            k--;
        }
        for(Integer q: toUse) {
            p.add(q);
        }
        StringBuilder buf = new StringBuilder();
        for(Integer q: p) {
            if(buf.length() != 0) {
                buf.append(' ');
            }
            buf.append(q);
        }
        out(buf);
    }

    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = s.split(" ");
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemA();
    }
}
