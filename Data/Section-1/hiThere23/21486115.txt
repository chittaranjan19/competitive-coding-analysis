#include <bits/stdc++.h>
#define FOR(i, j, k) for (int i = j; i <= k; i ++)
#define FORD(i, j, k) for (int i = j; i >= k; i --)
#define mn 500005
#define maxC 1000000007
#define pb push_back
#define F first
#define S second
#define mp make_pair

using namespace std;
int n, c, dif[mn];
vector<int> g[mn];

void getWord(int id)
{
    int sz, hie;
    cin >> sz;
    FOR(i, 1, sz)
    {
        cin >> hie;
        g[id].pb(hie);
        if (!dif[id])
        {
            if (int(g[id - 1].size()) < i)
                dif[id] = -1;
            else
                if (g[id - 1][i - 1] != g[id][i - 1])
                    dif[id] = i;
        }
    }
    if (!dif[id])
    {
        if (sz < int(g[id - 1].size()))
        {
            cout << -1;
            exit(0);
        }
        dif[id] = -1;
    }
}

void setup()
{
    int sz, hie;
    cin >> n >> c >> sz;
    FOR(i, 1, sz)
    {
        cin >> hie;
        g[1].pb(hie);
    }
    FOR(i, 2, n)
        getWord(i);
}

void xuly()
{
    int maxMove = maxC, minMove = 0;
    FOR(i, 2, n)
    if (dif[i] != -1)
    {
        int x = g[i - 1][dif[i] - 1];
        int y = g[i][dif[i] - 1];
        if (x < y)
            maxMove = min(maxMove, c - y);
        else
            minMove = max(minMove, c - x + 1);
    }
    if (maxMove < minMove)
        cout << -1;
    else
        cout << minMove;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    setup ();
    xuly ();
    return 0;
}
