// Greg And Array

#include <algorithm>
#include <bits/stdc++.h>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

int main()
{
	long long int n,m,k,a,b,c,l,r,i;
	vector<pair<pair<long long int,long long int>,long long int> > V;
	cin>>n>>m>>k;
	long long int arr[n+1],N[n+1];
	long long int M[m+1];
	for(i=0;i<=m;i++)
	{
		M[i]=0;
	}
	for(i=0;i<=n;i++)
	{
		N[i]=0;
	}
	for(i=0;i<n;i++)
	{
		cin>>arr[i];
	}
	for(i=0;i<m;i++)
	{
		cin>>a>>b>>c;
		pair<long long int,long long int> p=make_pair(a,b);
		V.push_back(pair<pair<long long int,long long int>,long long int>(p,c));
	}
	for(i=0;i<k;i++)
	{
		cin>>l>>r;
		M[l-1]+=1;
		M[r]-=1;
	}
	for(i=1;i<=m;i++)
	{
		M[i]+=M[i-1];
	}
	for(i=0;i<m;i++)
	{
		V.at(i).second*=M[i];
	}
	for(i=0;i<m;i++)
	{
		l=V.at(i).first.first;
		r=V.at(i).first.second;
		N[l-1]+=V.at(i).second;
		N[r]-=V.at(i).second;
	}
	for(i=1;i<=n;i++)
	{
		N[i]+=N[i-1];
	}
	for(i=0;i<n;i++) cout<<arr[i]+N[i]<<" ";
	cout<<endl;
	return 0;
}