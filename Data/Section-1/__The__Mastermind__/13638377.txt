const
  tfi = '';//'587d.inp';
  tfo = '';//'587d.out';
  base = 1000000007;

var
  n,l,m,res : longint;
  a,p,f,s,r : array [1..1000000] of longint;

procedure enter;
  var i : longint;
  begin
    assign(input,tfi);
    reset(input);
    read(n,l,m);
    for i := 1 to n do
      begin
        read(a[i]);
        p[i] := i;
      end;
    close(input);
  end;

procedure swap(var x,y : longint);
  var z : longint;
  begin
    z := x;
    x := y;
    y := z;
  end;

procedure sort(l,h : longint);
  var i,j,x : longint;
  begin
    i := l;
    j := h;
    x := a[random(h - l + 1) + l];
    repeat
      while a[i] < x do inc(i);
      while a[j] > x do dec(j);
      if i <= j then
        begin
          swap(a[i],a[j]);
          swap(p[i],p[j]);
          inc(i);
          dec(j);
        end;
    until i > j;
    if l < j then sort(l,j);
    if i < h then sort(i,h);
  end;

function plus(x,y : longint) : longint;
  begin
    exit((x + y) mod base);
  end;

function id(i,j : longint) : longint;
  begin
    exit((i - 1)*n + j);
  end;

function pos(i,j : longint) : longint;
  begin
    exit((i - 1)*n + p[j]);
  end;

procedure process;
  var i,j,t1,t2 : longint;
  begin
    sort(1,n);
    r[n] := n;
    for j := n-1 downto 1 do
      if a[j] <> a[j+1] then r[j] := j
      else r[j] := r[j+1];
    for j := 1 to n do
      begin
        if pos(1,j) <= l then
          begin
            f[id(1,j)] := 1;
            inc(res);
          end;
        s[id(1,j)] := j;
      end;
    for i := 2 to m do
      for j := 1 to n do
        begin
          if pos(i,j) <= l then
            begin
              f[id(i,j)] := plus(s[id(i-1,r[j])],1);
              res := plus(res,f[id(i,j)]);
            end;
          if j = 1 then s[id(i,j)] := plus(s[id(i-1,j)],f[id(i,j)])
          else s[id(i,j)] := plus(s[id(i-1,j)],plus(s[id(i,j-1)],f[id(i,j)]));
        end;
    //for i := 1 to m do res := plus(res,s[id(i,n)]);
    //res := s[id(m,n)];
  end;

procedure print;
  begin
    assign(output,tfo);
    rewrite(output);
    write(res);
    close(output);
  end;

begin
  enter;
  process;
  print;
end.