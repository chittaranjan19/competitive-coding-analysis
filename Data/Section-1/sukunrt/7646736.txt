#include <iostream>
#include <cstring>
using namespace std;
int dp[1005];
int e[1005][1005][6], n, k;
int solve(int x){
        if (dp[x] != -1) return dp[x];
        int &res = dp[x];
        res = 0;
        for(int i = 1; i <= n; i++){
                int flag = 1;
                for(int j = 1; j <= k; j++){
                        if (e[i][x][j] == 0) {
                                flag = 0;
                                break;
                        }
                }
                if (flag){
                        int mi = solve(i);
                        res = max(res, mi);
                }

        }
        res++;
        return res;
}
        
int main(){
        ios::sync_with_stdio(false);
        cin >> n >> k;
        memset(dp, -1, sizeof(dp));
        int a[1005];
        for(int i = 0; i < k; i++){
                for(int j = 0; j < n; j++)
                        cin >> a[j];
                for(int j = 0; j < n; j++){
                        for(int r = j+1; r < n; r++)
                                e[a[j]][a[r]][i+1] = 1;
                }
        }

        for(int i =1; i <= n; i++) solve(i);
        int mx = 0;
        for(int i = 1; i <= n; i++) mx = max(mx, solve(i));
        cout << mx << endl;
        return 0;
}
        
                        



        
