#include <iostream>
#include <climits>
#include <string>       // string s; cin >> s;
#include <cstring>      // memset(b, 0, sizeof(arr)); strcpy(a1, a2); strcat(a1, a2);
#include <cmath>
#include <cstdio>       // getchar(), gets()
#include <cstdlib>      // rand(), max(), min()
#include <ctime>        // rand(): srand(int(time(0)));
#include <algorithm>    // std::sort(a + 0, a + n); a - массв, n - кол-во эл-тов
#include <iomanip>      // setw(4), setfill('.'), setprecision(2)
#include <vector>
#include <array>
#include <fstream>      // file IO (input-output)
#include <cctype>       // isupper()
#include <memory>       // shared_ptr<>, uniqu_ptr<>
#include <iterator>     // ostream_iterator<int, char> our_iter(cout, " ");
#include <set>
#include <map>
#include <list>
#include <queue>
#define SRT srand(int(time(0)))

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
ld pi = 3.14159265358979323;
int ten[8] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};

typedef map<int, int> Map;
typedef Map::iterator mIter;
typedef pair<const int, int> mPair;
typedef pair<int, int> Pair;
typedef set<int> Set;
typedef Set::iterator sIter;
typedef list<int> List;
typedef List::iterator lIter;

int main()
{
    int n, k;
    cin >> n >> k;
    
    const int S = 100001;
    int ind_a[S], ind_b[S], na = 0, nb = 0;
    char s[S];
    cin >> s;
    for (int i = 0; i < n; ++i)
    {
        if (s[i] == 'a')
            ind_a[na++] = i;
        else
            ind_b[nb++] = i;
    }
    
    if (k != 0)
    {
        int a[S] = {1}, b[S] = {1}, ia = 1, ib = 1, dk = k, ans = 1;
        
        // a
        if (s[0] == 'b')
        {
            if (--dk < 0)
                a[0] = 0;
        }
        
        for (int i = 1; i < n; ++i)
        {
            if (s[i] == 'b')
            {
                if (--dk < 0 && ib < nb)
                {
                    if (ind_b[ib-1] + 1 < n && s[ ind_b[ib-1] + 1 ] == 'a')
                        a[i] = i - ind_b[ib++ - 1];
                    else
                        a[i] = i - ind_b[ib++] + 1;
                }
                else
                    a[i] = a[i-1] + 1;
            }
            else
                a[i] = a[i-1] + 1;
            ans = ans < a[i] ? a[i] : ans;
        }
        
        // b
        dk = k;
        if (s[0] == 'a')
        {
            if (--dk < 0)
                b[0] = 0;
        }
        
        for (int i = 1; i < n; ++i)
        {
            if (s[i] == 'a')
            {
                if (--dk < 0 && ia < na)
                {
                    if (ind_a[ia-1] + 1 < n && s[ ind_a[ia-1] + 1 ] == 'b')
                        b[i] = i - ind_a[ia++ - 1];
                    else
                        b[i] = i - ind_a[ia++] + 1;
                }
                else
                    b[i] = b[i-1] + 1;
            }
            else
                b[i] = b[i-1] + 1;
            ans = ans < b[i] ? b[i] : ans;
        }
        
        cout << ans << '\n';
    }
    else
    {
        // a
        int ans = 1, amount = 0;
        for (int i = 0; i < n; ++i)
        {
            if (s[i] == 'a')
                ++amount;
            else
            {
                ans = ans < amount ? amount : ans;
                amount = 0;
            }
        }
        ans = ans < amount ? amount : ans;
        
        // b
        amount = 0;
        for (int i = 0; i < n; ++i)
        {
            if (s[i] == 'b')
                ++amount;
            else
            {
                ans = ans < amount ? amount : ans;
                amount = 0;
            }
        }
        ans = ans < amount ? amount : ans;
        
        cout << ans << '\n';
    }
    return 0;
}