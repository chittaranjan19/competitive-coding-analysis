#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <ctime>

using namespace std;

#define ll long long
#define sc second
#define fs first
#define mp make_pair

vector<int> g[222222];
int n, m;

ll ans = -1;

bool used[111111];
ll len[1111111];

void dfs(int v)
{
	if (used[v]) return;
	used[v] = 1;
	ans = max(ans, (ll)g[v].size()*len[v]);
	for (int i = 0; i < g[v].size(); i++)
	{
		int to = g[v][i];
		if (to > v)
			len[to] = max(len[to], len[v] + 1);
		dfs(to);
	}
	for (int i = 0; i < g[v].size(); i++)
	{
		int to = g[v][i];
		if (to < v)
			len[to] = max(len[to], len[v] + 1);
	}

	ans = max(ans, (ll)g[v].size()*len[v]);
}

int main() 
{
	cin >> n >> m;
	for (int i = 0; i < m; i++)
	{
		int u, v;
		cin >> u >> v;
		g[v].push_back(u);
		g[u].push_back(v);
	}
	for (int i = 0; i < n + 1; i++)
		len[i] = 1;
	dfs(1);
	cout << ans;
	return 0;
}