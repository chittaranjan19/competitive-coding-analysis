#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

int rd(int x1, int y1, int x2, int y2)
{
    printf("? %d %d %d %d\n", x1, y1, x2, y2);
    fflush(stdout);
    int x;
    scanf("%d", &x);
    return x;
}

int checkl(int l, int r, int d, int u, int k)
{
    int lb = l, ub = r;
    while(lb < ub)
    {
        int mid = (lb + ub + 1) >> 1;
        if(rd(mid, d, r, u) >= k) lb = mid;
        else ub = mid - 1;
    }
    return lb;
}

int checkr(int l, int r, int d, int u, int k)
{
    int lb = l, ub = r;
    while(lb < ub)
    {
        int mid = (lb + ub) >> 1;
        if(rd(l, d, mid, u) >= k) ub = mid;
        else lb = mid + 1;
    }
    return lb;
}

int checkd(int l, int r, int d, int u, int k)
{
    int lb = d, ub = u;
    while(lb < ub)
    {
        int mid = (lb + ub + 1) >> 1;
        if(rd(l, mid, r, u) >= k) lb = mid;
        else ub = mid - 1;
    }
    return lb;
}

int checku(int l, int r, int d, int u, int k)
{
    int lb = d, ub = u;
    while(lb < ub)
    {
        int mid = (lb + ub) >> 1;
        if(rd(l, d, r, mid) >= k) ub = mid;
        else lb = mid + 1;
    }
    return lb;
}

int main()
{
    int n;
    scanf("%d", &n);
    int r1 = checkr(1, n, 1, n, 1);
    int l1 = checkl(1, r1, 1, n, 1);
    int u1 = checku(l1, r1, 1, n, 1);
    int d1 = checkd(l1, r1, 1, u1, 1);
    int r2 = checkr(1, n, 1, n, 2);
    int k = rd(l1, 1, n, n);
    int l2 = checkl(1, n, 1, n, 3 - k);
    k = rd(1, d1, n, n);
    int d2 = checkd(1, n, 1, n, 3 - k);
    k = rd(1, 1, n, u1);
    int u2 = checku(1, n, 1, n, 3 - k);
    printf("! %d %d %d %d %d %d %d %d\n", l1, d1, r1, u1, l2, d2, r2, u2);
    return 0;
}
