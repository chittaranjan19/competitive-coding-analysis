import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

public class TheChildAndSet {
    private TheChildAndSet() throws IOException {
        BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
        String h = rd.readLine();
        String[] q = h.split("\\s+");
        int sum = Integer.parseInt(q[0]);
        int limit = Integer.parseInt(q[1]);
        int[] max = new int[17];
        for(int i=0;i<17;i++) {
            max[i] = (limit >> (i+1));
            if((limit >> i) > 0) {
                max[i]++;
            }
        }
        Set<Integer> result = new HashSet<Integer>();
        int[] avail = Arrays.copyOf(max, max.length);
        boolean ok = true;
        for(int i=0;i<17;i++) {
            if((sum & (1<<i)) > 0) {
                int req = 1;
                int j = i;
                while(req > 0 && j>=0) {
                    if(avail[j] > 0) {
                        int y = Math.min(req,avail[j]);
                        for(int k=0;k<y;k++) {
                            avail[j]--;
                            result.add((avail[j] << (j+1)) + (1<<j));
                            req--;
                        }
                    }
                    req <<= 1;
                    j--;
                }
                if(req > 0) {
                    ok = false;
                    break;
                }
            }
        }
        if(ok) {
            out(result.size());
            StringBuilder buf = new StringBuilder();
            for(Integer r: result) {
                if(buf.length() > 0) {
                    buf.append(' ');
                }
                buf.append(r);
            }
            out(buf);
        } else {
            out(-1);
        }
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new TheChildAndSet();
    }
}
