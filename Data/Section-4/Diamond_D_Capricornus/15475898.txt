Const Fi='';//'C.INP';
      Fo='';//'C.OUT';
      maxN=3*100001;
Type  Vv=Record
      Id,v:Longint;
      End;
Var   n:Longint;
      B:Array[0..maxN]Of Vv;
      A,F,D,Tr:Array[0..maxN]Of Longint;
Procedure Enter;
Var i,J:Longint;
  Begin
    Readln(n);
    For i:=1 to n do
      With B[i] do
        Begin
          Read(v);
          Id:=i;
        End;
  End;
Procedure Sort(l,h:Longint);
Var i,J:Longint;
    Key,Tmp:Vv;
  Begin
    If l>=h then Exit;
    i:=l;J:=h;
    Key:=B[l+Random(h-l+1)];
    Repeat
      While B[i].v<Key.v do Inc(i);
      While B[J].v>Key.v do Dec(J);
      If i<=J then
        Begin
          If i<J then
            Begin
              Tmp:=B[i];
              B[i]:=B[J];
              B[J]:=Tmp;
            End;
          Inc(i);Dec(J);
        End;
    Until i>J;
    Sort(l,J);Sort(i,h);
  End;
Procedure Trace(v:Longint);
  Begin
    If v<>0 then
      Begin
        Trace(Tr[v]);
        Writeln(Tr[v]+1,' ',v);
      End;
  End;
Procedure Main;
Var i,k,Mm:Longint;
  Begin
    Sort(1,n);
    Mm:=1;
    A[B[1].Id]:=1;
    For i:=2 to n do
      Begin
        If B[i].v>B[i-1].v then
          Inc(Mm);
        A[B[i].Id]:=Mm;
      End;
    Fillchar(D,Sizeof(D),255);
    Fillchar(F,Sizeof(F),0);
    F[0]:=0;
    For i:=1 to n+1 do
      Begin
        k:=D[A[i]];
        If k<>-1 then
          Break;
        D[A[i]]:=i;
      End;
    F[i]:=1;
    Tr[i]:=0;
    For i:=i+1 to n do
      Begin
        F[i]:=F[i-1];
        Tr[i]:=Tr[i-1];
        k:=D[A[i]];
        If (k<>-1) and (F[k-1]+1>F[i]) then
          Begin
            F[i]:=F[k-1]+1;
            Tr[i]:=k-1;
          End;
        D[A[i]]:=i;
      End;
    If F[n]<>0 then
      Begin
        Writeln(F[n]);
        Trace(n);
      End
    Else
      Writeln(-1);
  End;
Begin
  Assign(Input,Fi);Reset(Input);
  Assign(Output,Fo);Rewrite(Output);
  Enter;
  Main;
  Close(Input);Close(Output);
End.