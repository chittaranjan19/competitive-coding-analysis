#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

const long long inf = (long long)2 * 1e18;
const int MOD = (int)1e9 + 7;
const int MAX_N = 1000;
const long double pi = 3.1415926;
const long double eps = 1e-6;

typedef struct
{
    long long first;
    long long second;
} dist;

bool comp(dist a, dist b)
{
    if (a.first < b.first)
        return true;
    else if (a.first == b.first)
        return a.second > b.second;
    else
        return false;
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	long long n, x1, y1, x2, y2, x, y;
	cin >> n >> x1 >> y1 >> x2 >> y2;
	dist v[n];
	for (int i = 0; i < n; i++)
    {
        cin >> x >> y;
        v[i].first = (x - x1) * (x - x1) + (y - y1) * (y - y1);
        v[i].second = (x - x2) * (x - x2) + (y - y2) * (y - y2);
    }
    sort(v, v + n, comp);
    long long suff[n];
    suff[n - 1] = v[n - 1].second;
    for (int i = n - 2; i >= 0; i--)
        suff[i] = max(suff[i + 1], v[i].second);
    long long ans = min(v[n - 1].first, suff[0]);
    for (int i = 0; i < n - 1; i++)
        ans = min(ans, v[i].first + suff[i + 1]);
    cout << ans;
	return 0;
}
