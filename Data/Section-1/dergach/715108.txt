#include <stdio.h>
#include <math.h>
#include <string.h>
#include <time.h>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <algorithm>
using namespace std;

int n, m, i, j, res[100005], vrem, etazh;
struct G{
    int s, f, t;
}a[100005];

int main()
{
    scanf("%d %d", &n, &m);
    for(i = 0; i < n; i++)
        scanf("%d %d %d", &a[i].s, &a[i].f, &a[i].t);

    for(i = 0; i < n; i++)
    {
        if(a[i].s == a[i].f)
        {
            res[i] = a[i].t;
            continue;
        }
        vrem = a[i].t % (2 * m - 2);
        if(vrem <= m - 1)
        {
            etazh = vrem + 1;
            if(a[i].s < a[i].f)
            {
                if(etazh <= a[i].s)
                {
                    res[i] = a[i].t + a[i].f - etazh;
                }
                else
                {
                    res[i] = a[i].t + m - etazh + m - 1 + a[i].f - 1;
                }
            }
            else
            {
                if(etazh <= a[i].s)
                {
                    res[i] = a[i].t + m - etazh + m - a[i].f;
                }
                else
                {
                    res[i] = a[i].t + m - etazh + m - a[i].f;
                }
            }
        }
        else
        {
            etazh = 2 * m - vrem - 1;
            if(a[i].s < a[i].f)
            {
                if(etazh >= a[i].s)
                {
                    res[i] = a[i].t + a[i].s - 1 + a[i].f - 1;
                }
                else
                {
                    res[i] = a[i].t + etazh - 1 + a[i].f - 1;
                }
            }
            else
            {
                if(etazh >= a[i].s)
                {
                    res[i] = a[i].t + etazh - a[i].f;
                }
                else
                {
                    res[i] = a[i].t + etazh - 1 + m - 1 + m - a[i].f;
                }
            }
        }
    }

    for(i = 0; i < n; i++)
        printf("%d\n", res[i]);
    return 0;
}