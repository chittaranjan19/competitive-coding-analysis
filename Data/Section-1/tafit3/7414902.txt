import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Map;
import java.util.SortedMap;
import java.util.TreeMap;

public class ProblemA {
    private ProblemA() throws IOException {
        BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));
        rd.readLine();
        String h = rd.readLine();
        String[] q = h.split("\\s+");
        int[] price = new int[q.length];
        for(int i=0;i<q.length;i++) {
            price[i] = Integer.parseInt(q[i]);
        }
        SortedMap<Integer, Integer> byPrice = new TreeMap<Integer,Integer>();
        h = rd.readLine();
        q = h.split("\\s+");
        for(int i=0;i<q.length;i++) {
            byPrice.put(price[i], Integer.parseInt(q[i]));
        }
        Map.Entry<Integer, Integer> last = null;
        boolean res = true;
        for(Map.Entry<Integer, Integer> entry: byPrice.entrySet()) {
            if(last != null) {
                int curPrice = entry.getKey();
                int curQuality = entry.getValue();
                int lastPrice = last.getKey();
                int lastQuality = last.getValue();
                if((curPrice < lastPrice && curQuality > lastQuality) ||
                    (curPrice > lastPrice && curQuality < lastQuality)) {
                    res = false;
                    break;
                }
            }
            last = entry;
        }
        out(res?"Poor Alex":"Happy Alex");
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemA();
    }
}
