import java.io.*;
import java.util.*;
import java.math.*;


public class Main implements Runnable {
    static BufferedReader in;
    static PrintWriter out;
    static StringTokenizer tok;
    
    static final int MOD = (int)1e9 + 7;
    static int[] f;
    
    static void solve() throws Exception {
        int n = nextInt() + 1;
        f = new int[2 * n];
        f[0] = 1;
        for (int i = 1; i < 2 * n; ++i) {
            f[i] = (int) (((long)f[i - 1] * i) % MOD);
        }
        int res = (int) (((((long)2 * f[2 * n - 1] * binpow(f[n], MOD - 2)) % MOD) * binpow(f[n - 1], MOD - 2)) % MOD);
        out.println((res - 1 + MOD) % MOD);
    }
    
    static int binpow(int a, int n) {
        int res = 1;
        while (n > 0) {
            if ((n & 1) != 0) {
                res = (int) (((long) res * a) % MOD);
            }
            a = (int) (((long)a * a) % MOD);
            n >>= 1;
        }
        return res;
    }
    
    static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    static BigInteger nextBigInteger() throws IOException {
        return new BigInteger(next());
    }
    
    static String next() throws IOException {
        while (tok == null || !tok.hasMoreTokens()) {
            tok = new StringTokenizer(in.readLine());
        }
        return tok.nextToken();
    }
    
    static String nextLine() throws IOException {
        tok = new StringTokenizer("");
        return in.readLine();
    }

    static boolean hasNext() throws IOException {
        while (tok == null || !tok.hasMoreTokens()) {
            String s = in.readLine();
            if (s == null) {
                return false;
            }
            tok = new StringTokenizer(s);
        }
        return true;
    }
    
    public static void main(String args[]) {
        new Thread(null, new Main(), "Main", 1 << 28).start();
    }
    
    public void run() {
        try {
            in = new BufferedReader(new InputStreamReader(System.in));
            out = new PrintWriter(new OutputStreamWriter(System.out));
            //in = new BufferedReader(new FileReader("input.in"));
            //out = new PrintWriter(new FileWriter("output.out"));
            Locale.setDefault(Locale.US);
            solve();
            in.close();
            out.close();
        } catch (Throwable e) {
            e.printStackTrace();
            java.lang.System.exit(1);
        }
    }
}