#include<iostream>
using namespace std;
void set_mem(int arr[],int val,int n)
{
	int i;
	for(i=0;i<n;i++)
		arr[i]=val;
}	
int main()
{
	ios_base::sync_with_stdio(false);
	int j,i,n,t,arr[100],dp[100];
	cin>>n>>t;
	for(i=0;i<n;i++)
	{
		cin>>arr[i];
	}
	set_mem(dp,1,n);
	if(t<n)
	{
		dp[0]=arr[0];
		int max=dp[0];
		j=1;
		for(i=1;i<n*t;i++)
		{
			max=dp[j-1];
			if(arr[i%n]>=max)
			{
				dp[j++]=arr[i%n];
				//max=dp[j-1];
			//	cout<<max<<"\n";
			}
			else
			{
				int left=0,right=j,mid,key=arr[i%n];
				while(right>left)
				{
					mid=(left+right)/2;
					if(dp[mid]<key)
					{
						left=mid+1;
					}
					else
					{
						right=mid;
					}
				}
				dp[left]=arr[i%n];
			}
		}
		cout<<j+t/n<<endl;//printf("%d\n",j);
	}
	else
	{
		dp[0]=arr[0];
                int max=dp[0];
                j=1;
                for(i=1;i<n*t;i++)
                {
                        if(arr[i%n]>=max)
                        {
                                dp[j++]=arr[i%n];
                                max=arr[i%n];
                        }
                        else
                        {
                                int left=0,right=j,mid,key=arr[i%n];
                                while(right>left)
                                {
                                        mid=(left+right)/2;
                                        if(dp[mid]<key)
                                        {
                                                left=mid+1;
                                        }
                                        else
                                        {
                                                right=mid;
                                        }
                                }
                                dp[left]=arr[i%n];
                        }
                }
                cout<<j+t/n<<endl;
	}
	return 0;
}
