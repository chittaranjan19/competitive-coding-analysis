using System;
using System.Collections.Generic;
using System.Linq;

namespace ECF15_TaskB
{
	class Program
	{
		static void Main(string[] args)
		{
			int n = Convert.ToInt32(Console.ReadLine());
			int[] A = Console.ReadLine().Split(' ').Select(x => Convert.ToInt32(x)).ToArray();

			Dictionary<int, int> cnt = new Dictionary<int, int>();

			foreach (int a in A)
				if (cnt.ContainsKey(a))
				{
					int vl;
					cnt.TryGetValue(a, out vl);
					cnt.Remove(a);
					cnt.Add(a, vl + 1);
				}
				else
					cnt.Add(a, 1);

			long c = 0;
			foreach (int a in A)
			{
				int vl;
				cnt.TryGetValue(a, out vl);
				cnt.Remove(a);
				cnt.Add(a, vl - 1);

				for (int k = 1; k < 32; k++)
					if (cnt.ContainsKey((int)Math.Pow(2, k) - a))
					{
						cnt.TryGetValue((int)Math.Pow(2, k) - a, out vl);
						c += vl;
					}
			}

			Console.WriteLine(c);
		}
	}
}
