# include <iostream>
# include <cstdlib>
# include <cstdio>
# include <algorithm>
# include <cstring>
# include <string>
# include <queue>
# include <set>
# include <map>
# include <vector>

# define pb push_back
# define mp make_pair
# define endl printf("\n")
typedef long long int lli;

using namespace std;

const int N = 2000000;
int n, a[N], cnt, m, x, d[N], dd[N], p[N], ret[N], it;
vector < int > dp[N];
bool used[N], ans[N], st[N];
pair < int, int > b[N];

int main ()
{
    cin >> n;
    
    for (int i = 1; i <= n; ++i)
    {
        cin >> a[i];
        b[i].first = a[i];
        b[i].second = i;
    }
    
    sort (b + 1, b + n + 1);
    
    a[b[1].second] = ++cnt;
    for (int i = 2; i <= n; ++i)
     if (b[i].first == b[i - 1].first)
     {
         ret[cnt] = a[b[i].second];
         a[b[i].second] = cnt;
     }
     else 
     {
         ret[cnt + 1] = a[b[i].second];
         a[b[i].second] = ++cnt;
     }
    
    for (int i = 1; i <= n; ++i)
     ++d[a[i]];   
    
    for (int i = 1; i <= n; ++i)
    if (d[i] & 1)
    {
        puts ("NO");
        return 0;
    }
    
    cin >> m;
    
    for (int i = 1; i <= m; ++i)
    {
        cin >> p[i];
        ++dd[a[p[i]]];
        used[p[i]] = true;
    }
    
    for (int i = 1; i <= n; ++i)
    if (dd[i] > d[i])
    {
        puts ("NO");
        return 0;
    }
    
    for (int i = 1; i <= n; ++i)
     if (!used[i])
      dp[a[i]].push_back (i);
    
    for (int i = 1; i <= p[i]; ++i)
    {
        it = lower_bound (dp[a[p[i]]].begin (), dp[a[p[i]]].end (), p[i]) - dp[a[p[i]]].begin ();
        --it;
        if (it >= 0 && it < dp[a[p[i]]].size ())
        {
            used[dp[a[p[i]]][it]] = true;
            ans[dp[a[p[i]]][it]] = true;
        }
        else
        {
            puts ("NO");
            return 0;            
        }
    }
    
    for (int i = 1; i <= n; ++i)
    {
        if (!used[i])
        {
            if (!st[a[i]])
            {
                st[a[i]] = used[i] = ans[i] = true;
            }
            else
            {
                used[i] = true;
                st[a[i]] = ans[i] = false;
            }
        }
    }
    
    for (int i = 1; i <= n; ++i)
     if (st[a[i]])
     {
            puts ("NO");
            return 0;            
        }
    
    puts ("YES");
    
    for (int i = 1; i <= n; ++i)
    {
     if (!ans[i])
      cout << "-";
      cout << ret[a[i]] << " ";
    }
    
    return 0;
}

