#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

typedef long long ll;

const int maxn = 1e5 + 5;
const int maxh = 35;
const int INF = 1 << 30;

int par[maxn][maxh], mn[maxn][maxh];
ll sum[maxn][maxh];

void solve(int x, ll k)
{
    ll s = 0;
    int m = INF;
    for(int i = maxh - 1; i >= 0; --i)
    {
        if(k >> i & 1)
        {
            s += sum[x][i];
            m = min(m, mn[x][i]);
            x = par[x][i];
        }
    }
    printf("%I64d %d\n", s, m);
}

int main()
{
    int n;
    ll k;
    scanf("%d%I64d", &n, &k);
    for(int i = 0; i < n; ++i)
    {
        scanf("%d", &par[i][0]);
    }
    for(int i = 0; i < n; ++i)
    {
        scanf("%d", &mn[i][0]);
        sum[i][0] = mn[i][0];
    }
    for(int j = 1; j < maxh; ++j)
    {
        for(int i = 0; i < n; ++i)
        {
            par[i][j] = par[par[i][j - 1]][j - 1];
            sum[i][j] = sum[i][j - 1] + sum[par[i][j - 1]][j - 1];
            mn[i][j] = min(mn[i][j - 1], mn[par[i][j - 1]][j - 1]);
        }
    }
    for(int i = 0; i < n; ++i) solve(i, k);
    return 0;
}
