import java.io.*;
import java.util.*;
import java.math.*;

public class Main {

    public void solve() throws IOException {
        int a = nextInt();
        int b = nextInt();
        int m = nextInt();
        int r = nextInt();
        int[] d = new int[m];
        int k = 0;
        int res = -1;
        while (true) {
            int x = (int)((1l*a*r+b)%m);
            r = x;
            k++;
            if (d[x]==0) d[x] = k; else {
                res = k-d[x]; break;
            }
        }
        out.println(res);
    }






    BufferedReader br;
    StringTokenizer st;
    PrintWriter out;

    public void run() {
        try {
            br = new BufferedReader(new InputStreamReader(System.in));
            out = new PrintWriter(System.out);
            // br = new BufferedReader(new FileReader("input.txt"));
            // out = new PrintWriter("output.txt");
            solve();
            br.close();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(123);
        }
    }

    String next() throws IOException {
        while (st == null || !st.hasMoreTokens()) {
            String s = br.readLine();
            if (s == null)
                return null;
            st = new StringTokenizer(s);
        }
        return st.nextToken();
    }

    double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static void main(String[] args) {
        new Main().run();
    }
}
