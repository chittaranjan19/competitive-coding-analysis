uses    math;
const   oo      =2*trunc(1e5);
var     n       :longint;
        a       :array[1..oo] of longint;

Procedure QuickSort(L, H:Longint);
Var     i, j, la:Longint;
        x, tg   :Longint;
begin
        i:=L;
        j:=H;
        x:=A[(L+H) div 2];
        Repeat
              While A[i]<x do inc(i);
              While A[j]>x do dec(j);
              If i<=j then
               begin
                     tg:=A[i];
                     A[i]:=A[j];
                     A[j]:=tg;
                     inc(i);
                     dec(j);
               end;
        Until i>j;
   //     For la:=1 to n do write(A[la],' ');writeln(x,' ',i,' ',j);
        If i<H then QuickSort(i, H);
        If L<j then QuickSort(L, j);
end;

procedure xuly;
var     i:longint;
        r1,r2,tmp   :int64;
begin
        readln(n);
        for i:=1 to n do read(a[i]);
        QuickSort(1,n);
        if a[1]=a[n] then
                begin
                        r1:=(n*(n-1)) div 2;
                        writeln(0,' ',r1);
                        exit;
                end;
        r1:=1;
        r2:=1;
        for i:=1 to n-1 do
                if a[i]=a[i+1] then inc(r1) else break;
        for i:=n-1 downto 1 do
                if a[i]=a[i+1] then inc(r2) else break;
        tmp:=abs(a[1]-a[n]);
        writeln(tmp,' ',r1*r2);
end;

begin
        xuly;
end.