#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <bitset>
#include <random>
#include <stack>
#include <list>
#include <ctime>

using namespace std;

#define ll long long
#define sc second
#define fs first
#define mp make_pair
#define pb push_back

ll n, m, k, s, c[3][222222], tp[222222], cst[222222];
vector < pair < ll, pair<ll, ll> >  > v;

bool ok(int l)
{
	v.clear();
	ll mc[3] = { 1e18, 1e18, 1e18 }, md[3];
	for (int i = 1; i <= l; i++){
		if (c[1][i] < mc[1])
			mc[1] = c[1][i], md[1] = i;
		if (c[2][i] < mc[2])
			mc[2] = c[2][i], md[2] = i;
	}
	for (int i = 1; i <= m; i++)
		v.push_back(mp(mc[tp[i]]*cst[i], mp(i, md[tp[i]])));
	sort(v.begin(), v.end());
	ll need = 0;
	for (int i = 0; i < k; i++)
		need += v[i].fs;
	return need <= s;
}

int main()
{
	cin >> n >> m >> k >> s;
	for (int i = 1; i <= n; i++)
		cin >> c[1][i];
	for (int i = 1; i <= n; i++)
		cin >> c[2][i];
	for (int i = 1; i <= m; i++)
		cin >> tp[i] >> cst[i];
	c[1][n + 1] = c[2][n + 1] = 0;
	int l = 0, r = n + 1;
	while (l < r)
	{
		int md = (l + r) >> 1;
		if (ok(md))
			r = md;
		else l = md+1;
	}
	ok(l);
	if (l == n+1)
		cout << -1;
	else
	{
		ll md = 0;
		for (int i = 0; i < k; i++)
			md = max(v[i].sc.sc, md);
		cout << md << endl;
		for (int i = 0; i < k; i++)
			cout << v[i].sc.fs << ' ' << v[i].sc.sc << endl;
	}
	return 0;
}