//why are you stalking me?
#include <iostream>
#include <cstdio>
#include <fstream>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <deque>
#include <sstream>
#include <cmath>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>
#include <functional>
#include <ctime>
#include <climits>
#include <cstdlib>
#include <complex>
//#define NDEBUG 1
#include <cassert>

using namespace std;

#define rep(it, v) for (__typeof((v).begin()) it = (v).begin(); it != (v).end(); it++)
#define fillchar(a, s) memset((a), (s), sizeof(a))
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define all(v) (v).begin(), (v).end()

typedef long long ll;
typedef pair<int, int> pii;
const int MAXN = 1e5 + 10, INF = 1e9 + 10;

int N, S, L;
int arr[MAXN], dp[MAXN];
multiset<int> mst;
int upto[MAXN];	//upto what?
set<pii> st;	//the updates

int main() {
	//why are you stalking me?
#ifndef ONLINE_JUDGE
	freopen("codeforces487B.in", "r", stdin);
#endif
	scanf("%d %d %d", &N, &S, &L);
	fill_n(dp + 1, N, INF);
	mst.insert(arr[0] = 2 * INF);
	for (int i = 1, j = 0; i <= N; i++) {
		scanf("%d", &arr[i]);
		mst.insert(arr[i]);
		while (*mst.rbegin() - *mst.begin() > S) {
			mst.erase(mst.find(arr[j++]));
		}
		upto[i] = j - 1;
		// printf("upto[%d] = %d\n", i, upto[i]);
	}
	for (int i = L, j = 0; i <= N; i++) {
		//ok now do the updating
		st.insert(pii(dp[i - L], i - L));
		for (; j < upto[i] && j <= i - L; j++) {
			st.erase(pii(dp[j], j));
		}
		// printf("i = %d, j = %d\n", i, j);
		if (!st.empty()) {
			dp[i] = st.begin()->first + 1;
		}
	}
	printf("%d\n", (N = dp[N]) >= INF ? -1 : N);
}