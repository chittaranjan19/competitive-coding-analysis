#include<bits/stdc++.h>	
#define MAXN 100009
#define INF 1000000000
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define lgN 13
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
char arr[2009][2009];
int x[MAXN],y[MAXN],dp[2009][2009],cp[2009][2009],n,m,k,ans[MAXN];
int P[MAXN][25],M[MAXN][25];
int query(int l,int r){
	int lg=log2(r-l+1);
	int i1=max(M[l][lg],M[r-(1<<lg)+1][lg]);
	int i2=min(P[l][lg],P[r-(1<<lg)+1][lg]);
	int i3=i2-i1-1;
	return i3;
}
int tap(int nd){
	for(int i=1;i<=m;i++)
		P[i][0]=cp[nd][i],M[i][0]=dp[nd][i];
	for(int j=1;j<=log2(n);j++)	
		for(int i=1;i<=m;i++){
				P[i][j]=P[i][j-1];M[i][j]=M[i][j-1];
				umin(P[i][j],P[i+(1<<(j-1))][j-1]);
				umax(M[i][j],M[i+(1<<(j-1))][j-1]);
			}	
	int r=1,area=0;
	for(int l=1;l<=m;l++){
		if(arr[nd][l]=='X')
			continue;
		umax(r,l);
		while(arr[nd][r]!='X' and r+1<=m and query(l,r+1)>=((r+1)-l+1))
			r++;	
		umax(area,min(query(l,r),r-l+1));	
	}
	return area;
}
void show(){
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++)
			cout<<arr[i][j];
		cout<<endl;		
	}
}
void build(int nd){
	for(int i=1;i<=n;i++){
		if(arr[i][nd]=='X')
			dp[i][nd]=i;
		else
			dp[i][nd]=dp[i-1][nd];
	}
	for(int i=n;i>=1;i--){
		if(arr[i][nd]=='X')
			cp[i][nd]=i;
		else
			cp[i][nd]=cp[i+1][nd];
	}
}

int main(){
	scanf("%d%d%d",&n,&m,&k);
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			scanf(" %c",&arr[i][j]);	
	for(int i=1;i<=k;i++)
		scanf("%d%d",&x[i],&y[i]),arr[x[i]][y[i]]='X';
	for(int i=1;i<=m;i++)
		cp[n+1][i]=n+1;	
	for(int i=1;i<=m;i++)
		build(i);	
	for(int i=1;i<=n;i++)	
		umax(ans[k],tap(i));
	for(int i=k-1;i>=1;i--){
		int l=x[i+1],r=y[i+1];
		arr[l][r]='.';ans[i]=ans[i+1];
		build(r);umax(ans[i],tap(l));
	}
	for(int i=1;i<=k;i++)
		printf("%d\n",ans[i]);
	return 0;
}
/*
10 10 8
....X.....
...X...X..
..X.X.....
..........
....X.....
..........
.....X....
...X..X...
....X.....
..X.......
6 2
7 8
1 10
3 6
7 3
4 10
1 7
7 9
*/