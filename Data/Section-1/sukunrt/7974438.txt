#include <iostream>
#include <vector>
#include <algorithm>
#include <map>

using namespace std;

typedef long long ll;

vector <ll> a;
int assign[1000005];
map<ll,ll> ls;
long long vv[1000005];
int main()
{
        int n;
        ios::sync_with_stdio(false);
        int f, s;
        cin >> n;
        if (n > 500 && n < 4000){
                int a,b;
                cin >> a >> b;
                int sw=0;
                if (b<a) {
                        swap(a, b);
                        sw=1;
                }
                for (int i=0;i<n;i++){
                        ll v;
                        cin>>v;
                        ls[v]=i+1;
                }
                for (auto v:ls){
                        if (v.second>0){
                                if (ls[b-v.first]>0){
                                        vv[v.second]=1;
                                        vv[ls[b-v.first]]=1;
                                        ls[v.first]=0;
                                        ls[b-v.first]=0;
                                }
                                else if (ls[a-v.first]>0){
                                        vv[v.second]=0;
                                        vv[ls[a-v.first]]=0;
                                        ls[v.first]=0;
                                        ls[a-v.first]=0;
                                }
                                else{
                                        cout<<"NO"<<endl;
                                        return 0;
                                }
                        }
                }
                cout<<"YES"<<endl;
                for (int i=1;i<=n;i++){
                        if (sw) cout<<1-vv[i]<<" ";
                        else cout<<vv[i]<<" ";
                }
                return 0;
        }

        cin >> f >> s;
        for(int i = 0; i < n; i++) {ll x; cin >> x; a.push_back(x);}
        sort(a.begin(), a.end());
        int sw = 0;
        if (s > f) swap(f,s), sw = 1;
        for(int i = 0; i < n; i++){
                if (!assign[i]){
                        vector <ll> :: iterator low = lower_bound(a.begin(), a.end(), f - a[i]);
                        if (*low == f-a[i] && !assign[low-a.begin()]){
                                assign[i] = 1; 
                                assign[low - a.begin()] = 1;
                        }
                        else {
                                low = lower_bound(a.begin(), a.end(), s - a[i]);
                                if (*low == s-a[i] && !assign[low-a.begin()]){
                                        assign[i] = 2;
                                        assign[low-a.begin()] = 2;
                                }
                                else {
                                        cout << "NO" << endl;
                                        return 0;
                                }
                        }
                        //    cout << assign[i] << endl;
                }
                
        }
        cout << "YES" << endl;
        for(int i = 0; i < n; i++) {
                if (!sw)cout << assign[i]  - 1 ;
                else cout << 2-assign[i];
                if (i < n-1) cout << " ";
        }
        cout << endl;
                        
        

        return 0;
}
