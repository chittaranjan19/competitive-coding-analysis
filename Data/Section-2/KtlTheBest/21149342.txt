#include <iostream>
#include <set>
#include <map>
using namespace std;

#define fr first
#define sc second
#define mkp make_pair

int n, m, acnt, a[2000];
set <pair <int, int> > st;
map <int, int> cnt;

int check (pair <int, int> a, pair <int, int> b){
	return a.fr - b.fr;
}

int main(){
	cin >> n >> m;
	for(int i = 0; i < n; ++ i){
		cin >> a[i];
		cnt[a[i]] ++;
	}
	for(int i = 1; i <= m; ++ i){
		st.insert(mkp(cnt[i], i));
	}
	for(int i = 0; i < n; ++ i){
		if(a[i] > m){
			pair <int, int> p = *st.begin();
			st.erase(st.begin());
			a[i] = p.sc;
			p.fr ++;
			st.insert(p);
			acnt ++;
		}
	}
	while(check(*st.rbegin(), *st.begin()) > 1){
		for(int i = 0; i < n; ++ i){			
			pair <int, int> rp = *st.rbegin();
			if(a[i] == rp.sc){
				pair <int, int> p = *st.begin();
				st.erase(st.find(rp));
				st.erase(st.begin());
				a[i] = p.sc;
				p.fr ++;
				rp.fr --;
				st.insert(p);
				st.insert(rp);
				acnt ++;
				if(check(*st.rbegin(), *st.begin()) < 2){
					break;
				}
			}
		}
	}
	pair <int, int> p = *st.begin();
	cout << p.fr << ' ' << acnt << '\n';
	for(int i = 0; i < n; ++ i){
		cout << a[i] << ' ';
	}
	return 0;
}