#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define f(x,y,z,t) mp(mp(x,y),mp(z,t))
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int n,m,ans=-1;
pair<PII,PII>que[MAXN];
struct dsu{
	int ata[MAXN],rank[MAXN];
	void init(int x){
		for(int i=1;i<=x;i++)
			ata[i]=i,rank[i]=1;
	}
	int tap(int x){
		if(x==ata[x])
			return x;
		return ata[x]=tap(ata[x]);	
	}
	void merge(int x,int y){
		if((x=tap(x))==(y=tap(y)))
			return;
		if(rank[y]<=rank[x]){
			rank[x]+=rank[y];
			ata[y]=x;
		}
		else{
			rank[y]+=rank[x];
			ata[x]=y;
		}
	}
}d;
/*
void BruteForce(int nd,int x,int y){
	if(nd==n){
		if(x<=y)
			umax(ans,y-x+1);
		return;
	}vis[nd]=1;
	tr(it,adj[nd])
		if(!vis[it->ff])
			BruteForce(it->ff,max(x,it->ss.ff),min(y,it->ss.ss));
	vis[nd]=0;			
}
*/
void go(int x,int y){
	for(int i=1;i<=n;i++)
		if(que[i].ss.ff<=x){
			d.merge(que[i].ff.ff,que[i].ff.ss);
			umin(y,que[i].ss.ss);
			if(d.tap(1)==d.tap(n) and x<=y)
				umax(ans,y-x+1);
		}
}
bool cmp(pair<PII,PII>x,pair<PII,PII>y){
	if(x.ss.ss!=y.ss.ss)
		return (x.ss.ss>y.ss.ss);
	return (x.ss.ff<y.ss.ff);
}
int main(){
	scanf("%d%d",&n,&m);
	for(int i=1;i<=m;i++){
		int u,v,l,r;
		scanf("%d%d%d%d",&u,&v,&l,&r);
		que[i]=f(u,v,l,r);
	}
	sort(que+1,que+m+1,cmp);
	//BruteForce(1,-INF,INF);
	for(int i=1;i<=n;i++){
		d.init(n);
		d.merge(que[i].ff.ff,que[i].ff.ss);
		go(que[i].ss.ff,que[i].ss.ss);
	}
	if(ans==-1){
		printf("Nice work, Dima!\n");
		return 0;
	}
	printf("%d\n",ans);
	return 0;
}
//LooK aT mY COde ONlinE +_+
