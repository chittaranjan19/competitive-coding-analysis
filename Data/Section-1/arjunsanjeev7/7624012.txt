#include <bits/stdc++.h>

using namespace std;

typedef long long int LL;

int k,marked[501][501];
list<pair<int,int> > L[501][501];
char maze[502][502];

void dfs(int x, int y)
{
	marked[x][y]=1;
	int flag=0;
	list<pair<int,int> >::iterator it;
	for(it=L[x][y].begin();it!=L[x][y].end();it++)
	{
		if(marked[it->first][it->second]!=1 && maze[it->first][it->second]!='X') {flag=1; dfs(it->first,it->second);}
	}
	if(k>0) {maze[x][y]='X'; k--;}
}

int main()
{
	int r,c,dot=0,x,y,i,j,flag;
	cin>>r>>c>>k;
	for(i=1;i<=r;i++)
	{
		for(j=1;j<=c;j++)
		{
			cin>>maze[i][j];
			if(maze[i][j]=='.') dot++;
		}
	}
	for(i=1;i<=r;i++)
	{
		for(j=1;j<=c;j++)
		{
			if(maze[i][j]=='.')
			{
				if(maze[i-1][j]=='.') L[i][j].push_back(pair<int,int>(i-1,j));
				if(maze[i+1][j]=='.') L[i][j].push_back(pair<int,int>(i+1,j));
				if(maze[i][j-1]=='.') L[i][j].push_back(pair<int,int>(i,j-1));
				if(maze[i][j+1]=='.') L[i][j].push_back(pair<int,int>(i,j+1));
			}
		}
	}
	while(k!=0) 
	{
		for(i=0;i<501;i++) for(j=0;j<501;j++) marked[i][j]=0;
		for(i=1;i<=r;i++) for(j=1;j<=c;j++) if(maze[i][j]=='.') goto jump;
		jump:
		dfs(i,j);
	}
	for(i=1;i<=r;i++)
	{
		for(j=1;j<=c;j++)
		{
			cout<<maze[i][j];
		}
		cout<<endl;
	}
	return 0;
}