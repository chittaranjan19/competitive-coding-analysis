#include<bits/stdc++.h>
using namespace std;

#define int long long

const int MAXN=1e6;
const int MOD=1e9+7;


int n;
int sz[MAXN];
bool dp[MAXN],res[MAXN];
vector<int> ver[MAXN],h;



void solve(){
	
	fill(dp,dp+MAXN,0);
	dp[0]=true;
	for(auto v:h)
		for(int i=n-1;i>=0;i--)
			if(dp[i])dp[i+v]=true;
	for(int i=1;i<n-1;i++)res[i]=(res[i]||dp[i]);
	/*for(int i=n-1;i>=0;i--)
		if(dp[i])cout<<i<<' ';
		cout<<'\n';*/
	h.clear();
}


void dfs(int v, int par=0){
	sz[v]=1;
	for(auto u:ver[v])
		if(u!=par){
			dfs(u,v);
			if(!par)h.push_back(sz[u]);
			sz[v]+=sz[u];
		}
	if(!par)solve();
}


main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin>>n;
	for(int i=1;i<n;i++){
		int x,y;
		cin>>x>>y;
		ver[x].push_back(y);
		ver[y].push_back(x);
	}
	for(int i=1;i<=n;i++)
		dfs(i);
	int ans=0;
	for(int i=1;i<n-1;i++)ans+=res[i];
	cout<<ans<<'\n';
	for(int i=1;i<n-1;i++)
		if(res[i])cout<<i<<' '<<n-i-1<<'\n';
}
