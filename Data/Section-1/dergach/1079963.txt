#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <set>
#include <vector>
using namespace std;

#define eps 1e-8

struct G{
    int str, stolb, n;
}tmp, a[100005];
int i, j, k, N, M, d;
vector <int> v;
set <int> s;
set <int> :: iterator it;

bool sort_f(G a, G b)
{
    if(a.str != b.str)
        return a.str < b.str;
    return a.stolb < b.stolb;
}

int main()
{
    scanf("%d %d", &N, &M);
    for(i = 0; i < M; i++)
    {
        scanf("%d %d", &a[i].str, &a[i].stolb);
        a[i].n = i + 1;
    }
    sort(a, a + M, sort_f);

    for(i = 1; i <= N; i++)
        s.insert(i);

    for(i = 0; i < M; i++)
    {
        d = a[i].str - 1 - (N - a[i].stolb);
        if(!s.empty())
        {
            it = s.lower_bound(a[i].str - d);
            if(it != s.end() && (*it) <= a[i].str)
            {
                v.push_back(a[i].n);
                s.erase(it);
            }
        }
    }
    printf("%d\n", v.size());
    if(v.size() > 0)
    {
        for(i = 0; i < v.size(); i++)
        {
            if(i)
                printf(" ");
            printf("%d", v[i]);
        }
    }
    printf("\n");
    return 0;
}
