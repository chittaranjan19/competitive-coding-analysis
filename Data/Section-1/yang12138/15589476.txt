/*
    ━━━━━┒
    ┓┏┓┏┓┃让老子先跳！
    ┛┗┛┗┛┃＼○／
    ┓┏┓┏┓┃ //
    ┛┗┛┗┛┃ノ)
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┛┗┛┗┛┃
    ┓┏┓┏┓┃
    ┃┃┃┃┃┃
    ┻┻┻┻┻┻

*/


#include <cstdio>
#include <iostream>
#include <cstring>
#include <string>
#include <algorithm>
#include <cctype>
#include <stack>
#include <map>
#include <set>
#include <iomanip>
#include <cstdlib>
#include <queue>
#include <ctime>
#include <cmath>
using namespace std;
typedef long long ll;
const int maxn=105;
char a[maxn][maxn];
int in[maxn];
vector<int>edge[maxn];

void topsort()
{
    queue<int>q;
    for(int i=0;i<26;i++) if(in[i]==0) q.push(i);
    vector<int>res;
    int u,v;
    while(!q.empty())
    {
        u=q.front();
        res.push_back(u);
        q.pop();
        for(int i=0;i<edge[u].size();i++)
        {
            v=edge[u][i];
            in[v]--;
            if(in[v]==0) q.push(v);
        }
    }
    if(res.size()!=26) {printf("Impossible\n");return ;}
    for(int i=res.size()-1;i>=0;i--) printf("%c",res[i]+'a');
    printf("\n");
}
int main()
{
    int n;
    while(scanf("%d",&n)!=EOF)
    {
        for(int i=0;i<n;i++) scanf("%s",a[i]);
        for(int i=1;i<n;i++)
        {
            string aa=string(a[i-1]);
            string bb=string(a[i]);
            int c=-1,d=-1;
            for(int j=0;j<min(aa.length(),bb.length());j++)
            {
                if(aa[j]==bb[j]) continue;
                else
                {
                    c=aa[j]-'a';
                    d=bb[j]-'a';
                    break;
                }
            }
            if(c==-1&&aa.length()>bb.length()) {printf("Impossible\n");return 0;}
            in[d]++;
            edge[c].push_back(d);
        }
        topsort();
    }
    return 0;
}
