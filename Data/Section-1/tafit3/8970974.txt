import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.NavigableSet;
import java.util.TreeSet;

public class ProblemB {
    BufferedReader rd;

    private ProblemB() throws IOException {
        rd = new BufferedReader(new InputStreamReader(System.in));
        compute();
    }

    private void compute() throws IOException {
        int[] q = intarr();
        int len = q[1];
        int[] a = intarr();

        int min = len;
        int max = 0;
        for(int x: a) {
            min = Math.min(min,x);
            max = Math.max(max,x);
        }

        NavigableSet<Integer> s = new TreeSet<>();
        for(int x: a) {
            s.add(x);
        }
        int maxD = 0;
        Integer last = null;
        for(Integer x: s) {
            if(last != null) {
                maxD = Math.max(x - last, maxD);
            }
            last = x;
        }

        double res = Math.max(maxD/2.0, min);
        res = Math.max(res, len-max);
        out(res);
    }

    private int[] intarr() throws IOException {
        return intarr(rd.readLine());
    }

    private int[] intarr(String s) {
        String[] q = split(s);
        int n = q.length;
        int[] a = new int[n];
        for(int i=0;i<n;i++) {
            a[i] = Integer.parseInt(q[i]);
        }
        return a;
    }

    private String[] split(String s) {
        int n = s.length();
        int sp = 0;
        for(int i=0;i<n;i++) {
            if(s.charAt(i)==' ') {
                sp++;
            }
        }
        String[] res = new String[sp+1];
        int last = 0;
        int x = 0;
        for(int i=0;i<n;i++) {
            char c = s.charAt(i);
            if(c == ' ') {
                res[x++] = s.substring(last,i);
                last = i+1;
            }
        }
        res[x] = s.substring(last,n);
        return res;
    }

    private static void out(Object x) {
        System.out.println(x);
    }

    public static void main(String[] args) throws IOException {
        new ProblemB();
    }
}
