
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
//////////////////////
#include<iostream>
#include<algorithm>
#include<string>
#include <iterator>
#include<sstream>
#include<functional>
#include<numeric>
///////////////////////
#include<vector>
#include<map>
#include <stack>
#include<queue>
#include<set>
#include <bitset>
#include <list>
using namespace std;
#define lch(x)  ((x) << 1)
#define rch(x) ((x)<<1|1)
#define dad(x) ((x)>>1)
#define lowbit(x) ((x)&(-x))
typedef  long long int LL;
const int INF = ~0U>>1;
const double eps = 1e-6;
const long double PI = acos(0.0) * 2.0;
const int N = 5+ 100000;
int n,x,l;

int prime[N] = {0};
bool not_prime[N] = {1,1};
int make_prime(int n);
bool sushu(int x);
int js(int x);

int main()
{
    //ios::sync_with_stdio(false);
#ifdef ONLINE_JUDGE
#else
    freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
#endif
    l = make_prime(100000);
    while(scanf("%d%d",&n,&x)==2)
    {
        int res = 0;
        bool flag = sushu(x);
        if(x <= n && flag) res = 2;
        else if(flag&& x > n) res = 0;
        else    res = js(x);

        printf("%d\n",res);
    }
    return 0;
}

int js(int x)
{
    int ans = 0;

    for(int i = 1 ; i <= n ; i++ )
        if( (x % i ==0) && (x/i <= n) )
            ans++;
    return ans;
}

bool sushu(int x)
{
    if(x<=100000)   return !not_prime[x];
    else
    {
        for(int i = 0 ; i < l ; i++)
            if(x % prime[i]==0)
                return 0;
        return 1;
    }
}

int make_prime(int n)
{
    int num = 0;
    for(int i = 2 ; i < n ; i++)
    {
        if(!(not_prime[i]))
            prime[num++] = i;

        for(int j = 0 ; j < num && i*prime[j] < n ; j++)
        {
            not_prime[ prime[j]*i ] = 1;
            if(!(i%prime[j]))    break; //ֻɸȥ��С�������ӣ������ظ�ɸȥ����
        }
    }
    return num;
}
