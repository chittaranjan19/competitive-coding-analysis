
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class B_InterestingJuice {
	private final boolean isDebug;
	
	private static class MutInt {
		public static MutInt of(int val) {
			return new MutInt(val);
		}
		
		int val;
		private MutInt(int val) {
			this.val = val;
		}
	}
	
	private int n;
	private int[] x;
	private int q;
	private int[] m;
	Map<Integer, MutInt> quantityMap;
	
	public B_InterestingJuice(boolean isDebug) {
		this.isDebug = isDebug;
	}
	
	public void readInput() {
		Scanner sc = null;
		if (isDebug) {
			try {
				sc = new Scanner(new FileInputStream("src\\x0003_codeforces_round_367_div_2\\B_input1.txt"));
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} else {
			sc =  new Scanner(System.in);
		}
		
		n = sc.nextInt();
		if (isDebug) {
			System.out.format("n=%d%n", n);
		}
			
		x = new int[n];
		quantityMap = new HashMap<>();
		
		for (int i = 0; i < n; ++i) {
			x[i] = sc.nextInt();
			MutInt quant = quantityMap.get(x[i]);
			if (quant == null) {
				quantityMap.put(x[i], MutInt.of(1));
			} else {
				quant.val++;
			}
		}
		
		if (isDebug) {
			for (int i = 0; i < n; ++i) {
				System.out.format("%d ", x[i]);
			}
			System.out.println();
		}
		
		q = sc.nextInt();
		if (isDebug) {
			System.out.format("q=%d%n", q);
		}
		
		m = new int[q];
		
		for (int i = 0; i < q; ++i) {
			m[i] = sc.nextInt();
		}
		
		if (isDebug) {
			for (int i = 0; i < q; ++i) {
				System.out.format("%d ", m[i]);
			}
			System.out.println();
		}
	}
	
	public void solve() {
//		x = new int[]{0, 1, 3, 3, 3, 5};
//		x = new int[]{0};
//		n = x.length;
//		m = new int[]{-1};
//		q = m.length;
//		
//		quantityMap = new HashMap<>();
//		for (int i = 0; i < n; ++i) {
//			MutInt quant = quantityMap.get(x[i]);
//			if (quant == null) {
//				quantityMap.put(x[i], MutInt.of(1));
//			} else {
//				quant.val++;
//			}
//		}
		
		Arrays.sort(x);
//		System.out.println("x:");
//		for (int i = 0; i < n; ++i) {
//			System.out.format("%d ", x[i]);
//		}
//		System.out.println();
		
		StringBuilder res = new StringBuilder();
		String newLine = "\n";
		
		for (int qq = 0; qq < q; ++qq) {
			int val = m[qq];
			int idx = find(val);
			int cnt;
			if (x[idx] == val) {
				cnt = idx + quantityMap.get(x[idx]).val;
			} else if (x[idx] < val) {
				cnt = idx + 1;
			} else {
				cnt = idx;
			}
			
			res.append(cnt).append(newLine);
		}
		
		System.out.println(res);
	}
	
	private int find(int val) {
		int low = 0, high = n, mid = -1;
		while (low < high) {
			mid = (low + high) / 2;
			if (val == x[mid]) {
				if (high == mid + 1) {
					break;
				} else {
					high = mid + 1;
				}
			} else {
				if (val < x[mid]) {
					high = mid;
				} else {
					low = mid + 1;
				}
			}
		}
		return mid;
	}
	
	public static void main(String[] args) {
		B_InterestingJuice solver = new B_InterestingJuice(false);
		solver.readInput();
		solver.solve();
	}
}
