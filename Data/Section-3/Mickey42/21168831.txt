#include<fstream>
#include<string.h>
#include<ctype.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<unordered_map>
#include<array>
#include<deque>
#include<math.h>
#include<unordered_set>
#include<set>
#include<iomanip>
#include<bitset>
using namespace std;
long long arb[400400], st[400400], dr[400400], sum[400400], v[100010], val, i, j, k, n, q, maxim, a, b, type, lg2, start, m, S;
void Update(int nod, int lf, int rt, int pos, long long val)
{
	if (lf == rt&&lf==pos)
	{
		st[nod] = dr[nod] = arb[nod] = val;
		sum[nod] = val;
	}
	else
	{
		int mid = (lf + rt) / 2;
		if (pos <= mid)
			Update(nod << 1, lf, mid, pos, val);
		else
			Update((nod << 1) + 1, mid + 1, rt, pos, val);

		st[nod] = max(st[nod << 1], sum[nod << 1] + st[(nod << 1) + 1]);
		dr[nod] = max(dr[nod << 1] + sum[(nod << 1) + 1], dr[(nod << 1) + 1]);
		arb[nod] = max(max(arb[nod << 1], arb[(nod << 1) + 1]), dr[nod << 1] + st[(nod << 1) + 1]);
		sum[nod] = sum[nod << 1] + sum[(nod << 1) + 1];
	}
}
int main()
{

	cin >> n;
	for (i = 1; i <= n; i++)
	{
		cin >> v[i];
		Update(1, 1, n,i,v[i]);
	}	
	for (j = 1; j <= n; j++)
	{
		cin >> a;
		Update(1, 1, n, a, -(1LL << 48));
		if (j != n)
			cout << arb[1] << "\n";
		else
			cout << 0;
	}
	return 0;
}