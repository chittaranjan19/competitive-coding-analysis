#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <queue>
#include <cmath>
#include <cstdlib>

using namespace std;

typedef long long ll;
typedef pair<ll, int> pli;

const int maxn = 2e5 + 5;

ll a[maxn];

int main()
{
    priority_queue<pli, vector<pli>, greater<pli> > pque;
    int n, k, x;
    bool flag = false;
    scanf("%d%d%d", &n, &k, &x);
    for(int i = 0; i < n; ++i)
    {
        scanf("%I64d", a + i);
        if(a[i] < 0) flag ^= 1;
        pque.push(pli(a[i], i));
    }
    while(k--)
    {
        pli p = pque.top();
        pque.pop();
        if(!flag)
        {
            if(a[p.second] >= 0)
            {
                a[p.second] -= x;
                if(a[p.second] < 0) flag = true;
            }
            else
            {
                a[p.second] += x;
                if(a[p.second] >= 0) flag = true;
            }
        }
        else if(a[p.second] < 0) a[p.second] -= x;
        else a[p.second] += x;
        pque.push(pli(abs(a[p.second]), p.second));
    }
    for(int i = 0; i < n; ++i) printf("%I64d%c", a[i], " \n"[i == n - 1]);
    return 0;
}
